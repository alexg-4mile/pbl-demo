[{"/Users/eglasenk/projects/pbl-demo/client/atom/src/index.js":"1","/Users/eglasenk/projects/pbl-demo/client/atom/src/App.js":"2","/Users/eglasenk/projects/pbl-demo/client/atom/src/serviceWorker.js":"3","/Users/eglasenk/projects/pbl-demo/client/atom/src/contexts/AppContext.js":"4","/Users/eglasenk/projects/pbl-demo/client/atom/src/AuthUtils/auth.js":"5","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/SignIn/SignIn.js":"6","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/Home.js":"7","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/SignIn/styles.js":"8","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/styles.js":"9","/Users/eglasenk/projects/pbl-demo/client/atom/src/tools.js":"10","/Users/eglasenk/projects/pbl-demo/client/atom/src/LookerHelpers/defaults.js":"11","/Users/eglasenk/projects/pbl-demo/client/atom/src/LookerHelpers/pblsession.js":"12","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/LeftDrawer.js":"13","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/TopBar.js":"14","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/Dashboard.js":"15","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/MonetizationModal/MonetizationModal.js":"16","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/QueryBuilder/QueryBuilder.js":"17","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/SplashPage.js":"18","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/CustomVis/CustomVis.js":"19","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/ReportBuilder/ReportBuilder.js":"20","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/styles.js":"21","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/MonetizationModal/styles.js":"22","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/QueryBuilder/helpers.js":"23","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/QueryBuilder/styles.js":"24","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/styles.js":"25","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/ReportBuilder/helpers.js":"26","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/ReportBuilder/styles.js":"27","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/CustomVis/styles.js":"28","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/BottomBar.js":"29","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/UserMenu.js":"30","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/EmbeddedDashboardContainer.js":"31","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/FilterBar.js":"32","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Material/ModalTable.js":"33","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/FilterBarChildren.js":"34","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/theme.js":"35","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/index.js":"36","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/index.js":"37","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/InventoryOverviewContent.js":"38","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/SplashPageContent.js":"39","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/QueryBuilderContent.js":"40","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/ReportBuilderContent.js":"41","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/SalesCalendarContent.js":"42","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/WebAnalyticsContent.js":"43","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/SalesOverviewContent.js":"44","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/SignInContent.js":"45"},{"size":452,"mtime":1609879557563,"results":"46","hashOfConfig":"47"},{"size":4133,"mtime":1610647568193,"results":"48","hashOfConfig":"47"},{"size":5003,"mtime":1609879557562,"results":"49","hashOfConfig":"47"},{"size":101,"mtime":1609879557941,"results":"50","hashOfConfig":"47"},{"size":2769,"mtime":1610563741562,"results":"51","hashOfConfig":"47"},{"size":3234,"mtime":1610647592723,"results":"52","hashOfConfig":"47"},{"size":4629,"mtime":1610647633582,"results":"53","hashOfConfig":"47"},{"size":989,"mtime":1609879557942,"results":"54","hashOfConfig":"47"},{"size":3701,"mtime":1610648101785,"results":"55","hashOfConfig":"47"},{"size":1279,"mtime":1610563833472,"results":"56","hashOfConfig":"47"},{"size":1981,"mtime":1610673818850,"results":"57","hashOfConfig":"47"},{"size":1403,"mtime":1609879557970,"results":"58","hashOfConfig":"47"},{"size":3760,"mtime":1610646347542,"results":"59","hashOfConfig":"47"},{"size":1266,"mtime":1610642314440,"results":"60","hashOfConfig":"47"},{"size":12611,"mtime":1610746106449,"results":"61","hashOfConfig":"47"},{"size":6114,"mtime":1609879557956,"results":"62","hashOfConfig":"47"},{"size":20082,"mtime":1610746190543,"results":"63","hashOfConfig":"47"},{"size":3724,"mtime":1610746073371,"results":"64","hashOfConfig":"47"},{"size":17448,"mtime":1610746087247,"results":"65","hashOfConfig":"47"},{"size":29089,"mtime":1610746593938,"results":"66","hashOfConfig":"47"},{"size":1928,"mtime":1609879557957,"results":"67","hashOfConfig":"47"},{"size":1061,"mtime":1609879557956,"results":"68","hashOfConfig":"47"},{"size":1592,"mtime":1609879557954,"results":"69","hashOfConfig":"47"},{"size":3104,"mtime":1609879557954,"results":"70","hashOfConfig":"47"},{"size":3809,"mtime":1609879557948,"results":"71","hashOfConfig":"47"},{"size":811,"mtime":1609879557953,"results":"72","hashOfConfig":"47"},{"size":2082,"mtime":1609879557952,"results":"73","hashOfConfig":"47"},{"size":2048,"mtime":1609879557965,"results":"74","hashOfConfig":"47"},{"size":1154,"mtime":1609879557947,"results":"75","hashOfConfig":"47"},{"size":3994,"mtime":1610742624982,"results":"76","hashOfConfig":"47"},{"size":846,"mtime":1610742220433,"results":"77","hashOfConfig":"47"},{"size":3576,"mtime":1609961123745,"results":"78","hashOfConfig":"47"},{"size":4457,"mtime":1609879557944,"results":"79","hashOfConfig":"47"},{"size":4410,"mtime":1610745781351,"results":"80","hashOfConfig":"47"},{"size":310,"mtime":1610647546989,"results":"81","hashOfConfig":"47"},{"size":271,"mtime":1610744352257,"results":"82","hashOfConfig":"47"},{"size":32,"mtime":1610643583665,"results":"83","hashOfConfig":"47"},{"size":2969,"mtime":1610741475065,"results":"84","hashOfConfig":"47"},{"size":8965,"mtime":1610725477073,"results":"85","hashOfConfig":"47"},{"size":1940,"mtime":1610643779121,"results":"86","hashOfConfig":"47"},{"size":708,"mtime":1610643781560,"results":"87","hashOfConfig":"47"},{"size":1015,"mtime":1610721595990,"results":"88","hashOfConfig":"47"},{"size":570,"mtime":1610643793602,"results":"89","hashOfConfig":"47"},{"size":3261,"mtime":1610744345299,"results":"90","hashOfConfig":"47"},{"size":121,"mtime":1610643310494,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1kc5w6o",{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"94"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/Users/eglasenk/projects/pbl-demo/client/atom/src/index.js",[],["203","204"],"/Users/eglasenk/projects/pbl-demo/client/atom/src/App.js",["205","206"],"import _ from 'lodash'\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport AppContext from './contexts/AppContext';\nimport { checkForExistingSession, createSdkHelper } from './AuthUtils/auth';\nimport SignIn from './components/SignIn/SignIn';\nimport Home from './components/Home/Home';\n\nimport * as DemoComponentsContentArr from './config/Demo';\nimport { validIdHelper } from './tools';\n\nfunction App(props) {\n\n  const [clientSession, setClientSession] = useState({});\n  const [sdk, setSdk] = useState();\n  const [initialHref, setInitialHref] = useState();\n  const [isReady, setIsReady] = useState(false);\n\n  //onload\n  useEffect(() => {\n    async function fetchSession() {\n\n      const sessionResponse = await checkForExistingSession();\n      if (sessionResponse.session) {\n\n        const lookerBaseUrl = sessionResponse.lookerBaseUrl ? sessionResponse.lookerBaseUrl : undefined;\n        const accessToken = sessionResponse.lookerApiToken ? sessionResponse.lookerApiToken.api_user_token : undefined;\n\n        if (lookerBaseUrl && accessToken) {\n          const sdk = createSdkHelper({ accessToken, lookerBaseUrl })\n          setSdk(sdk)\n        }\n\n        setClientSession(sessionResponse.session)\n      }\n    }\n    fetchSession(); //make async call\n  }, [])\n\n  useEffect(() => {\n    if (clientSession && sdk) setIsReady(true)\n    else if (clientSession.userProfile) {\n      const lookerBaseUrl = clientSession.lookerBaseUrl ? clientSession.lookerBaseUrl : '';\n      const accessToken = clientSession.lookerApiToken ? clientSession.lookerApiToken.api_user_token : '';\n      const sdk = createSdkHelper({ accessToken, lookerBaseUrl })\n      setSdk(sdk)\n    }\n  }, [clientSession, sdk])\n\n  // console.log({ clientSession })\n\n  return (\n    < Router >\n      <AppContext.Provider value={{\n        clientSession, setClientSession,\n        sdk, setSdk,\n        initialHref, setInitialHref,\n        isReady\n      }}>\n        <Switch>\n          <PrivateRoute\n            path='/analytics/:democomponent?'\n            // exact\n            isSignedIn={clientSession.userProfile ? true : false}\n            component={Home}\n            setInitialHref={setInitialHref}\n            initialHref={initialHref}\n          >\n          </PrivateRoute>\n          <PublicRoute\n            path='/'\n            exact\n            isSignedIn={clientSession.userProfile ? true : false}\n            component={SignIn}\n            initialHref={initialHref}>\n          </PublicRoute>\n          {/* catach all route */}\n          <Route render={() => <Redirect to=\"/\" />} />\n        </Switch>\n      </AppContext.Provider>\n    </Router >\n  )\n}\n\nApp.propTypes = {\n\n}\n\nexport default App\n\nconst PrivateRoute = ({\n  component: Component,\n  isSignedIn,\n  setInitialHref,\n  ...rest }) => {\n\n  if (!isSignedIn) setInitialHref(window.location.href);\n  else setInitialHref()\n\n  return (\n\n    <Route exact\n      {...rest} render={(props) => (\n        (isSignedIn) ?\n          <Component {...props} />\n          : <Redirect\n            to=\"/\"\n          />\n      )} />\n  );\n};\n\n\nconst PublicRoute = ({ component: Component,\n  isSignedIn,\n  // restricted, \n  initialHref,\n  ...rest }) => {\n\n  const demoComponentMap = {};\n  Object.keys(DemoComponentsContentArr).map(key => {\n    demoComponentMap[validIdHelper(_.lowerCase(DemoComponentsContentArr[key].label))] =\n      validIdHelper(_.startCase(DemoComponentsContentArr[key].type));\n  });\n\n  let urlToUse = '/analytics/home';\n  if (initialHref) {\n    let initialHrefArr = initialHref.split('/');\n    let lastTwoHrefArr = initialHrefArr.slice(-2);\n    let lastOneHrefArr = initialHrefArr.slice(-1);\n\n    if (demoComponentMap.hasOwnProperty(lastOneHrefArr)) urlToUse = lastTwoHrefArr.join('/');\n  }\n\n  return (\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    <Route exact\n      {...rest} render={(props) => (\n        (isSignedIn) ?\n          <Redirect\n            to={urlToUse}\n          />\n          : <Component {...props} />\n      )} />\n  );\n};","/Users/eglasenk/projects/pbl-demo/client/atom/src/serviceWorker.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/contexts/AppContext.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/AuthUtils/auth.js",["207"],"import { Looker40SDK, DefaultSettings } from \"@looker/sdk\";\nimport { PblSessionEmbed } from '../LookerHelpers/pblsession'\n\nexport const checkForExistingSession = async () => {\n  // console.log('checkForExistingSession')\n  let sessionResponse = await fetch('/readsession', {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  })\n  const sessionResponseData = await sessionResponse.json();\n  return { session: sessionResponseData.session };\n}\n\nexport const writeNewSession = async (newSession) => {\n  // console.log('writeNewSession')\n  let newSessionResponse = await fetch('/writesession', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...newSession })\n  })\n  const newSessionResponseData = await newSessionResponse.json();\n  return { session: newSessionResponseData.session };\n}\n\nexport const endSession = async () => {\n  // console.log('endSession')\n  let endSessionResponse = await fetch('/endsession', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  })\n  const endSessionResponseData = await endSessionResponse.json();\n  return { message: endSessionResponse };\n}\n\nexport const createSdkHelper = ({ accessToken, lookerBaseUrl }) => {\n  // console.log('createSdkHelper')\n  // console.log({ accessToken })\n  // console.log({ lookerBaseUrl })\n\n  if (accessToken && lookerBaseUrl) { //added 11/22\n    const pblsession = new PblSessionEmbed({\n      ...DefaultSettings(),\n      base_url: lookerBaseUrl,\n      accessToken\n    });\n\n    let sdk = new Looker40SDK(pblsession);\n    return sdk;\n  }\n\n}\n\nexport const checkToken = async (expires_in) => {\n  // console.log('checkToken2');\n  // console.log({ expires_in });\n  // console.log('Date.now()', Date.now());\n  // let dateeee = new Date(expires_in);\n  // console.log({ dateeee })\n\n  if ((Date.now()) > expires_in) {\n    // console.log('inside iff')\n    let sessionResponse = await fetch('/refreshlookertoken', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    const sessionResponseData = await sessionResponse.json();\n    const lookerBaseUrl = sessionResponseData.session.lookerBaseUrl ? sessionResponseData.session.lookerBaseUrl : '';\n    const accessToken = sessionResponseData.session.lookerApiToken ? sessionResponseData.session.lookerApiToken.api_user_token : '';\n    const sdk = createSdkHelper({ accessToken, lookerBaseUrl })\n\n    return { status: \"updated\", sdk, clientSession: sessionResponseData.session }\n\n  } else {\n    // console.log(\"inside ellse\")\n    return { status: \"ok\" }\n  }\n}\n\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/SignIn/SignIn.js",["208","209","210","211","212","213","214","215","216"],"import _ from 'lodash'\nimport React, { useContext, useEffect } from 'react';\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport { GoogleLogin } from 'react-google-login';\nimport AppContext from '../../contexts/AppContext';\nimport { writeNewSession, createSdkHelper } from '../../AuthUtils/auth';\n// import UsecaseContent from '../../usecaseContent.json';\nimport { initialLookerUser } from '../../LookerHelpers/defaults'\nimport useStyles from './styles.js';\nimport '../Home.css';\nimport { Grid, Card, CardActions, CardContent, Typography } from '@material-ui/core'\nimport { SignInContent } from '../../config'\n\nconst { validIdHelper } = require('../../tools');\n\nexport default function SignIn(props) {\n  // console.log('SignIn');\n  // console.log('props', props)\n\n  let { clientSession, setClientSession,\n    sdk, setSdk,\n    initialHref, setInitialHref } = useContext(AppContext);\n  const { packageName } = clientSession;\n\n  const responseGoogle = async (response) => {\n    if (response.error) {\n    } else {\n      let newSession = await writeNewSession({ ...clientSession, userProfile: response.profileObj, lookerUser: initialLookerUser })\n\n      const lookerBaseUrl = newSession.session.lookerBaseUrl ? newSession.session.lookerBaseUrl : '';\n      const accessToken = newSession.session.lookerApiToken ? newSession.session.lookerApiToken.api_user_token : '';\n      const sdk = createSdkHelper({ lookerBaseUrl, accessToken })\n\n      setClientSession(newSession.session);\n      setSdk(sdk)\n    }\n  }\n  const googleClientId = `${process.env.REACT_APP_GOOGLE_CLIENT_ID}.apps.googleusercontent.com`;\n\n  const classes = useStyles();\n  const logoImage = packageName ? require(`../../images/logo_text.svg`).default : \"\";\n\n  const backgroundImageInt = Math.floor(Math.random() * 4) + 1;\n  const backgroundImage = packageName ? require(`../../images/background${backgroundImageInt}.jpg`).default : \"\";\n\n\n  return (\n    <div className={`${classes.root} demoComponent ${classes.h100}`}>\n      <Grid container\n        key={validIdHelper('sign in page')}\n        className={`${classes.h100}`}>\n        <Grid item sm={12} className={'sign-in-background-img'}\n          style={{\n            backgroundImage: `url(${backgroundImage})`,\n            backgroundSize: 'cover'\n          }}\n        >\n          <Card className={classes.card}>\n            <div className={classes.cardCopy}>\n              <img\n                src={logoImage}\n              />\n              <CardContent >\n                <Typography variant=\"h5\" component=\"h2\">\n                  {SignInContent.cardHeader}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  {SignInContent.cardBody}\n                </Typography>\n              </CardContent>\n              <CardActions className={`${classes.actions}`} >\n                <GoogleLogin\n                  clientId={googleClientId}\n                  buttonText=\"Login\"\n                  onSuccess={responseGoogle}\n                  onFailure={responseGoogle}\n                  cookiePolicy={'single_host_origin'}\n                />\n              </CardActions>\n            </div>\n          </Card>\n        </Grid>\n      </Grid>\n    </div >\n  )\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/Home.js",["217","218"],"import _ from 'lodash'\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport AppContext from '../../contexts/AppContext';\nimport { checkToken } from '../../AuthUtils/auth';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core/';\nimport clsx from 'clsx';\nimport { lookerUserPermissions, lookerUserTimeHorizonMap } from '../../LookerHelpers/defaults';\n\nimport TopBar from './TopBar';\nimport LeftDrawer from './LeftDrawer';\nimport MonetizationModal from '../Demo/MonetizationModal/MonetizationModal';\n\nimport '../Home.css';\nimport { useStyles } from './styles.js';\nimport { packageNameTheme } from '../../config/theme.js';\n\nimport * as DemoComponentsContentArr from '../../config/Demo'\n\nconst { validIdHelper } = require('../../tools');\n\nexport default function Home(props) {\n  // console.log(\"Home\")\n  let { setClientSession, clientSession, sdk, setSdk, isReady } = useContext(AppContext)\n  let { democomponent } = useParams();\n  const classes = useStyles();\n\n  const didMountRef = useRef(false)\n  const [drawerOpen, setDrawerOpen] = useState(window.innerWidth > 768 ? true : false);\n  const [highlightShow, setHighlightShow] = useState(false);\n  const [codeShow, setCodeShow] = useState(false);\n  const [payWallModal, setPaywallModal] = useState({});\n  const [selectedMenuItem, setSelectedMenuItem] = useState(democomponent);\n\n  const handleSwitchLookerUser = async (newValue, property) => {\n\n    let newLookerUser = { ...clientSession.lookerUser }\n    if (property === 'brand') {\n      newLookerUser.user_attributes.brand = newValue\n    } else if (property === 'permission') {\n      newLookerUser.permissions = lookerUserPermissions[newValue] || lookerUserPermissions['basic']\n      newLookerUser.user_attributes.permission_level = newValue\n      newLookerUser.user_attributes.time_horizon = lookerUserTimeHorizonMap[newValue]\n    }\n\n    const lookerUserResponse = await fetch('/updatelookeruser', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newLookerUser)\n    })\n\n    let lookerUserResponseData = await lookerUserResponse.json();\n    setClientSession(lookerUserResponseData.session);\n  }\n\n\n  const corsApiCall = async (func, args = []) => {\n    // console.log(\"corsApiCall\");\n\n    let checkTokenRsp = await checkToken(clientSession.lookerApiToken.expires_in);\n    if (checkTokenRsp.sdk) {\n      setSdk(checkTokenRsp.sdk)\n    }\n    if (checkTokenRsp.clientSession) {\n      setClientSession(checkTokenRsp.clientSession)\n    }\n    let res = func(...args)\n    return res\n  }\n\n  //componentDidMount\n  useEffect(() => {\n\n    let modifiedBaseUrl = clientSession.lookerBaseUrl.substring(0, clientSession.lookerBaseUrl.lastIndexOf(\":\"));\n    LookerEmbedSDK.init(modifiedBaseUrl, '/auth')\n\n    window.addEventListener(\"resize\", () => {\n      setDrawerOpen(window.innerWidth > 768 ? true : false)\n    });\n\n  }, [])\n\n  useEffect(() => {\n    if (didMountRef.current) {\n      // doStuff()\n    } else didMountRef.current = true\n  })\n\n\n  useEffect(() => {\n    if (highlightShow) setHighlightShow(!highlightShow);\n    if (codeShow) setCodeShow(!codeShow);\n    setSelectedMenuItem(democomponent)\n  }, [democomponent])\n\n\n  const ActiveDemoComponentContent = _.find(DemoComponentsContentArr, (o) => {\n    return selectedMenuItem === validIdHelper(_.lowerCase(o.label));\n  });\n  const ActiveDemoComponent = ActiveDemoComponentContent.component\n\n  return (\n    <div className={classes.root} >\n\n      <AppContext.Provider value={{\n        clientSession, setClientSession,\n        payWallModal, setPaywallModal,\n        handleSwitchLookerUser,\n        drawerOpen, setDrawerOpen,\n        selectedMenuItem,\n        highlightShow, setHighlightShow,\n        codeShow, setCodeShow,\n        sdk,\n        corsApiCall,\n        theme: packageNameTheme,\n        isReady\n      }}>\n        <ThemeProvider theme={packageNameTheme}>\n          <CssBaseline />\n          <TopBar />\n          <MonetizationModal />\n          <LeftDrawer DemoComponentsContentArr={DemoComponentsContentArr} />\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: drawerOpen,\n            })}\n          >\n\n            <div className={classes.drawerHeader} />\n            {ActiveDemoComponent ? <ActiveDemoComponent staticContent={ActiveDemoComponentContent} /> : ''}\n          </main>\n        </ThemeProvider>\n      </AppContext.Provider>\n    </div>\n  )\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/SignIn/styles.js",["219","220"],"import { makeStyles } from '@material-ui/core/styles';\nimport { grey, orange } from '@material-ui/core/colors';\nconst lightGrey = grey[200];\n\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  root: {\n    display: 'flex',\n    backgroundColor: 'rgb(229, 229, 229)'\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  card: {\n    minWidth: 350,\n    minHeight: 500,\n    left: '75%',\n    top: '50%',\n    transform: `translate(-75%, -50%)`,\n    position: 'absolute',\n    textAlign: 'center',\n    backgroundColor: lightGrey\n  },\n  h100: {\n    height: '100%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  actions: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  cardCopy: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: `translate(-50%, -50%)`,\n    margin: '0',\n    width: '80%',\n  }\n}));\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/styles.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/tools.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/LookerHelpers/defaults.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/LookerHelpers/pblsession.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/LeftDrawer.js",["221","222"],"import _ from 'lodash'\nimport React, { useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport AppContext from '../../contexts/AppContext';\nimport { Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, Icon } from '@material-ui/core/';\nimport { ChevronLeft } from '@material-ui/icons';\n\nimport { useStyles } from './styles.js';\nimport BottomBar from './BottomBar'; //needs refactor\n\nconst { validIdHelper } = require('../../tools');\n\nexport default function LeftDrawer({ DemoComponentsContentArr }) {\n  // console.log('LeftDrawer');\n\n  const classes = useStyles();\n  const { drawerOpen, setDrawerOpen, } = useContext(AppContext);\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"persistent\"\n      anchor=\"left\"\n      open={drawerOpen}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton\n          onClick={() => setDrawerOpen(false)}>\n          <ChevronLeft\n            aria-label=\"close drawer\"\n          />\n        </IconButton>\n      </div>\n\n      <MenuList\n        classes={classes}\n        DemoComponentsContentArr={DemoComponentsContentArr} />\n\n      {/* should be refactored */}\n      <BottomBar classes={classes} />\n    </Drawer>\n  )\n}\n\nfunction MenuList({ classes, DemoComponentsContentArr }) {\n  // console.log(\"MenuList\")\n  const { clientSession, selectedMenuItem } = useContext(AppContext);\n  const { packageName } = clientSession;\n\n  let orderedDemoComponentsForMenu = packageName ? _.orderBy(DemoComponentsContentArr, ['menuCategory'], ['asc']) : [];\n  let orderedDemoComponentsForMenuObj = {};\n  let expandedTreeItemsArr = [];\n  let cumulativePusher = 0;\n  orderedDemoComponentsForMenu.map((item, index) => {\n    if (orderedDemoComponentsForMenuObj.hasOwnProperty(item.menuCategory)) {\n      orderedDemoComponentsForMenuObj[item.menuCategory] = [...orderedDemoComponentsForMenuObj[item.menuCategory], item]\n    } else {\n      orderedDemoComponentsForMenuObj[item.menuCategory] = [item];\n      cumulativePusher += 1;\n      expandedTreeItemsArr.push(\"\" + (index + cumulativePusher));\n    }\n  });\n\n  return (<List\n    component=\"nav\"\n    aria-labelledby=\"nested-list-subheader\"\n    className={classes.list}\n  >\n    {packageName ? Object.keys(orderedDemoComponentsForMenuObj).map((outerItem, outerIndex) => {\n      return (\n        < React.Fragment\n          key={`${validIdHelper(outerItem + '-menuList-' + outerIndex)}`}>\n          <ListItem\n            key={`${validIdHelper(outerItem + '-outerListItem-' + outerIndex)}`}\n          >\n            <ListItemText primary={outerItem === 'home' ? '' : _.capitalize(outerItem)} />\n          </ListItem>\n          < List component=\"div\" disablePadding\n            key={`${validIdHelper(outerItem + '-innerList-' + outerIndex)}`}>\n            {orderedDemoComponentsForMenuObj[outerItem].map((item, innerIndex) => {\n              const MatchingIconComponent = item.icon\n              return (\n                <ListItem\n                  button\n                  className={`${classes.nested} ${classes.roundedTab}`}\n                  key={`${validIdHelper(outerItem + '-innerListItem-' + innerIndex)}`}\n                  selected={validIdHelper(_.lowerCase(item.label)) === selectedMenuItem}\n                  component={Link}\n                  to={validIdHelper(_.lowerCase(item.label))}\n                >\n                  <ListItemIcon>\n                    {MatchingIconComponent ? <MatchingIconComponent /> : <></>}\n                  </ListItemIcon>\n                  <ListItemText primary={_.capitalize(item.label)} />\n                </ListItem>\n              )\n            })}\n          </List>\n        </React.Fragment>\n      )\n    }) : ''\n    }\n  </List >\n  )\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/TopBar.js",["223"],"import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport {\n  AppBar, Toolbar, Badge, Avatar, IconButton\n} from '@material-ui/core/';\nimport { AddAlert, ChevronLeft, Menu } from '@material-ui/icons';\nimport AppContext from '../../contexts/AppContext';\nimport { useStyles } from './styles.js';\n\nimport UserMenu from './UserMenu';\n\nexport default function TopBar(props) {\n  const classes = useStyles();\n\n  let { clientSession, setClientSession,\n    drawerOpen, setDrawerOpen,\n  } = useContext(AppContext)\n  const { packageName } = clientSession\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar)}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={() => setDrawerOpen(!drawerOpen)}\n          edge=\"start\"\n        >\n          {drawerOpen ? <ChevronLeft /> : <Menu />}\n        </IconButton>\n\n        {packageName ?\n          <Avatar alt=\"Icon\"\n            src={require(`../../images/logo.svg`).default}\n            variant=\"square\"\n          /> : ''}\n\n        <Badge badgeContent={3} color=\"error\" className={`${classes.mlAuto} ${classes.mr12} `} >\n          <AddAlert />\n        </Badge>\n        <UserMenu />\n      </Toolbar>\n    </AppBar>\n  )\n}\n\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/Dashboard.js",["224","225","226","227","228","229","230","231","232","233","234"],"import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Grid, Card } from '@material-ui/core'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport useStyles from './styles.js';\nimport AppContext from '../../../contexts/AppContext';\nimport FilterBar from './FilterBar';\nimport EmbeddedDashboardContainer from './EmbeddedDashboardContainer';\nimport { Loader, CodeFlyout } from \"@pbl-demo/components/Accessories\";\n\n\n\nconst { validIdHelper } = require('../../../tools');\n\nexport default function Dashboard(props) {\n  // console.log('Dashboard');\n  const { staticContent: { lookerContent }, staticContent: { type } } = props;\n\n  const { clientSession, codeShow, sdk, corsApiCall, theme, isReady, selectedMenuItem } = useContext(AppContext)\n  const { lookerUser, lookerHost } = clientSession;\n\n  const demoComponentType = type || 'code flyout';\n  const topBarBottomBarHeight = 112;\n\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState(undefined);\n  const [dashboardObj, setDashboardObj] = useState({});\n  const [dashboardOptions, setDashboardOptions] = useState({});\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const [tileToggleValue, setTileToggleValue] = useState('');\n  const [visColorToggleValue, setVisColorToggleValue] = useState('#2d4266');\n  const [lightThemeToggleValue, setLightThemeToggleValue] = useState(true);\n  const [fontThemeSelectValue, setFontThemeSelectValue] = useState(\"arial\");\n  const [expansionPanelHeight, setExpansionPanelHeight] = useState(0);\n  const [horizontalLayout, setHorizontalLayout] = useState(false);\n  const [drawerOpen, setDrawerOpen] = useState(true);\n\n  let dynamicVisConfigFilterItem = _.find(lookerContent[0].filters, { label: \"Dynamic Vis Config\" });\n  const isThemeableDashboard = dynamicVisConfigFilterItem && Object.keys(dynamicVisConfigFilterItem).length ? true : false;\n  const darkThemeBackgroundColor = theme.palette.fill.main;\n\n  const classes = useStyles();\n\n  //condtional theming for dark mode :D\n  let paletteToUse = !lightThemeToggleValue && isThemeableDashboard ?\n    {\n      palette: {\n        type: 'dark',\n        background: { paper: darkThemeBackgroundColor, default: darkThemeBackgroundColor },\n      }\n    }\n    :\n    { palette: { ...theme.palette } }\n\n  const themeToUse = React.useMemo(\n    () =>\n      createMuiTheme(\n        paletteToUse\n      ),\n    [lightThemeToggleValue, lookerContent],\n  );\n\n  const handleTileToggle = (event, newValue) => {\n    let dynamicTileFilterItem = _.find(lookerContent[0].filters, { label: \"Dynamic Tiles\" });\n\n    if (dynamicTileFilterItem) {\n      setTileToggleValue(newValue)\n      const filteredLayout = _.filter(dashboardOptions.layouts[0].dashboard_layout_components, (row) => {\n        return (dynamicTileFilterItem.tileLookUp[newValue].indexOf(dashboardOptions.elements[row.dashboard_element_id].title) > -1)\n      })\n\n      const newDashboardLayout = {\n        ...dashboardOptions.layouts[0],\n        dashboard_layout_components: filteredLayout\n      }\n      dashboardObj.setOptions({ \"layouts\": [newDashboardLayout] })\n\n    }\n  };\n\n  const handleVisColorToggle = (event, newValue) => {\n    let dynamicVisConfigFilterItem = _.find(lookerContent[0].filters, { label: \"Dynamic Vis Config\" });\n    if (dynamicVisConfigFilterItem) {\n      let newColorSeries = dynamicVisConfigFilterItem.colors[newValue]\n      let newDashboardElements = { ...dashboardOptions.elements };\n\n      Object.keys(newDashboardElements).map(key => {\n        if (newDashboardElements[key].vis_config.series_colors) {\n          Object.keys(newDashboardElements[key].vis_config.series_colors).map((innerKey, index) => {\n            newDashboardElements[key].vis_config.series_colors[innerKey] = newColorSeries[index] || newColorSeries[0];\n          })\n        }\n        if (newDashboardElements[key].vis_config.custom_color) {\n          newDashboardElements[key].vis_config.custom_color = newColorSeries[newColorSeries.length - 2];\n        }\n        if (newDashboardElements[key].vis_config.map_value_colors) {\n          newDashboardElements[key].vis_config.map_value_colors.map((item, index) => {\n            newDashboardElements[key].vis_config.map_value_colors[index] = newColorSeries[index] || newColorSeries[0];\n          })\n        }\n        // loss some fidelity here\n        if (newDashboardElements[key].vis_config.series_cell_visualizations) {\n          Object.keys(newDashboardElements[key].vis_config.series_cell_visualizations).map((innerKey, index) => {\n            if (newDashboardElements[key].vis_config.series_cell_visualizations[innerKey].hasOwnProperty(\"palette\")) {\n              newDashboardElements[key].vis_config.series_cell_visualizations[innerKey][\"palette\"] = { ...dynamicVisConfigFilterItem.series_cell_visualizations[newValue] }\n            }\n          })\n        }\n        if (newDashboardElements[key].vis_config.header_font_color) {\n          newDashboardElements[key].vis_config.header_font_color = newColorSeries[newColorSeries.length - 2];\n        }\n        if (isThemeableDashboard) {\n          if (newDashboardElements[key].vis_config.map_tile_provider) {\n            newDashboardElements[key].vis_config.map_tile_provider = lightThemeToggleValue ? \"light\" : \"dark\";\n          }\n\n        }\n      })\n      setVisColorToggleValue(newValue)\n      dashboardObj.setOptions({ \"elements\": { ...newDashboardElements } })\n    }\n  };\n\n  const handleThemeChange = (event, newValue) => {\n    let themeName = '';\n    if (typeof newValue === \"boolean\") {//handleModeToggle\n      setLightThemeToggleValue(newValue)\n      themeName = newValue ? `light_${fontThemeSelectValue}` : `dark_${fontThemeSelectValue}`\n    } else { //handleFontToggle\n      themeName = lightThemeToggleValue ? `light_${newValue}` : `dark_${newValue}`\n      setFontThemeSelectValue(newValue)\n    }\n\n    corsApiCall(performLookerApiCalls, [lookerContent, themeName])\n  }\n\n  useEffect(() => {\n    console.log(\"useEffect outer\");\n    console.log({ lookerUser });\n    console.log({ isReady });\n    if (isReady) {\n      console.log(\"useEffect inner\")\n      let themeName = lightThemeToggleValue ? 'light' : 'dark';\n      themeName += `_${fontThemeSelectValue}`;\n      corsApiCall(performLookerApiCalls, [[...lookerContent], themeName])\n      setApiContent(undefined);\n      setHorizontalLayout(false);\n      setDrawerOpen(true);\n    }\n  }, [lookerUser, isReady, selectedMenuItem])\n\n  useEffect(() => {\n    if (Object.keys(dashboardOptions).length && Object.keys(dashboardObj).length\n    ) {\n      handleTileToggle(null, tileToggleValue ? tileToggleValue : \"Inventory\")\n      handleVisColorToggle(null, visColorToggleValue ? visColorToggleValue : '#2d4266');\n    }\n  }, [dashboardOptions]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n    setExpansionPanelHeight(horizontalLayout ? $('.MuiExpansionPanel-root:visible').innerHeight() || 0 : 0)\n  })\n\n  useEffect(() => {\n    setHeight((window.innerHeight - topBarBottomBarHeight));\n    setExpansionPanelHeight(horizontalLayout ? $('.MuiExpansionPanel-root:visible').innerHeight() || 0 : 0)\n  }, [horizontalLayout])\n\n  useEffect(() => {\n    setApiContent(undefined);\n  }, [])\n\n  const performLookerApiCalls = function (lookerContent, dynamicTheme) {\n\n    setIFrame(0)\n    $(`.embedContainer.${validIdHelper(demoComponentType)}:visible`).html('')\n    lookerContent.map(async lookerContentItem => {\n      //dashboard creation\n      let dashboardId = lookerContentItem.id;\n      let themeToUse = dynamicTheme && isThemeableDashboard ?\n        dynamicTheme :\n        lookerContentItem.theme ?\n          lookerContentItem.theme :\n          'atom_fashion';\n\n      LookerEmbedSDK.createDashboardWithId(dashboardId)\n        .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${dashboardId}`))\n        .withClassName('iframe')\n        .withNext()\n        .withTheme(themeToUse)\n        .withParams({ 'schedule_modal': 'true' })\n        .on('dashboard:loaded', (event) => {\n          setDashboardOptions(event.dashboard.options)\n        })\n        .build()\n        .connect()\n        .then((dashboard) => {\n          setIFrame(1)\n          setDashboardObj(dashboard)\n          let modifiedBaseUrl = clientSession.lookerBaseUrl.substring(0, clientSession.lookerBaseUrl.lastIndexOf(\":\"));\n          LookerEmbedSDK.init(modifiedBaseUrl)\n        })\n        .catch((error) => {\n          // console.error('Connection error', error)\n        })\n\n      //api calls\n      if (lookerContentItem.hasOwnProperty('filters') //&& !apiContent\n      ) {\n        // setApiContent(undefined)\n        // get inline query from usecase file & set user attribute dynamically\n        // iterating over filters\n        let apiContentObj = {}\n        lookerContentItem.filters.map(async (filterItem, index) => {\n          if (filterItem.inlineQuery) {\n            let jsonQuery = filterItem.inlineQuery\n            jsonQuery.filters = {\n              ...jsonQuery.filters,\n              [filterItem.desiredFilterName]: lookerUser.user_attributes.brand\n            };\n            let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: filterItem.resultFormat || 'json', body: jsonQuery }));\n            let queryResultsForDropdown = [];\n            let desiredProperty = Object.keys(lookerResponseData[0])[0];\n\n            for (let i = 0; i < lookerResponseData.length; i++) {\n              queryResultsForDropdown.push({\n                'label': lookerResponseData[i][desiredProperty],\n                'trend': (lookerResponseData[i]['trend']) ? lookerResponseData[i]['trend'] : undefined\n              })\n            }\n            apiContentObj[filterItem.component] = queryResultsForDropdown\n          }\n          setApiContent(apiContentObj)\n        })\n      }\n    })\n  }\n\n  const customFilterAction = (filterName, newFilterValue) => {\n    if (Object.keys(dashboardObj).length) {\n      dashboardObj.updateFilters({ [filterName]: newFilterValue })\n      dashboardObj.run()\n    }\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}\n    >\n      <ThemeProvider theme={themeToUse}>\n        <Card elevation={1} className={`${classes.padding30} ${classes.height100Percent}`}>\n          <div\n            className={`${classes.root} ${classes.height100Percent}`}\n          >\n            <Grid\n              container\n              spacing={3}\n            >\n              {/* could be improved */}\n              {lookerContent[0].hasOwnProperty(\"filters\") ?\n\n                < FilterBar {...props}\n                  classes={classes}\n                  apiContent={apiContent}\n                  customFilterAction={customFilterAction}\n                  tileToggleValue={tileToggleValue}\n                  handleTileToggle={handleTileToggle}\n                  visColorToggleValue={visColorToggleValue}\n                  handleVisColorToggle={handleVisColorToggle}\n                  lightThemeToggleValue={lightThemeToggleValue}\n                  fontThemeSelectValue={fontThemeSelectValue}\n                  handleThemeChange={handleThemeChange}\n                  horizontalLayout={horizontalLayout}\n                  setHorizontalLayout={setHorizontalLayout}\n                  drawerOpen={drawerOpen}\n                  setDrawerOpen={setDrawerOpen}\n                />\n                :\n                ''}\n\n              {\n                iFrameExists\n                  ? ''\n                  :\n                  <Loader classes={classes}\n                    height={height}\n                    expansionPanelHeight={expansionPanelHeight} />\n              }\n\n              <EmbeddedDashboardContainer\n                classes={classes}\n                lookerContent={lookerContent}\n                type={demoComponentType}\n                width={lookerContent[0].hasOwnProperty(\"filters\") ? horizontalLayout ? 12 : drawerOpen ? 9 : 12 : 12}\n              />\n\n              {codeShow ?\n                <Grid item sm={6}\n                  className={`${classes.positionFixedTopRight}`}\n                >\n                  <CodeFlyout {...props}\n                    classes={classes}\n                    lookerUser={lookerUser}\n                    height={height}\n                  />\n                </Grid>\n                : ''}\n\n            </Grid>\n          </div>\n        </Card>\n      </ThemeProvider>\n    </ div>\n  )\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/MonetizationModal/MonetizationModal.js",["235","236","237"],"import _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppContext from '../../../contexts/AppContext';\nimport {\n  Modal, Fade, Grid, Card, CardContent, CardActions, Button, Typography, Divider, List, ListItem, ListItemText\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab'\nimport { ListItemIcon } from '@material-ui/core'; //already declared\nimport { Check } from '@material-ui/icons';\nimport useStyles from './styles.js';\nimport { lookerUserPermissions } from '../../../LookerHelpers/defaults';\nconst { validIdHelper } = require('../../../tools');\n\nfunction getModalStyle() {\n  const top = 10 //+ rand();\n  const left = 50 //+ rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${left}%, -${top}%)`,\n  };\n}\n\nexport default function MonetizationModal(props) {\n  // console.log('MonetizationModal')\n  let { clientSession, payWallModal, setPaywallModal, handleSwitchLookerUser } = useContext(AppContext)\n\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n\n  const modalListMap = {\n    'basic': [\n      '6 months of order data history',\n      'Atom Merchant Dashboards',\n      'Download PDFs, CSVs'\n    ],\n    'advanced': [\n      'Full year of order data history',\n      'Drill to row level information',\n      'Download row level information',\n      'Schedule dashboards for delivery (to you or others)',\n      'Set alerts and key threshold notifications'],\n    'premium': [\n      '2 Full years of order data history',\n      'Analyze your own data and save custom reports',\n      'View premium level, productivity enhancing reports',\n      'Share your reports with colleagues in Atom',\n      'Text message alerts',\n      // 'Notify active shoppers on Atom',\n      // 'Apply Atom’s advanced AI insights to stay ahead of trends'\n    ]\n  }\n\n\n  return (\n    < Modal\n      className={`${classes.modal} `}\n      open={payWallModal.show || false}\n      onClose={() => setPaywallModal({})}\n    >\n      <Fade in={payWallModal.show || false}>\n        <div\n          style={modalStyle}\n          className={`${classes.paper} ${classes.padding30}`}>\n          <Grid container\n            spacing={3}>\n            {Object.keys(lookerUserPermissions).map(key => {\n              return (\n                <Grid item sm={4}\n                  key={validIdHelper(`monetizationModal-gridItem-${key}`)}\n                >\n                  <Card className={`${classes.card} ${classes[key]}`}\n                    elevation={1}\n                    style={key === clientSession.lookerUser.user_attributes.permission_level ? {\n                      // transform: 'scale(1.05)',\n                      // transition: 'transform .2s',\n                      backgroundColor: '#5F6BD8',\n                      color: '#ffffff',\n                      height: 519\n                    } : {\n                        height: 519\n                      }}\n                    onClick={() => {\n                      handleSwitchLookerUser(key, 'permission')\n                      setPaywallModal({})\n                    }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" display=\"justify\">\n                        {_.capitalize(key)}\n                      </Typography>\n                      <Typography\n                        display=\"justify\">\n                        <Rating\n                          name=\"read-only\"\n                          value={key === 'basic' ? \"3\" : key === \"advanced\" ? \"4\" : \"5\"}\n                          readOnly /></Typography>\n                      <Typography variant=\"subtitle1\" style={{ fontStyle: 'italic' }}>\n                        {key === 'basic' ?\n                          'Drive your business with clear KPIs' :\n                          key === 'advanced' ?\n                            'Deeper insights, operations' :\n                            'Drive your business with Atom'\n                        }\n                      </Typography>\n\n                      <Divider className={`${classes.divider} `} />\n\n                      <List className={classes.root}>\n                        {\n                          modalListMap[key].map((item, index) => (\n                            <ListItem dense={true}\n                              className={classes.font875}\n                              key={`monetizationModal-ListItem-${key}-${index}`}\n                            >\n                              <ListItemIcon\n                              >\n                                <Check fontSize=\"small\" />\n                              </ListItemIcon>\n                              <ListItemText primary={item} />\n                            </ListItem>\n                          ))\n                        }\n                      </List>\n                    </CardContent>\n                    <CardActions disableSpacing={false}>\n                      <Button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        // disabled={key === lookerUser.user_attributes.permission_level ? true : false}\n                        fullWidth\n                        onClick={() => {\n                          handleSwitchLookerUser(key, 'permission')\n                          setPaywallModal({})\n                        }}\n                        style={key === clientSession.lookerUser.user_attributes.permission_level ? { color: '#ffffff', borderColor: \"#ffffff\" } : {}}>\n                        {key === clientSession.lookerUser.user_attributes.permission_level ? \"Active\" :\n                          Object.keys(modalListMap).indexOf(clientSession.lookerUser.user_attributes.permission_level) < Object.keys(modalListMap).indexOf(key) ?\n                            'Upgrade' :\n                            'Switch'}\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              )\n            })}\n          </Grid>\n        </div >\n      </Fade >\n    </Modal >\n  );\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/QueryBuilder/QueryBuilder.js",["238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256"],"import $ from 'jquery';\nimport _ from 'lodash';\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Typography, Box, Grid, Card, Button,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputLabel, MenuItem, FormControl,\n  Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,\n  TableSortLabel, FormControlLabel, Switch, Chip, Divider\n} from '@material-ui/core'\nimport { ExpandMore, Search, Done } from '@material-ui/icons';\nimport rawSampleCode from '!!raw-loader!./QueryBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { getComparator, stableSort } from './helpers.js';\nimport AppContext from '../../../contexts/AppContext';\nimport { lookerUserTimeHorizonMap } from '../../../LookerHelpers/defaults';\nimport { Loader, ApiHighlight, CodeFlyout } from \"@pbl-demo/components/Accessories\";\n\n\nconst { validIdHelper, prettifyString } = require('../../../tools');\n\nexport default function QueryBuilder(props) {\n  // console.log('QueryBuilder')\n\n  const { clientSession, setPaywallModal, show, codeShow, sdk, corsApiCall } = useContext(AppContext)\n  const { userProfile, lookerUser, lookerHost } = clientSession\n\n  const topBarBottomBarHeight = 112;\n  const sideBarWidth = 240 + 152; //24 + 24 + 30 + 30 + 12 + 12 + 10 + 10\n  const [apiContent, setApiContent] = useState({});\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const [width, setWidth] = useState((window.innerWidth - sideBarWidth));\n  const [expansionPanelHeight, setExpansionPanelHeight] = useState(0);\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, } = props;\n\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setHeight((window.innerHeight - topBarBottomBarHeight))\n      setWidth((window.innerWidth - sideBarWidth))\n      setExpansionPanelHeight($('.MuiExpansionPanel-root:visible').innerHeight() || 0)\n\n    });\n  })\n\n\n  const performLookerApiCalls = async (newQuery, resultFormat) => {\n    let apiContentCopy = { ...apiContent }\n    apiContentCopy.status = 'running';\n    setApiContent(apiContentCopy)\n\n    let timer = Date.now();\n\n    let lookerCreateQueryResponseData = await sdk.ok(sdk.create_query(newQuery))\n    let lookerCreateTaskResponseData = await sdk.ok(sdk.create_query_task({\n      body: {\n        query_id: lookerCreateQueryResponseData.id,\n        result_format: resultFormat || 'json_detail'//lookerContent[0].resultFormat || 'json'\n      }\n    }))\n\n    let taskInterval = setInterval(async () => {\n      let lookerCheckTaskResponseData = await sdk.ok(sdk.query_task_results(lookerCreateTaskResponseData.id, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }));\n\n      if (lookerCheckTaskResponseData.status === 'complete') {\n        clearInterval(taskInterval);\n        setApiContent(lookerCheckTaskResponseData)\n        // setServerSideCode(lookerCreateTaskResponseData.code)\n      }\n\n      //time out after 30 seconds\n      if ((timer + (30 * 1000)) < Date.now()) {\n        clearInterval()\n        setApiContent([])\n      }\n    }, 1000)\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`\n      ${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowYScroll}`\n      }\n      >\n        <Grid container\n          key={validIdHelper(type)} >\n          <div className={`${classes.root}`}>\n            <Grid item sm={12}>\n              <FilterBar {...props}\n                classes={classes}\n                action={performLookerApiCalls}\n                corsApiCall={corsApiCall}\n              />\n            </Grid>\n            {apiContent.status === 'running' ?\n\n              <Loader classes={classes}\n                height={height}\n                expansionPanelHeight={expansionPanelHeight} />\n\n              : apiContent.data && apiContent.data.length ?\n                <Box>\n                  <Grid container\n                    spacing={3}\n                    className={`${classes.noContainerScroll}`}>\n                    {codeShow ?\n                      <Grid item sm={6}\n                        className={`${classes.positionFixedTopRight}`}\n                      >\n                        <CodeFlyout {...props}\n                          classes={classes}\n                          lookerUser={lookerUser}\n                          height={height}\n                        />\n                      </Grid> : ''}\n                    <Divider className={classes.divider} />\n                    <Grid item sm={12}>\n                      <Box className={`${classes.w100}`} mt={2}>\n                        < EnhancedTable\n                          {...props}\n                          classes={classes}\n                          rows={apiContent.data}\n                          lookerContent={lookerContent}\n                          width={width}\n                        />\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Box>\n                :\n                <Grid item sm={12} >\n                  <Typography variant=\"h6\" component=\"h6\" className={`${classes.gridTitle} ${classes.textCenter}`}>\n                    No results found, try a new query<br />\n                  </Typography>\n                </Grid>\n            }\n          </div >\n        </Grid >\n      </Card>\n    </div >\n  )\n}\n/**\n * seems inconsistent that filterbar performs performLookerApiCalls here??\n */\n\nfunction FilterBar(props) {\n  // console.log('FilterBar');\n\n\n  const { clientSession, setPaywallModal, show, codeShow, sdk, corsApiCall, isReady } = useContext(AppContext)\n  const { userProfile, lookerUser, lookerHost } = clientSession\n\n  const { staticContent, staticContent: { lookerContent }, classes, action, //lookerUser, corsApiCall \n  } = props;\n\n\n\n  let measureCounter = 0;\n  let dimensionCounter = 0;\n\n\n  const initializeFieldChipDataHelper = () => {\n    let initializedFields = lookerContent[0].queryBody.fields.map((item, index) => {\n      return {\n        key: 'fieldChipData' + index,\n        label: prettifyString(item.substring(item.lastIndexOf('.') + 1, item.length)),\n        datalabel: item,\n        selected: item === 'users.state' || item === 'users.country' || item === 'order_items.total_sale_price' ? true : false,\n        fieldType: lookerContent[0].fieldType[item]\n      }\n    })\n    return initializedFields;\n  }\n\n  const [expanded, setExpanded] = useState(true);\n  const [fieldsChipData, setFieldsChipData] = useState(lookerContent[0].queryBody ? initializeFieldChipDataHelper() : '');\n  const [queryModified, setQueryModified] = useState(true); //set to true initially\n  const [queryShouldRun, setQueryShouldRun] = useState(false); //for lookerUser useEffect\n  const [filtersData, setFilterData] = useState(lookerContent[0].queryBody ? Object.keys(lookerContent[0].queryBody.filters).map((key, index) => {\n    return {\n      key: 'filter' + index,\n      label: key,\n      value: lookerContent[0].queryBody.filters[key],\n      type: lookerContent[0].filterType[key]\n    }\n  }) : '')\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  const handleFieldChipClick = (chip, index) => {\n    let updatedFieldsChipData = [...fieldsChipData]\n    updatedFieldsChipData[index].selected = updatedFieldsChipData[index].selected === false ? true : false\n    setFieldsChipData(updatedFieldsChipData)\n    setQueryModified(true)\n  }\n\n  const handleSelectChange = (index, newValue) => {\n    let updatedFiltersData = [...filtersData]\n    updatedFiltersData[index].value = newValue;\n    setFilterData(updatedFiltersData)\n    setQueryModified(true)\n  }\n\n  const handleQuerySubmit = (event) => {\n    if (queryModified || queryShouldRun) {\n      let newFields = fieldsChipData.filter(chip => chip.selected).map(item => item.datalabel);\n      let currentFilters = {}; //needs to be object\n      filtersData.map((item, index) => {\n        currentFilters[item.label] = item.value\n      })\n      let newQueryObj = { ...lookerContent[0].queryBody };\n      newQueryObj.fields = newFields;\n      newQueryObj.filters = currentFilters;\n\n      corsApiCall(action, [newQueryObj, lookerContent[0].resultFormat]);\n\n      setQueryModified(false)\n      setQueryShouldRun(false)\n    } //else console.log('elllse')\n  }\n\n\n\n  useEffect(() => {\n    // console.log('useEffect lookerUser')\n    if (isReady) {\n      let updatedFiltersData = [...filtersData]\n      updatedFiltersData[3].value = lookerUserTimeHorizonMap[lookerUser.user_attributes.permission_level] || \"182 days\";\n      setFilterData(updatedFiltersData);\n      setFieldsChipData(initializeFieldChipDataHelper())\n\n      setQueryShouldRun(true);\n\n    }\n  }, [lookerUser, isReady]);\n\n  useEffect(() => {\n    // console.log('useEffect queryShouldRun')\n    if (queryShouldRun) {\n      handleQuerySubmit();\n      setQueryModified(false);\n      setQueryShouldRun(false);\n    }\n  }, [queryShouldRun])\n\n\n  const datePermissionMap = {\n    'basic': [\"1 week\", \"1 month\", \"3 months\", \"last 182 days\"]\n  }\n  datePermissionMap.advanced = [...datePermissionMap.basic, \"last 365 days\"]\n  datePermissionMap.premium = [...datePermissionMap.advanced, \"last 730 days\"]\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} elevation={0}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMore />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Search /><Typography className={`${classes.heading} ${classes.ml12}`}>Build Query:</Typography>\n        {/* <Typography className={classes.heading}>Build Query:</Typography> */}\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Select Metrics:\n      {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'measure' ?\n                      <Chip\n                        key={item.label}\n                        // key={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        measurecounter={measureCounter += 1}\n                        className={item.selected ? `${classes.orangePrimary} ${classes.m6}` : `${classes.m6}`}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <Done className={classes.dBlock} /> : <Done className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Group By:\n                          {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'dimension' ?\n                      <Chip\n                        key={item.label}\n                        dimensioncounter={dimensionCounter += 1}\n                        className={item.selected ? `${classes.bluePrimary} ${classes.m6}` : `${classes.m6}`}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <Done className={classes.dBlock} /> : <Done className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n\n          <Grid item sm={3}>\n            <Typography variant=\"subtitle1\">\n              Filter By:\n                      </Typography>\n            {filtersData.length ? filtersData.map((item, index) => {\n              return (\n                <FormControl className={item.value.length ? classes.formControl : classes.hidden} key={validIdHelper(`${item.label}FormControl`)}>\n                  {\n                    item.type === 'yesno' ?\n                      <>\n                        <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n                        <Select\n                          labelId={validIdHelper(`${item.label}FilterLabel`)}\n                          id={validIdHelper(`${item.label}FilterSelect`)}\n                          value={item.value}\n                          onChange={(event) => handleSelectChange(index, event.target.value)}\n                        >\n                          <MenuItem value=\"Yes\">Yes</MenuItem>\n                          <MenuItem value=\"No\">No</MenuItem>\n                          <MenuItem value=\"All\">All</MenuItem>\n                        </Select>\n                      </>\n                      : item.type === 'date' ?\n                        <>\n                          <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n\n                          <Select\n                            labelId={validIdHelper(`${item.label}FilterLabel`)}\n                            id={validIdHelper(`${item.label}FilterSelect`)}\n                            value={item.value || '6 months'}\n                            onChange={(event) => handleSelectChange(index, event.target.value)}\n                          >\n                            {lookerUser.user_attributes.permission_level ? datePermissionMap[lookerUser.user_attributes.permission_level].map(item => (\n                              <MenuItem key={validIdHelper(item)} value={item}>{_.capitalize(item)}</MenuItem>\n                            )) : ''}\n                          </Select>\n                        </>\n                        : ''\n                  }\n                </FormControl>\n              )\n            }) : ''}\n          </Grid>\n          <Grid item sm={9}>\n            <br />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"large\"\n              onClick={handleQuerySubmit}\n              disabled={queryModified ? false : true}\n            >Run Query</Button></Grid>\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, rows } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {Object.keys(rows[0]).map((key, index) => (\n          <TableCell\n            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            id={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            align={key.numeric ? 'right' : 'left'}\n            padding={key.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === key ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === key}\n              direction={orderBy === key ? order : 'asc'}\n              onClick={createSortHandler(key)}\n            >\n              {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}\n              {orderBy === key ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  // onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nfunction EnhancedTable(props) {\n  const { rows, classes, lookerContent, width } = props;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(Object.keys(rows[0])[0]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return (\n    <div className={`${classes.root} ${classes.padding10}`}>\n      <ApiHighlight classes={classes} >\n        <TableContainer style={{ maxWidth: width }}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              {...props}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      key={validIdHelper('TableRow-' + index)}\n                      id={validIdHelper('TableRow-' + index)}>\n                      {Object.keys(row).map((key, index) => (\n                        <TableCell\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          className={lookerContent[0].fieldType[key] === 'dimension' ? classes.blueSecondary : classes.orangeSecondary}\n                          align=\"right\">\n                          {row[key].rendered ? row[key].rendered : row[key].value}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </ApiHighlight>\n      <Grid container>\n        <Grid item sm={6}>\n          <FormControlLabel\n            control={<Switch checked={dense} onChange={handleChangeDense} />}\n            label=\"Compact\"\n          /></Grid>\n        <Grid item sm={6}>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          /></Grid>\n      </Grid>\n      <div className={classes.bottomBarSpacer} />\n    </div>\n  );\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/SplashPage.js",["257","258","259","260"],"import _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Box, Grid, Card } from '@material-ui/core'\nimport useStyles from './styles.js';\nimport AppContext from '../../../contexts/AppContext';\nimport { Welcome, SingleValueVis, PopularAnalysis, EmbeddedQuery } from \"@pbl-demo/components\";\nimport { Loader, CodeFlyout } from '@pbl-demo/components/Accessories'\n\nconst { validIdHelper } = require('../../../tools');\n\nexport default function SplashPage(props) {\n\n  const topBarBottomBarHeight = 112;\n  const [iFrameExists, setIFrame] = useState(1);\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n\n  const { clientSession, codeShow } = useContext(AppContext)\n  const { lookerUser, lookerHost } = clientSession\n\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type } } = props;\n  const codeTab = {\n    type: 'code flyout',\n    label: 'Code',\n    id: 'codeFlyout',\n    lookerContent,\n    lookerUser\n  }\n  const demoComponentType = type || 'code flyout';\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n  }, [lookerContent]);\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowScroll}`}\n      >\n        <Grid container\n          key={validIdHelper(type)}>\n          <div className={classes.root}>\n            {iFrameExists ? '' :\n              <Loader classes={classes} height={height} />\n            }\n            <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n              <Grid container\n                spacing={3}\n                key={`${validIdHelper(demoComponentType + '-outerFragment')}`}\n                className={`${classes.noContainerScroll}`}\n              >\n                {\n                  codeShow ? <Grid item sm={6}\n                    className={`${classes.positionFixedTopRight}`}\n                  >\n                    <CodeFlyout {...props}\n                      classes={classes}\n                      lookerUser={lookerUser}\n                      height={height}\n                    />\n                  </Grid> : ''}\n                {lookerContent.map((lookerContentItem, innerIndex) => {\n                  // console.log({ lookerContentItem })\n                  return (\n                    <Grid\n                      key={`${validIdHelper(demoComponentType + '-innerFragment-' + innerIndex)}`}\n                      item\n                      sm={parseInt(lookerContentItem.gridWidth)}\n                    >\n                      {(lookerContentItem.type === 'welcome') && <Welcome\n                        {...{ lookerContentItem, classes }}\n                      />}\n                      {(lookerContentItem.type === 'single value') && <SingleValueVis\n                        {...{ lookerContentItem, classes, demoComponentType, lookerHost }}\n                      />}\n                      {(lookerContentItem.type === 'embeddedquery') && <EmbeddedQuery\n                        {...{ lookerContentItem, classes, lookerHost }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\n                      />}\n                      {(lookerContentItem.type === 'popular analysis') && <PopularAnalysis\n                        {...{ lookerContentItem, classes, demoComponentType, lookerHost }}\n                      />}\n                    </Grid>\n                  )\n                })}\n              </Grid>\n            </Box >\n          </div >\n        </Grid >\n      </Card >\n    </div >\n  )\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/CustomVis/CustomVis.js",["261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280"],"import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, InputLabel, MenuItem,\n  FormControl, Select, Modal\n} from '@material-ui/core'\nimport { Skeleton } from '@material-ui/lab';\nimport { ExpandMore, FilterList } from '@material-ui/icons';\nimport ModalTable from '../../Material/ModalTable';\nimport { ResponsiveCalendar } from '@nivo/calendar'\nimport rawSampleCode from '!!raw-loader!./CustomVis.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { format, endOfDay, addDays } from 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport AppContext from '../../../contexts/AppContext';\nimport { Loader, ApiHighlight, CodeFlyout } from \"@pbl-demo/components/Accessories\";\n\n\nconst { validIdHelper } = require('../../../tools');\n\nexport default function CustomVis(props) {\n  // console.log('CustomVis')\n  const { clientSession, setPaywallModal, show, codeShow, sdk, corsApiCall, isReady } = useContext(AppContext)\n  const { userProfile, lookerUser, lookerHost } = clientSession\n\n  const topBarBottomBarHeight = 112;\n  const [value, setValue] = useState(0);\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [category, setCategory] = useState('All')\n  const [desiredField, setDesiredField] = useState('')\n  const [apiContent, setApiContent] = useState(undefined);\n  const [open, setOpen] = React.useState(false);\n  const [modalContent, setModalContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const [expansionPanelHeight, setExpansionPanelHeight] = useState(0);\n\n\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange,\n    //lookerUser, lookerHost \n  } = props;\n\n  //handle opening of modal for advanced and premium users\n  const handleModalOpen = async ({ day }) => {\n    let originalInlineQueryCopy = JSON.parse(JSON.stringify(lookerContent[0].inlineQuery));\n    originalInlineQueryCopy.filters = {\n      ...originalInlineQueryCopy.filters,\n      [originalInlineQueryCopy.fields[0]]: day,\n      [originalInlineQueryCopy.fields[1]]: category === \"All\" ? '' : category\n    }\n    originalInlineQueryCopy.total = true;\n    originalInlineQueryCopy.limit = \"25\";\n\n    setOpen(true);\n    let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: originalInlineQueryCopy }));\n    let modalObj = {\n      \"title\": `Detail View for ${day}`,\n      \"body\": lookerResponseData\n    }\n    setModalContent(modalObj);\n  };\n\n  //handle modal close\n  const handleModalClose = () => {\n    setModalContent({})\n    setOpen(false);\n  };\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  const handleFromDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setFromDate(newValueAsDate);\n    }\n  }\n  const handleToDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setToDate(newValueAsDate);\n    }\n  }\n\n  const handleCategory = newValue => {\n    setCategory(newValue)\n  }\n\n  const handleDesiredField = newValue => {\n    setDesiredField(newValue)\n  }\n\n  //format response from initial api call based on LookerContent array\n  //to match format required by Nivo Calendar component\n  let filterData = [];\n  if (apiContent) {\n    //filtering for fromDate, toDate and category\n    filterData = _.filter(apiContent, (row) => {\n      return (row[apiContent.inlineQuery.fields[0]] >= fromDate\n        && row[apiContent.inlineQuery.fields[0]] < toDate\n        && (category === 'All' ? true : row[apiContent.inlineQuery.fields[1]] === category)\n      )\n    })\n    //converting filterDAta to desired format for vis\n    filterData = filterData.map(item => {\n      return {\n        'day': item[apiContent.inlineQuery.fields[0]],\n        'category': item[apiContent.inlineQuery.fields[1]],\n        'value': item[desiredField]\n      }\n    })\n\n    //special exception for category all\n    //need to reduce array by day across categories\n    //destructuing in reduce of value would not work for dynamic var\n    if (category === 'All') {\n      //create array of all unique dates\n      const uniqueDates = [...new Set(filterData.map(item => item.day))];\n      let filteredAndReducedForAll = []\n      //iterate over unique date\n      uniqueDates.map(uniqueDate => {\n        //filter filterData for current unique date\n        let value = _.filter(filterData, row => {\n          return row.day === uniqueDate\n        }).reduce((acc, { value }) => acc + value, 0)\n        let thisObj = {\n          day: uniqueDate,\n          value: value,\n          category: 'All'\n        }\n        filteredAndReducedForAll.push(thisObj)\n\n      })\n      filterData = filteredAndReducedForAll;\n    }\n  }\n\n  useEffect(() => {\n    if (isReady) {\n      corsApiCall(performLookerApiCalls, [lookerContent])\n      setDesiredField(lookerContent[0].desiredFields[0])\n      setClientSideCode(rawSampleCode)\n    }\n  }, [lookerUser, isReady])\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n    setExpansionPanelHeight($('.MuiExpansionPanel-root:visible').innerHeight() || 0)\n\n  })\n\n  const performLookerApiCalls = function (lookerContent) {\n    // console.log('performLookerApiCalls')\n    // console.log({ lookerContent })\n\n    setApiContent(undefined); //set to empty array to show progress bar and skeleton\n    lookerContent.map(async lookerContent => {\n      let { inlineQuery } = lookerContent;\n      inlineQuery.filters = {\n        [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\n      };\n      let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: inlineQuery }));\n\n      // console.log('lookerResponseData', lookerResponseData)\n      lookerResponseData = lookerResponseData.filter(item => {\n        return item[inlineQuery.fields[0]]\n      })\n      let uniqueCategories = ['All'];\n      for (let i = 0; i < lookerResponseData.length; i++) {\n        if (uniqueCategories.indexOf(lookerResponseData[i][inlineQuery.fields[1]]) === -1) {\n          uniqueCategories.push(lookerResponseData[i][inlineQuery.fields[1]])\n        }\n      }\n      lookerResponseData.inlineQuery = inlineQuery;\n      lookerResponseData.uniqueCategories = uniqueCategories;\n      setFromDate(lookerResponseData[lookerResponseData.length - 1][lookerResponseData.inlineQuery.fields[0]]);\n      setToDate(incrementDate(lookerResponseData[0][lookerResponseData.inlineQuery.fields[0]], 1));\n      setApiContent(lookerResponseData)\n    })\n  }\n\n  let nivoColorScale = ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']\n  let googleColorScale = ['#4595EC', '#F3A759', '#E24E3A', '#65AB5A'];\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`\n      ${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowScroll}`\n      }\n      >\n        <Grid container\n          key={validIdHelper(type)} >\n          <div className={`${classes.root} `}>\n\n            {!apiContent ?\n              <Skeleton variant=\"rect\" animation=\"wave\" className={classes.skeleton} />\n              :\n              <FilterBar {...props}\n                classes={classes}\n                apiContent={apiContent}\n                fromDate={fromDate}\n                toDate={toDate}\n                category={category}\n                desiredField={desiredField}\n                handleFromDate={handleFromDate}\n                handleToDate={handleToDate}\n                handleCategory={handleCategory}\n                handleDesiredField={handleDesiredField}\n              />\n            }\n\n\n            {!apiContent ?\n\n              <Loader classes={classes}\n                height={height}\n                expansionPanelHeight={expansionPanelHeight} />\n\n              : apiContent && apiContent.length ?\n                <Box>\n                  <Grid container\n                    spacing={3}\n                    className={`${classes.noContainerScroll}`}>\n                    {codeShow ?\n                      <Grid item sm={6}\n                        className={`${classes.positionFixedTopRight}`}\n                      >\n                        <CodeFlyout {...props}\n                          classes={classes}\n                          lookerUser={lookerUser}\n                          height={height}\n                        />\n                      </Grid> : ''}\n                    <Divider className={classes.divider} />\n                    <Grid item sm={12} >\n\n                      <Box className={`${classes.w100} ${classes.padding10}`} mt={2}>\n\n                        <ApiHighlight height={400} classes={classes}>\n                          <ResponsiveCalendar\n                            data={filterData}\n                            align=\"top\"\n                            from={incrementDate(fromDate, 1)}\n                            to={incrementDate(toDate, 1)}\n                            emptyColor=\"#eeeeee\"\n                            colors={desiredField === lookerContent[0].desiredFields[0] ? googleColorScale : nivoColorScale}\n                            yearSpacing={40}\n                            monthBorderColor=\"#ffffff\"\n                            dayBorderWidth={2}\n                            dayBorderColor=\"#ffffff\"\n                            margin={{ bottom: 40, left: 40 }}\n                            legends={[\n                              {\n                                anchor: 'bottom-right',\n                                direction: 'row',\n                                translateY: 36,\n                                itemCount: 4,\n                                itemWidth: 42,\n                                itemHeight: 36,\n                                itemsSpacing: 14,\n                                itemDirection: 'right-to-left'\n                              }\n                            ]}\n                            onClick={(day, event) => {\n                              if (!day.value) {\n                              } else if (lookerUser.user_attributes.permission_level === 'basic') {\n                                setPaywallModal({\n                                  'show': true,\n                                  'permissionNeeded': 'see_drill_overlay'\n                                });\n                              } else {\n                                corsApiCall(handleModalOpen, [day])\n                                event.stopPropagation();\n                              }\n                            }}\n                          />\n                        </ApiHighlight>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Box> :\n                ''\n            }\n          </div>\n        </Grid >\n        {\n          open ?\n            <ModalTable\n              {...props}\n              open={open}\n              onClose={handleModalClose}\n              classes={classes}\n              modalContent={modalContent}\n            />\n\n            : ''\n        }\n      </Card>\n    </div >\n  )\n}\n//Filter Bar code\nfunction FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\n    apiContent, fromDate, toDate, category, desiredField, handleFromDate, handleToDate, handleCategory, handleDesiredField } = props;\n\n  const [expanded, setExpanded] = useState(true);\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  // console.log('FilterBar')\n  // console.log('fromDate', fromDate)\n  // console.log('toDate', toDate)\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100} elevation={0}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMore />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <FilterList /><Typography className={`${classes.heading} ${classes.ml12}`}>Filter:</Typography>\n\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          {apiContent ?\n            <>\n              <Grid item sm={3}>\n\n                <ApiHighlight classes={classes}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                    >\n                      Metric</InputLabel>\n                    <Select\n                      labelId={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-Select')}`}\n                      value={desiredField}\n                      onChange={(event) => handleDesiredField(event.target.value)}\n                    >\n                      {lookerContent[0].desiredFields.map((item, index) => (\n\n                        <MenuItem\n                          id={validIdHelper(`${item}-${index}`)}\n                          key={validIdHelper(`${item}-${index}`)}\n                          value={item}\n                        >{item.substring(item.lastIndexOf(\".\") + 1, item.length).split(\"_\").map(item => item.charAt(0).toUpperCase() + item.substring(1)).join(\" \")}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </ApiHighlight>\n              </Grid>\n              <Grid item sm={3}>\n                <ApiHighlight classes={classes}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel\n                      id={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                    >\n                      Category</InputLabel>\n                    <Select\n                      labelId={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                      id={`${validIdHelper(type + '-FilterBar-Category-Select')}`}\n                      value={category}\n                      onChange={(event) => handleCategory(event.target.value)}\n                    >\n                      {apiContent.uniqueCategories.map((item, index) => (\n\n                        <MenuItem\n                          id={validIdHelper(`${item}-${index}`)}\n                          key={validIdHelper(`${item}-${index}`)}\n                          value={item}>{item}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </ApiHighlight>\n              </Grid>\n\n              <Grid item sm={3}>\n\n                <ApiHighlight classes={classes}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant=\"inline\"\n                      format=\"MM/dd/yyyy\"\n                      margin=\"normal\"\n                      id=\"fromDate\"\n                      label=\"From date\"\n                      value={fromDate}\n                      onChange={handleFromDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      minDate={apiContent[apiContent.length - 1][apiContent.inlineQuery.fields[0]]}\n                      maxDate={apiContent[0][apiContent.inlineQuery.fields[0]]}\n                    />\n                  </MuiPickersUtilsProvider>\n                </ApiHighlight>\n              </Grid>\n              <Grid item sm={3}>\n                <ApiHighlight classes={classes}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant=\"inline\"\n                      format=\"MM/dd/yyyy\"\n                      margin=\"normal\"\n                      id=\"toDate\"\n                      label=\"To date\"\n                      value={toDate}\n                      onChange={handleToDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      minDate={fromDate}\n                      maxDate={toDate}\n                    />\n                  </MuiPickersUtilsProvider>\n                </ApiHighlight>\n              </Grid>\n            </>\n            : ''}\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel >\n  )\n}\n\nfunction incrementDate(dateInput, increment) {\n  var dateFormatTotime = new Date(dateInput);\n  var increasedDate = new Date(dateFormatTotime.getTime() + (increment * 86400000));\n  return increasedDate.toISOString().split('T')[0];\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/ReportBuilder/ReportBuilder.js",["281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305"],"import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Box, Grid, Icon, Card, Button } from '@material-ui/core'\nimport { TreeView, TreeItem } from '@material-ui/lab';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport rawSampleCode from '!!raw-loader!./ReportBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport '../../Home.css';\nimport AppContext from '../../../contexts/AppContext';\nimport { Loader, ApiHighlight, EmbedHighlight, CodeFlyout } from \"@pbl-demo/components/Accessories\";\nconst { validIdHelper } = require('../../../tools');\n\n//start of ReportBuilder Component\nexport default function ReportBuilder(props) {\n\n\n  const { clientSession, setPaywallModal, show, codeShow, sdk, corsApiCall, isReady } = useContext(AppContext)\n  const { userProfile, lookerUser, lookerHost } = clientSession;\n\n  const topBarBottomBarHeight = 112;\n  const [iFrameExists, setIFrame] = useState(0);\n  // const [exploreIFrameExists, setExploreIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState([]);\n  const [exploreObj, setExploreObj] = useState({});\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const [expansionPanelHeight, setExpansionPanelHeight] = useState(0);\n\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [qid, setQid] = useState(null);\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type },\n  } = props;\n\n  const demoComponentType = type;\n  const tabContent = [...lookerContent]\n\n  const handleChange = (event, newValue) => {\n    if (newValue == 1 && lookerUser.user_attributes.permission_level != 'premium') {\n      // handleChange(0)\n      setPaywallModal({\n        'show': true,\n        'permissionNeeded': 'explore'\n      });\n    } else {\n      setValue(newValue)\n    }\n  };\n\n  useEffect(() => {\n    if (isReady) {\n      corsApiCall(performLookerApiCalls, [lookerContent, !value])\n    }\n  }, [lookerUser, value, isReady, value]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n    setExpansionPanelHeight($('.MuiExpansionPanel-root:visible').innerHeight() || 0)\n  })\n\n\n  const action = async (contentType, contentId, secondaryAction, qid, exploreId, newReportEmbedContainer) => {\n\n    let iFrameArray = $(\".embedContainer:visible > iframe\")\n\n    let matchingIndex = 0;\n    for (let i = 0; i < iFrameArray.length; i++) {\n      if (iFrameArray[i].classList.contains(contentType) && iFrameArray[i].classList.contains(contentId)) {\n        iFrameArray[i].classList.remove('dNone')\n        matchingIndex = i;\n      } else {\n        iFrameArray[i].classList.add('dNone')\n      }\n    }\n\n    if (secondaryAction === 'edit' || secondaryAction === 'explore') {\n      //save qid to state and use in perform looker api calls\n      setQid(qid);\n      handleChange('edit', 1)\n    } else if (secondaryAction === 'delete') {\n      //remove iframe associated with content that was deleted\n      let indexOfDeletedContent;\n      for (let i = 0; i < iFrameArray.length; i++) {\n        if (iFrameArray[i].classList.contains(contentId)) {\n          indexOfDeletedContent = i;\n        }\n      }\n      let updatedIFrameArray = iFrameArray.slice()\n      updatedIFrameArray.splice(indexOfDeletedContent, 1)\n      for (let i = 0; i < updatedIFrameArray.length; i++) {\n        if (i === 0) {\n          updatedIFrameArray[i].classList.remove('dNone')\n          matchingIndex = i;\n        } else {\n          updatedIFrameArray[i].classList.add('dNone')\n        }\n      }\n      //append updated array\n      $(`#embedContainer-reportbuilder-14`).empty();\n      $(`#embedContainer-reportbuilder-14`).html(updatedIFrameArray);\n\n      let lookerResponse = await sdk.ok(sdk.delete_look(contentId));\n      corsApiCall(performLookerApiCalls, [lookerContent, 1])\n    }\n  }\n\n  const performLookerApiCalls = function (lookerContent, animateLoad) {\n    if (animateLoad) {\n      handleChange('refresh', 0)\n      setIFrame(0)\n      setApiContent([])\n    }\n\n    lookerContent.map(async lookerContent => {\n      if (value === 0 &&\n        lookerContent.type === 'folder') {\n\n        const sharedFolder = await sdk.ok(sdk.folder(lookerContent.id));\n        const embedUser = await sdk.ok(sdk.me())\n\n        for (let h = 0; h < sharedFolder.looks.length; h++) {\n          let look = await sdk.ok(sdk.look(sharedFolder.looks[h].id))\n          let clientId = look.query.client_id;\n          sharedFolder.looks[h].client_id = clientId;\n        }\n\n        let embeddedUserFolder = {}\n        if (lookerUser.user_attributes.permission_level === 'premium') {\n          let embedUserLooks = await sdk.ok(sdk.search_looks({ user_id: embedUser.id }))\n          if (embedUserLooks && embedUserLooks.length) {\n            let embedUserFolderId = embedUserLooks[0].folder_id || null;\n            embeddedUserFolder = await sdk.ok(sdk.folder(embedUserFolderId));\n            for (let i = 0; i < embeddedUserFolder.looks.length; i++) {\n              let look = await sdk.ok(sdk.look(embeddedUserFolder.looks[i].id));\n              let clientId = look.query.client_id;\n              embeddedUserFolder.looks[i].client_id = clientId;\n            }\n          }\n        }\n\n        let lookerResponseData = {\n          sharedFolder,\n          embeddedUserFolder\n        }\n\n        // console.log('lookerResponseData', lookerResponseData)\n\n        let looksToUse = [...lookerResponseData.sharedFolder.looks];\n        if (lookerUser.user_attributes.permission_level === 'premium' &&\n          Object.keys(lookerResponseData.embeddedUserFolder).length) {\n          looksToUse = [\n            ...looksToUse, ...lookerResponseData.embeddedUserFolder.looks\n          ]\n\n        }\n        let dashboardsToUse = [...lookerResponseData.sharedFolder.dashboards]\n        let objToUse = {\n          looks: looksToUse,\n          dashboards: dashboardsToUse\n        }\n        // console.log('objToUse', objToUse)\n        let iFrameArray = $(`.embedContainer.${validIdHelper(demoComponentType)} > iframe`);\n        if (objToUse.looks.length) {\n          objToUse.looks.map((item, index) => {\n\n            let lookId = item.id;\n            let lookIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('look') && iFrameArray[i].classList.contains(lookId)) {\n                lookIsRendered = true;\n              }\n            }\n\n            if (!lookIsRendered) {\n              LookerEmbedSDK.createLookWithId(lookId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('look')\n                .withClassName(lookerResponseData.sharedFolder.looks.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName(index > 0 ? 'dNone' : 'oops')\n                .withClassName(lookId)\n                .build()\n                .connect()\n                .then((look) => {\n                  let modifiedBaseUrl = clientSession.lookerBaseUrl.substring(0, clientSession.lookerBaseUrl.lastIndexOf(\":\"));\n                  LookerEmbedSDK.init(modifiedBaseUrl)\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n            if (index === objToUse.looks.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n\n        if (objToUse.dashboards.length) {\n          objToUse.dashboards.map((item, index) => {\n            let dashboardId = item.id\n            let dashboardIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('dashboard') && iFrameArray[i].classList.contains(dashboardId)) {\n                dashboardIsRendered = true;\n              }\n            }\n            if (!dashboardIsRendered) {\n              LookerEmbedSDK.createDashboardWithId(dashboardId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('dashboard')\n                .withClassName(lookerResponseData.sharedFolder.dashboards.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName('dNone')\n                .withClassName(dashboardId)\n                .build()\n                .connect()\n                .then((dashboard) => {\n                  setTimeout(() => {\n                    // setIFrame(1)\n                  }, 1000)\n                  let modifiedBaseUrl = clientSession.lookerBaseUrl.substring(0, clientSession.lookerBaseUrl.lastIndexOf(\":\"));\n                  LookerEmbedSDK.init(modifiedBaseUrl)\n\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n\n            if (index === objToUse.dashboards.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n        setApiContent(objToUse)\n      } else if (lookerContent.type === 'explore' &&\n        lookerUser.user_attributes.permission_level === 'premium' &&\n        value === 1) {\n        // console.log('inside else ifff')\n        let exploreId = lookerContent.id;\n        // console.log('exploreId', exploreId)\n        $(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`)).html('');\n        //separate logic for embedding explore with qid vs. no qid\n        if (qid) {\n          // console.log('qid ifff')\n          LookerEmbedSDK.createExploreWithId(exploreId)\n            .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n            .withClassName('exploreIframe')\n            .withParams({\n              qid: qid\n            })\n            .on('explore:state:changed', (event) => {\n            })\n            .build()\n            .connect()\n            .then((explore) => {\n              console.log('explore', explore)\n              // setTimeout(() => {\n              setIFrame(1)\n              setExploreObj(explore)\n              // }, 1000)\n\n              let modifiedBaseUrl = clientSession.lookerBaseUrl.substring(0, clientSession.lookerBaseUrl.lastIndexOf(\":\"));\n              LookerEmbedSDK.init(modifiedBaseUrl)\n\n              setQid(null)\n            })\n            .catch((error) => {\n              console.error('Connection error', error)\n            })\n        } else {\n          // console.log('qid else')\n          LookerEmbedSDK.createExploreWithId(exploreId)\n            .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n            .withClassName('exploreIframe')\n            .on('explore:state:changed', (event) => {\n            })\n            .build()\n            .connect()\n            .then((explore) => {\n              // console.log('explore', explore)\n              // setTimeout(() => {\n              setIFrame(1)\n              setExploreObj(explore)\n              // }, 1000)\n              let modifiedBaseUrl = clientSession.lookerBaseUrl.substring(0, clientSession.lookerBaseUrl.lastIndexOf(\":\"));\n              LookerEmbedSDK.init(modifiedBaseUrl)\n\n              // setQid(null)\n            })\n            .catch((error) => {\n              console.error('Connection error', error)\n            })\n        }\n      }\n      // else console.log('ellse')\n    })\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`\n      ${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowYScroll}`\n      }\n      >\n        <Grid container\n          key={validIdHelper(type)} >\n          <div className={classes.root}>\n            {iFrameExists ? '' :\n\n              <Loader classes={classes}\n                height={height}\n                expansionPanelHeight={expansionPanelHeight} />\n            }\n\n            {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\n            <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n              <AppBar position=\"static\" elevation={0}>\n                <Tabs\n                  className={classes.tabs}\n                  value={value}\n                  onChange={handleChange}\n                  aria-label=\"simple tabs example\">\n                  {tabContent.map((item, index) => (\n                    <Tab\n                      key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                      label={index == 1 ?\n                        <div>\n\n                          {lookerUser.user_attributes.permission_level != 'premium' ?\n                            <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} /> : <Icon className={`fa fa-plus ${classes.faSm} ${classes.mr12}`} />}\n                          {item.label}\n                        </div> :\n                        item.label}\n                      className={value === 1 && index === 1 ? `${classes.hidden}` : index == 1 ? `${classes.mlAuto}` : ``}\n                      style={index === 1 ? {\n                        backgroundColor: '#5896E6',\n                        borderRadius: '4px',\n                        color: '#fff',\n                        opacity: '1.0'\n                      } : {}}\n                      {...a11yProps(index)} />\n                  ))}\n                </Tabs>\n              </AppBar>\n              <Box className=\"tabPanelContainer\">\n                <Grid container\n                  spacing={3}\n                  className={`${classes.noContainerScroll}`}>\n                  {codeShow ?\n                    <Grid item sm={6}\n                      className={`${classes.positionFixedTopRight}`}\n                    >\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerUser={lookerUser}\n                        height={height}\n                      />\n                    </Grid> : ''}\n                  {tabContent.map((tabContentItem, tabContentItemIndex) => (\n                    <TabPanel\n                      key={`${validIdHelper(demoComponentType + '-tabPanel-' + tabContentItemIndex)}`}\n                      value={value}\n                      index={tabContentItemIndex}\n                      style={{ width: '100%' }} //weird\n                    >\n                      <Grid container>\n                        {\n                          tabContentItemIndex === 0\n                            ?\n                            <React.Fragment\n                              key={`${validIdHelper(demoComponentType + '-outerFragment-' + tabContentItemIndex)}`}>\n                              <Grid item sm={4} >\n                                <ApiHighlight height={500} classes={classes}>\n                                  <TreeSideBar {...{\n                                    setPaywallModal,\n                                    classes,\n                                    demoComponentType,\n                                    tabContent,\n                                    tabContentItemIndex,\n                                    action,\n                                    apiContent,\n                                    ...props\n                                  }}\n                                  />\n                                </ApiHighlight>\n                              </Grid>\n                              <Grid item sm={8} >\n                                <EmbedHighlight classes={classes}>\n                                  <div\n                                    className={`embedContainer ${validIdHelper(demoComponentType)}`}\n                                    id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                    key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                  >\n                                  </div>\n                                </EmbedHighlight>\n                              </Grid>\n                            </React.Fragment>\n                            :\n                            <Grid item sm={12} >\n                              {/* couldn't get this to work */}\n                              {/* {Object.keys(exploreObj).length ?\n                                <EmbedHighlight classes={classes}>\n                                  <div\n                                    className=\"embedContainer\"\n                                    id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                    key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                  >\n                                  </div>\n                                </EmbedHighlight> :\n                                <Card className={`${classes.card} ${classes.flexCentered}`}\n                                  elevation={0}\n                                  mt={2}\n                                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                                  <CircularProgress className={classes.circularProgress} />\n                                </Card>} */}\n                              <EmbedHighlight classes={classes}>\n                                <div\n                                  className=\"embedContainer\"\n                                  id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                  key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                >\n                                </div>\n                              </EmbedHighlight>\n                            </Grid>\n                        }\n                      </Grid>\n                    </TabPanel>\n                  ))}</Grid>\n              </Box>\n            </Box >\n          </div>\n        </Grid >\n      </Card>\n    </div >\n  )\n}\n\n\nfunction TreeSideBar(props) {\n\n\n  const { clientSession, setPaywallModal, show, codeShow, sdk, corsApiCall } = useContext(AppContext)\n  const { userProfile, lookerUser, lookerHost } = clientSession\n\n  const { staticContent, staticContent: { lookerContent }, classes, demoComponentType, tabContent, tabContentItemIndex, action, apiContent,\n    //lookerUser, setPaywallModal\n  } = props\n  const sharedFolderId = lookerContent[0].type === 'folder' ? lookerContent[0].id : '';\n  let treeCounter = 0;\n  const [selected, setSelected] = useState(2);\n  const expandedArr = Object.keys(apiContent).length ? [\"1\", \"\" + (2 + apiContent[Object.keys(apiContent)[0]].length)] : [];\n  const [expanded, setExpanded] = useState(expandedArr);\n\n  const handleToggle = (event, nodeIds) => {\n    setExpanded(nodeIds);\n  }\n\n  const handleSelect = (event, nodeIds) => {\n    setSelected(nodeIds);\n  };\n\n\n  useEffect(() => {\n    setExpanded(expandedArr);\n    if (selected !== 2) setSelected(2)\n    // let innerTreeItemArray = $(\".innerTreeItem\");\n    // console.log('innerTreeItemArray', innerTreeItemArray)\n    // for (let i = 0; i < innerTreeItemArray.length; i++) {\n    //   console.log('inside forrr', i)\n    //   if (innerTreeItemArray[i].classList.contains('Mui-selected')) {\n    //     console.log('inside iffff')\n    //     innerTreeItemArray[i].classList.remove('Mui-selected')\n    //   } else console.log('elllse')\n    // }\n  }, [apiContent]);\n\n\n  return (\n    <TreeView\n      className={classes.tree}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n      expanded={expanded}\n      onNodeToggle={handleToggle}\n      onNodeSelect={handleSelect}\n    // multiSelect={false}\n    >\n      {apiContent ? Object.keys(apiContent).map((key, outerIndex) => (\n        <React.Fragment\n          key={`${validIdHelper(demoComponentType + '-innerFragment-' + outerIndex)}`}>\n          <TreeItem\n            key={`${validIdHelper(demoComponentType + '-outerTreeItem-' + outerIndex)}`}\n            nodeId={\"\" + (treeCounter += 1)}\n            // treecounter={treeCounter}\n            label={_.capitalize(key)}\n            icon={<Icon className={`fa fa-folder ${classes.icon}`} />}\n            disabled={apiContent[key].length ? false : true}\n          >\n            {\n              apiContent[key].length ?\n                apiContent[key].map((item, index) => (\n                  <TreeItem\n                    key={`${validIdHelper(demoComponentType + '-innerTreeItem-' + treeCounter)}`}\n                    nodeId={\"\" + (treeCounter += 1)}\n                    treecounter={treeCounter}\n                    selected={selected === treeCounter}\n                    className={selected === treeCounter ? `Mui-selected innerTreeItem ${classes.whiteSpaceNoWrap}` : `innerTreeItem ${classes.whiteSpaceNoWrap}`}\n                    contentid={item.id}\n                    label={item.folder_id === sharedFolderId &&\n                      key === 'looks' ?\n                      <div\n                        id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}\n                      >\n                        {/* {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title} */}\n                        <Grid container>\n                          <Grid item sm={8} className={`${classes.overflowHidden}`}>\n                            {item.title}</Grid>\n                          <Grid item sm={4}>\n                            <Button\n                              id={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                              key={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                              size=\"small\"\n                              className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                              onClick={(event) => {\n                                if (lookerUser.user_attributes.permission_level === 'premium') {\n                                  action(\n                                    key.substring(0, key.length - 1),\n                                    item.id,\n                                    'explore',\n                                    item.client_id,\n                                    tabContent[tabContentItemIndex + 1].id,\n                                    validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                  );\n                                  event.stopPropagation();\n                                } else {\n                                  // setPaywallModal();\n\n                                  setPaywallModal({\n                                    'show': true,\n                                    'permissionNeeded': 'explore'\n                                  });\n                                }\n                              }\n                              }\n                              color=\"default\"\n                            >\n                              {lookerUser.user_attributes.permission_level === 'premium' ? 'Explore' : <div> <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} />Explore</div>}\n                            </Button>\n                          </Grid>\n                        </Grid>\n\n\n                      </div>\n                      : key === 'looks' ?\n                        <div\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\n                          <Grid container>\n                            <Grid item sm={6} className={`${classes.overflowHidden}`}>\n                              {/* {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title} */}\n                              {item.title}\n                            </Grid>\n                            <Grid item sm={6}>\n                              <Button\n                                id={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                                key={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                                size=\"small\"\n                                className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                                onClick={(event) => {\n                                  if (lookerUser.user_attributes.permission_level === 'premium') {\n                                    // setSelected(treeCounter);\n                                    action(\n                                      key.substring(0, key.length - 1),\n                                      item.id,\n                                      'edit',\n                                      item.client_id,\n                                      tabContent[tabContentItemIndex + 1].id,\n                                      validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                    );\n                                    event.stopPropagation();\n                                  } else {\n                                    // setPaywallModal();\n\n                                    setPaywallModal({\n                                      'show': true,\n                                      'permissionNeeded': 'explore'\n                                    });\n                                  }\n                                }\n                                }\n                                color=\"primary\"\n                              >\n                                Edit\n                                                                                            </Button>\n                              <Button\n                                id={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                                key={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                                size=\"small\"\n                                className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                                onClick={(event) => {\n                                  if (lookerUser.user_attributes.permission_level === 'premium') {\n                                    // setSelected(treeCounter);\n                                    action(\n                                      key.substring(0, key.length - 1),\n                                      item.id,\n                                      'delete',\n                                      item.client_id,\n                                      tabContent[tabContentItemIndex + 1].id,\n                                      validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                    );\n                                    event.stopPropagation();\n                                  } else {\n                                    // setPaywallModal();\n\n                                    setPaywallModal({\n                                      'show': true,\n                                      'permissionNeeded': 'explore'\n                                    });\n                                  }\n                                }\n                                }\n                                color=\"secondary\"\n                              >\n                                Delete\n                                                                                            </Button>\n                            </Grid>\n                          </Grid>\n\n                        </div>\n                        : <Grid container><Grid item sm={12}>{item.title}</Grid></Grid>\n                    }\n                    onClick={() => {\n                      // setSelected(treeCounter)\n                      action(\n                        key.substring(0, key.length - 1), item.id)\n                    }} />\n\n                ))\n                :\n                ''\n            }\n          </TreeItem>\n\n        </React.Fragment>\n      )) : ''}\n    </TreeView>\n  )\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/styles.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/MonetizationModal/styles.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/QueryBuilder/helpers.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/QueryBuilder/styles.js",["306","307","308","309"],"import { makeStyles } from '@material-ui/core/styles';\nimport { grey, orange } from '@material-ui/core/colors';\n\nconst greyPrimary = grey[400];\nconst greySecondary = grey[100];\nconst orangePrimary = orange[400];\nconst orangeSecondary = orange[100];\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: '8px'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  // table: {\n  //   minWidth: 650,\n  // },\n  // tableContainer: {\n  //   maxHeight: 650,\n  // },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 400\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  bluePrimary: {\n    backgroundColor: 'rgba(69, 149, 236, 1)'\n  },\n  blueSecondary: {\n    backgroundColor: 'rgba(69, 149, 236, .5)',\n  },\n  orangePrimary: {\n    backgroundColor: 'rgba(243, 167, 89, 1)'\n  },\n  orangeSecondary: {\n    backgroundColor: 'rgba(243, 167, 89, .5)'\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  bottomBarSpacer: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  maxHeight600: {\n    maxHeight: 600,\n    overflow: 'scroll'\n  },\n  padding30: {\n    padding: 30\n  },\n  m12: {\n    margin: 12\n  },\n  m6: {\n    margin: 6\n  },\n  height100Percent: {\n    height: '100%',\n    overflow: 'scroll'\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  padding10: {\n    padding: 10\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowYScroll: {\n    overflowY: 'scroll',\n    overflowX: 'hidden'\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  }\n}));","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/styles.js",["310","311","312","313"],"import { makeStyles } from '@material-ui/core/styles';\nimport { red, green } from '@material-ui/core/colors';\nconst redPrimary = red[500];\nconst greenPrimary = green[500];\nconst redDark = red[900];\nconst greenDark = green[900];\nconst redLight = red[100];\nconst greenLight = green[100];\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: 8\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n  },\n  maxHeight200: {\n    maxHeight: 200,\n    height: 200,\n    overflow: 'hidden'\n  },\n  mt30: {\n    marginTop: 30\n  },\n  mb30: {\n    marginBottom: 30\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  cursorPointer: {\n    cursor: 'pointer'\n  },\n  border: {\n    border: '1px solid black'\n  },\n  height800: {\n    height: 800\n  },\n  maxHeight100: {\n    maxHeight: 100,\n    height: 100,\n  },\n  maxHeight400: {\n    maxHeight: 400,\n    height: 400,\n  },\n  minHeight200: {\n    minHeight: 200,\n    overflow: 'scroll'\n  },\n  redNeg: {\n    backgroundColor: redLight,\n    color: redPrimary,\n    fontWeight: 800\n  },\n  greenPos: {\n    backgroundColor: greenLight,\n    color: greenPrimary,\n    fontWeight: 800\n  },\n  padding30: {\n    padding: 30\n  },\n  mb12: {\n    marginBottom: 12\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  overflowVisible: {\n    overflow: 'visible'\n  },\n  maxHeight150: {\n    maxHeight: 150,\n    height: 150,\n  },\n  minHeight150: {\n    minHeight: 150,\n    overflow: 'scroll'\n  },\n  carouselLegend: {\n    backgroundColor: 'rgb(192,192,192, .5)\t !important',\n    textAlign: 'center !important',\n    opacity: `100 !important`,\n    fontWeight: 800,\n    // width: `${25}% !important`,\n  },\n  carouselLegendTitle: {\n    fontSize: '24px !important',\n\n  },\n  carouselLegendBody: {\n    fontSize: '16px !important',\n\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  padding15: {\n    padding: 15\n  },\n  maxHeight75: {\n    maxHeight: 75,\n    height: 75,\n  },\n  overflowYScroll: {\n    overflowY: 'scroll',\n    overflowX: 'hidden'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  height100Percent: {\n    height: '100%'\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  },\n  lookerCardShadow: {\n    border: 'none',\n    borderRadius: '6px',\n    boxShadow: 'rgba(0, 0, 0, 0.11) 0px 2px 12px, rgba(0, 0, 0, 0.04) 0px 1px 4px'\n  },\n  maxHeight60: {\n    maxHeight: 60,\n    height: 60,\n  },\n  maxHeight350: {\n    maxHeight: 350,\n    height: 350,\n  },\n  maxHeight80Percent: {\n    maxHeight: '80%',\n    height: '80%'\n  }\n}));","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/ReportBuilder/helpers.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/ReportBuilder/styles.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/CustomVis/styles.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/BottomBar.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/UserMenu.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/EmbeddedDashboardContainer.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/FilterBar.js",["314","315","316","317","318"],"import _ from 'lodash'\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Grid, Accordion, AccordionSummary, AccordionDetails, Box } from '@material-ui/core'\nimport { ExpandMore, FilterList, VerticalSplit, HorizontalSplit, ChevronLeft, Menu } from '@material-ui/icons';\nimport { Skeleton } from '@material-ui/lab'\nimport FilterBarChildren from './FilterBarChildren'\n\nconst { validIdHelper } = require('../../../tools');\n\nexport default function FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\n    apiContent, customFilterAction, tileToggleValue, handleTileToggle, visColorToggleValue,\n    handleVisColorToggle, lightThemeToggleValue, fontThemeSelectValue, handleThemeChange,\n    horizontalLayout, setHorizontalLayout, drawerOpen, setDrawerOpen\n  } = props;\n\n\n  const [expanded, setExpanded] = useState(true);\n\n  useEffect(() => {\n    if (!expanded) setExpanded(true)\n  }, [horizontalLayout])\n\n\n  return (\n    <Grid item\n      sm={horizontalLayout ? 12 : drawerOpen ? 3 : 'auto'}\n      key={validIdHelper(`${type}-FilterBar-${lookerContent[0].id}`)}>\n      {apiContent ?\n        <Accordion\n          onChange={horizontalLayout ? () => setExpanded(!expanded) : () => { }}\n          expanded={expanded}\n          className={`${classes.w100} MuiExpansionPanel-root`}\n          elevation={0}\n        >\n          <AccordionSummary\n            expandIcon={horizontalLayout ? <ExpandMore /> : \"\"}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            {horizontalLayout ?\n              <VerticalSplit\n                onClick={(e) => {\n                  setHorizontalLayout(!horizontalLayout)\n                }}\n                aria-label=\"vertical view\"\n              />\n              :\n              <>\n                {drawerOpen ?\n                  <>\n                    <ChevronLeft\n                      onClick={() => setDrawerOpen(!drawerOpen)}\n                      aria-label=\"close menu\"\n                    />\n                    <HorizontalSplit\n                      onClick={(e) => {\n                        setExpanded(true)\n                        setHorizontalLayout(!horizontalLayout)\n                      }}\n                      aria-label=\"horizontal view\" />\n                  </> :\n                  <Menu\n                    onClick={() => setDrawerOpen(!drawerOpen)}\n                    aria-label=\"open menu\"\n                  />}\n              </>}\n\n          </AccordionSummary>\n          <Box display={drawerOpen ? \"block\" : \"none\"}>\n            <AccordionDetails >\n              <FilterBarChildren {...props}\n                classes={classes}\n                apiContent={apiContent}\n                customFilterAction={customFilterAction}\n                tileToggleValue={tileToggleValue}\n                handleTileToggle={handleTileToggle}\n                visColorToggleValue={visColorToggleValue}\n                handleVisColorToggle={handleVisColorToggle}\n                lightThemeToggleValue={lightThemeToggleValue}\n                fontThemeSelectValue={fontThemeSelectValue}\n                handleThemeChange={handleThemeChange}\n                horizontalLayout={horizontalLayout}\n                setHorizontalLayout={setHorizontalLayout}\n                lookerContent={lookerContent}\n                type={type}\n              />\n            </AccordionDetails>\n          </Box>\n\n        </Accordion >\n        :\n        <Skeleton variant=\"rect\" animation=\"wave\" className={classes.skeleton} />}\n    </Grid>\n  )\n}\n\n\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Material/ModalTable.js",["319","320","321"],"import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst { validIdHelper, prettifyString } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 800,\n    maxHeight: 450,\n    overflow: 'scroll',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  table: {\n    maxHeight: 310\n  },\n  card: {\n    minWidth: 275,\n    minHeight: '10rem',\n    boxShadow: 'none'\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\nfunction getModalStyle() {\n  const top = 10 //+ rand();\n  const left = 50 //+ rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${left}%, -${top}%)`,\n  };\n}\n\nexport default function ModalTable(props) {\n  // console.log('ModalTable')\n  // console.log('props', props)\n\n  const classes = useStyles();\n  const { open, onClose, modalContent } = props;\n  const [modalStyle] = React.useState(getModalStyle);\n\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n\n      <div style={modalStyle} className={classes.paper}>\n        <h2 id=\"simple-modal-title\">{modalContent.title}</h2>\n        {modalContent.body ?\n          <TableContainer component={Paper} className={classes.table}>\n            <Table stickyHeader className={classes.table} size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  {Object.keys(modalContent.body[0]).map((key, index) => (\n                    <TableCell align=\"right\"\n                      key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n                      id={validIdHelper(key + '-TableHead-TableCell-' + index)}>\n                      {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}</TableCell>\n\n\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {modalContent.body.map((item, index) => (\n\n                  <TableRow\n                    key={validIdHelper('TableRow-' + index)}\n                    id={validIdHelper('TableRow-' + index)} >\n                    {\n                      Object.keys(item).map(key => (\n                        <TableCell align=\"right\"\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}>\n                          {\n                            modalContent.body[index][key] ?\n                              modalContent.body[index][key].rendered ?\n                                modalContent.body[index][key].rendered :\n                                modalContent.body[index][key].value ?\n                                  modalContent.body[index][key].value :\n                                  typeof modalContent.body[index][key] === 'number' ?\n                                    (Math.round(modalContent.body[index][key] * 100) / 100)//.toLocaleString()\n                                    :\n                                    modalContent.body[index][key] //.toLocaleString() \n                              :\n                              ''\n                          }\n                        </TableCell>\n                      ))\n                    }\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer >\n          :\n\n          <Card className={`${classes.card} ${classes.flexCentered}`}>\n            <CircularProgress className={classes.circularProgress} />\n          </Card>}\n\n      </div >\n    </Modal >\n  )\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/FilterBarChildren.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/config/theme.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/index.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/config/index.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/InventoryOverviewContent.js",["322","323","324"],"import Dashboard from '../../components/Demo/Dashboard/Dashboard'\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\nconst productNameFilter = {\n  \"label\": \"Select Product Name\",\n  \"filterName\": \"Product Name\",\n  \"lookerMethod\": \"runInlineQuery\",\n  \"inlineQuery\": {\n    \"model\": \"atom_fashion\",\n    \"view\": \"order_items\",\n    \"fields\": [\n      \"products.item_name\"\n    ],\n    \"query_timezone\": \"America/Los_Angeles\"\n  },\n  \"desiredFilterNames\": \"products.brand\",\n  \"component\": \"autocomplete\",\n  \"resultFormat\": \"json\"\n}\n\nconst tilesFilter = {\n  \"label\": \"Dynamic Tiles\",\n  \"options\": [\n    \"Inventory\",\n    \"Orders\"\n  ],\n  \"value\": \"tileToggleValue\",\n  \"component\": \"togglebutton\",\n  \"tileLookUp\": {\n    \"Inventory\": [\n      \"Inventory On Hand\",\n      \"# of Items on Hand\",\n      \"Most Popular Out of Stock Items\",\n      \"Overstocked Items\",\n      \"Aging Inventory\"\n    ],\n    \"Orders\": [\n      \"# Orders Processing\",\n      \"Total Amount Processing\",\n      \"# Orders In Transit\",\n      \"Order Shipment Status\",\n      \"Open Orders to be Shipped\"\n    ]\n  }\n}\n\nconst visConfigFilter = {\n  \"label\": \"Dynamic Vis Config\",\n  \"options\": [\n    \"#2d4266\",\n    \"#43606b\",\n    \"#414c67\"\n  ],\n  \"value\": \"visColorToggleValue\",\n  \"component\": \"togglebutton\",\n  \"colors\": {\n    \"#2d4266\": [\n      \"#2d4266\",\n      \"#416098\",\n      \"#5780cd\",\n      \"#6391e8\"\n    ],\n    \"#43606b\": [\n      \"#43606b\",\n      \"#4a7880\",\n      \"#66a99d\",\n      \"#a3d9a9\"\n    ],\n    \"#414c67\": [\n      \"#414c67\",\n      \"#64689b\",\n      \"#9682cd\",\n      \"#b48ee4\"\n    ]\n  },\n  \"series_cell_visualizations\": {\n    \"#2d4266\": {\n      \"palette_id\": \"a3425339-dbbb-2584-0e23-38ed7d87ed50\",\n      \"collection_id\": \"b43731d5-dc87-4a8e-b807-635bef3948e7\",\n      \"custom_colors\": [\n        \"#6391e8\",\n        \"#2d4266\"\n      ]\n    },\n    \"#43606b\": {\n      \"palette_id\": \"c5182d25-00a3-cd71-eed3-4056299dd78f\",\n      \"collection_id\": \"atom-fashion\",\n      \"custom_colors\": [\n        \"#a3d9a9\",\n        \"#43606b\"\n      ]\n    },\n    \"#414c67\": {\n      \"palette_id\": \"7e059aa1-0d23-dab1-dbf9-a751ab7f54fb\",\n      \"collection_id\": \"b43731d5-dc87-4a8e-b807-635bef3948e7\",\n      \"custom_colors\": [\n        \"#b48ee4\",\n        \"#414c67\"\n      ]\n    }\n  }\n}\n\nconst themeColorFilter = {\n  \"label\": \"Light or dark theme\",\n  \"component\": \"switch\"\n}\n\nconst themeFontFilter = {\n  \"label\": \"Change font\",\n  \"component\": \"select\",\n  \"options\": [\"Arial\", \"Roboto\", \"Vollkorn\"]\n}\n\nexport const InventoryOverivewContent = {\n  \"type\": \"custom filter\",\n  \"label\": \"Inventory Overview\", //old\n  \"menuLabel\": \"Inventory Overview\", //new\n  \"menuCategory\": \"operations\",\n  \"icon\": TableChartOutlinedIcon,\n  \"component\": Dashboard,\n  \"lookerContent\": [\n    {\n      \"type\": \"dashboard\",\n      \"lookerMethod\": \"embedDashboard\",\n      \"id\": \"1\",\n      \"isNext\": false,\n      \"label\": \"Inventory Overview\",\n      \"filters\": [productNameFilter, tilesFilter, visConfigFilter, themeColorFilter, themeFontFilter]\n    }]\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/SplashPageContent.js",["325","326","327","328","329","330"],"import SplashPage from '../../components/Demo/SplashPage/SplashPage';\nimport HomeIcon from '@material-ui/icons/Home'; //already declared\n\nconst bestWorstAnalysis = {\n  \"id\": \"19\",\n  \"gridWidth\": 12,\n  \"height\": 160,\n  \"type\": \"welcome\",\n  \"inlineQueries\": [\n    {\n      \"model\": \"atom_fashion\",\n      \"view\": \"order_items\",\n      \"fields\": [\n        \"order_items.total_sale_price\",\n        \"order_items.created_week\",\n        \"products.category\"\n      ],\n      \"pivots\": [\n        \"order_items.created_week\"\n      ],\n      \"fill_fields\": [\n        \"order_items.created_week\"\n      ],\n      \"filters\": {\n        \"order_items.created_date\": \"2 weeks ago for 2 weeks\"\n      },\n      \"filter_expression\": null,\n      \"sorts\": [\n        \"order_items.total_sale_price desc 1\",\n        \"order_items.created_week 0\"\n      ],\n      \"limit\": \"1\",\n      \"dynamic_fields\": \"[{\\\"table_calculation\\\":\\\"change\\\",\\\"label\\\":\\\"%25 Change\\\",\\\"expression\\\":\\\"(pivot_index(${order_items.total_sale_price},2)-pivot_index(${order_items.total_sale_price},1))/pivot_index(${order_items.total_sale_price},1\\\\n  )\\\",\\\"value_format\\\":null,\\\"value_format_name\\\":\\\"percent_2\\\",\\\"_kind_hint\\\":\\\"supermeasure\\\",\\\"_type_hint\\\":\\\"number\\\"}]\"\n    },\n    {\n      \"model\": \"atom_fashion\",\n      \"view\": \"order_items\",\n      \"fields\": [\n        \"order_items.total_sale_price\",\n        \"order_items.created_week\",\n        \"products.category\"\n      ],\n      \"pivots\": [\n        \"order_items.created_week\"\n      ],\n      \"fill_fields\": [\n        \"order_items.created_week\"\n      ],\n      \"filters\": {\n        \"order_items.created_date\": \"2 weeks ago for 2 weeks\"\n      },\n      \"filter_expression\": null,\n      \"sorts\": [\n        \"order_items.total_sale_price 1\",\n        \"order_items.created_week 0\"\n      ],\n      \"limit\": \"1\",\n      \"dynamic_fields\": \"[{\\\"table_calculation\\\":\\\"change\\\",\\\"label\\\":\\\"%25 Change\\\",\\\"expression\\\":\\\"(pivot_index(${order_items.total_sale_price},2)-pivot_index(${order_items.total_sale_price},1))/pivot_index(${order_items.total_sale_price},1\\\\n  )\\\",\\\"value_format\\\":null,\\\"value_format_name\\\":\\\"percent_2\\\",\\\"_kind_hint\\\":\\\"supermeasure\\\",\\\"_type_hint\\\":\\\"number\\\"}]\"\n    }\n  ],\n  \"inlineQueriesMap\": [\n    \"best\",\n    \"worst\"\n  ],\n  \"resultFormat\": \"json\"\n}\nconst revenueByWeek =\n{\n  \"id\": \"18\",\n  \"gridWidth\": 3,\n  \"type\": \"single value\",\n  \"height\": 120,\n  \"inlineQuery\": {\n    \"model\": \"atom_fashion\",\n    \"view\": \"order_items\",\n    \"fields\": [\n      \"order_items.created_week\",\n      \"order_items.total_gross_margin\"\n    ],\n    \"fill_fields\": [\n      \"order_items.created_week\"\n    ],\n    \"filters\": {\n      \"order_items.created_date\": \"12 weeks ago for 12 weeks\"\n    },\n    \"sorts\": [\n      \"order_items.created_week desc\"\n    ],\n    \"limit\": \"500\",\n    \"dynamic_fields\": \"[{\\\"table_calculation\\\":\\\"change\\\",\\\"label\\\":\\\"Week over Week %25 Change\\\",\\\"expression\\\":\\\"(${order_items.total_gross_margin}-offset(${order_items.total_gross_margin},1))/offset(${order_items.total_gross_margin},1)\\\",\\\"value_format\\\":null,\\\"value_format_name\\\":\\\"percent_2\\\",\\\"_kind_hint\\\":\\\"measure\\\",\\\"_type_hint\\\":\\\"number\\\"}]\"\n  },\n  \"resultFormat\": \"json\",\n  \"label\": \"Revenue by Week\",\n  \"visColor\": \"#4595EC\",\n  \"chipFormat\": \"revenue\"\n}\n\nconst visitsByWeek =\n{\n  \"id\": \"20\",\n  \"gridWidth\": 3,\n  \"type\": \"single value\",\n  \"height\": 120,\n  \"inlineQuery\": {\n    \"model\": \"atom_fashion\",\n    \"view\": \"web_events\",\n    \"fields\": [\n      \"events.event_week\",\n      \"events.sessions_count\"\n    ],\n    \"fill_fields\": [\n      \"events.event_week\"\n    ],\n    \"filters\": {\n      \"events.event_date\": \"12 weeks ago for 12 weeks\"\n    },\n    \"sorts\": [\n      \"events.event_week desc\"\n    ],\n    \"limit\": \"500\",\n    \"dynamic_fields\": \"[{\\\"table_calculation\\\":\\\"change\\\",\\\"label\\\":\\\"%25 Change\\\",\\\"expression\\\":\\\"(${events.sessions_count}-offset(${events.sessions_count},1))/offset(${events.sessions_count},1)\\\",\\\"value_format\\\":null,\\\"value_format_name\\\":\\\"percent_2\\\",\\\"_kind_hint\\\":\\\"measure\\\",\\\"_type_hint\\\":\\\"number\\\"}]\"\n  },\n  \"resultFormat\": \"json\",\n  \"label\": \"Visits by Week\",\n  \"visColor\": \"#F3A759\",\n  \"chipFormat\": \"integer\"\n}\n\nconst bounceRateByWeek =\n{\n  \"id\": \"21\",\n  \"gridWidth\": 3,\n  \"type\": \"single value\",\n  \"height\": 120,\n  \"inlineQuery\": {\n    \"model\": \"atom_fashion\",\n    \"view\": \"web_events\",\n    \"fields\": [\n      \"events.event_week\",\n      \"events.bounce_rate\"\n    ],\n    \"fill_fields\": [\n      \"events.event_week\"\n    ],\n    \"filters\": {\n      \"events.event_date\": \"12 weeks ago for 12 weeks\"\n    },\n    \"filter_expression\": null,\n    \"sorts\": [\n      \"events.event_week desc\"\n    ],\n    \"limit\": \"500\",\n    \"dynamic_fields\": \"[{\\\"table_calculation\\\":\\\"change\\\",\\\"label\\\":\\\"%25 Change\\\",\\\"expression\\\":\\\"(${events.bounce_rate}-offset(${events.bounce_rate},1))/offset(${events.bounce_rate},1)\\\",\\\"value_format\\\":null,\\\"value_format_name\\\":\\\"percent_2\\\",\\\"_kind_hint\\\":\\\"measure\\\",\\\"_type_hint\\\":\\\"number\\\"}]\"\n  },\n  \"resultFormat\": \"json\",\n  \"label\": \"Bounce Rate by Week\",\n  \"visColor\": \"#E24E3A\",\n  \"chipFormat\": \"percent\"\n}\n\nconst averageTimeByWeek =\n{\n  \"id\": \"22\",\n  \"gridWidth\": 3,\n  \"type\": \"single value\",\n  \"height\": 120,\n  \"inlineQuery\": {\n    \"model\": \"atom_fashion\",\n    \"view\": \"web_events\",\n    \"fields\": [\n      \"events.event_week\",\n      \"sessions.average_duration\"\n    ],\n    \"pivots\": null,\n    \"fill_fields\": [\n      \"events.event_week\"\n    ],\n    \"filters\": {\n      \"events.event_date\": \"12 weeks ago for 12 weeks\"\n    },\n    \"filter_expression\": null,\n    \"sorts\": [\n      \"events.event_week desc\"\n    ],\n    \"limit\": \"500\",\n    \"dynamic_fields\": \"[{\\\"table_calculation\\\":\\\"change\\\",\\\"label\\\":\\\"%25 Change\\\",\\\"expression\\\":\\\"(${sessions.average_duration}-offset(${sessions.average_duration},1))/offset(${sessions.average_duration},1)\\\",\\\"value_format\\\":null,\\\"value_format_name\\\":\\\"percent_2\\\",\\\"_kind_hint\\\":\\\"measure\\\",\\\"_type_hint\\\":\\\"number\\\"}]\"\n  },\n  \"resultFormat\": \"json\",\n  \"label\": \"Average Time on Site by Week\",\n  \"visColor\": \"#65AB5A\",\n  \"chipFormat\": \"integer\"\n}\n\nconst embeddedQuery =\n{\n  \"gridWidth\": 8,\n  \"height\": 350,\n  \"type\": \"embeddedquery\",\n  \"id\": \"12\",\n  \"queryUrl\": \"embed/query/atom_fashion/order_items?fields=order_items.created_time,users.name,order_items.total_sale_price,users.approx_location,users.city&f[users.country]=USA&sorts=order_items.created_time+desc&limit=100&query_timezone=America%2FLos_Angeles&vis=%7B%22map_plot_mode%22%3A%22points%22%2C%22heatmap_gridlines%22%3Afalse%2C%22heatmap_gridlines_empty%22%3Afalse%2C%22heatmap_opacity%22%3A0.5%2C%22show_region_field%22%3Atrue%2C%22draw_map_labels_above_data%22%3Atrue%2C%22map_tile_provider%22%3A%22traffic_day%22%2C%22map_position%22%3A%22custom%22%2C%22map_scale_indicator%22%3A%22off%22%2C%22map_pannable%22%3Atrue%2C%22map_zoomable%22%3Atrue%2C%22map_marker_type%22%3A%22circle%22%2C%22map_marker_icon_name%22%3A%22shopping_cart%22%2C%22map_marker_radius_mode%22%3A%22proportional_value%22%2C%22map_marker_units%22%3A%22pixels%22%2C%22map_marker_proportional_scale_type%22%3A%22linear%22%2C%22map_marker_color_mode%22%3A%22fixed%22%2C%22show_view_names%22%3Afalse%2C%22show_legend%22%3Atrue%2C%22quantize_map_value_colors%22%3Afalse%2C%22reverse_map_value_colors%22%3Afalse%2C%22map_latitude%22%3A40.267214274019075%2C%22map_longitude%22%3A-94.70352172851564%2C%22map_zoom%22%3A4%2C%22map_marker_color%22%3A%5B%22%234595EC%22%5D%2C%22series_types%22%3A%7B%7D%2C%22type%22%3A%22looker_map%22%2C%22defaults_version%22%3A1%2C%22hidden_fields%22%3A%5B%22users.name%22%2C%22order_items.created_time%22%5D%7D&filter_config={}&origin=share-expanded&sdk=2&embed_domain=\",\n  \"title\": \"Most Recent Orders\"\n}\n\nconst popularAnalysis = {\n  \"gridWidth\": 4,\n  \"height\": 350,\n  \"type\": \"popular analysis\",\n  \"vectors\": [\n    {\n      \"id\": \"9\",\n      \"type\": \"thumbnail\",\n      \"resourceType\": \"dashboard\",\n      \"lookerMethod\": \"vector_thumbnail\",\n      \"label\": \"Analytics\",\n      \"gridWidth\": \"4\",\n      \"url\": \"webanalytics\"\n    },\n    {\n      \"id\": \"5\",\n      \"type\": \"thumbnail\",\n      \"resourceType\": \"dashboard\",\n      \"lookerMethod\": \"vector_thumbnail\",\n      \"label\": \"Sales\",\n      \"gridWidth\": \"4\",\n      \"url\": \"inventoryoverview\"\n    },\n    {\n      \"id\": \"1\",\n      \"type\": \"thumbnail\",\n      \"resourceType\": \"dashboard\",\n      \"lookerMethod\": \"vector_thumbnail\",\n      \"label\": \"Inventory\",\n      \"gridWidth\": \"4\",\n      \"url\": \"salesoverview\"\n    }\n  ],\n  \"label\": \"Popular analysis\"\n}\n\nexport const SplashPageContent = {\n  \"type\": \"splash page\",\n  \"label\": \"Home\",\n  \"description\": \"We're thrilled to have you on Atom Fashion - the premiere third party fashion marketplace for today's leading brands. Throughout this portal you will find a series of analytic content designed to help you maximize your performance.\",\n  \"menuCategory\": \"home\",\n  \"icon\": HomeIcon,\n  \"component\": SplashPage,\n  \"lookerContent\": [\n    bestWorstAnalysis,\n    revenueByWeek,\n    visitsByWeek,\n    bounceRateByWeek,\n    averageTimeByWeek,\n    embeddedQuery,\n    popularAnalysis\n  ]\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/QueryBuilderContent.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/ReportBuilderContent.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/SalesCalendarContent.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/WebAnalyticsContent.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/config/Demo/SalesOverviewContent.js",["331"],"import Dashboard from '../../components/Demo/Dashboard/Dashboard'\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\n\nexport const SalesOverviewContent = {\n  \"type\": \"custom filter\",\n  \"label\": \"Sales Overview\",\n  \"menuCategory\": \"sales\",\n  \"description\": \"Overview of all your sales!\",\n  \"icon\": VisibilityOutlinedIcon,\n  \"component\": Dashboard,\n  \"lookerContent\": [\n    {\n      \"type\": \"dashboard\",\n      \"lookerMethod\": \"embedDashboard\",\n      \"id\": \"5\",\n      \"label\": \"Sales Overview\",\n      \"isNext\": true,\n      \"filters\": [\n        {\n          \"label\": \"Select Product Category\",\n          \"filterName\": \"Category\",\n          \"lookerMethod\": \"runInlineQuery\"\n        },\n        {\n          \"label\": \"Select Region\",\n          \"filterName\": \"State Region\",\n          \"lookerMethod\": \"runInlineQuery\"\n        },\n        {\n          \"label\": \"Select Age Range\",\n          \"filterName\": \"Age\",\n          \"lookerMethod\": \"runInlineQuery\"\n        },\n        {\n          \"label\": \"Lifetime Revenue Tier\",\n          \"filterName\": \"Lifetime Revenue Tier\",\n          \"lookerMethod\": \"runInlineQuery\"\n        }\n      ],\n      \"inlineQueries\": [\n        {\n          \"model\": \"atom_fashion\",\n          \"view\": \"order_items\",\n          \"fields\": [\n            \"this_period\",\n            \"last_period\",\n            \"products.category\"\n          ],\n          \"filters\": {\n            \"order_items.created_date\": \"60 days ago for 60 days\",\n            \"order_items.count\": \">5\"\n          },\n          \"sorts\": [\n            \"products.category\"\n          ],\n          \"limit\": 500,\n          \"dynamic_fields\": \"[{\\\"table_calculation\\\":\\\"trend\\\",\\\"label\\\":\\\"trend\\\",\\\"expression\\\":\\\"${this_period} / ${last_period} - 1\\\",\\\"value_format\\\":null,\\\"value_format_name\\\":null,\\\"_kind_hint\\\":\\\"measure\\\",\\\"_type_hint\\\":\\\"number\\\"},{\\\"measure\\\":\\\"this_period\\\",\\\"based_on\\\":\\\"order_items.total_sale_price\\\",\\\"type\\\":\\\"count_distinct\\\",\\\"label\\\":\\\"This Period\\\",\\\"value_format\\\":null,\\\"value_format_name\\\":null,\\\"_kind_hint\\\":\\\"measure\\\",\\\"_type_hint\\\":\\\"number\\\",\\\"filter_expression\\\":\\\"matches_filter(${order_items.created_date},`30 days ago for 30 days`)\\\"},{\\\"measure\\\":\\\"last_period\\\",\\\"based_on\\\":\\\"order_items.total_gross_margin\\\",\\\"label\\\":\\\"Last Period\\\",\\\"value_format\\\":null,\\\"value_format_name\\\":null,\\\"_kind_hint\\\":\\\"measure\\\",\\\"_type_hint\\\":\\\"number\\\",\\\"filter_expression\\\":\\\"matches_filter(${order_items.created_date},`60 days ago for 30 days`)\\\"}]\",\n          \"theme\": \"atom_fashion\"\n        },\n        {\n          \"model\": \"atom_fashion\",\n          \"view\": \"order_items\",\n          \"fields\": [\n            \"users.state_region\"\n          ],\n          \"limit\": \"500\"\n        },\n        {\n          \"model\": \"atom_fashion\",\n          \"view\": \"order_items\",\n          \"fields\": [\n            \"users.age\"\n          ],\n          \"limit\": \"500\"\n        },\n        {\n          \"model\": \"atom_fashion\",\n          \"view\": \"order_items\",\n          \"fields\": [\n            \"user_order_facts.lifetime_revenue_tier\"\n          ],\n          \"limit\": \"500\"\n        }\n      ],\n      \"desiredFilterName\": [\n        \"products.brand\",\n        \"users.state_region\",\n        \"users.age\",\n        \"users.lifetime_revenue_tier\"\n      ],\n      \"filterComponents\": [\n        \"autocomplete\",\n        \"mapfilter\",\n        \"rangeslider\",\n        \"togglebuttonapi\"\n      ]\n    }\n  ]\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/config/SignInContent.js",[],{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","severity":1,"message":"337","line":3,"column":8,"nodeType":"338","messageId":"339","endLine":3,"endColumn":17},{"ruleId":"340","severity":1,"message":"341","line":122,"column":49,"nodeType":"342","messageId":"343","endLine":122,"endColumn":51},{"ruleId":"336","severity":1,"message":"344","line":40,"column":9,"nodeType":"338","messageId":"339","endLine":40,"endColumn":31},{"ruleId":"336","severity":1,"message":"345","line":1,"column":8,"nodeType":"338","messageId":"339","endLine":1,"endColumn":9},{"ruleId":"336","severity":1,"message":"346","line":2,"column":29,"nodeType":"338","messageId":"339","endLine":2,"endColumn":38},{"ruleId":"336","severity":1,"message":"347","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":20},{"ruleId":"336","severity":1,"message":"348","line":3,"column":22,"nodeType":"338","messageId":"339","endLine":3,"endColumn":31},{"ruleId":"336","severity":1,"message":"349","line":3,"column":33,"nodeType":"338","messageId":"339","endLine":3,"endColumn":44},{"ruleId":"336","severity":1,"message":"350","line":21,"column":5,"nodeType":"338","messageId":"339","endLine":21,"endColumn":8},{"ruleId":"336","severity":1,"message":"351","line":22,"column":5,"nodeType":"338","messageId":"339","endLine":22,"endColumn":16},{"ruleId":"336","severity":1,"message":"352","line":22,"column":18,"nodeType":"338","messageId":"339","endLine":22,"endColumn":32},{"ruleId":"353","severity":1,"message":"354","line":60,"column":15,"nodeType":"355","endLine":62,"endColumn":17},{"ruleId":"356","severity":1,"message":"357","line":86,"column":6,"nodeType":"358","endLine":86,"endColumn":8,"suggestions":"359"},{"ruleId":"356","severity":1,"message":"360","line":99,"column":6,"nodeType":"358","endLine":99,"endColumn":21,"suggestions":"361"},{"ruleId":"336","severity":1,"message":"362","line":2,"column":16,"nodeType":"338","messageId":"339","endLine":2,"endColumn":22},{"ruleId":"363","severity":1,"message":"364","line":11,"column":3,"nodeType":"365","messageId":"366","endLine":11,"endColumn":7},{"ruleId":"336","severity":1,"message":"367","line":5,"column":74,"nodeType":"338","messageId":"339","endLine":5,"endColumn":78},{"ruleId":"340","severity":1,"message":"341","line":57,"column":50,"nodeType":"342","messageId":"343","endLine":57,"endColumn":52},{"ruleId":"336","severity":1,"message":"368","line":15,"column":24,"nodeType":"338","messageId":"339","endLine":15,"endColumn":40},{"ruleId":"336","severity":1,"message":"369","line":22,"column":23,"nodeType":"338","messageId":"339","endLine":22,"endColumn":33},{"ruleId":"336","severity":1,"message":"370","line":27,"column":10,"nodeType":"338","messageId":"339","endLine":27,"endColumn":15},{"ruleId":"336","severity":1,"message":"371","line":27,"column":17,"nodeType":"338","messageId":"339","endLine":27,"endColumn":25},{"ruleId":"356","severity":1,"message":"372","line":63,"column":5,"nodeType":"358","endLine":63,"endColumn":43,"suggestions":"373"},{"ruleId":"340","severity":1,"message":"341","line":90,"column":49,"nodeType":"342","messageId":"343","endLine":90,"endColumn":51},{"ruleId":"340","severity":1,"message":"341","line":92,"column":97,"nodeType":"342","messageId":"343","endLine":92,"endColumn":99},{"ruleId":"340","severity":1,"message":"341","line":100,"column":83,"nodeType":"342","messageId":"343","endLine":100,"endColumn":85},{"ruleId":"340","severity":1,"message":"341","line":106,"column":110,"nodeType":"342","messageId":"343","endLine":106,"endColumn":112},{"ruleId":"356","severity":1,"message":"374","line":153,"column":6,"nodeType":"358","endLine":153,"endColumn":45,"suggestions":"375"},{"ruleId":"356","severity":1,"message":"376","line":161,"column":6,"nodeType":"358","endLine":161,"endColumn":24,"suggestions":"377"},{"ruleId":"356","severity":1,"message":"378","line":163,"column":3,"nodeType":"338","endLine":163,"endColumn":12,"suggestions":"379"},{"ruleId":"336","severity":1,"message":"380","line":2,"column":17,"nodeType":"338","messageId":"339","endLine":2,"endColumn":25},{"ruleId":"336","severity":1,"message":"346","line":2,"column":27,"nodeType":"338","messageId":"339","endLine":2,"endColumn":36},{"ruleId":"336","severity":1,"message":"381","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":20},{"ruleId":"336","severity":1,"message":"382","line":12,"column":8,"nodeType":"338","messageId":"339","endLine":12,"endColumn":21},{"ruleId":"336","severity":1,"message":"383","line":25,"column":26,"nodeType":"338","messageId":"339","endLine":25,"endColumn":41},{"ruleId":"336","severity":1,"message":"384","line":25,"column":43,"nodeType":"338","messageId":"339","endLine":25,"endColumn":47},{"ruleId":"336","severity":1,"message":"385","line":26,"column":11,"nodeType":"338","messageId":"339","endLine":26,"endColumn":22},{"ruleId":"336","severity":1,"message":"369","line":26,"column":36,"nodeType":"338","messageId":"339","endLine":26,"endColumn":46},{"ruleId":"336","severity":1,"message":"386","line":35,"column":11,"nodeType":"338","messageId":"339","endLine":35,"endColumn":24},{"ruleId":"336","severity":1,"message":"383","line":161,"column":26,"nodeType":"338","messageId":"339","endLine":161,"endColumn":41},{"ruleId":"336","severity":1,"message":"384","line":161,"column":43,"nodeType":"338","messageId":"339","endLine":161,"endColumn":47},{"ruleId":"336","severity":1,"message":"387","line":161,"column":49,"nodeType":"338","messageId":"339","endLine":161,"endColumn":57},{"ruleId":"336","severity":1,"message":"350","line":161,"column":59,"nodeType":"338","messageId":"339","endLine":161,"endColumn":62},{"ruleId":"336","severity":1,"message":"385","line":162,"column":11,"nodeType":"338","messageId":"339","endLine":162,"endColumn":22},{"ruleId":"336","severity":1,"message":"369","line":162,"column":36,"nodeType":"338","messageId":"339","endLine":162,"endColumn":46},{"ruleId":"336","severity":1,"message":"386","line":164,"column":11,"nodeType":"338","messageId":"339","endLine":164,"endColumn":24},{"ruleId":"340","severity":1,"message":"341","line":221,"column":37,"nodeType":"342","messageId":"343","endLine":221,"endColumn":39},{"ruleId":"356","severity":1,"message":"388","line":248,"column":6,"nodeType":"358","endLine":248,"endColumn":27,"suggestions":"389"},{"ruleId":"356","severity":1,"message":"390","line":257,"column":6,"nodeType":"358","endLine":257,"endColumn":22,"suggestions":"391"},{"ruleId":"336","severity":1,"message":"392","line":381,"column":20,"nodeType":"338","messageId":"339","endLine":381,"endColumn":36},{"ruleId":"336","severity":1,"message":"393","line":381,"column":54,"nodeType":"338","messageId":"339","endLine":381,"endColumn":65},{"ruleId":"336","severity":1,"message":"394","line":381,"column":67,"nodeType":"338","messageId":"339","endLine":381,"endColumn":75},{"ruleId":"336","severity":1,"message":"345","line":1,"column":8,"nodeType":"338","messageId":"339","endLine":1,"endColumn":9},{"ruleId":"336","severity":1,"message":"395","line":14,"column":24,"nodeType":"338","messageId":"339","endLine":14,"endColumn":33},{"ruleId":"336","severity":1,"message":"386","line":21,"column":11,"nodeType":"338","messageId":"339","endLine":21,"endColumn":24},{"ruleId":"336","severity":1,"message":"396","line":22,"column":9,"nodeType":"338","messageId":"339","endLine":22,"endColumn":16},{"ruleId":"336","severity":1,"message":"397","line":5,"column":3,"nodeType":"338","messageId":"339","endLine":5,"endColumn":9},{"ruleId":"336","severity":1,"message":"398","line":5,"column":11,"nodeType":"338","messageId":"339","endLine":5,"endColumn":15},{"ruleId":"336","severity":1,"message":"399","line":5,"column":17,"nodeType":"338","messageId":"339","endLine":5,"endColumn":20},{"ruleId":"336","severity":1,"message":"400","line":5,"column":45,"nodeType":"338","messageId":"339","endLine":5,"endColumn":61},{"ruleId":"336","severity":1,"message":"401","line":5,"column":69,"nodeType":"338","messageId":"339","endLine":5,"endColumn":78},{"ruleId":"336","severity":1,"message":"402","line":7,"column":24,"nodeType":"338","messageId":"339","endLine":7,"endColumn":29},{"ruleId":"336","severity":1,"message":"403","line":15,"column":18,"nodeType":"338","messageId":"339","endLine":15,"endColumn":26},{"ruleId":"336","severity":1,"message":"404","line":17,"column":35,"nodeType":"338","messageId":"339","endLine":17,"endColumn":53},{"ruleId":"336","severity":1,"message":"384","line":26,"column":43,"nodeType":"338","messageId":"339","endLine":26,"endColumn":47},{"ruleId":"336","severity":1,"message":"385","line":27,"column":11,"nodeType":"338","messageId":"339","endLine":27,"endColumn":22},{"ruleId":"336","severity":1,"message":"369","line":27,"column":36,"nodeType":"338","messageId":"339","endLine":27,"endColumn":46},{"ruleId":"336","severity":1,"message":"370","line":30,"column":10,"nodeType":"338","messageId":"339","endLine":30,"endColumn":15},{"ruleId":"336","severity":1,"message":"405","line":38,"column":10,"nodeType":"338","messageId":"339","endLine":38,"endColumn":24},{"ruleId":"336","severity":1,"message":"386","line":46,"column":11,"nodeType":"338","messageId":"339","endLine":46,"endColumn":24},{"ruleId":"336","severity":1,"message":"406","line":46,"column":85,"nodeType":"338","messageId":"339","endLine":46,"endColumn":99},{"ruleId":"336","severity":1,"message":"407","line":77,"column":9,"nodeType":"338","messageId":"339","endLine":77,"endColumn":21},{"ruleId":"340","severity":1,"message":"341","line":133,"column":34,"nodeType":"342","messageId":"343","endLine":133,"endColumn":36},{"ruleId":"356","severity":1,"message":"408","line":156,"column":6,"nodeType":"358","endLine":156,"endColumn":27,"suggestions":"409"},{"ruleId":"356","severity":1,"message":"410","line":158,"column":3,"nodeType":"338","endLine":158,"endColumn":12,"suggestions":"411"},{"ruleId":"336","severity":1,"message":"386","line":319,"column":11,"nodeType":"338","messageId":"339","endLine":319,"endColumn":24},{"ruleId":"336","severity":1,"message":"382","line":9,"column":8,"nodeType":"338","messageId":"339","endLine":9,"endColumn":21},{"ruleId":"336","severity":1,"message":"384","line":21,"column":43,"nodeType":"338","messageId":"339","endLine":21,"endColumn":47},{"ruleId":"336","severity":1,"message":"385","line":22,"column":11,"nodeType":"338","messageId":"339","endLine":22,"endColumn":22},{"ruleId":"336","severity":1,"message":"369","line":22,"column":36,"nodeType":"338","messageId":"339","endLine":22,"endColumn":46},{"ruleId":"336","severity":1,"message":"412","line":28,"column":10,"nodeType":"338","messageId":"339","endLine":28,"endColumn":20},{"ruleId":"336","severity":1,"message":"386","line":35,"column":11,"nodeType":"338","messageId":"339","endLine":35,"endColumn":24},{"ruleId":"413","severity":1,"message":"414","line":42,"column":18,"nodeType":"415","messageId":"366","endLine":42,"endColumn":20},{"ruleId":"413","severity":1,"message":"416","line":42,"column":70,"nodeType":"415","messageId":"366","endLine":42,"endColumn":72},{"ruleId":"356","severity":1,"message":"408","line":57,"column":6,"nodeType":"358","endLine":57,"endColumn":41,"suggestions":"417"},{"ruleId":"356","severity":1,"message":"410","line":59,"column":3,"nodeType":"338","endLine":59,"endColumn":12,"suggestions":"418"},{"ruleId":"336","severity":1,"message":"419","line":96,"column":11,"nodeType":"338","messageId":"339","endLine":96,"endColumn":24},{"ruleId":"336","severity":1,"message":"420","line":105,"column":11,"nodeType":"338","messageId":"339","endLine":105,"endColumn":25},{"ruleId":"340","severity":1,"message":"341","line":167,"column":44,"nodeType":"342","messageId":"343","endLine":167,"endColumn":46},{"ruleId":"340","severity":1,"message":"341","line":203,"column":49,"nodeType":"342","messageId":"343","endLine":203,"endColumn":51},{"ruleId":"413","severity":1,"message":"414","line":335,"column":36,"nodeType":"415","messageId":"366","endLine":335,"endColumn":38},{"ruleId":"413","severity":1,"message":"416","line":338,"column":72,"nodeType":"415","messageId":"366","endLine":338,"endColumn":74},{"ruleId":"413","severity":1,"message":"414","line":343,"column":91,"nodeType":"415","messageId":"366","endLine":343,"endColumn":93},{"ruleId":"336","severity":1,"message":"384","line":451,"column":43,"nodeType":"338","messageId":"339","endLine":451,"endColumn":47},{"ruleId":"336","severity":1,"message":"387","line":451,"column":49,"nodeType":"338","messageId":"339","endLine":451,"endColumn":57},{"ruleId":"336","severity":1,"message":"350","line":451,"column":59,"nodeType":"338","messageId":"339","endLine":451,"endColumn":62},{"ruleId":"336","severity":1,"message":"421","line":451,"column":64,"nodeType":"338","messageId":"339","endLine":451,"endColumn":75},{"ruleId":"336","severity":1,"message":"385","line":452,"column":11,"nodeType":"338","messageId":"339","endLine":452,"endColumn":22},{"ruleId":"336","severity":1,"message":"369","line":452,"column":36,"nodeType":"338","messageId":"339","endLine":452,"endColumn":46},{"ruleId":"336","severity":1,"message":"386","line":454,"column":11,"nodeType":"338","messageId":"339","endLine":454,"endColumn":24},{"ruleId":"356","severity":1,"message":"422","line":484,"column":6,"nodeType":"358","endLine":484,"endColumn":18,"suggestions":"423"},{"ruleId":"336","severity":1,"message":"424","line":4,"column":7,"nodeType":"338","messageId":"339","endLine":4,"endColumn":18},{"ruleId":"336","severity":1,"message":"425","line":5,"column":7,"nodeType":"338","messageId":"339","endLine":5,"endColumn":20},{"ruleId":"336","severity":1,"message":"426","line":6,"column":7,"nodeType":"338","messageId":"339","endLine":6,"endColumn":20},{"ruleId":"336","severity":1,"message":"427","line":7,"column":7,"nodeType":"338","messageId":"339","endLine":7,"endColumn":22},{"ruleId":"336","severity":1,"message":"428","line":5,"column":7,"nodeType":"338","messageId":"339","endLine":5,"endColumn":14},{"ruleId":"336","severity":1,"message":"429","line":6,"column":7,"nodeType":"338","messageId":"339","endLine":6,"endColumn":16},{"ruleId":"363","severity":1,"message":"430","line":183,"column":3,"nodeType":"365","messageId":"366","endLine":183,"endColumn":17},{"ruleId":"363","severity":1,"message":"431","line":186,"column":3,"nodeType":"365","messageId":"366","endLine":186,"endColumn":17},{"ruleId":"336","severity":1,"message":"345","line":1,"column":8,"nodeType":"338","messageId":"339","endLine":1,"endColumn":9},{"ruleId":"336","severity":1,"message":"432","line":3,"column":10,"nodeType":"338","messageId":"339","endLine":3,"endColumn":20},{"ruleId":"336","severity":1,"message":"433","line":4,"column":22,"nodeType":"338","messageId":"339","endLine":4,"endColumn":32},{"ruleId":"336","severity":1,"message":"386","line":11,"column":11,"nodeType":"338","messageId":"339","endLine":11,"endColumn":24},{"ruleId":"356","severity":1,"message":"434","line":22,"column":6,"nodeType":"358","endLine":22,"endColumn":24,"suggestions":"435"},{"ruleId":"336","severity":1,"message":"380","line":1,"column":17,"nodeType":"338","messageId":"339","endLine":1,"endColumn":25},{"ruleId":"336","severity":1,"message":"346","line":1,"column":27,"nodeType":"338","messageId":"339","endLine":1,"endColumn":36},{"ruleId":"336","severity":1,"message":"436","line":42,"column":10,"nodeType":"338","messageId":"339","endLine":42,"endColumn":14},{"ruleId":"336","severity":1,"message":"437","line":4,"column":7,"nodeType":"338","messageId":"339","endLine":4,"endColumn":24},{"ruleId":"336","severity":1,"message":"438","line":20,"column":7,"nodeType":"338","messageId":"339","endLine":20,"endColumn":25},{"ruleId":"336","severity":1,"message":"439","line":31,"column":7,"nodeType":"338","messageId":"339","endLine":31,"endColumn":29},{"ruleId":"440","severity":1,"message":"441","line":33,"column":25,"nodeType":"442","messageId":"443","endLine":33,"endColumn":371},{"ruleId":"440","severity":1,"message":"441","line":58,"column":25,"nodeType":"442","messageId":"443","endLine":58,"endColumn":371},{"ruleId":"440","severity":1,"message":"441","line":90,"column":23,"nodeType":"442","messageId":"443","endLine":90,"endColumn":355},{"ruleId":"440","severity":1,"message":"441","line":121,"column":23,"nodeType":"442","messageId":"443","endLine":121,"endColumn":313},{"ruleId":"440","severity":1,"message":"441","line":153,"column":23,"nodeType":"442","messageId":"443","endLine":153,"endColumn":304},{"ruleId":"440","severity":1,"message":"441","line":186,"column":23,"nodeType":"442","messageId":"443","endLine":186,"endColumn":325},{"ruleId":"440","severity":1,"message":"441","line":57,"column":29,"nodeType":"442","messageId":"443","endLine":57,"endColumn":873},"no-native-reassign",["444"],"no-negated-in-lhs",["445"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'endSessionResponseData' is assigned a value but never used.","'_' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'useLocation' is defined but never used.","'sdk' is assigned a value but never used.","'initialHref' is assigned a value but never used.","'setInitialHref' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clientSession.lookerBaseUrl'. Either include it or remove the dependency array.","ArrayExpression",["446"],"React Hook useEffect has missing dependencies: 'codeShow' and 'highlightShow'. Either include them or remove the dependency array. You can also do a functional update 'setHighlightShow(h => ...)' if you only need 'highlightShow' in the 'setHighlightShow' call.",["447"],"'orange' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","'Icon' is defined but never used.","'setClientSession' is assigned a value but never used.","'lookerHost' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","React Hook React.useMemo has a missing dependency: 'paletteToUse'. Either include it or remove the dependency array.",["448"],"React Hook useEffect has missing dependencies: 'corsApiCall', 'fontThemeSelectValue', 'lightThemeToggleValue', 'lookerContent', and 'performLookerApiCalls'. Either include them or remove the dependency array.",["449"],"React Hook useEffect has missing dependencies: 'dashboardObj', 'handleTileToggle', 'handleVisColorToggle', 'tileToggleValue', and 'visColorToggleValue'. Either include them or remove the dependency array.",["450"],"React Hook useEffect contains a call to 'setExpansionPanelHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [horizontalLayout] as a second argument to the useEffect Hook.",["451"],"'useState' is defined but never used.","'makeStyles' is defined but never used.","'rawSampleCode' is defined but never used.","'setPaywallModal' is assigned a value but never used.","'show' is assigned a value but never used.","'userProfile' is assigned a value but never used.","'staticContent' is assigned a value but never used.","'codeShow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersData' and 'initializeFieldChipDataHelper'. Either include them or remove the dependency array.",["452"],"React Hook useEffect has a missing dependency: 'handleQuerySubmit'. Either include it or remove the dependency array.",["453"],"'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'setIFrame' is assigned a value but never used.","'codeTab' is assigned a value but never used.","'AppBar' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'CircularProgress' is defined but never used.","'TextField' is defined but never used.","'Modal' is defined but never used.","'endOfDay' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'clientSideCode' is assigned a value but never used.","'activeTabValue' is assigned a value but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'corsApiCall', 'lookerContent', and 'performLookerApiCalls'. Either include them or remove the dependency array.",["454"],"React Hook useEffect contains a call to 'setExpansionPanelHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["455"],"'exploreObj' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.",["456"],["457"],"'matchingIndex' is assigned a value but never used.","'lookerResponse' is assigned a value but never used.","'corsApiCall' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'expandedArr' and 'selected'. Either include them or remove the dependency array.",["458"],"'greyPrimary' is assigned a value but never used.","'greySecondary' is assigned a value but never used.","'orangePrimary' is assigned a value but never used.","'orangeSecondary' is assigned a value but never used.","'redDark' is assigned a value but never used.","'greenDark' is assigned a value but never used.","Duplicate key 'overflowScroll'.","Duplicate key 'overflowHidden'.","'Typography' is defined but never used.","'FilterList' is defined but never used.","React Hook useEffect has a missing dependency: 'expanded'. Either include it or remove the dependency array.",["459"],"'rand' is defined but never used.","'ProductNameFilter' is assigned a value but never used.","'DynamicTilesFilter' is assigned a value but never used.","'DynamicVisConfigFilter' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation",{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"478","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},"Update the dependencies array to be: [clientSession.lookerBaseUrl]",{"range":"487","text":"488"},"Update the dependencies array to be: [codeShow, democomponent, highlightShow]",{"range":"489","text":"490"},"Update the dependencies array to be: [paletteToUse]",{"range":"491","text":"492"},"Update the dependencies array to be: [lookerUser, isReady, selectedMenuItem, lightThemeToggleValue, fontThemeSelectValue, corsApiCall, performLookerApiCalls, lookerContent]",{"range":"493","text":"494"},"Update the dependencies array to be: [dashboardObj, dashboardOptions, handleTileToggle, handleVisColorToggle, tileToggleValue, visColorToggleValue]",{"range":"495","text":"496"},"Add dependencies array: [horizontalLayout]",{"range":"497","text":"498"},"Update the dependencies array to be: [lookerUser, isReady, filtersData, initializeFieldChipDataHelper]",{"range":"499","text":"500"},"Update the dependencies array to be: [handleQuerySubmit, queryShouldRun]",{"range":"501","text":"502"},"Update the dependencies array to be: [lookerUser, isReady, corsApiCall, performLookerApiCalls, lookerContent]",{"range":"503","text":"504"},"Add dependencies array: []",{"range":"505","text":"506"},"Update the dependencies array to be: [lookerUser, value, isReady, corsApiCall, performLookerApiCalls, lookerContent]",{"range":"507","text":"508"},{"range":"509","text":"506"},"Update the dependencies array to be: [apiContent, expandedArr, selected]",{"range":"510","text":"511"},"Update the dependencies array to be: [expanded, horizontalLayout]",{"range":"512","text":"513"},[3087,3089],"[clientSession.lookerBaseUrl]",[3370,3385],"[codeShow, democomponent, highlightShow]",[2587,2625],"[paletteToUse]",[6574,6613],"[lookerUser, isReady, selectedMenuItem, lightThemeToggleValue, fontThemeSelectValue, corsApiCall, performLookerApiCalls, lookerContent]",[6903,6921],"[dashboardObj, dashboardOptions, handleTileToggle, handleVisColorToggle, tileToggleValue, visColorToggleValue]",[7158,7158],", [horizontalLayout]",[8981,9002],"[lookerUser, isReady, filtersData, initializeFieldChipDataHelper]",[9200,9216],"[handleQuerySubmit, queryShouldRun]",[5696,5717],"[lookerUser, isReady, corsApiCall, performLookerApiCalls, lookerContent]",[5931,5931],", []",[2242,2277],"[lookerUser, value, isReady, corsApiCall, performLookerApiCalls, lookerContent]",[2491,2491],[19876,19888],"[apiContent, expandedArr, selected]",[958,976],"[expanded, horizontalLayout]"]