[{"/Users/eglasenk/projects/pbl-demo/client/atom/src/index.js":"1","/Users/eglasenk/projects/pbl-demo/client/atom/src/App.js":"2","/Users/eglasenk/projects/pbl-demo/client/atom/src/serviceWorker.js":"3","/Users/eglasenk/projects/pbl-demo/client/atom/src/contexts/AppContext.js":"4","/Users/eglasenk/projects/pbl-demo/client/atom/src/AuthUtils/auth.js":"5","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/SignIn/SignIn.js":"6","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/Home.js":"7","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/SignIn/styles.js":"8","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/styles.js":"9","/Users/eglasenk/projects/pbl-demo/client/atom/src/tools.js":"10","/Users/eglasenk/projects/pbl-demo/client/atom/src/LookerHelpers/defaults.js":"11","/Users/eglasenk/projects/pbl-demo/client/atom/src/LookerHelpers/pblsession.js":"12","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/LeftDrawer.js":"13","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/TopBar.js":"14","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/Dashboard.js":"15","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/MonetizationModal/MonetizationModal.js":"16","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/QueryBuilder/QueryBuilder.js":"17","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/SplashPage.js":"18","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/CustomVis/CustomVis.js":"19","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/ReportBuilder/ReportBuilder.js":"20","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/styles.js":"21","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/MonetizationModal/styles.js":"22","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/QueryBuilder/helpers.js":"23","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/QueryBuilder/styles.js":"24","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/styles.js":"25","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/ReportBuilder/helpers.js":"26","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/ReportBuilder/styles.js":"27","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/CustomVis/styles.js":"28","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/BottomBar.js":"29","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/UserMenu.js":"30","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/CodeFlyout.js":"31","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/EmbeddedDashboardContainer.js":"32","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/FilterBar.js":"33","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/Welcome.js":"34","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/SingleValueVis.js":"35","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Accessories/Loader.js":"36","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Highlights/Highlight.js":"37","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/EmbeddedQuery.js":"38","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/PopularAnalysis.js":"39","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Material/ModalTable.js":"40","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/FilterBarChildren.js":"41","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/NaturalLanguage.js":"42","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/VectorThumbnail.js":"43","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/SelectFont.js":"44","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/SwitchTheme.js":"45","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/ToggleVisColor.js":"46","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/ToggleTile.js":"47","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/ToggleApi.js":"48","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/RangeSlider.js":"49","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/helpers.js":"50","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/MapFilter.js":"51","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Accessories/NumberToColoredPercent.js":"52","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/CheckboxSvgMapRegion.js":"53","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/theme.js":"54","/Users/eglasenk/projects/pbl-demo/client/atom/src/content/index.js":"55","/Users/eglasenk/projects/pbl-demo/client/atom/src/content/SignInContent.js":"56","/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/index.js":"57","/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/QueryBuilderContent.js":"58","/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/SalesCalendarContent.js":"59","/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/SalesOverviewContent.js":"60","/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/SplashPageContent.js":"61","/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/ReportBuilderContent.js":"62","/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/WebAnalyticsContent.js":"63","/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/InventoryOverviewContent.js":"64"},{"size":452,"mtime":1609879557563,"results":"65","hashOfConfig":"66"},{"size":4134,"mtime":1610643615088,"results":"67","hashOfConfig":"66"},{"size":5003,"mtime":1609879557562,"results":"68","hashOfConfig":"66"},{"size":101,"mtime":1609879557941,"results":"69","hashOfConfig":"66"},{"size":2769,"mtime":1610563741562,"results":"70","hashOfConfig":"66"},{"size":3235,"mtime":1610643300024,"results":"71","hashOfConfig":"66"},{"size":4619,"mtime":1610643604942,"results":"72","hashOfConfig":"66"},{"size":989,"mtime":1609879557942,"results":"73","hashOfConfig":"66"},{"size":3691,"mtime":1610569748132,"results":"74","hashOfConfig":"66"},{"size":1279,"mtime":1610563833472,"results":"75","hashOfConfig":"66"},{"size":1965,"mtime":1609879557971,"results":"76","hashOfConfig":"66"},{"size":1403,"mtime":1609879557970,"results":"77","hashOfConfig":"66"},{"size":3812,"mtime":1610643443964,"results":"78","hashOfConfig":"66"},{"size":1266,"mtime":1610642314440,"results":"79","hashOfConfig":"66"},{"size":13489,"mtime":1610572045749,"results":"80","hashOfConfig":"66"},{"size":6114,"mtime":1609879557956,"results":"81","hashOfConfig":"66"},{"size":20853,"mtime":1610583463400,"results":"82","hashOfConfig":"66"},{"size":4799,"mtime":1610048500167,"results":"83","hashOfConfig":"66"},{"size":17513,"mtime":1609879557966,"results":"84","hashOfConfig":"66"},{"size":29472,"mtime":1609981850211,"results":"85","hashOfConfig":"66"},{"size":1928,"mtime":1609879557957,"results":"86","hashOfConfig":"66"},{"size":1061,"mtime":1609879557956,"results":"87","hashOfConfig":"66"},{"size":1592,"mtime":1609879557954,"results":"88","hashOfConfig":"66"},{"size":3104,"mtime":1609879557954,"results":"89","hashOfConfig":"66"},{"size":3809,"mtime":1609879557948,"results":"90","hashOfConfig":"66"},{"size":811,"mtime":1609879557953,"results":"91","hashOfConfig":"66"},{"size":2082,"mtime":1609879557952,"results":"92","hashOfConfig":"66"},{"size":2048,"mtime":1609879557965,"results":"93","hashOfConfig":"66"},{"size":1154,"mtime":1609879557947,"results":"94","hashOfConfig":"66"},{"size":3994,"mtime":1609879557945,"results":"95","hashOfConfig":"66"},{"size":1853,"mtime":1609879557968,"results":"96","hashOfConfig":"66"},{"size":848,"mtime":1609879557963,"results":"97","hashOfConfig":"66"},{"size":3576,"mtime":1609961123745,"results":"98","hashOfConfig":"66"},{"size":1462,"mtime":1609879555204,"results":"99","hashOfConfig":"66"},{"size":5873,"mtime":1609879557950,"results":"100","hashOfConfig":"66"},{"size":516,"mtime":1609879557969,"results":"101","hashOfConfig":"66"},{"size":3019,"mtime":1609879557947,"results":"102","hashOfConfig":"66"},{"size":4789,"mtime":1610049018909,"results":"103","hashOfConfig":"66"},{"size":1576,"mtime":1609879557951,"results":"104","hashOfConfig":"66"},{"size":4457,"mtime":1609879557944,"results":"105","hashOfConfig":"66"},{"size":5340,"mtime":1609962340163,"results":"106","hashOfConfig":"66"},{"size":2380,"mtime":1609879557951,"results":"107","hashOfConfig":"66"},{"size":2248,"mtime":1609879557949,"results":"108","hashOfConfig":"66"},{"size":1061,"mtime":1609879557960,"results":"109","hashOfConfig":"66"},{"size":863,"mtime":1609879557960,"results":"110","hashOfConfig":"66"},{"size":1419,"mtime":1609879557958,"results":"111","hashOfConfig":"66"},{"size":1171,"mtime":1609879557958,"results":"112","hashOfConfig":"66"},{"size":2176,"mtime":1609879557959,"results":"113","hashOfConfig":"66"},{"size":1897,"mtime":1609879557961,"results":"114","hashOfConfig":"66"},{"size":2180,"mtime":1609879557957,"results":"115","hashOfConfig":"66"},{"size":1768,"mtime":1609879557962,"results":"116","hashOfConfig":"66"},{"size":612,"mtime":1608155866780,"results":"117","hashOfConfig":"66"},{"size":2701,"mtime":1609879557964,"results":"118","hashOfConfig":"66"},{"size":310,"mtime":1610569606981,"results":"119","hashOfConfig":"66"},{"size":32,"mtime":1610643583665,"results":"120","hashOfConfig":"66"},{"size":121,"mtime":1610643310494,"results":"121","hashOfConfig":"66"},{"size":271,"mtime":1610643828076,"results":"122","hashOfConfig":"66"},{"size":1940,"mtime":1610643779121,"results":"123","hashOfConfig":"66"},{"size":1023,"mtime":1610643784333,"results":"124","hashOfConfig":"66"},{"size":3375,"mtime":1610643786726,"results":"125","hashOfConfig":"66"},{"size":8203,"mtime":1610643788689,"results":"126","hashOfConfig":"66"},{"size":708,"mtime":1610643781560,"results":"127","hashOfConfig":"66"},{"size":570,"mtime":1610643793602,"results":"128","hashOfConfig":"66"},{"size":3569,"mtime":1610643776260,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"1kc5w6o",{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"132"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"132"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"132"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"132"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"132"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"132"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"132"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"132"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"132"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"132"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"132"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"132"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"132"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"132"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"132"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"176"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"132"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"132"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"132"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"132"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"132"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"132"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"132"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"132"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"265","usedDeprecatedRules":"132"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eglasenk/projects/pbl-demo/client/atom/src/index.js",[],["288","289"],"/Users/eglasenk/projects/pbl-demo/client/atom/src/App.js",["290","291"],"/Users/eglasenk/projects/pbl-demo/client/atom/src/serviceWorker.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/contexts/AppContext.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/AuthUtils/auth.js",["292"],"import { Looker40SDK, DefaultSettings } from \"@looker/sdk\";\nimport { PblSessionEmbed } from '../LookerHelpers/pblsession'\n\nexport const checkForExistingSession = async () => {\n  // console.log('checkForExistingSession')\n  let sessionResponse = await fetch('/readsession', {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  })\n  const sessionResponseData = await sessionResponse.json();\n  return { session: sessionResponseData.session };\n}\n\nexport const writeNewSession = async (newSession) => {\n  // console.log('writeNewSession')\n  let newSessionResponse = await fetch('/writesession', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...newSession })\n  })\n  const newSessionResponseData = await newSessionResponse.json();\n  return { session: newSessionResponseData.session };\n}\n\nexport const endSession = async () => {\n  // console.log('endSession')\n  let endSessionResponse = await fetch('/endsession', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  })\n  const endSessionResponseData = await endSessionResponse.json();\n  return { message: endSessionResponse };\n}\n\nexport const createSdkHelper = ({ accessToken, lookerBaseUrl }) => {\n  // console.log('createSdkHelper')\n  // console.log({ accessToken })\n  // console.log({ lookerBaseUrl })\n\n  if (accessToken && lookerBaseUrl) { //added 11/22\n    const pblsession = new PblSessionEmbed({\n      ...DefaultSettings(),\n      base_url: lookerBaseUrl,\n      accessToken\n    });\n\n    let sdk = new Looker40SDK(pblsession);\n    return sdk;\n  }\n\n}\n\nexport const checkToken = async (expires_in) => {\n  // console.log('checkToken2');\n  // console.log({ expires_in });\n  // console.log('Date.now()', Date.now());\n  // let dateeee = new Date(expires_in);\n  // console.log({ dateeee })\n\n  if ((Date.now()) > expires_in) {\n    // console.log('inside iff')\n    let sessionResponse = await fetch('/refreshlookertoken', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    const sessionResponseData = await sessionResponse.json();\n    const lookerBaseUrl = sessionResponseData.session.lookerBaseUrl ? sessionResponseData.session.lookerBaseUrl : '';\n    const accessToken = sessionResponseData.session.lookerApiToken ? sessionResponseData.session.lookerApiToken.api_user_token : '';\n    const sdk = createSdkHelper({ accessToken, lookerBaseUrl })\n\n    return { status: \"updated\", sdk, clientSession: sessionResponseData.session }\n\n  } else {\n    // console.log(\"inside ellse\")\n    return { status: \"ok\" }\n  }\n}\n\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/SignIn/SignIn.js",["293","294","295","296","297","298","299","300","301"],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/Home.js",["302","303"],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/SignIn/styles.js",["304","305"],"import { makeStyles } from '@material-ui/core/styles';\nimport { grey, orange } from '@material-ui/core/colors';\nconst lightGrey = grey[200];\n\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  root: {\n    display: 'flex',\n    backgroundColor: 'rgb(229, 229, 229)'\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  card: {\n    minWidth: 350,\n    minHeight: 500,\n    left: '75%',\n    top: '50%',\n    transform: `translate(-75%, -50%)`,\n    position: 'absolute',\n    textAlign: 'center',\n    backgroundColor: lightGrey\n  },\n  h100: {\n    height: '100%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  actions: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  cardCopy: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: `translate(-50%, -50%)`,\n    margin: '0',\n    width: '80%',\n  }\n}));\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/styles.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/tools.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/LookerHelpers/defaults.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/LookerHelpers/pblsession.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/LeftDrawer.js",["306","307"],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/TopBar.js",["308"],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/Dashboard.js",["309","310","311","312","313","314","315","316","317","318","319","320","321","322","323"],"import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Box, Grid, Card } from '@material-ui/core'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport useStyles from './styles.js';\nimport { EmbedHighlight } from '../../Highlights/Highlight'; //ooops\nimport AppContext from '../../../contexts/AppContext';\nimport FilterBar from './FilterBar';\nimport { Loader } from '../../Accessories/Loader';\nimport { VerticalSplit, HorizontalSplit } from '@material-ui/icons';\nimport EmbeddedDashboardContainer from './EmbeddedDashboardContainer';\n\n\n\nconst { validIdHelper } = require('../../../tools');\n\nexport default function Dashboard(props) {\n  // console.log('Dashboard');\n  const { staticContent: { lookerContent }, staticContent: { type } } = props;\n\n  const { clientSession, codeShow, sdk, corsApiCall, theme, isReady, selectedMenuItem } = useContext(AppContext)\n  const { lookerUser, lookerHost } = clientSession;\n\n  const demoComponentType = type || 'code flyout';\n  const topBarBottomBarHeight = 112;\n\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState(undefined);\n  const [dashboardObj, setDashboardObj] = useState({});\n  const [dashboardOptions, setDashboardOptions] = useState({});\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const [tileToggleValue, setTileToggleValue] = useState('');\n  const [visColorToggleValue, setVisColorToggleValue] = useState('#2d4266');\n  const [lightThemeToggleValue, setLightThemeToggleValue] = useState(true);\n  const [fontThemeSelectValue, setFontThemeSelectValue] = useState(\"arial\");\n  const [expansionPanelHeight, setExpansionPanelHeight] = useState(0);\n  const [horizontalLayout, setHorizontalLayout] = useState(false);\n  const [drawerOpen, setDrawerOpen] = useState(true);\n\n  const isThemeableDashboard = lookerContent[0].dynamicVisConfig ? true : false;\n  const darkThemeBackgroundColor = theme.palette.fill.main;\n\n  const classes = useStyles();\n\n  //condtional theming for dark mode :D\n  let paletteToUse = !lightThemeToggleValue && isThemeableDashboard ?\n    {\n      palette: {\n        type: 'dark',\n        background: { paper: darkThemeBackgroundColor, default: darkThemeBackgroundColor },\n      }\n    }\n    :\n    { palette: { ...theme.palette } }\n\n  const themeToUse = React.useMemo(\n    () =>\n      createMuiTheme(\n        paletteToUse\n      ),\n    [lightThemeToggleValue, lookerContent],\n  );\n\n  const handleTileToggle = (event, newValue) => {\n    setTileToggleValue(newValue)\n    const filteredLayout = _.filter(dashboardOptions.layouts[0].dashboard_layout_components, (row) => {\n      return (lookerContent[0].dynamicFieldLookUp[newValue].indexOf(dashboardOptions.elements[row.dashboard_element_id].title) > -1)\n    })\n\n    const newDashboardLayout = {\n      ...dashboardOptions.layouts[0],\n      dashboard_layout_components: filteredLayout\n    }\n    dashboardObj.setOptions({ \"layouts\": [newDashboardLayout] })\n  };\n\n  const handleVisColorToggle = (event, newValue) => {\n\n    // console.log(\"handleVisColorToggle\");\n    // console.log({ isThemeableDashboard })\n\n    let newColorSeries = lookerContent[0].dynamicVisConfig.colors[newValue];\n    // console.log('0000')\n    // console.log({ ...dashboardOptions.elements })\n    let newDashboardElements = { ...dashboardOptions.elements };\n\n    Object.keys(newDashboardElements).map(key => {\n      if (newDashboardElements[key].vis_config.series_colors) {\n        Object.keys(newDashboardElements[key].vis_config.series_colors).map((innerKey, index) => {\n          newDashboardElements[key].vis_config.series_colors[innerKey] = newColorSeries[index] || newColorSeries[0];\n        })\n      }\n      if (newDashboardElements[key].vis_config.custom_color) {\n        newDashboardElements[key].vis_config.custom_color = newColorSeries[newColorSeries.length - 2];\n      }\n      if (newDashboardElements[key].vis_config.map_value_colors) {\n        newDashboardElements[key].vis_config.map_value_colors.map((item, index) => {\n          newDashboardElements[key].vis_config.map_value_colors[index] = newColorSeries[index] || newColorSeries[0];\n        })\n      }\n      // loss some fidelity here\n      if (newDashboardElements[key].vis_config.series_cell_visualizations) {\n        Object.keys(newDashboardElements[key].vis_config.series_cell_visualizations).map((innerKey, index) => {\n          if (newDashboardElements[key].vis_config.series_cell_visualizations[innerKey].hasOwnProperty(\"palette\")) {\n            newDashboardElements[key].vis_config.series_cell_visualizations[innerKey][\"palette\"] = { ...lookerContent[0].dynamicVisConfig.series_cell_visualizations[newValue] }\n          }\n        })\n      }\n      if (newDashboardElements[key].vis_config.header_font_color) {\n        newDashboardElements[key].vis_config.header_font_color = newColorSeries[newColorSeries.length - 2];\n      }\n      if (isThemeableDashboard) {\n        // console.log(\"are we here????\");\n        if (newDashboardElements[key].vis_config.map_tile_provider) {\n          newDashboardElements[key].vis_config.map_tile_provider = lightThemeToggleValue ? \"light\" : \"dark\";\n        }\n\n      }\n    })\n    // console.log('1111')\n    // console.log({ newDashboardElements })\n\n    setVisColorToggleValue(newValue)\n    dashboardObj.setOptions({ \"elements\": { ...newDashboardElements } })\n  };\n\n  const handleThemeChange = (event, newValue) => {\n    let themeName = '';\n    if (typeof newValue === \"boolean\") {//handleModeToggle\n      setLightThemeToggleValue(newValue)\n      themeName = newValue ? `light_${fontThemeSelectValue}` : `dark_${fontThemeSelectValue}`\n    } else { //handleFontToggle\n      themeName = lightThemeToggleValue ? `light_${newValue}` : `dark_${newValue}`\n      setFontThemeSelectValue(newValue)\n    }\n    corsApiCall(performLookerApiCalls, [lookerContent, themeName])\n  }\n\n  useEffect(() => {\n    console.log(\"useEffect outer\");\n    console.log({ lookerUser });\n    console.log({ isReady });\n    if (isReady) {\n      console.log(\"useEffect inner\")\n      let themeName = lightThemeToggleValue ? 'light' : 'dark';\n      themeName += `_${fontThemeSelectValue}`;\n      corsApiCall(performLookerApiCalls, [[...lookerContent], themeName])\n      setApiContent(undefined);\n      setHorizontalLayout(false);\n      setDrawerOpen(true);\n    }\n  }, [lookerUser, isReady, selectedMenuItem])\n\n  useEffect(() => {\n    if (Object.keys(dashboardOptions).length && Object.keys(dashboardObj).length\n      && lookerContent[0].dynamicFieldLookUp) //necessary\n    {\n      handleTileToggle(null, tileToggleValue ? tileToggleValue : \"Inventory\");\n      handleVisColorToggle(null, visColorToggleValue ? visColorToggleValue : '#2d4266');\n    }\n  }, [dashboardOptions]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n    setExpansionPanelHeight(horizontalLayout ? $('.MuiExpansionPanel-root:visible').innerHeight() || 0 : 0)\n  })\n\n  useEffect(() => {\n    setHeight((window.innerHeight - topBarBottomBarHeight));\n    setExpansionPanelHeight(horizontalLayout ? $('.MuiExpansionPanel-root:visible').innerHeight() || 0 : 0)\n  }, [horizontalLayout])\n\n\n  useEffect(() => {\n    setApiContent(undefined);\n  }, [])\n\n  const performLookerApiCalls = function (lookerContent, dynamicTheme) {\n\n    setIFrame(0)\n    $(`.embedContainer.${validIdHelper(demoComponentType)}:visible`).html('')\n    lookerContent.map(async lookerContent => {\n      //dashboard creation\n      let dashboardId = lookerContent.id;\n      let themeToUse = dynamicTheme && isThemeableDashboard ?\n        dynamicTheme :\n        lookerContent.theme ?\n          lookerContent.theme :\n          'atom_fashion';\n\n      LookerEmbedSDK.createDashboardWithId(dashboardId) //dashboardSlug\n        .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${dashboardId}`))\n        .withClassName('iframe')\n        .withNext()\n        // .withNext(lookerContent.isNext || false) //how can I make this dynamic based on prop??\n        .withTheme(themeToUse)\n        .withParams({ 'schedule_modal': 'true' })\n        .on('page:property:change', (event) => {\n          // console.log('page property is changing!!!!')\n          changeHeight(event)\n        }) // dashboards-next\n        .on('dashboard:loaded', (event) => {\n          setDashboardOptions(event.dashboard.options)\n        })\n        // .on('drillmenu:click', (event) => {\n        //   drillMenuClick(event)\n        // })\n        .build()\n        .connect()\n        .then((dashboard) => {\n          setIFrame(1)\n          setDashboardObj(dashboard)\n          let modifiedBaseUrl = clientSession.lookerBaseUrl.substring(0, clientSession.lookerBaseUrl.lastIndexOf(\":\"));\n          LookerEmbedSDK.init(modifiedBaseUrl)\n        })\n        .catch((error) => {\n          // console.error('Connection error', error)\n        })\n      //additional api calls\n      //only want to perform when there's not apiContent\n      if (lookerContent.hasOwnProperty('filters') //&& !apiContent\n      ) {\n        // setApiContent(undefined)\n        // get inline query from usecase file & set user attribute dynamically\n        // iterating over filters\n        let orderedArrayForApiContent = []\n        lookerContent.filters.map(async (item, index) => {\n          if (lookerContent.inlineQueries[index]) {\n            let jsonQuery = lookerContent.inlineQueries[index];\n            jsonQuery.filters = {\n              ...jsonQuery.filters,\n              [item.desiredFilterName]: lookerUser.user_attributes.brand\n            };\n            let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: jsonQuery }));\n            let queryResultsForDropdown = [];\n            let desiredProperty = Object.keys(lookerResponseData[0])[0];\n\n            for (let i = 0; i < lookerResponseData.length; i++) {\n              queryResultsForDropdown.push({\n                'label': lookerResponseData[i][desiredProperty],\n                'trend': (lookerResponseData[i]['trend']) ? lookerResponseData[i]['trend'] : undefined\n              })\n            }\n            orderedArrayForApiContent[index] = queryResultsForDropdown\n          }\n          setApiContent([...orderedArrayForApiContent])\n        })\n      }\n    })\n  }\n\n  const customFilterAction = (dashboardId, filterName, newFilterValue) => {\n    if (Object.keys(dashboardObj).length) {\n      dashboardObj.updateFilters({ [filterName]: newFilterValue })\n      dashboardObj.run()\n    }\n  }\n\n  // const drillMenuClick = (event) => {\n  //   const basicLookerUser = lookerUser.user_attributes.permission_level === 'basic' ? true : false;\n  //   if (basicLookerUser) {\n  //     togglePayWallModal()\n  //     return { cancel: (basicLookerUser) ? true : false }\n  //   }\n  // }\n\n  const changeHeight = (event) => {\n    // console.log('changeHeight')\n    // console.log('event', event)\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}\n    >\n      <ThemeProvider theme={themeToUse}>\n        <Card elevation={1} className={`${classes.padding30} ${classes.height100Percent}`}>\n          <div\n            className={`${classes.root} ${classes.height100Percent}`}\n          >\n            <Grid\n              container\n              spacing={3}\n            >\n              {/* could be improved */}\n              {lookerContent[0].hasOwnProperty(\"filters\") ?\n\n                < FilterBar {...props}\n                  classes={classes}\n                  apiContent={apiContent}\n                  customFilterAction={customFilterAction}\n                  tileToggleValue={tileToggleValue}\n                  handleTileToggle={handleTileToggle}\n                  visColorToggleValue={visColorToggleValue}\n                  handleVisColorToggle={handleVisColorToggle}\n                  lightThemeToggleValue={lightThemeToggleValue}\n                  fontThemeSelectValue={fontThemeSelectValue}\n                  handleThemeChange={handleThemeChange}\n                  horizontalLayout={horizontalLayout}\n                  setHorizontalLayout={setHorizontalLayout}\n                  drawerOpen={drawerOpen}\n                  setDrawerOpen={setDrawerOpen}\n                />\n                :\n                ''}\n\n              {\n                iFrameExists\n                  ? ''\n                  :\n                  <Loader classes={classes}\n                    height={height}\n                    expansionPanelHeight={expansionPanelHeight} />\n              }\n\n              <EmbeddedDashboardContainer\n                classes={classes}\n                lookerContent={lookerContent}\n                type={demoComponentType}\n                width={lookerContent[0].hasOwnProperty(\"filters\") ? horizontalLayout ? 12 : drawerOpen ? 9 : 12 : 12}\n              />\n\n              {codeShow ?\n                <Grid item sm={6}\n                  className={`${classes.positionFixedTopRight}`}\n                >\n                  <CodeFlyout {...props}\n                    classes={classes}\n                    lookerUser={lookerUser}\n                    height={height}\n                  />\n                </Grid>\n                : ''}\n\n            </Grid>\n          </div>\n        </Card>\n      </ThemeProvider>\n    </ div>\n  )\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/MonetizationModal/MonetizationModal.js",["324","325","326"],"import _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppContext from '../../../contexts/AppContext';\nimport {\n  Modal, Fade, Grid, Card, CardContent, CardActions, Button, Typography, Divider, List, ListItem, ListItemText\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab'\nimport { ListItemIcon } from '@material-ui/core'; //already declared\nimport { Check } from '@material-ui/icons';\nimport useStyles from './styles.js';\nimport { lookerUserPermissions } from '../../../LookerHelpers/defaults';\nconst { validIdHelper } = require('../../../tools');\n\nfunction getModalStyle() {\n  const top = 10 //+ rand();\n  const left = 50 //+ rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${left}%, -${top}%)`,\n  };\n}\n\nexport default function MonetizationModal(props) {\n  // console.log('MonetizationModal')\n  let { clientSession, payWallModal, setPaywallModal, handleSwitchLookerUser } = useContext(AppContext)\n\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n\n  const modalListMap = {\n    'basic': [\n      '6 months of order data history',\n      'Atom Merchant Dashboards',\n      'Download PDFs, CSVs'\n    ],\n    'advanced': [\n      'Full year of order data history',\n      'Drill to row level information',\n      'Download row level information',\n      'Schedule dashboards for delivery (to you or others)',\n      'Set alerts and key threshold notifications'],\n    'premium': [\n      '2 Full years of order data history',\n      'Analyze your own data and save custom reports',\n      'View premium level, productivity enhancing reports',\n      'Share your reports with colleagues in Atom',\n      'Text message alerts',\n      // 'Notify active shoppers on Atom',\n      // 'Apply Atom’s advanced AI insights to stay ahead of trends'\n    ]\n  }\n\n\n  return (\n    < Modal\n      className={`${classes.modal} `}\n      open={payWallModal.show || false}\n      onClose={() => setPaywallModal({})}\n    >\n      <Fade in={payWallModal.show || false}>\n        <div\n          style={modalStyle}\n          className={`${classes.paper} ${classes.padding30}`}>\n          <Grid container\n            spacing={3}>\n            {Object.keys(lookerUserPermissions).map(key => {\n              return (\n                <Grid item sm={4}\n                  key={validIdHelper(`monetizationModal-gridItem-${key}`)}\n                >\n                  <Card className={`${classes.card} ${classes[key]}`}\n                    elevation={1}\n                    style={key === clientSession.lookerUser.user_attributes.permission_level ? {\n                      // transform: 'scale(1.05)',\n                      // transition: 'transform .2s',\n                      backgroundColor: '#5F6BD8',\n                      color: '#ffffff',\n                      height: 519\n                    } : {\n                        height: 519\n                      }}\n                    onClick={() => {\n                      handleSwitchLookerUser(key, 'permission')\n                      setPaywallModal({})\n                    }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" display=\"justify\">\n                        {_.capitalize(key)}\n                      </Typography>\n                      <Typography\n                        display=\"justify\">\n                        <Rating\n                          name=\"read-only\"\n                          value={key === 'basic' ? \"3\" : key === \"advanced\" ? \"4\" : \"5\"}\n                          readOnly /></Typography>\n                      <Typography variant=\"subtitle1\" style={{ fontStyle: 'italic' }}>\n                        {key === 'basic' ?\n                          'Drive your business with clear KPIs' :\n                          key === 'advanced' ?\n                            'Deeper insights, operations' :\n                            'Drive your business with Atom'\n                        }\n                      </Typography>\n\n                      <Divider className={`${classes.divider} `} />\n\n                      <List className={classes.root}>\n                        {\n                          modalListMap[key].map((item, index) => (\n                            <ListItem dense={true}\n                              className={classes.font875}\n                              key={`monetizationModal-ListItem-${key}-${index}`}\n                            >\n                              <ListItemIcon\n                              >\n                                <Check fontSize=\"small\" />\n                              </ListItemIcon>\n                              <ListItemText primary={item} />\n                            </ListItem>\n                          ))\n                        }\n                      </List>\n                    </CardContent>\n                    <CardActions disableSpacing={false}>\n                      <Button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        // disabled={key === lookerUser.user_attributes.permission_level ? true : false}\n                        fullWidth\n                        onClick={() => {\n                          handleSwitchLookerUser(key, 'permission')\n                          setPaywallModal({})\n                        }}\n                        style={key === clientSession.lookerUser.user_attributes.permission_level ? { color: '#ffffff', borderColor: \"#ffffff\" } : {}}>\n                        {key === clientSession.lookerUser.user_attributes.permission_level ? \"Active\" :\n                          Object.keys(modalListMap).indexOf(clientSession.lookerUser.user_attributes.permission_level) < Object.keys(modalListMap).indexOf(key) ?\n                            'Upgrade' :\n                            'Switch'}\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              )\n            })}\n          </Grid>\n        </div >\n      </Fade >\n    </Modal >\n  );\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/QueryBuilder/QueryBuilder.js",["327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357"],"import $ from 'jquery';\nimport _ from 'lodash';\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputLabel, MenuItem, FormControl,\n  Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,\n  TableSortLabel, FormControlLabel, Switch, Chip, Divider\n} from '@material-ui/core'\nimport { ExpandMore, Search, Done } from '@material-ui/icons';\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./QueryBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { TabPanel, a11yProps, descendingComparator, getComparator, stableSort } from './helpers.js';\nimport AppContext from '../../../contexts/AppContext';\nimport { lookerUserTimeHorizonMap } from '../../../LookerHelpers/defaults';\nimport { Loader } from '../../Accessories/Loader';\n\n\nconst { validIdHelper, prettifyString } = require('../../../tools');\n\nexport default function QueryBuilder(props) {\n  // console.log('QueryBuilder')\n\n  const { clientSession, setPaywallModal, show, codeShow, sdk, corsApiCall } = useContext(AppContext)\n  const { userProfile, lookerUser, lookerHost } = clientSession\n\n\n  const topBarBottomBarHeight = 112;\n  const sideBarWidth = 240 + 152; //24 + 24 + 30 + 30 + 12 + 12 + 10 + 10\n  const [value, setValue] = useState(0);\n  const [apiContent, setApiContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const [width, setWidth] = useState((window.innerWidth - sideBarWidth));\n  const [expansionPanelHeight, setExpansionPanelHeight] = useState(0);\n\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, } = props;\n\n\n  // const handleChange = (event, newValue) => {\n  //   handleTabChange(0);\n  //   setValue(newValue);\n  // };\n\n  useEffect(() => {\n    // call this is filterBar instead to make field chip dynamic\n    // lookerContent.map(lookerContent => {\n    //   setTimeout(() => performLookerApiCalls(lookerContent.queryBody, lookerContent.resultFormat), 100);\n    // })\n    setClientSideCode(rawSampleCode);\n    // setApiContent([])\n  }, [lookerContent, lookerUser])\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setHeight((window.innerHeight - topBarBottomBarHeight))\n      setWidth((window.innerWidth - sideBarWidth))\n      setExpansionPanelHeight($('.MuiExpansionPanel-root:visible').innerHeight() || 0)\n\n    });\n  })\n\n\n  const performLookerApiCalls = async (newQuery, resultFormat) => {\n    let apiContentCopy = { ...apiContent }\n    apiContentCopy.status = 'running';\n    setApiContent(apiContentCopy)\n\n    let timer = Date.now();\n\n    let lookerCreateQueryResponseData = await sdk.ok(sdk.create_query(newQuery))\n    let lookerCreateTaskResponseData = await sdk.ok(sdk.create_query_task({\n      body: {\n        query_id: lookerCreateQueryResponseData.id,\n        result_format: resultFormat || 'json_detail'//lookerContent[0].resultFormat || 'json'\n      }\n    }))\n\n    let taskInterval = setInterval(async () => {\n      let lookerCheckTaskResponseData = await sdk.ok(sdk.query_task_results(lookerCreateTaskResponseData.id, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }));\n\n      if (lookerCheckTaskResponseData.status === 'complete') {\n        clearInterval(taskInterval);\n        setApiContent(lookerCheckTaskResponseData)\n        // setServerSideCode(lookerCreateTaskResponseData.code)\n      }\n\n      //time out after 30 seconds\n      if ((timer + (30 * 1000)) < Date.now()) {\n        clearInterval()\n        setApiContent([])\n      }\n    }, 1000)\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`\n      ${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowYScroll}`\n      }\n      >\n        <Grid container\n          key={validIdHelper(type)} >\n          <div className={`${classes.root}`}>\n            <Grid item sm={12}>\n              <FilterBar {...props}\n                classes={classes}\n                action={performLookerApiCalls}\n                corsApiCall={corsApiCall}\n              />\n            </Grid>\n            {apiContent.status === 'running' ?\n\n              <Loader classes={classes}\n                height={height}\n                expansionPanelHeight={expansionPanelHeight} />\n\n              : apiContent.data && apiContent.data.length ?\n                <Box>\n                  <Grid container\n                    spacing={3}\n                    className={`${classes.noContainerScroll}`}>\n                    {codeShow ?\n                      <Grid item sm={6}\n                        className={`${classes.positionFixedTopRight}`}\n                      >\n                        <CodeFlyout {...props}\n                          classes={classes}\n                          lookerUser={lookerUser}\n                          height={height}\n                        />\n                      </Grid> : ''}\n                    <Divider className={classes.divider} />\n                    <Grid item sm={12}>\n                      <Box className={`${classes.w100}`} mt={2}>\n                        < EnhancedTable\n                          {...props}\n                          classes={classes}\n                          rows={apiContent.data}\n                          lookerContent={lookerContent}\n                          width={width}\n                        />\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Box>\n                :\n                <Grid item sm={12} >\n                  <Typography variant=\"h6\" component=\"h6\" className={`${classes.gridTitle} ${classes.textCenter}`}>\n                    No results found, try a new query<br />\n                  </Typography>\n                </Grid>\n            }\n          </div >\n        </Grid >\n      </Card>\n    </div >\n  )\n}\n/**\n * seems inconsistent that filterbar performs performLookerApiCalls here??\n */\n\nfunction FilterBar(props) {\n  // console.log('FilterBar');\n\n\n  const { clientSession, setPaywallModal, show, codeShow, sdk, corsApiCall, isReady } = useContext(AppContext)\n  const { userProfile, lookerUser, lookerHost } = clientSession\n\n  const { staticContent, staticContent: { lookerContent }, classes, action, //lookerUser, corsApiCall \n  } = props;\n\n\n\n  let measureCounter = 0;\n  let dimensionCounter = 0;\n\n\n  const initializeFieldChipDataHelper = () => {\n    let initializedFields = lookerContent[0].queryBody.fields.map((item, index) => {\n      return {\n        key: 'fieldChipData' + index,\n        label: prettifyString(item.substring(item.lastIndexOf('.') + 1, item.length)),\n        datalabel: item,\n        selected: item === 'users.state' || item === 'users.country' || item === 'order_items.total_sale_price' ? true : false,\n        fieldType: lookerContent[0].fieldType[item]\n      }\n    })\n    return initializedFields;\n  }\n\n  const [expanded, setExpanded] = useState(true);\n  const [fieldsChipData, setFieldsChipData] = useState(lookerContent[0].queryBody ? initializeFieldChipDataHelper() : '');\n  const [queryModified, setQueryModified] = useState(true); //set to true initially\n  const [queryShouldRun, setQueryShouldRun] = useState(false); //for lookerUser useEffect\n  const [filtersData, setFilterData] = useState(lookerContent[0].queryBody ? Object.keys(lookerContent[0].queryBody.filters).map((key, index) => {\n    return {\n      key: 'filter' + index,\n      label: key,\n      value: lookerContent[0].queryBody.filters[key],\n      type: lookerContent[0].filterType[key]\n    }\n  }) : '')\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  const handleFieldChipClick = (chip, index) => {\n    let updatedFieldsChipData = [...fieldsChipData]\n    updatedFieldsChipData[index].selected = updatedFieldsChipData[index].selected === false ? true : false\n    setFieldsChipData(updatedFieldsChipData)\n    setQueryModified(true)\n  }\n\n  const handleSelectChange = (index, newValue) => {\n    let updatedFiltersData = [...filtersData]\n    updatedFiltersData[index].value = newValue;\n    setFilterData(updatedFiltersData)\n    setQueryModified(true)\n  }\n\n  const handleQuerySubmit = (event) => {\n    if (queryModified || queryShouldRun) {\n      let newFields = fieldsChipData.filter(chip => chip.selected).map(item => item.datalabel);\n      let currentFilters = {}; //needs to be object\n      filtersData.map((item, index) => {\n        currentFilters[item.label] = item.value\n      })\n      let newQueryObj = { ...lookerContent[0].queryBody };\n      newQueryObj.fields = newFields;\n      newQueryObj.filters = currentFilters;\n\n      corsApiCall(action, [newQueryObj, lookerContent[0].resultFormat]);\n\n      setQueryModified(false)\n      setQueryShouldRun(false)\n    } //else console.log('elllse')\n  }\n\n\n\n  useEffect(() => {\n    // console.log('useEffect lookerUser')\n    if (isReady) {\n      let updatedFiltersData = [...filtersData]\n      updatedFiltersData[3].value = lookerUserTimeHorizonMap[lookerUser.user_attributes.permission_level] || \"182 days\";\n      setFilterData(updatedFiltersData);\n      setFieldsChipData(initializeFieldChipDataHelper())\n\n      setQueryShouldRun(true);\n\n    }\n  }, [lookerUser, isReady]);\n\n  useEffect(() => {\n    // console.log('useEffect queryShouldRun')\n    if (queryShouldRun) {\n      handleQuerySubmit();\n      setQueryModified(false);\n      setQueryShouldRun(false);\n    }\n  }, [queryShouldRun])\n\n\n  const datePermissionMap = {\n    'basic': [\"1 week\", \"1 month\", \"3 months\", \"last 182 days\"]\n  }\n  datePermissionMap.advanced = [...datePermissionMap.basic, \"last 365 days\"]\n  datePermissionMap.premium = [...datePermissionMap.advanced, \"last 730 days\"]\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} elevation={0}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMore />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Search /><Typography className={`${classes.heading} ${classes.ml12}`}>Build Query:</Typography>\n        {/* <Typography className={classes.heading}>Build Query:</Typography> */}\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Select Metrics:\n      {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'measure' ?\n                      <Chip\n                        key={item.label}\n                        // key={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        measurecounter={measureCounter += 1}\n                        className={item.selected ? `${classes.orangePrimary} ${classes.m6}` : `${classes.m6}`}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <Done className={classes.dBlock} /> : <Done className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Group By:\n                          {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'dimension' ?\n                      <Chip\n                        key={item.label}\n                        dimensioncounter={dimensionCounter += 1}\n                        className={item.selected ? `${classes.bluePrimary} ${classes.m6}` : `${classes.m6}`}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <Done className={classes.dBlock} /> : <Done className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n\n          <Grid item sm={3}>\n            <Typography variant=\"subtitle1\">\n              Filter By:\n                      </Typography>\n            {filtersData.length ? filtersData.map((item, index) => {\n              return (\n                <FormControl className={item.value.length ? classes.formControl : classes.hidden} key={validIdHelper(`${item.label}FormControl`)}>\n                  {\n                    item.type === 'yesno' ?\n                      <>\n                        <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n                        <Select\n                          labelId={validIdHelper(`${item.label}FilterLabel`)}\n                          id={validIdHelper(`${item.label}FilterSelect`)}\n                          value={item.value}\n                          onChange={(event) => handleSelectChange(index, event.target.value)}\n                        >\n                          <MenuItem value=\"Yes\">Yes</MenuItem>\n                          <MenuItem value=\"No\">No</MenuItem>\n                          <MenuItem value=\"All\">All</MenuItem>\n                        </Select>\n                      </>\n                      : item.type === 'date' ?\n                        <>\n                          <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n\n                          <Select\n                            labelId={validIdHelper(`${item.label}FilterLabel`)}\n                            id={validIdHelper(`${item.label}FilterSelect`)}\n                            value={item.value || '6 months'}\n                            onChange={(event) => handleSelectChange(index, event.target.value)}\n                          >\n                            {lookerUser.user_attributes.permission_level ? datePermissionMap[lookerUser.user_attributes.permission_level].map(item => (\n                              <MenuItem key={validIdHelper(item)} value={item}>{_.capitalize(item)}</MenuItem>\n                            )) : ''}\n                          </Select>\n                        </>\n                        : ''\n                  }\n                </FormControl>\n              )\n            }) : ''}\n          </Grid>\n          <Grid item sm={9}>\n            <br />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"large\"\n              onClick={handleQuerySubmit}\n              disabled={queryModified ? false : true}\n            >Run Query</Button></Grid>\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, rows } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {Object.keys(rows[0]).map((key, index) => (\n          <TableCell\n            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            id={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            align={key.numeric ? 'right' : 'left'}\n            padding={key.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === key ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === key}\n              direction={orderBy === key ? order : 'asc'}\n              onClick={createSortHandler(key)}\n            >\n              {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}\n              {orderBy === key ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  // onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nfunction EnhancedTable(props) {\n  const { rows, classes, lookerContent, width } = props;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(Object.keys(rows[0])[0]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return (\n    <div className={`${classes.root} ${classes.padding10}`}>\n      <ApiHighlight classes={classes} >\n        <TableContainer style={{ maxWidth: width }}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              {...props}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      key={validIdHelper('TableRow-' + index)}\n                      id={validIdHelper('TableRow-' + index)}>\n                      {Object.keys(row).map((key, index) => (\n                        <TableCell\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          className={lookerContent[0].fieldType[key] === 'dimension' ? classes.blueSecondary : classes.orangeSecondary}\n                          align=\"right\">\n                          {row[key].rendered ? row[key].rendered : row[key].value}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </ApiHighlight>\n      <Grid container>\n        <Grid item sm={6}>\n          <FormControlLabel\n            control={<Switch checked={dense} onChange={handleChangeDense} />}\n            label=\"Compact\"\n          /></Grid>\n        <Grid item sm={6}>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          /></Grid>\n      </Grid>\n      <div className={classes.bottomBarSpacer} />\n    </div>\n  );\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/SplashPage.js",["358","359","360","361","362","363","364","365","366","367","368"],"import _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Box, Grid, CircularProgress, Card } from '@material-ui/core'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./SplashPage.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { SingleValueVis } from './SingleValueVis';\nimport { Welcome } from './Welcome';\nimport { PopularAnalysis } from './PopularAnalysis';\nimport AppContext from '../../../contexts/AppContext';\nimport { EmbeddedQuery } from './EmbeddedQuery';\nconst { validIdHelper } = require('../../../tools');\n\n//start of SplashPage Component\nexport default function SplashPage(props) {\n  console.log('SplashPage')\n  //intialize state using hooks\n\n  const topBarBottomBarHeight = 112;\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(1);\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n\n  const { clientSession, highlightShow, codeShow } = useContext(AppContext)\n  const { userProfile, lookerUser, lookerHost } = clientSession\n\n\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type },\n    handleTabChange,\n  } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  const demoComponentType = type || 'code flyout';\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  /**\n   * listen for lookerContent and call \n   * setSampleCode\n  */\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n  }, [lookerContent]);\n\n  /**\n   * What this return  does:\n   * Rendering of actual html elements,\n   * this section is necessary but less relevant to looker functionality itself\n   */\n\n  // console.log({ staticContent })\n  // console.log({ lookerContent })\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowScroll}`}\n      >\n        <Grid container\n          key={validIdHelper(type)}>\n          <div className={classes.root}>\n            {iFrameExists ? '' :\n              <Grid item sm={12} >\n                <Card className={`${classes.card} ${classes.flexCentered}`}>\n                  <CircularProgress className={classes.circularProgress} />\n                </Card>\n              </Grid>\n            }\n            <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n              <Grid container\n                spacing={3}\n                key={`${validIdHelper(demoComponentType + '-outerFragment')}`}\n                className={`${classes.noContainerScroll}`}\n              >\n                {\n                  codeShow ? <Grid item sm={6}\n                    className={`${classes.positionFixedTopRight}`}\n                  >\n                    <CodeFlyout {...props}\n                      classes={classes}\n                      lookerUser={lookerUser}\n                      height={height}\n                    />\n                  </Grid> : ''}\n                {lookerContent.map((lookerContent, innerIndex) => {\n                  return (\n                    <Grid\n                      key={`${validIdHelper(demoComponentType + '-innerFragment-' + innerIndex)}`}\n                      item\n                      sm={parseInt(lookerContent.gridWidth)}\n                    >\n                      {(lookerContent.type === 'welcome') && <Welcome\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\n                      />}\n                      {(lookerContent.type === 'single value') && <SingleValueVis\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\n                      />}\n                      {(lookerContent.type === 'dashboard') && <EmbeddedQuery\n                        {...{ lookerContent, classes, lookerHost }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\n                      />}\n                      {(lookerContent.type === 'popular analysis') && <PopularAnalysis\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\n                      />}\n                    </Grid>\n                  )\n                })}\n              </Grid>\n            </Box >\n          </div >\n        </Grid >\n      </Card >\n    </div >\n  )\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/CustomVis/CustomVis.js",["369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388"],"import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, InputLabel, MenuItem,\n  FormControl, Select, Modal\n} from '@material-ui/core'\nimport { Skeleton } from '@material-ui/lab';\nimport { ExpandMore, FilterList } from '@material-ui/icons';\nimport ModalTable from '../../Material/ModalTable';\nimport { ResponsiveCalendar } from '@nivo/calendar'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./CustomVis.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { format, endOfDay, addDays } from 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport AppContext from '../../../contexts/AppContext';\nimport { Loader } from '../../Accessories/Loader';\n\n\nconst { validIdHelper } = require('../../../tools');\n\nexport default function CustomVis(props) {\n  // console.log('CustomVis')\n  const { clientSession, setPaywallModal, show, codeShow, sdk, corsApiCall, isReady } = useContext(AppContext)\n  const { userProfile, lookerUser, lookerHost } = clientSession\n\n  const topBarBottomBarHeight = 112;\n  const [value, setValue] = useState(0);\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [category, setCategory] = useState('All')\n  const [desiredField, setDesiredField] = useState('')\n  const [apiContent, setApiContent] = useState(undefined);\n  const [open, setOpen] = React.useState(false);\n  const [modalContent, setModalContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const [expansionPanelHeight, setExpansionPanelHeight] = useState(0);\n\n\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange,\n    //lookerUser, lookerHost \n  } = props;\n\n  //handle opening of modal for advanced and premium users\n  const handleModalOpen = async ({ day }) => {\n    let originalInlineQueryCopy = JSON.parse(JSON.stringify(lookerContent[0].inlineQuery));\n    originalInlineQueryCopy.filters = {\n      ...originalInlineQueryCopy.filters,\n      [originalInlineQueryCopy.fields[0]]: day,\n      [originalInlineQueryCopy.fields[1]]: category === \"All\" ? '' : category\n    }\n    originalInlineQueryCopy.total = true;\n    originalInlineQueryCopy.limit = \"25\";\n\n    setOpen(true);\n    let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: originalInlineQueryCopy }));\n    let modalObj = {\n      \"title\": `Detail View for ${day}`,\n      \"body\": lookerResponseData\n    }\n    setModalContent(modalObj);\n  };\n\n  //handle modal close\n  const handleModalClose = () => {\n    setModalContent({})\n    setOpen(false);\n  };\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  const handleFromDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setFromDate(newValueAsDate);\n    }\n  }\n  const handleToDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setToDate(newValueAsDate);\n    }\n  }\n\n  const handleCategory = newValue => {\n    setCategory(newValue)\n  }\n\n  const handleDesiredField = newValue => {\n    setDesiredField(newValue)\n  }\n\n  //format response from initial api call based on LookerContent array\n  //to match format required by Nivo Calendar component\n  let filterData = [];\n  if (apiContent) {\n    //filtering for fromDate, toDate and category\n    filterData = _.filter(apiContent, (row) => {\n      return (row[apiContent.inlineQuery.fields[0]] >= fromDate\n        && row[apiContent.inlineQuery.fields[0]] < toDate\n        && (category === 'All' ? true : row[apiContent.inlineQuery.fields[1]] === category)\n      )\n    })\n    //converting filterDAta to desired format for vis\n    filterData = filterData.map(item => {\n      return {\n        'day': item[apiContent.inlineQuery.fields[0]],\n        'category': item[apiContent.inlineQuery.fields[1]],\n        'value': item[desiredField]\n      }\n    })\n\n    //special exception for category all\n    //need to reduce array by day across categories\n    //destructuing in reduce of value would not work for dynamic var\n    if (category === 'All') {\n      //create array of all unique dates\n      const uniqueDates = [...new Set(filterData.map(item => item.day))];\n      let filteredAndReducedForAll = []\n      //iterate over unique date\n      uniqueDates.map(uniqueDate => {\n        //filter filterData for current unique date\n        let value = _.filter(filterData, row => {\n          return row.day === uniqueDate\n        }).reduce((acc, { value }) => acc + value, 0)\n        let thisObj = {\n          day: uniqueDate,\n          value: value,\n          category: 'All'\n        }\n        filteredAndReducedForAll.push(thisObj)\n\n      })\n      filterData = filteredAndReducedForAll;\n    }\n  }\n\n  useEffect(() => {\n    if (isReady) {\n      corsApiCall(performLookerApiCalls, [lookerContent])\n      setDesiredField(lookerContent[0].desiredFields[0])\n      setClientSideCode(rawSampleCode)\n    }\n  }, [lookerUser, isReady])\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n    setExpansionPanelHeight($('.MuiExpansionPanel-root:visible').innerHeight() || 0)\n\n  })\n\n  const performLookerApiCalls = function (lookerContent) {\n    // console.log('performLookerApiCalls')\n    // console.log({ lookerContent })\n\n    setApiContent(undefined); //set to empty array to show progress bar and skeleton\n    lookerContent.map(async lookerContent => {\n      let { inlineQuery } = lookerContent;\n      inlineQuery.filters = {\n        [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\n      };\n      let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: inlineQuery }));\n\n      // console.log('lookerResponseData', lookerResponseData)\n      lookerResponseData = lookerResponseData.filter(item => {\n        return item[inlineQuery.fields[0]]\n      })\n      let uniqueCategories = ['All'];\n      for (let i = 0; i < lookerResponseData.length; i++) {\n        if (uniqueCategories.indexOf(lookerResponseData[i][inlineQuery.fields[1]]) === -1) {\n          uniqueCategories.push(lookerResponseData[i][inlineQuery.fields[1]])\n        }\n      }\n      lookerResponseData.inlineQuery = inlineQuery;\n      lookerResponseData.uniqueCategories = uniqueCategories;\n      setFromDate(lookerResponseData[lookerResponseData.length - 1][lookerResponseData.inlineQuery.fields[0]]);\n      setToDate(incrementDate(lookerResponseData[0][lookerResponseData.inlineQuery.fields[0]], 1));\n      setApiContent(lookerResponseData)\n    })\n  }\n\n  let nivoColorScale = ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']\n  let googleColorScale = ['#4595EC', '#F3A759', '#E24E3A', '#65AB5A'];\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`\n      ${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowScroll}`\n      }\n      >\n        <Grid container\n          key={validIdHelper(type)} >\n          <div className={`${classes.root} `}>\n\n            {!apiContent ?\n              <Skeleton variant=\"rect\" animation=\"wave\" className={classes.skeleton} />\n              :\n              <FilterBar {...props}\n                classes={classes}\n                apiContent={apiContent}\n                fromDate={fromDate}\n                toDate={toDate}\n                category={category}\n                desiredField={desiredField}\n                handleFromDate={handleFromDate}\n                handleToDate={handleToDate}\n                handleCategory={handleCategory}\n                handleDesiredField={handleDesiredField}\n              />\n            }\n\n\n            {!apiContent ?\n\n              <Loader classes={classes}\n                height={height}\n                expansionPanelHeight={expansionPanelHeight} />\n\n              : apiContent && apiContent.length ?\n                <Box>\n                  <Grid container\n                    spacing={3}\n                    className={`${classes.noContainerScroll}`}>\n                    {codeShow ?\n                      <Grid item sm={6}\n                        className={`${classes.positionFixedTopRight}`}\n                      >\n                        <CodeFlyout {...props}\n                          classes={classes}\n                          lookerUser={lookerUser}\n                          height={height}\n                        />\n                      </Grid> : ''}\n                    <Divider className={classes.divider} />\n                    <Grid item sm={12} >\n\n                      <Box className={`${classes.w100} ${classes.padding10}`} mt={2}>\n\n                        <ApiHighlight height={400} classes={classes}>\n                          <ResponsiveCalendar\n                            data={filterData}\n                            align=\"top\"\n                            from={incrementDate(fromDate, 1)}\n                            to={incrementDate(toDate, 1)}\n                            emptyColor=\"#eeeeee\"\n                            colors={desiredField === lookerContent[0].desiredFields[0] ? googleColorScale : nivoColorScale}\n                            yearSpacing={40}\n                            monthBorderColor=\"#ffffff\"\n                            dayBorderWidth={2}\n                            dayBorderColor=\"#ffffff\"\n                            margin={{ bottom: 40, left: 40 }}\n                            legends={[\n                              {\n                                anchor: 'bottom-right',\n                                direction: 'row',\n                                translateY: 36,\n                                itemCount: 4,\n                                itemWidth: 42,\n                                itemHeight: 36,\n                                itemsSpacing: 14,\n                                itemDirection: 'right-to-left'\n                              }\n                            ]}\n                            onClick={(day, event) => {\n                              if (!day.value) {\n                              } else if (lookerUser.user_attributes.permission_level === 'basic') {\n                                setPaywallModal({\n                                  'show': true,\n                                  'permissionNeeded': 'see_drill_overlay'\n                                });\n                              } else {\n                                corsApiCall(handleModalOpen, [day])\n                                event.stopPropagation();\n                              }\n                            }}\n                          />\n                        </ApiHighlight>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Box> :\n                ''\n            }\n          </div>\n        </Grid >\n        {\n          open ?\n            <ModalTable\n              {...props}\n              open={open}\n              onClose={handleModalClose}\n              classes={classes}\n              modalContent={modalContent}\n            />\n\n            : ''\n        }\n      </Card>\n    </div >\n  )\n}\n//Filter Bar code\nfunction FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\n    apiContent, fromDate, toDate, category, desiredField, handleFromDate, handleToDate, handleCategory, handleDesiredField } = props;\n\n  const [expanded, setExpanded] = useState(true);\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  // console.log('FilterBar')\n  // console.log('fromDate', fromDate)\n  // console.log('toDate', toDate)\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100} elevation={0}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMore />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <FilterList /><Typography className={`${classes.heading} ${classes.ml12}`}>Filter:</Typography>\n\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          {apiContent ?\n            <>\n              <Grid item sm={3}>\n\n                <ApiHighlight classes={classes}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                    >\n                      Metric</InputLabel>\n                    <Select\n                      labelId={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-Select')}`}\n                      value={desiredField}\n                      onChange={(event) => handleDesiredField(event.target.value)}\n                    >\n                      {lookerContent[0].desiredFields.map((item, index) => (\n\n                        <MenuItem\n                          id={validIdHelper(`${item}-${index}`)}\n                          key={validIdHelper(`${item}-${index}`)}\n                          value={item}\n                        >{item.substring(item.lastIndexOf(\".\") + 1, item.length).split(\"_\").map(item => item.charAt(0).toUpperCase() + item.substring(1)).join(\" \")}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </ApiHighlight>\n              </Grid>\n              <Grid item sm={3}>\n                <ApiHighlight classes={classes}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel\n                      id={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                    >\n                      Category</InputLabel>\n                    <Select\n                      labelId={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                      id={`${validIdHelper(type + '-FilterBar-Category-Select')}`}\n                      value={category}\n                      onChange={(event) => handleCategory(event.target.value)}\n                    >\n                      {apiContent.uniqueCategories.map((item, index) => (\n\n                        <MenuItem\n                          id={validIdHelper(`${item}-${index}`)}\n                          key={validIdHelper(`${item}-${index}`)}\n                          value={item}>{item}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </ApiHighlight>\n              </Grid>\n\n              <Grid item sm={3}>\n\n                <ApiHighlight classes={classes}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant=\"inline\"\n                      format=\"MM/dd/yyyy\"\n                      margin=\"normal\"\n                      id=\"fromDate\"\n                      label=\"From date\"\n                      value={fromDate}\n                      onChange={handleFromDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      minDate={apiContent[apiContent.length - 1][apiContent.inlineQuery.fields[0]]}\n                      maxDate={apiContent[0][apiContent.inlineQuery.fields[0]]}\n                    />\n                  </MuiPickersUtilsProvider>\n                </ApiHighlight>\n              </Grid>\n              <Grid item sm={3}>\n                <ApiHighlight classes={classes}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant=\"inline\"\n                      format=\"MM/dd/yyyy\"\n                      margin=\"normal\"\n                      id=\"toDate\"\n                      label=\"To date\"\n                      value={toDate}\n                      onChange={handleToDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      minDate={fromDate}\n                      maxDate={toDate}\n                    />\n                  </MuiPickersUtilsProvider>\n                </ApiHighlight>\n              </Grid>\n            </>\n            : ''}\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel >\n  )\n}\n\nfunction incrementDate(dateInput, increment) {\n  var dateFormatTotime = new Date(dateInput);\n  var increasedDate = new Date(dateFormatTotime.getTime() + (increment * 86400000));\n  return increasedDate.toISOString().split('T')[0];\n}",["389","390"],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/ReportBuilder/ReportBuilder.js",["391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420"],"import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button } from '@material-ui/core'\nimport { TreeView, TreeItem } from '@material-ui/lab';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./ReportBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport '../../Home.css';\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport AppContext from '../../../contexts/AppContext';\nimport { Loader } from '../../Accessories/Loader';\n\nimport { SwapVerticalCircleOutlined } from '@material-ui/icons';\nconst { validIdHelper } = require('../../../tools');\n\n//start of ReportBuilder Component\nexport default function ReportBuilder(props) {\n\n\n  const { clientSession, setPaywallModal, show, codeShow, sdk, corsApiCall, isReady } = useContext(AppContext)\n  const { userProfile, lookerUser, lookerHost } = clientSession;\n\n  const topBarBottomBarHeight = 112;\n  const [iFrameExists, setIFrame] = useState(0);\n  // const [exploreIFrameExists, setExploreIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState([]);\n  const [exploreObj, setExploreObj] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const [expansionPanelHeight, setExpansionPanelHeight] = useState(0);\n\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [qid, setQid] = useState(null);\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type },\n    //activeTabValue, handleTabChange, lookerUser, lookerHost \n  } = props;\n\n  const demoComponentType = type;\n  const tabContent = [...lookerContent]\n\n  const handleChange = (event, newValue) => {\n    if (newValue == 1 && lookerUser.user_attributes.permission_level != 'premium') {\n      // handleChange(0)\n      setPaywallModal({\n        'show': true,\n        'permissionNeeded': 'explore'\n      });\n    } else {\n      setValue(newValue)\n    }\n  };\n\n  useEffect(() => {\n    if (isReady) {\n      corsApiCall(performLookerApiCalls, [lookerContent, !value])\n      setClientSideCode(rawSampleCode)\n    }\n  }, [lookerUser, value, isReady, value]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n    setExpansionPanelHeight($('.MuiExpansionPanel-root:visible').innerHeight() || 0)\n  })\n\n\n  const action = async (contentType, contentId, secondaryAction, qid, exploreId, newReportEmbedContainer) => {\n\n    let iFrameArray = $(\".embedContainer:visible > iframe\")\n\n    let matchingIndex = 0;\n    for (let i = 0; i < iFrameArray.length; i++) {\n      if (iFrameArray[i].classList.contains(contentType) && iFrameArray[i].classList.contains(contentId)) {\n        iFrameArray[i].classList.remove('dNone')\n        matchingIndex = i;\n      } else {\n        iFrameArray[i].classList.add('dNone')\n      }\n    }\n\n    if (secondaryAction === 'edit' || secondaryAction === 'explore') {\n      //save qid to state and use in perform looker api calls\n      setQid(qid);\n      handleChange('edit', 1)\n    } else if (secondaryAction === 'delete') {\n      //remove iframe associated with content that was deleted\n      let indexOfDeletedContent;\n      for (let i = 0; i < iFrameArray.length; i++) {\n        if (iFrameArray[i].classList.contains(contentId)) {\n          indexOfDeletedContent = i;\n        }\n      }\n      let updatedIFrameArray = iFrameArray.slice()\n      updatedIFrameArray.splice(indexOfDeletedContent, 1)\n      for (let i = 0; i < updatedIFrameArray.length; i++) {\n        if (i === 0) {\n          updatedIFrameArray[i].classList.remove('dNone')\n          matchingIndex = i;\n        } else {\n          updatedIFrameArray[i].classList.add('dNone')\n        }\n      }\n      //append updated array\n      $(`#embedContainer-reportbuilder-14`).empty();\n      $(`#embedContainer-reportbuilder-14`).html(updatedIFrameArray);\n\n      let lookerResponse = await sdk.ok(sdk.delete_look(contentId));\n      corsApiCall(performLookerApiCalls, [lookerContent, 1])\n    }\n  }\n\n  const performLookerApiCalls = function (lookerContent, animateLoad) {\n    if (animateLoad) {\n      handleChange('refresh', 0)\n      setIFrame(0)\n      setApiContent([])\n    }\n\n    lookerContent.map(async lookerContent => {\n      if (value === 0 &&\n        lookerContent.type === 'folder') {\n\n        const sharedFolder = await sdk.ok(sdk.folder(lookerContent.id));\n        const embedUser = await sdk.ok(sdk.me())\n\n        for (let h = 0; h < sharedFolder.looks.length; h++) {\n          let look = await sdk.ok(sdk.look(sharedFolder.looks[h].id))\n          let clientId = look.query.client_id;\n          sharedFolder.looks[h].client_id = clientId;\n        }\n\n        let embeddedUserFolder = {}\n        if (lookerUser.user_attributes.permission_level === 'premium') {\n          let embedUserLooks = await sdk.ok(sdk.search_looks({ user_id: embedUser.id }))\n          if (embedUserLooks && embedUserLooks.length) {\n            let embedUserFolderId = embedUserLooks[0].folder_id || null;\n            embeddedUserFolder = await sdk.ok(sdk.folder(embedUserFolderId));\n            for (let i = 0; i < embeddedUserFolder.looks.length; i++) {\n              let look = await sdk.ok(sdk.look(embeddedUserFolder.looks[i].id));\n              let clientId = look.query.client_id;\n              embeddedUserFolder.looks[i].client_id = clientId;\n            }\n          }\n        }\n\n        let lookerResponseData = {\n          sharedFolder,\n          embeddedUserFolder\n        }\n\n        // console.log('lookerResponseData', lookerResponseData)\n\n        let looksToUse = [...lookerResponseData.sharedFolder.looks];\n        if (lookerUser.user_attributes.permission_level === 'premium' &&\n          Object.keys(lookerResponseData.embeddedUserFolder).length) {\n          looksToUse = [\n            ...looksToUse, ...lookerResponseData.embeddedUserFolder.looks\n          ]\n\n        }\n        let dashboardsToUse = [...lookerResponseData.sharedFolder.dashboards]\n        let objToUse = {\n          looks: looksToUse,\n          dashboards: dashboardsToUse\n        }\n        // console.log('objToUse', objToUse)\n        let iFrameArray = $(`.embedContainer.${validIdHelper(demoComponentType)} > iframe`);\n        if (objToUse.looks.length) {\n          objToUse.looks.map((item, index) => {\n\n            let lookId = item.id;\n            let lookIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('look') && iFrameArray[i].classList.contains(lookId)) {\n                lookIsRendered = true;\n              }\n            }\n\n            if (!lookIsRendered) {\n              LookerEmbedSDK.createLookWithId(lookId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('look')\n                .withClassName(lookerResponseData.sharedFolder.looks.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName(index > 0 ? 'dNone' : 'oops')\n                .withClassName(lookId)\n                .build()\n                .connect()\n                .then((look) => {\n                  let modifiedBaseUrl = clientSession.lookerBaseUrl.substring(0, clientSession.lookerBaseUrl.lastIndexOf(\":\"));\n                  LookerEmbedSDK.init(modifiedBaseUrl)\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n            if (index === objToUse.looks.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n\n        if (objToUse.dashboards.length) {\n          objToUse.dashboards.map((item, index) => {\n            let dashboardId = item.id\n            let dashboardIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('dashboard') && iFrameArray[i].classList.contains(dashboardId)) {\n                dashboardIsRendered = true;\n              }\n            }\n            if (!dashboardIsRendered) {\n              LookerEmbedSDK.createDashboardWithId(dashboardId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('dashboard')\n                .withClassName(lookerResponseData.sharedFolder.dashboards.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName('dNone')\n                .withClassName(dashboardId)\n                .build()\n                .connect()\n                .then((dashboard) => {\n                  setTimeout(() => {\n                    // setIFrame(1)\n                  }, 1000)\n                  let modifiedBaseUrl = clientSession.lookerBaseUrl.substring(0, clientSession.lookerBaseUrl.lastIndexOf(\":\"));\n                  LookerEmbedSDK.init(modifiedBaseUrl)\n\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n\n            if (index === objToUse.dashboards.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n        setApiContent(objToUse)\n      } else if (lookerContent.type === 'explore' &&\n        lookerUser.user_attributes.permission_level === 'premium' &&\n        value === 1) {\n        // console.log('inside else ifff')\n        let exploreId = lookerContent.id;\n        // console.log('exploreId', exploreId)\n        $(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`)).html('');\n        //separate logic for embedding explore with qid vs. no qid\n        if (qid) {\n          // console.log('qid ifff')\n          LookerEmbedSDK.createExploreWithId(exploreId)\n            .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n            .withClassName('exploreIframe')\n            .withParams({\n              qid: qid\n            })\n            .on('explore:state:changed', (event) => {\n            })\n            .build()\n            .connect()\n            .then((explore) => {\n              console.log('explore', explore)\n              // setTimeout(() => {\n              setIFrame(1)\n              setExploreObj(explore)\n              // }, 1000)\n\n              let modifiedBaseUrl = clientSession.lookerBaseUrl.substring(0, clientSession.lookerBaseUrl.lastIndexOf(\":\"));\n              LookerEmbedSDK.init(modifiedBaseUrl)\n\n              setQid(null)\n            })\n            .catch((error) => {\n              console.error('Connection error', error)\n            })\n        } else {\n          // console.log('qid else')\n          LookerEmbedSDK.createExploreWithId(exploreId)\n            .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n            .withClassName('exploreIframe')\n            .on('explore:state:changed', (event) => {\n            })\n            .build()\n            .connect()\n            .then((explore) => {\n              // console.log('explore', explore)\n              // setTimeout(() => {\n              setIFrame(1)\n              setExploreObj(explore)\n              // }, 1000)\n              let modifiedBaseUrl = clientSession.lookerBaseUrl.substring(0, clientSession.lookerBaseUrl.lastIndexOf(\":\"));\n              LookerEmbedSDK.init(modifiedBaseUrl)\n\n              // setQid(null)\n            })\n            .catch((error) => {\n              console.error('Connection error', error)\n            })\n        }\n      }\n      // else console.log('ellse')\n    })\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`\n      ${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowYScroll}`\n      }\n      >\n        <Grid container\n          key={validIdHelper(type)} >\n          <div className={classes.root}>\n            {iFrameExists ? '' :\n\n              <Loader classes={classes}\n                height={height}\n                expansionPanelHeight={expansionPanelHeight} />\n            }\n\n            {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\n            <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n              <AppBar position=\"static\" elevation={0}>\n                <Tabs\n                  className={classes.tabs}\n                  value={value}\n                  onChange={handleChange}\n                  aria-label=\"simple tabs example\">\n                  {tabContent.map((item, index) => (\n                    <Tab\n                      key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                      label={index == 1 ?\n                        <div>\n\n                          {lookerUser.user_attributes.permission_level != 'premium' ?\n                            <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} /> : <Icon className={`fa fa-plus ${classes.faSm} ${classes.mr12}`} />}\n                          {item.label}\n                        </div> :\n                        item.label}\n                      className={value === 1 && index === 1 ? `${classes.hidden}` : index == 1 ? `${classes.mlAuto}` : ``}\n                      style={index === 1 ? {\n                        backgroundColor: '#5896E6',\n                        borderRadius: '4px',\n                        color: '#fff',\n                        opacity: '1.0'\n                      } : {}}\n                      {...a11yProps(index)} />\n                  ))}\n                </Tabs>\n              </AppBar>\n              <Box className=\"tabPanelContainer\">\n                <Grid container\n                  spacing={3}\n                  className={`${classes.noContainerScroll}`}>\n                  {codeShow ?\n                    <Grid item sm={6}\n                      className={`${classes.positionFixedTopRight}`}\n                    >\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerUser={lookerUser}\n                        height={height}\n                      />\n                    </Grid> : ''}\n                  {tabContent.map((tabContentItem, tabContentItemIndex) => (\n                    <TabPanel\n                      key={`${validIdHelper(demoComponentType + '-tabPanel-' + tabContentItemIndex)}`}\n                      value={value}\n                      index={tabContentItemIndex}\n                      style={{ width: '100%' }} //weird\n                    >\n                      <Grid container>\n                        {\n                          tabContentItemIndex === 0\n                            ?\n                            <React.Fragment\n                              key={`${validIdHelper(demoComponentType + '-outerFragment-' + tabContentItemIndex)}`}>\n                              <Grid item sm={4} >\n                                <ApiHighlight height={500} classes={classes}>\n                                  <TreeSideBar {...{\n                                    setPaywallModal,\n                                    classes,\n                                    demoComponentType,\n                                    tabContent,\n                                    tabContentItemIndex,\n                                    action,\n                                    apiContent,\n                                    ...props\n                                  }}\n                                  />\n                                </ApiHighlight>\n                              </Grid>\n                              <Grid item sm={8} >\n                                <EmbedHighlight classes={classes}>\n                                  <div\n                                    className={`embedContainer ${validIdHelper(demoComponentType)}`}\n                                    id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                    key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                  >\n                                  </div>\n                                </EmbedHighlight>\n                              </Grid>\n                            </React.Fragment>\n                            :\n                            <Grid item sm={12} >\n                              {/* couldn't get this to work */}\n                              {/* {Object.keys(exploreObj).length ?\n                                <EmbedHighlight classes={classes}>\n                                  <div\n                                    className=\"embedContainer\"\n                                    id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                    key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                  >\n                                  </div>\n                                </EmbedHighlight> :\n                                <Card className={`${classes.card} ${classes.flexCentered}`}\n                                  elevation={0}\n                                  mt={2}\n                                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                                  <CircularProgress className={classes.circularProgress} />\n                                </Card>} */}\n                              <EmbedHighlight classes={classes}>\n                                <div\n                                  className=\"embedContainer\"\n                                  id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                  key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                >\n                                </div>\n                              </EmbedHighlight>\n                            </Grid>\n                        }\n                      </Grid>\n                    </TabPanel>\n                  ))}</Grid>\n              </Box>\n            </Box >\n          </div>\n        </Grid >\n      </Card>\n    </div >\n  )\n}\n\n\nfunction TreeSideBar(props) {\n\n\n  const { clientSession, setPaywallModal, show, codeShow, sdk, corsApiCall } = useContext(AppContext)\n  const { userProfile, lookerUser, lookerHost } = clientSession\n\n  const { staticContent, staticContent: { lookerContent }, classes, demoComponentType, tabContent, tabContentItemIndex, action, apiContent,\n    //lookerUser, setPaywallModal\n  } = props\n  const sharedFolderId = lookerContent[0].type === 'folder' ? lookerContent[0].id : '';\n  let treeCounter = 0;\n  const [selected, setSelected] = useState(2);\n  const expandedArr = Object.keys(apiContent).length ? [\"1\", \"\" + (2 + apiContent[Object.keys(apiContent)[0]].length)] : [];\n  const [expanded, setExpanded] = useState(expandedArr);\n\n  const handleToggle = (event, nodeIds) => {\n    setExpanded(nodeIds);\n  }\n\n  const handleSelect = (event, nodeIds) => {\n    setSelected(nodeIds);\n  };\n\n\n  useEffect(() => {\n    setExpanded(expandedArr);\n    if (selected !== 2) setSelected(2)\n    // let innerTreeItemArray = $(\".innerTreeItem\");\n    // console.log('innerTreeItemArray', innerTreeItemArray)\n    // for (let i = 0; i < innerTreeItemArray.length; i++) {\n    //   console.log('inside forrr', i)\n    //   if (innerTreeItemArray[i].classList.contains('Mui-selected')) {\n    //     console.log('inside iffff')\n    //     innerTreeItemArray[i].classList.remove('Mui-selected')\n    //   } else console.log('elllse')\n    // }\n  }, [apiContent]);\n\n\n  return (\n    <TreeView\n      className={classes.tree}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n      expanded={expanded}\n      onNodeToggle={handleToggle}\n      onNodeSelect={handleSelect}\n    // multiSelect={false}\n    >\n      {apiContent ? Object.keys(apiContent).map((key, outerIndex) => (\n        <React.Fragment\n          key={`${validIdHelper(demoComponentType + '-innerFragment-' + outerIndex)}`}>\n          <TreeItem\n            key={`${validIdHelper(demoComponentType + '-outerTreeItem-' + outerIndex)}`}\n            nodeId={\"\" + (treeCounter += 1)}\n            // treecounter={treeCounter}\n            label={_.capitalize(key)}\n            icon={<Icon className={`fa fa-folder ${classes.icon}`} />}\n            disabled={apiContent[key].length ? false : true}\n          >\n            {\n              apiContent[key].length ?\n                apiContent[key].map((item, index) => (\n                  <TreeItem\n                    key={`${validIdHelper(demoComponentType + '-innerTreeItem-' + treeCounter)}`}\n                    nodeId={\"\" + (treeCounter += 1)}\n                    treecounter={treeCounter}\n                    selected={selected === treeCounter}\n                    className={selected === treeCounter ? `Mui-selected innerTreeItem ${classes.whiteSpaceNoWrap}` : `innerTreeItem ${classes.whiteSpaceNoWrap}`}\n                    contentid={item.id}\n                    label={item.folder_id === sharedFolderId &&\n                      key === 'looks' ?\n                      <div\n                        id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}\n                      >\n                        {/* {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title} */}\n                        <Grid container>\n                          <Grid item sm={8} className={`${classes.overflowHidden}`}>\n                            {item.title}</Grid>\n                          <Grid item sm={4}>\n                            <Button\n                              id={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                              key={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                              size=\"small\"\n                              className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                              onClick={(event) => {\n                                if (lookerUser.user_attributes.permission_level === 'premium') {\n                                  action(\n                                    key.substring(0, key.length - 1),\n                                    item.id,\n                                    'explore',\n                                    item.client_id,\n                                    tabContent[tabContentItemIndex + 1].id,\n                                    validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                  );\n                                  event.stopPropagation();\n                                } else {\n                                  // setPaywallModal();\n\n                                  setPaywallModal({\n                                    'show': true,\n                                    'permissionNeeded': 'explore'\n                                  });\n                                }\n                              }\n                              }\n                              color=\"default\"\n                            >\n                              {lookerUser.user_attributes.permission_level === 'premium' ? 'Explore' : <div> <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} />Explore</div>}\n                            </Button>\n                          </Grid>\n                        </Grid>\n\n\n                      </div>\n                      : key === 'looks' ?\n                        <div\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\n                          <Grid container>\n                            <Grid item sm={6} className={`${classes.overflowHidden}`}>\n                              {/* {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title} */}\n                              {item.title}\n                            </Grid>\n                            <Grid item sm={6}>\n                              <Button\n                                id={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                                key={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                                size=\"small\"\n                                className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                                onClick={(event) => {\n                                  if (lookerUser.user_attributes.permission_level === 'premium') {\n                                    // setSelected(treeCounter);\n                                    action(\n                                      key.substring(0, key.length - 1),\n                                      item.id,\n                                      'edit',\n                                      item.client_id,\n                                      tabContent[tabContentItemIndex + 1].id,\n                                      validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                    );\n                                    event.stopPropagation();\n                                  } else {\n                                    // setPaywallModal();\n\n                                    setPaywallModal({\n                                      'show': true,\n                                      'permissionNeeded': 'explore'\n                                    });\n                                  }\n                                }\n                                }\n                                color=\"primary\"\n                              >\n                                Edit\n                                                                                            </Button>\n                              <Button\n                                id={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                                key={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                                size=\"small\"\n                                className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                                onClick={(event) => {\n                                  if (lookerUser.user_attributes.permission_level === 'premium') {\n                                    // setSelected(treeCounter);\n                                    action(\n                                      key.substring(0, key.length - 1),\n                                      item.id,\n                                      'delete',\n                                      item.client_id,\n                                      tabContent[tabContentItemIndex + 1].id,\n                                      validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                    );\n                                    event.stopPropagation();\n                                  } else {\n                                    // setPaywallModal();\n\n                                    setPaywallModal({\n                                      'show': true,\n                                      'permissionNeeded': 'explore'\n                                    });\n                                  }\n                                }\n                                }\n                                color=\"secondary\"\n                              >\n                                Delete\n                                                                                            </Button>\n                            </Grid>\n                          </Grid>\n\n                        </div>\n                        : <Grid container><Grid item sm={12}>{item.title}</Grid></Grid>\n                    }\n                    onClick={() => {\n                      // setSelected(treeCounter)\n                      action(\n                        key.substring(0, key.length - 1), item.id)\n                    }} />\n\n                ))\n                :\n                ''\n            }\n          </TreeItem>\n\n        </React.Fragment>\n      )) : ''}\n    </TreeView>\n  )\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/styles.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/MonetizationModal/styles.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/QueryBuilder/helpers.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/QueryBuilder/styles.js",["421","422","423","424"],"import { makeStyles } from '@material-ui/core/styles';\nimport { grey, orange } from '@material-ui/core/colors';\n\nconst greyPrimary = grey[400];\nconst greySecondary = grey[100];\nconst orangePrimary = orange[400];\nconst orangeSecondary = orange[100];\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: '8px'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  // table: {\n  //   minWidth: 650,\n  // },\n  // tableContainer: {\n  //   maxHeight: 650,\n  // },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 400\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  bluePrimary: {\n    backgroundColor: 'rgba(69, 149, 236, 1)'\n  },\n  blueSecondary: {\n    backgroundColor: 'rgba(69, 149, 236, .5)',\n  },\n  orangePrimary: {\n    backgroundColor: 'rgba(243, 167, 89, 1)'\n  },\n  orangeSecondary: {\n    backgroundColor: 'rgba(243, 167, 89, .5)'\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  bottomBarSpacer: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  maxHeight600: {\n    maxHeight: 600,\n    overflow: 'scroll'\n  },\n  padding30: {\n    padding: 30\n  },\n  m12: {\n    margin: 12\n  },\n  m6: {\n    margin: 6\n  },\n  height100Percent: {\n    height: '100%',\n    overflow: 'scroll'\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  padding10: {\n    padding: 10\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowYScroll: {\n    overflowY: 'scroll',\n    overflowX: 'hidden'\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  }\n}));","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/styles.js",["425","426","427","428"],"import { makeStyles } from '@material-ui/core/styles';\nimport { red, green } from '@material-ui/core/colors';\nconst redPrimary = red[500];\nconst greenPrimary = green[500];\nconst redDark = red[900];\nconst greenDark = green[900];\nconst redLight = red[100];\nconst greenLight = green[100];\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: 8\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n  },\n  maxHeight200: {\n    maxHeight: 200,\n    height: 200,\n    overflow: 'hidden'\n  },\n  mt30: {\n    marginTop: 30\n  },\n  mb30: {\n    marginBottom: 30\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  cursorPointer: {\n    cursor: 'pointer'\n  },\n  border: {\n    border: '1px solid black'\n  },\n  height800: {\n    height: 800\n  },\n  maxHeight100: {\n    maxHeight: 100,\n    height: 100,\n  },\n  maxHeight400: {\n    maxHeight: 400,\n    height: 400,\n  },\n  minHeight200: {\n    minHeight: 200,\n    overflow: 'scroll'\n  },\n  redNeg: {\n    backgroundColor: redLight,\n    color: redPrimary,\n    fontWeight: 800\n  },\n  greenPos: {\n    backgroundColor: greenLight,\n    color: greenPrimary,\n    fontWeight: 800\n  },\n  padding30: {\n    padding: 30\n  },\n  mb12: {\n    marginBottom: 12\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  overflowVisible: {\n    overflow: 'visible'\n  },\n  maxHeight150: {\n    maxHeight: 150,\n    height: 150,\n  },\n  minHeight150: {\n    minHeight: 150,\n    overflow: 'scroll'\n  },\n  carouselLegend: {\n    backgroundColor: 'rgb(192,192,192, .5)\t !important',\n    textAlign: 'center !important',\n    opacity: `100 !important`,\n    fontWeight: 800,\n    // width: `${25}% !important`,\n  },\n  carouselLegendTitle: {\n    fontSize: '24px !important',\n\n  },\n  carouselLegendBody: {\n    fontSize: '16px !important',\n\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  padding15: {\n    padding: 15\n  },\n  maxHeight75: {\n    maxHeight: 75,\n    height: 75,\n  },\n  overflowYScroll: {\n    overflowY: 'scroll',\n    overflowX: 'hidden'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  height100Percent: {\n    height: '100%'\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  },\n  lookerCardShadow: {\n    border: 'none',\n    borderRadius: '6px',\n    boxShadow: 'rgba(0, 0, 0, 0.11) 0px 2px 12px, rgba(0, 0, 0, 0.04) 0px 1px 4px'\n  },\n  maxHeight60: {\n    maxHeight: 60,\n    height: 60,\n  },\n  maxHeight350: {\n    maxHeight: 350,\n    height: 350,\n  },\n  maxHeight80Percent: {\n    maxHeight: '80%',\n    height: '80%'\n  }\n}));","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/ReportBuilder/helpers.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/ReportBuilder/styles.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/CustomVis/styles.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/BottomBar.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/UserMenu.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/CodeFlyout.js",["429","430","431","432","433"],"import React, { useContext } from 'react';\nimport { Typography, Grid, Fade, ClickAwayListener } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/hljs'; //hehe\nimport AppContext from '../../contexts/AppContext';\n\n//helper function for rendering content in code tab\nexport default function CodeFlyout(props) {\n  const { codeShow, setCodeShow } = useContext(AppContext);\n\n  const { classes, lookerContent, clientSideCode, serverSideCode, lookerUser, permissionNeededCode, height } = props\n  return (\n    // <ClickAwayListener onClickAway={toggleCodeShow} mouseEvent={!codeShow ? false : 'click'}>\n    <Fade in={codeShow || false}>\n      {Object.keys(lookerUser).length ?\n        <Grid container spacing={3}\n          className={`${classes.padding20} ${classes.codeFlyoutContainer}`}\n          style={{ height }}>\n          <Grid item sm={11}>\n            <Typography variant=\"h6\" className={` ${classes.mrAuto}`} style={{ color: 'white' }}>\n              Looker User Object\n            </Typography>\n          </Grid>\n          <Grid item sm={1}\n            style={{ textAlign: 'right' }}\n          >\n            <CloseIcon style={{ color: 'white', cursor: 'pointer' }} onClick={() => setCodeShow()} />\n          </Grid>\n\n          <Grid item sm={12}>\n            <CodeSnippet code={lookerUser} />\n          </Grid>\n        </Grid> : ''\n      }\n    </Fade >\n    // </ClickAwayListener >\n  )\n}\n\nfunction CodeSnippet(props) {\n  // console.log('CodeSnippet');\n  // console.log('props', props);\n  const { code } = props\n  return (\n    <SyntaxHighlighter language=\"json\" style={dracula} showLineNumbers={true} >\n      {typeof code === \"object\" ? JSON.stringify(code, true, 4) : code}\n    </SyntaxHighlighter>)\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/EmbeddedDashboardContainer.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/FilterBar.js",["434","435","436","437","438"],"import _ from 'lodash'\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Grid, Accordion, AccordionSummary, AccordionDetails, Box } from '@material-ui/core'\nimport { ExpandMore, FilterList, VerticalSplit, HorizontalSplit, ChevronLeft, Menu } from '@material-ui/icons';\nimport { Skeleton } from '@material-ui/lab'\nimport FilterBarChildren from './FilterBarChildren'\n\nconst { validIdHelper } = require('../../../tools');\n\nexport default function FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\n    apiContent, customFilterAction, tileToggleValue, handleTileToggle, visColorToggleValue,\n    handleVisColorToggle, lightThemeToggleValue, fontThemeSelectValue, handleThemeChange,\n    horizontalLayout, setHorizontalLayout, drawerOpen, setDrawerOpen\n  } = props;\n\n\n  const [expanded, setExpanded] = useState(true);\n\n  useEffect(() => {\n    if (!expanded) setExpanded(true)\n  }, [horizontalLayout])\n\n\n  return (\n    <Grid item\n      sm={horizontalLayout ? 12 : drawerOpen ? 3 : 'auto'}\n      key={validIdHelper(`${type}-FilterBar-${lookerContent[0].id}`)}>\n      {apiContent ?\n        <Accordion\n          onChange={horizontalLayout ? () => setExpanded(!expanded) : () => { }}\n          expanded={expanded}\n          className={`${classes.w100} MuiExpansionPanel-root`}\n          elevation={0}\n        >\n          <AccordionSummary\n            expandIcon={horizontalLayout ? <ExpandMore /> : \"\"}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            {horizontalLayout ?\n              <VerticalSplit\n                onClick={(e) => {\n                  setHorizontalLayout(!horizontalLayout)\n                }}\n                aria-label=\"vertical view\"\n              />\n              :\n              <>\n                {drawerOpen ?\n                  <>\n                    <ChevronLeft\n                      onClick={() => setDrawerOpen(!drawerOpen)}\n                      aria-label=\"close menu\"\n                    />\n                    <HorizontalSplit\n                      onClick={(e) => {\n                        setExpanded(true)\n                        setHorizontalLayout(!horizontalLayout)\n                      }}\n                      aria-label=\"horizontal view\" />\n                  </> :\n                  <Menu\n                    onClick={() => setDrawerOpen(!drawerOpen)}\n                    aria-label=\"open menu\"\n                  />}\n              </>}\n\n          </AccordionSummary>\n          <Box display={drawerOpen ? \"block\" : \"none\"}>\n            <AccordionDetails >\n              <FilterBarChildren {...props}\n                classes={classes}\n                apiContent={apiContent}\n                customFilterAction={customFilterAction}\n                tileToggleValue={tileToggleValue}\n                handleTileToggle={handleTileToggle}\n                visColorToggleValue={visColorToggleValue}\n                handleVisColorToggle={handleVisColorToggle}\n                lightThemeToggleValue={lightThemeToggleValue}\n                fontThemeSelectValue={fontThemeSelectValue}\n                handleThemeChange={handleThemeChange}\n                horizontalLayout={horizontalLayout}\n                setHorizontalLayout={setHorizontalLayout}\n                lookerContent={lookerContent}\n                type={type}\n              />\n            </AccordionDetails>\n          </Box>\n\n        </Accordion >\n        :\n        <Skeleton variant=\"rect\" animation=\"wave\" className={classes.skeleton} />}\n    </Grid>\n  )\n}\n\n\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/Welcome.js",["439","440","441","442","443","444","445","446","447","448","449","450","451"],"import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\n// import AppContext from '../../../AppContext';\nimport AppContext from '../../../contexts/AppContext';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NaturalLanguage } from './NaturalLanguage';\nconst { validIdHelper } = require('../../../tools');\n\nexport function Welcome({ lookerContent, classes }) {\n  // console.log('Welcome')\n  // const { userProfile, lookerUser } = useContext(AppContext)\n  const { clientSession } = useContext(AppContext)\n  const { userProfile, lookerUser } = clientSession\n\n  // console.log({ userProfile })\n  // console.log({ lookerUser })\n\n  useEffect(() => {\n    // setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  return (\n    <div\n      className={`${classes.overflowScroll} ${classes.padding15}`}\n      style={{ maxHeight: lookerContent.height }}\n    >\n      <Typography variant=\"h4\">Welcome back, {userProfile.givenName}!</Typography>\n      <br />\n      <>\n        {lookerContent.inlineQueries.map((inlineQuery, index) => (\n          <NaturalLanguage\n            key={`${validIdHelper('naturalLanguage-splashPage-' + index)}`}\n            {...{ lookerContent, inlineQuery, index, classes }}\n          />\n        )\n        )}\n      </>\n    </div >\n  );\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/SingleValueVis.js",["452","453","454","455","456","457","458","459","460","461"],"import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../contexts/AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Chip } from '@material-ui/core';\nimport { ResponsiveLine } from '@nivo/line';\nconst { validIdHelper, decodeHtml } = require('../../../tools');\n\nexport function SingleValueVis({ lookerContent, classes }) {\n  // console.log('SingleValueVis')\n  // console.log({ lookerContent })\n\n  const [apiContent, setApiContent] = useState(undefined);\n  const { clientSession, sdk, corsApiCall, isReady } = useContext(AppContext)\n  const { userProfile, lookerUser } = clientSession;\n\n  let dataObjForSparkline = {}\n\n  useEffect(() => {\n    if (isReady) {\n      let isSubscribed = true\n      corsApiCall(runInlineQuery).then(response => {\n        // console.log({ response })\n        if (isSubscribed) {\n          setApiContent(response)\n        }\n      })\n      return () => isSubscribed = false\n    }\n  }, [lookerUser, isReady])\n\n  const runInlineQuery = async () => {\n\n    // setApiContent(undefined)\n    let { inlineQuery } = lookerContent;\n    let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.resultFormat || 'json', body: inlineQuery }));\n    // console.log({ lookerResponseData })\n    dataObjForSparkline.id = validIdHelper(`singleVisValue-${lookerContent.id}`);\n    dataObjForSparkline.data = [];\n\n    let dataArrForDataObj = [];\n    lookerResponseData.map(item => {\n      if (item[lookerContent.inlineQuery.fields[0]]\n        // && item['order_items.count']['order_items.previous_period'][\"This Period\" ? \"This Period\" : \"Previous Period\"]\n      ) {\n        let thisDataItem = {\n          \"x\": item[lookerContent.inlineQuery.fields[0]].toString(),\n          \"y\": item[lookerContent.inlineQuery.fields[1]] || 0,\n          \"change\": item.change\n        }\n        if (thisDataItem && thisDataItem.y !== \"null\") dataArrForDataObj.push(thisDataItem)\n      }\n    })\n    dataObjForSparkline.data = [...dataArrForDataObj]\n    //setApiContent([dataObjForSparkline])\n    return [dataObjForSparkline]\n  }\n\n  const upOrDownArrow = apiContent && apiContent.length ? isNaN((apiContent[0].data[0].change * 100).toFixed(2)) ? '' : parseInt((apiContent[0].data[0].change * 100).toFixed(0)) >= 0 ? `&uarr;` : `&darr;` : '';\n  const labelText = !apiContent ? '' : lookerContent.chipFormat === \"revenue\" ?\n    `$${(apiContent[0].data && apiContent[0].data[0] ? apiContent[0].data[0].y.toFixed(2) : '').replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}` :\n    lookerContent.chipFormat === \"integer\" ? parseInt(apiContent[0].data && apiContent[0].data[0] ? apiContent[0].data[0].y.toFixed(2) : '') : lookerContent.chipFormat === 'percent' ?\n      `${((apiContent[0].data && apiContent[0].data[0] ? apiContent[0].data[0].y.toFixed(2) : '') * 100)\n      }% `\n      : '';\n  return (\n    <Card className={`${classes.padding15} \n    ${classes.overflowHidden} \n    ${classes.lookerCardShadow}\n    `}\n    >\n      <div\n        style={{\n          height: lookerContent.height,\n        }}\n      >\n        {apiContent ?\n          <React.Fragment>\n            <ApiHighlight height={130} classes={classes} >\n              <Grid container className={`${classes.textCenter} `}>\n                <Grid item sm={12}>\n                  <Typography variant=\"body2\" align=\"left\" color=\"secondary\">\n                    {lookerContent.label}\n                  </Typography>\n                </Grid>\n                <Grid item sm={6}>\n                  <Typography variant=\"subtitle1\" align=\"left\">\n                    <b>{labelText}</b>\n                  </Typography>\n                </Grid>\n                <Grid item sm={6}>\n                  <Chip size=\"small\"\n                    label={`${decodeHtml(upOrDownArrow)} ${parseInt(apiContent[0].data[0].change * 100).toFixed(0)}% `}\n                    className={isNaN((apiContent[0].data[0].change * 100).toFixed(2)) ? '' : parseInt((apiContent[0].data[0].change * 100).toFixed(0)) >= 0 ? classes.greenPos : classes.redNeg}\n                    display=\"inline\"\n                    align=\"right\"\n                  />\n                </Grid>\n              </Grid>\n              <ResponsiveLine\n                data={apiContent}\n                margin={{ top: 25, right: 25, bottom: 25, left: 25 }}\n                xScale={{\n                  type: 'time',\n                  format: '%Y-%m-%d',\n                  precision: 'day',\n                }}\n                yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                axisLeft={{\n                  orient: \"left\",\n                  tickSize: 0,\n                  tickPadding: 5,\n                  tickRotation: 0,\n                  format: () => null\n                }}\n                axisBottom={{\n                  orient: \"bottom\",\n                  tickSize: 0,\n                  tickPadding: 5,\n                  tickRotation: 0,\n                  format: () => null,\n                  // legend: lookerContent.label,\n                  // legendOffset: 15,\n                  // legendPosition: 'middle'\n                }}\n                enablePoints={false}\n                enableGridX={false}\n                enableGridY={false}\n                height={100}\n                colors={lookerContent.visColor}\n                animate={true}\n              />\n            </ApiHighlight>\n          </React.Fragment>\n          :\n          <Grid item sm={12} className={`${classes.flexCentered} `} style={{ height: lookerContent.height }}>\n            <CircularProgress className={classes.circularProgress}\n              style={{ color: `${lookerContent.visColor} ` }} />\n          </Grid>\n        }\n      </div >\n    </Card >\n  );\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Accessories/Loader.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Highlights/Highlight.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/EmbeddedQuery.js",["462","463","464","465","466","467","468","469","470","471","472","473","474","475"],"import $ from 'jquery';\nimport React, { useEffect, useRef, useCallback, useState, useContext } from 'react';\n// import AppContext from '../../../AppContext';\nimport AppContext from '../../../contexts/AppContext';\n\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport { Typography, Grid, Card, CircularProgress, Box, Chip } from '@material-ui/core';\nimport { urlencoded } from 'body-parser';\n\nexport function EmbeddedQuery({ lookerContent, classes, id }) {\n\n  const [iFrameExists, setIFrame] = useState(0);\n  // const { userProfile, lookerUser, show, lookerHost } = useContext(AppContext)\n  const { clientSession, show, sdk, corsApiCall, isReady } = useContext(AppContext)\n  const { userProfile, lookerUser, lookerHost } = clientSession;\n\n  const [apiContent, setApiContent] = useState(undefined);\n\n  useEffect(() => {\n    console.log(\"useEffect outer\");\n    console.log({ lookerUser });\n    console.log({ isReady });\n    if (isReady) {\n      console.log(\"useEffect inner\");\n      fetchData()\n    }\n  }, [lookerUser, isReady])\n\n  const fetchData = async () => {\n    console.log(\"fetchData\")\n    $(`#${id}`).html('')\n    setIFrame(0)\n\n    let queryUrl = encodeURIComponent(`embed/query/atom_fashion/order_items?fields=order_items.created_time,users.name,order_items.total_sale_price,users.approx_location,users.city&f[users.country]=USA&sorts=order_items.created_time+desc&limit=100&query_timezone=America%2FLos_Angeles&vis=%7B%22map_plot_mode%22%3A%22points%22%2C%22heatmap_gridlines%22%3Afalse%2C%22heatmap_gridlines_empty%22%3Afalse%2C%22heatmap_opacity%22%3A0.5%2C%22show_region_field%22%3Atrue%2C%22draw_map_labels_above_data%22%3Atrue%2C%22map_tile_provider%22%3A%22traffic_day%22%2C%22map_position%22%3A%22custom%22%2C%22map_scale_indicator%22%3A%22off%22%2C%22map_pannable%22%3Atrue%2C%22map_zoomable%22%3Atrue%2C%22map_marker_type%22%3A%22circle%22%2C%22map_marker_icon_name%22%3A%22shopping_cart%22%2C%22map_marker_radius_mode%22%3A%22proportional_value%22%2C%22map_marker_units%22%3A%22pixels%22%2C%22map_marker_proportional_scale_type%22%3A%22linear%22%2C%22map_marker_color_mode%22%3A%22fixed%22%2C%22show_view_names%22%3Afalse%2C%22show_legend%22%3Atrue%2C%22quantize_map_value_colors%22%3Afalse%2C%22reverse_map_value_colors%22%3Afalse%2C%22map_latitude%22%3A40.267214274019075%2C%22map_longitude%22%3A-94.70352172851564%2C%22map_zoom%22%3A4%2C%22map_marker_color%22%3A%5B%22%234595EC%22%5D%2C%22series_types%22%3A%7B%7D%2C%22type%22%3A%22looker_map%22%2C%22defaults_version%22%3A1%2C%22hidden_fields%22%3A%5B%22users.name%22%2C%22order_items.created_time%22%5D%7D&filter_config={}&origin=share-expanded&sdk=2&embed_domain=${document.location.origin}`)\n\n    await fetch(`/auth?src=${queryUrl}`)\n      .then(response => response.json())\n      .then(data => {\n        LookerEmbedSDK.createExploreWithUrl(data.url)\n          .appendTo(document.getElementById(id))\n          .withClassName('explore')\n          .withClassName('splashPage')\n          .withClassName(lookerContent.id)\n          .withTheme('atom_fashion')\n          .build()\n          .connect()\n          .then((explore) => {\n            setIFrame(1)\n            let modifiedBaseUrl = clientSession.lookerBaseUrl.substring(0, clientSession.lookerBaseUrl.lastIndexOf(\":\"));\n            LookerEmbedSDK.init(modifiedBaseUrl)\n          })\n          .catch((error) => {\n            // console.log('catch', error)\n            console.error('Connection error', error)\n          })\n      });\n  }\n\n  return (\n\n    <Card className={`${classes.padding15} \n    // ${classes.overflowHidden} \n    ${classes.lookerCardShadow}\n    `}\n    >\n      <div\n        className={`${classes.overflowHidden}`}\n        style={{ height: lookerContent.height }}\n      >\n        {\n          iFrameExists ? '' :\n\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered} ${classes.maxHeight350} ${classes.overflowHidden}`} elevation={0}>\n                <CircularProgress className={classes.circularProgress}\n                />\n              </Card>\n            </Grid>\n        }\n        <Grid container spacing={4}>\n          <Grid item sm={12}>\n            <EmbedHighlight classes={classes}\n              height={iFrameExists ? 350 : 0}\n            >\n              <Typography variant=\"h6\" align=\"center\" color=\"secondary\">\n                {lookerContent.title}\n              </Typography>\n              <div\n                className={`embedContainer embedContainerNoHeader splashPage ${classes.overflowHidden} ${classes.maxHeight80Percent}`}\n                id={id}\n                key={id}\n              >\n              </div>\n            </EmbedHighlight>\n          </Grid></Grid>\n      </div >\n    </Card >\n  );\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/PopularAnalysis.js",["476","477","478","479","480","481","482","483","484","485","486","487","488"],"import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\n// import AppContext from '../../../AppContext';\n// import { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { ResponsiveLine } from '@nivo/line';\nimport { VectorThumbnail } from './VectorThumbnail';\n// import { NaturalLanguage } from './NaturalLanguage';\nconst { validIdHelper } = require('../../../tools');\n\n\n\nexport function PopularAnalysis({ lookerContent, classes }) {\n  const [apiContent, setApiContent] = useState([]);\n\n  return (\n\n    <Card className={`${classes.padding15} \n    ${classes.overflowHidden} \n    ${classes.lookerCardShadow}\n    `}\n    // variant=\"outlined\"\n    >\n      <div\n        className={`${classes.overflowYScroll}`}\n        style={{ height: lookerContent.height }}\n      >\n        <Grid container\n          spacing={3}>\n          <Grid item sm={12}>\n            <Typography variant=\"h6\" align=\"center\" color=\"secondary\">\n              Helpful Dashboards\n          </Typography></Grid>\n          {lookerContent.vectors.map((item, index) => {\n            return (\n              <VectorThumbnail\n                key={`${validIdHelper('vectorThumbnail-splashPage-' + index)}`}\n                {...{ lookerContent, item, classes, index }}\n              />\n            )\n          }\n          )}\n        </Grid>\n\n      </div >\n    </Card>\n  );\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Material/ModalTable.js",["489","490","491"],"import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst { validIdHelper, prettifyString } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 800,\n    maxHeight: 450,\n    overflow: 'scroll',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  table: {\n    maxHeight: 310\n  },\n  card: {\n    minWidth: 275,\n    minHeight: '10rem',\n    boxShadow: 'none'\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\nfunction getModalStyle() {\n  const top = 10 //+ rand();\n  const left = 50 //+ rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${left}%, -${top}%)`,\n  };\n}\n\nexport default function ModalTable(props) {\n  // console.log('ModalTable')\n  // console.log('props', props)\n\n  const classes = useStyles();\n  const { open, onClose, modalContent } = props;\n  const [modalStyle] = React.useState(getModalStyle);\n\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n\n      <div style={modalStyle} className={classes.paper}>\n        <h2 id=\"simple-modal-title\">{modalContent.title}</h2>\n        {modalContent.body ?\n          <TableContainer component={Paper} className={classes.table}>\n            <Table stickyHeader className={classes.table} size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  {Object.keys(modalContent.body[0]).map((key, index) => (\n                    <TableCell align=\"right\"\n                      key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n                      id={validIdHelper(key + '-TableHead-TableCell-' + index)}>\n                      {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}</TableCell>\n\n\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {modalContent.body.map((item, index) => (\n\n                  <TableRow\n                    key={validIdHelper('TableRow-' + index)}\n                    id={validIdHelper('TableRow-' + index)} >\n                    {\n                      Object.keys(item).map(key => (\n                        <TableCell align=\"right\"\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}>\n                          {\n                            modalContent.body[index][key] ?\n                              modalContent.body[index][key].rendered ?\n                                modalContent.body[index][key].rendered :\n                                modalContent.body[index][key].value ?\n                                  modalContent.body[index][key].value :\n                                  typeof modalContent.body[index][key] === 'number' ?\n                                    (Math.round(modalContent.body[index][key] * 100) / 100)//.toLocaleString()\n                                    :\n                                    modalContent.body[index][key] //.toLocaleString() \n                              :\n                              ''\n                          }\n                        </TableCell>\n                      ))\n                    }\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer >\n          :\n\n          <Card className={`${classes.card} ${classes.flexCentered}`}>\n            <CircularProgress className={classes.circularProgress} />\n          </Card>}\n\n      </div >\n    </Modal >\n  )\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/FilterBarChildren.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/NaturalLanguage.js",["492","493","494"],"import React, { useState, useEffect, useContext } from 'react';\nimport AppContext from '../../../contexts/AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight'; //ooops\nimport { Typography, Grid, Chip } from '@material-ui/core';\nconst { validIdHelper, decodeHtml } = require('../../../tools');\n\nexport function NaturalLanguage({ lookerContent, inlineQuery, index, classes }) {\n\n  const [apiContent, setApiContent] = useState(undefined);\n  const { clientSession, sdk, corsApiCall, isReady } = useContext(AppContext);\n  const { userProfile, lookerUser } = clientSession;\n\n  useEffect(() => {\n    if (isReady) {\n      let isSubscribed = true\n      corsApiCall(runInlineQuery).then(response => {\n        if (isSubscribed) {\n          setApiContent(response)\n        }\n      })\n      return () => isSubscribed = false\n    }\n  }, [lookerUser, isReady])\n\n  const runInlineQuery = async () => {\n    // setApiContent(undefined)\n    let clientLookerResponse = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.resultFormat || 'json', body: inlineQuery }));\n    return clientLookerResponse[0];\n  }\n\n  const upOrDownArrow = apiContent ? apiContent.change > 0 ? `&uarr;` : `&darr;` : '';\n\n  return (\n    <Grid item sm={12}>\n      {apiContent ?\n        <React.Fragment >\n          <ApiHighlight classes={classes} >\n            <Typography variant=\"subtitle1\" display=\"inline\">\n              Your {lookerContent.inlineQueriesMap[index]} category, <b>{apiContent['products.category']}</b>, is {apiContent.change > 0 ? 'up ' : 'down '}\n            </Typography>\n            <Chip size=\"small\"\n              label={`${decodeHtml(upOrDownArrow)} ${parseInt(apiContent.change * 100).toFixed(0)}% `}\n              className={apiContent.change > 0 ? classes.greenPos : classes.redNeg}\n              display=\"inline\"\n            />\n            <Typography variant=\"subtitle1\" display=\"inline\">\n              &nbsp;over the past week.\n        </Typography>\n          </ApiHighlight>\n        </React.Fragment>\n        : <div style={{ height: '56px' }}></div>\n\n        // <Grid item sm={12} >\n        //   <Card className={`${classes.card} ${classes.flexCentered}`}>\n        //     <CircularProgress className={classes.circularProgress}\n        //       style={{ color: `${lookerContent.visColor} ` }} />\n        //   </Card>\n        // </Grid>\n      }\n    </Grid >\n  );\n}\n\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/SplashPage/VectorThumbnail.js",["495","496","497","498","499"],"import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport AppContext from '../../../contexts/AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Grid, Divider } from '@material-ui/core';\n\nexport function VectorThumbnail({ lookerContent, classes, item, index }) {\n  // console.log('VectorThumbnail')\n\n  const [svg, setSvg] = useState(undefined)\n  // const { userProfile, lookerUser, show, sdk, corsApiCall } = useContext(AppContext);\n  const { clientSession, sdk, corsApiCall, isReady } = useContext(AppContext)\n  const { userProfile, lookerUser } = clientSession;\n\n  useEffect(() => {\n    let isSubscribed = true\n    if (isReady) {\n      corsApiCall(getThumbnail).then(response => {\n        // console.log({ response })\n        if (isSubscribed) {\n          setSvg(response)\n        }\n      })\n    }\n    return () => isSubscribed = false\n  }, [lookerUser, isReady])\n\n  const getThumbnail = async () => {\n    let clientLookerResponse = await sdk.ok(sdk.content_thumbnail({ type: item.resourceType, resource_id: item.id }));\n    const blob = new Blob([clientLookerResponse], { type: 'image/svg+xml' });\n    let url = URL.createObjectURL(blob);\n    return url;\n  }\n\n  return (\n    <Grid container\n      className={`${classes.cursorPointer}`}\n      spacing={3}\n      component={Link}\n      to={item.url}\n    >\n      {svg ?\n        <>\n          <Grid item sm={1} />\n          <Grid item sm={6}>\n            <ApiHighlight classes={classes}>\n              <div\n                className={` ${classes.maxHeight60} ${classes.textCenter} ${classes.cursorPointer} ${classes.overflowHidden}`}\n              >\n                <img\n                  src={svg}\n                  style={{ width: '100%' }}\n                />\n\n              </div>\n            </ApiHighlight>\n          </Grid>\n          <Grid item sm={4}>\n            <Typography variant=\"subtitle1\"  >{item.label}</Typography>\n          </Grid>\n          {index < 2 ?\n            <Grid item sm={12}>\n              <Divider className={`${classes.divider} ${classes.mb12} ${classes.mt12}`} />\n            </Grid> : ''}\n        </>\n        :\n        ''\n      }\n    </Grid >\n  );\n}","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/SelectFont.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/SwitchTheme.js",["500","501"],"import React from 'react';\nimport { Typography, Grid, Switch } from '@material-ui/core'\nimport { EmbedMethodHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nconst { validIdHelper } = require('../../../tools');\n\nexport default function SwitchTheme({ lookerContent, classes, type, lightThemeToggleValue, handleThemeChange, horizontalLayout }) {\n  return (\n    <Grid item sm={horizontalLayout ? 1 : 12}>\n      <EmbedHighlight classes={classes} >\n        <Typography\n        >{lightThemeToggleValue ? \"Light mode\" : \"Dark mode\"}</Typography>\n\n        <Switch\n          checked={!lightThemeToggleValue}\n          onChange={() => handleThemeChange(null, !lightThemeToggleValue)}\n          color=\"primary\"\n          name=\"light theme toggle\"\n          inputProps={{ 'aria-label': 'primary checkbox' }}\n        />\n\n      </EmbedHighlight>\n    </Grid>\n  )\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/ToggleVisColor.js",["502"],"import _ from 'lodash';\nimport React from 'react';\nimport { Typography, Grid } from '@material-ui/core'\nimport { EmbedMethodHighlight } from '../../Highlights/Highlight';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nconst { validIdHelper } = require('../../../tools');\n\n\nexport default function ToggleVisColor({ lookerContent, classes, type, visColorToggleValue, handleVisColorToggle, horizontalLayout }) {\n  return (\n\n    <Grid item sm={horizontalLayout ? 2 : 12}>\n      <EmbedMethodHighlight classes={classes} >\n        <Typography\n        >Dynamic Vis Color:</Typography>\n        <ToggleButtonGroup\n          value={visColorToggleValue}\n          exclusive\n          onChange={handleVisColorToggle}\n          aria-label=\"text alignment\"\n        >\n          {Object.keys(lookerContent[0].dynamicVisConfig.colors).map(key => {\n            return (\n              <ToggleButton\n                key={validIdHelper(`dynamicDashVisConfigToggle-${key}`)}\n                value={key} aria-label=\"left aligned\">\n                <span className={`${classes.dot}`} style={{\n                  backgroundColor: (lookerContent[0].dynamicVisConfig.colors[key][lookerContent[0].dynamicVisConfig.colors[key].length - 2]\n                    || key)\n                }}></span>\n              </ToggleButton>\n            )\n          })}\n        </ToggleButtonGroup>\n\n      </EmbedMethodHighlight>\n    </Grid>\n  )\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/ToggleTile.js",["503"],"import _ from 'lodash';\nimport React from 'react';\nimport { Typography, Grid } from '@material-ui/core'\nimport { EmbedMethodHighlight } from '../../Highlights/Highlight';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nconst { validIdHelper } = require('../../../tools');\n\n\nexport default function ToggleTile({ lookerContent, classes, type, tileToggleValue, handleTileToggle, horizontalLayout }) {\n  return (\n\n    <Grid item sm={horizontalLayout ? 3 : 12}>\n      <EmbedMethodHighlight classes={classes} >\n        <Typography\n        >\n          Dynamic Tiles:        </Typography>\n        <ToggleButtonGroup\n          value={tileToggleValue}\n          exclusive\n          onChange={handleTileToggle}\n          aria-label=\"text alignment\"\n        >\n          {Object.keys(lookerContent[0].dynamicFieldLookUp).map(key => {\n            return (\n              <ToggleButton\n                key={validIdHelper(`dynamicDashTileToggle-${key}`)}\n                value={key} aria-label=\"left aligned\">\n                {key}\n              </ToggleButton>\n            )\n          })}\n        </ToggleButtonGroup>\n      </EmbedMethodHighlight>\n    </Grid>\n\n  )\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/ToggleApi.js",["504"],"import _ from 'lodash';\nimport React, { useState } from 'react';\nimport { Typography, Grid } from '@material-ui/core'\nimport { EmbedMethodHighlight } from '../../Highlights/Highlight';\nimport { lifetimeRevenueTierMap, lifetimeRevenueTierIconMap } from './helpers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nconst { validIdHelper } = require('../../../tools');\n\nexport default function ToggleApi({ lookerContent, apiContent, index, classes, customFilterAction, type, horizontalLayout }) {\n\n  const [lifetimeRevenueTierValue, setLifetimeRevenueTierValue] = useState('0-24');\n  return (\n    <Grid item sm={horizontalLayout ? 3 : 12}>\n      <EmbedMethodHighlight classes={classes}\n        key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\n        <Typography className={`${classes.heading} ${classes.ml12}  ${classes.verticalAlignTop}`}\n        >\n          {lookerContent[0].filters[index].label}:\n        </Typography>\n        <ToggleButtonGroup\n          value={lifetimeRevenueTierValue}\n          exclusive //for now\n          onChange={(event, newValue) => {\n            setLifetimeRevenueTierValue(newValue)\n            customFilterAction(lookerContent[0].id,\n              lookerContent[0].filters[index].filterName,\n              (newValue) ? newValue : '')\n          }}\n          aria-label=\"ageTier\"\n          className={classes.w100}>\n          >\n      {Array.isArray(apiContent) ? apiContent.map((ageTier, index) => {\n            if (ageTier.label !== \"Undefined\") {\n              const Icon = lifetimeRevenueTierIconMap[ageTier.label];\n              return (\n                <ToggleButton\n                  key={validIdHelper(`${type}-FilterBar-ToggleButton-${lookerContent[0].id}-${index}`)}\n                  value={ageTier.label}\n                  aria-label={ageTier.label}\n                  className={classes.w33}>\n                  <Icon className={classes.mr12} />\n                  {_.capitalize(lifetimeRevenueTierMap[ageTier.label]) || ageTier.label}\n                </ToggleButton>\n              )\n            }\n          }) : ''}\n        </ToggleButtonGroup>\n\n      </EmbedMethodHighlight>\n    </Grid>\n  )\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/RangeSlider.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/helpers.js",["505","506"],"import Usa from \"@svg-maps/usa\";\nimport {\n  SentimentDissatisfied, SentimentSatisfied, SentimentVerySatisfied,\n} from '@material-ui/icons';\n\nexport const customUsa = {\n  ...Usa,\n  label: \"Custom map label\",\n  locations: Usa.locations.map(location => {\n    // Modify each location\n    switch (location.name) {\n      //9\n      case \"Connecticut\":\n      case \"Maine\":\n      case \"Massachusetts\":\n      case \"New Hampshire\":\n      case \"Rhode Island\":\n      case \"Vermont\":\n      case \"New Jersey\":\n      case \"New York\":\n      case \"Pennsylvania\":\n      case \"Delaware\":\n        return { ...location, region: \"Northeast\" }\n      //12\n      case \"Illinois\":\n      case \"Indiana\":\n      case \"Michigan\":\n      case \"Ohio\":\n      case \"Wisconsin\":\n      case \"Iowa\":\n      case \"Kansas\":\n      case \"Minnesota\":\n      case \"Missouri\":\n      case \"Nebraska\":\n      case \"North Dakota\":\n      case \"South Dakota\":\n        return { ...location, region: \"Midwest\" }\n      //16\n      case \"Florida\":\n      case \"Georgia\":\n      case \"Maryland\":\n      case \"North Carolina\":\n      case \"South Carolina\":\n      case \"Virginia\":\n      case \"District of Columbia\":\n      case \"Washington, DC\":\n      case \"West Virginia\":\n      case \"Alabama\":\n      case \"Kentucky\":\n      case \"Mississippi\":\n      case \"Tennessee\":\n      case \"Arkansas\":\n      case \"Louisiana\":\n      case \"Oklahoma\":\n      case \"Texas\":\n        return { ...location, region: \"South\" }\n      //8\n      case \"Arizona\":\n      case \"Colorado\":\n      case \"Idaho\":\n      case \"Montana\":\n      case \"Nevada\":\n      case \"New Mexico\":\n      case \"Utah\":\n      case \"Wyoming\":\n        return { ...location, region: \"Mountain\" }\n      //5\n      case \"Alaska\":\n      case \"California\":\n      case \"Hawaii\":\n      case \"Oregon\":\n      case \"Washington\":\n        return { ...location, region: \"Pacific\" }\n      // default:\n      //   return location\n    }\n  })\n}\nexport const lifetimeRevenueTierMap = {\n  \"0 to 99\": \"low\",\n  \"100 to 499\": \"medium\",\n  \"500 or Above\": \"high\",\n}\nexport const lifetimeRevenueTierIconMap = {\n  \"0 to 99\": SentimentDissatisfied,\n  \"100 to 499\": SentimentSatisfied,\n  \"500 or Above\": SentimentVerySatisfied,\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/MapFilter.js",["507"],"import React, { useState } from 'react';\nimport { Typography, Grid } from '@material-ui/core'\nimport { EmbedMethodHighlight } from '../../Highlights/Highlight';\nimport { CheckboxSVGMap } from \"./CheckboxSvgMapRegion\";\nimport { customUsa } from './helpers';\nconst { validIdHelper } = require('../../../tools');\n\nexport default function MapFilter({ lookerContent, apiContent, index, classes, customFilterAction, type, horizontalLayout }) {\n\n  const [regionValue, setRegionValue] = useState('Pacific, South, Mountain, Midwest, Northeast');\n\n  return (\n    <Grid item sm={horizontalLayout ? 3 : 12}>\n      <EmbedMethodHighlight classes={classes}\n        key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\n        <Typography className={`${classes.heading} ${classes.ml12}  ${classes.verticalAlignTop}`}\n        >\n          {lookerContent[0].filters[index].label}: <b>{regionValue ? regionValue : \"Outside US\"}</b>\n        </Typography>\n\n        <CheckboxSVGMap map={customUsa}\n          onChange={(locations) => {\n\n            let allUniqueRegionsFromSelectedLocations = [];\n            for (let j = 0; j < locations.length; j++) {\n              if (allUniqueRegionsFromSelectedLocations.indexOf(locations[j].region) == -1) {\n                allUniqueRegionsFromSelectedLocations.push(locations[j].region)\n              }\n            }\n            let allUniqueRegionsFromSelectedLocationsCommaSep = allUniqueRegionsFromSelectedLocations.join(\",\")\n            setRegionValue(allUniqueRegionsFromSelectedLocationsCommaSep)\n            customFilterAction(lookerContent[0].id,\n              lookerContent[0].filters[index].filterName,\n              (regionValue) ? regionValue : '')\n          }}\n        />\n      </EmbedMethodHighlight>\n    </Grid>\n  )\n}\n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Accessories/NumberToColoredPercent.js",["508"],"import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport function NumberToColoredPercent( {val, positive_good, abs_val}) {\n  const colors = {\n    up: (positive_good) ? 'green' : 'red',\n    down: (positive_good) ? 'red' : 'green'\n  }\n  const color = (val<0) ? colors.down : (val>0) ? colors.up : 'black'\n  const val_formatted = Math.abs(val).toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 2 })\n  const icon = (val<0) ? '▼' : (val>0) ? '▲' : '—'\n  \n  return (<>\n      <font\n        color={color}\n      >\n        {`${icon} ${val_formatted}`}\n      </font>\n  </>\n  )\n}",["509","510"],"/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Demo/Dashboard/CheckboxSvgMapRegion.js",["511","512","513","514","515","516"],"import { CheckboxSVGMap } from \"react-svg-map\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport _ from 'lodash'\n\nCheckboxSVGMap.prototype.toggleLocation = function toggleLocation(event) {\n  const location = event.target;\n  // console.log('location', location)\n  // console.log('this.props.map', this.props.map)\n\n  this.setState(prevState => {\n\n    // Copy old state\n    let selectedLocations = [...prevState.selectedLocations];\n    // console.log('selectedLocations', selectedLocations)\n    // console.log('selectedLocations.length', selectedLocations.length)\n\n    //get region associated with states\n    let regionFromStateClicked = _.find(this.props.map.locations, { id: location.id })\n    //all states belonging to region clicked\n    let statesWithinRegionClicked = _.filter(this.props.map.locations, { region: regionFromStateClicked.region })\n\n    //get all unique regions\n    let allUniqueRegions = [];\n    for (let i = 0; i < this.props.map.locations.length; i++) {\n      if (allUniqueRegions.indexOf(this.props.map.locations[i].region) == -1) {\n        allUniqueRegions.push(this.props.map.locations[i].region)\n      }\n    }\n    //get unique regions only from selected locations\n    let allUniqueRegionsFromSelectedLocations = [];\n    for (let j = 0; j < selectedLocations.length; j++) {\n      if (allUniqueRegionsFromSelectedLocations.indexOf(selectedLocations[j].region) == -1) {\n        allUniqueRegionsFromSelectedLocations.push(selectedLocations[j].region)\n      }\n    }\n    //determine which regions are not currently selected\n    let regionsNotCurrentlySelected = _.differenceBy(allUniqueRegions, allUniqueRegionsFromSelectedLocations);\n    let allRegionsNotSelected = [...regionsNotCurrentlySelected, regionFromStateClicked.region];\n    //filter all locations, for all the regions that have not been selected :D\n    let statesNotWithinRegionsClicked = _.filter(this.props.map.locations, (location) => {\n      return allRegionsNotSelected.indexOf(location.region) == -1\n    });\n\n    if (location.attributes['aria-checked'].value === 'true') {\n      // Delete location\n      selectedLocations = statesNotWithinRegionsClicked;\n    } else {\n      // Add location\n      selectedLocations.push(...statesWithinRegionClicked);\n    }\n\n    // Call onChange event handler\n    if (this.props.onChange) {\n      this.props.onChange(selectedLocations);\n    }\n\n    // Return new state\n    return { selectedLocations };\n  });\n}\n\nCheckboxSVGMap.prototype.componentDidMount = function componentDidMount() {\n  //override components for all states to be selected initially\n  this.setState({ selectedLocations: this.props.map.locations });\n}\n\nexport { CheckboxSVGMap as CheckboxSVGMap } \n","/Users/eglasenk/projects/pbl-demo/client/atom/src/components/Home/theme.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/content/index.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/content/SignInContent.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/index.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/QueryBuilderContent.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/SalesCalendarContent.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/SalesOverviewContent.js",["517"],"/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/SplashPageContent.js",["518","519","520","521","522","523"],"/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/ReportBuilderContent.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/WebAnalyticsContent.js",[],"/Users/eglasenk/projects/pbl-demo/client/atom/src/content/Demo/InventoryOverviewContent.js",[],{"ruleId":"524","replacedBy":"525"},{"ruleId":"526","replacedBy":"527"},{"ruleId":"528","severity":1,"message":"529","line":3,"column":8,"nodeType":"530","messageId":"531","endLine":3,"endColumn":17},{"ruleId":"532","severity":1,"message":"533","line":122,"column":49,"nodeType":"534","messageId":"535","endLine":122,"endColumn":51},{"ruleId":"528","severity":1,"message":"536","line":40,"column":9,"nodeType":"530","messageId":"531","endLine":40,"endColumn":31},{"ruleId":"528","severity":1,"message":"537","line":1,"column":8,"nodeType":"530","messageId":"531","endLine":1,"endColumn":9},{"ruleId":"528","severity":1,"message":"538","line":2,"column":29,"nodeType":"530","messageId":"531","endLine":2,"endColumn":38},{"ruleId":"528","severity":1,"message":"539","line":3,"column":10,"nodeType":"530","messageId":"531","endLine":3,"endColumn":20},{"ruleId":"528","severity":1,"message":"540","line":3,"column":22,"nodeType":"530","messageId":"531","endLine":3,"endColumn":31},{"ruleId":"528","severity":1,"message":"541","line":3,"column":33,"nodeType":"530","messageId":"531","endLine":3,"endColumn":44},{"ruleId":"528","severity":1,"message":"542","line":21,"column":5,"nodeType":"530","messageId":"531","endLine":21,"endColumn":8},{"ruleId":"528","severity":1,"message":"543","line":22,"column":5,"nodeType":"530","messageId":"531","endLine":22,"endColumn":16},{"ruleId":"528","severity":1,"message":"544","line":22,"column":18,"nodeType":"530","messageId":"531","endLine":22,"endColumn":32},{"ruleId":"545","severity":1,"message":"546","line":60,"column":15,"nodeType":"547","endLine":62,"endColumn":17},{"ruleId":"548","severity":1,"message":"549","line":86,"column":6,"nodeType":"550","endLine":86,"endColumn":8,"suggestions":"551"},{"ruleId":"548","severity":1,"message":"552","line":99,"column":6,"nodeType":"550","endLine":99,"endColumn":21,"suggestions":"553"},{"ruleId":"528","severity":1,"message":"554","line":2,"column":16,"nodeType":"530","messageId":"531","endLine":2,"endColumn":22},{"ruleId":"555","severity":1,"message":"556","line":11,"column":3,"nodeType":"557","messageId":"558","endLine":11,"endColumn":7},{"ruleId":"528","severity":1,"message":"559","line":5,"column":74,"nodeType":"530","messageId":"531","endLine":5,"endColumn":78},{"ruleId":"532","severity":1,"message":"533","line":57,"column":50,"nodeType":"534","messageId":"535","endLine":57,"endColumn":52},{"ruleId":"528","severity":1,"message":"560","line":15,"column":24,"nodeType":"530","messageId":"531","endLine":15,"endColumn":40},{"ruleId":"528","severity":1,"message":"561","line":4,"column":10,"nodeType":"530","messageId":"531","endLine":4,"endColumn":13},{"ruleId":"528","severity":1,"message":"562","line":9,"column":10,"nodeType":"530","messageId":"531","endLine":9,"endColumn":24},{"ruleId":"528","severity":1,"message":"563","line":13,"column":10,"nodeType":"530","messageId":"531","endLine":13,"endColumn":23},{"ruleId":"528","severity":1,"message":"564","line":13,"column":25,"nodeType":"530","messageId":"531","endLine":13,"endColumn":40},{"ruleId":"528","severity":1,"message":"565","line":25,"column":23,"nodeType":"530","messageId":"531","endLine":25,"endColumn":33},{"ruleId":"528","severity":1,"message":"566","line":30,"column":10,"nodeType":"530","messageId":"531","endLine":30,"endColumn":15},{"ruleId":"528","severity":1,"message":"567","line":30,"column":17,"nodeType":"530","messageId":"531","endLine":30,"endColumn":25},{"ruleId":"548","severity":1,"message":"568","line":65,"column":5,"nodeType":"550","endLine":65,"endColumn":43,"suggestions":"569"},{"ruleId":"532","severity":1,"message":"533","line":91,"column":47,"nodeType":"534","messageId":"535","endLine":91,"endColumn":49},{"ruleId":"532","severity":1,"message":"533","line":93,"column":95,"nodeType":"534","messageId":"535","endLine":93,"endColumn":97},{"ruleId":"532","severity":1,"message":"533","line":101,"column":81,"nodeType":"534","messageId":"535","endLine":101,"endColumn":83},{"ruleId":"532","severity":1,"message":"533","line":107,"column":108,"nodeType":"534","messageId":"535","endLine":107,"endColumn":110},{"ruleId":"548","severity":1,"message":"570","line":156,"column":6,"nodeType":"550","endLine":156,"endColumn":45,"suggestions":"571"},{"ruleId":"548","severity":1,"message":"572","line":165,"column":6,"nodeType":"550","endLine":165,"endColumn":24,"suggestions":"573"},{"ruleId":"548","severity":1,"message":"574","line":167,"column":3,"nodeType":"530","endLine":167,"endColumn":12,"suggestions":"575"},{"ruleId":"528","severity":1,"message":"576","line":2,"column":17,"nodeType":"530","messageId":"531","endLine":2,"endColumn":25},{"ruleId":"528","severity":1,"message":"538","line":2,"column":27,"nodeType":"530","messageId":"531","endLine":2,"endColumn":36},{"ruleId":"528","severity":1,"message":"577","line":3,"column":10,"nodeType":"530","messageId":"531","endLine":3,"endColumn":20},{"ruleId":"528","severity":1,"message":"578","line":6,"column":3,"nodeType":"530","messageId":"531","endLine":6,"endColumn":9},{"ruleId":"528","severity":1,"message":"579","line":6,"column":11,"nodeType":"530","messageId":"531","endLine":6,"endColumn":15},{"ruleId":"528","severity":1,"message":"580","line":6,"column":17,"nodeType":"530","messageId":"531","endLine":6,"endColumn":20},{"ruleId":"528","severity":1,"message":"559","line":6,"column":45,"nodeType":"530","messageId":"531","endLine":6,"endColumn":49},{"ruleId":"528","severity":1,"message":"581","line":6,"column":51,"nodeType":"530","messageId":"531","endLine":6,"endColumn":67},{"ruleId":"528","severity":1,"message":"582","line":16,"column":10,"nodeType":"530","messageId":"531","endLine":16,"endColumn":18},{"ruleId":"528","severity":1,"message":"583","line":16,"column":20,"nodeType":"530","messageId":"531","endLine":16,"endColumn":29},{"ruleId":"528","severity":1,"message":"584","line":16,"column":31,"nodeType":"530","messageId":"531","endLine":16,"endColumn":51},{"ruleId":"528","severity":1,"message":"585","line":27,"column":26,"nodeType":"530","messageId":"531","endLine":27,"endColumn":41},{"ruleId":"528","severity":1,"message":"586","line":27,"column":43,"nodeType":"530","messageId":"531","endLine":27,"endColumn":47},{"ruleId":"528","severity":1,"message":"587","line":28,"column":11,"nodeType":"530","messageId":"531","endLine":28,"endColumn":22},{"ruleId":"528","severity":1,"message":"565","line":28,"column":36,"nodeType":"530","messageId":"531","endLine":28,"endColumn":46},{"ruleId":"528","severity":1,"message":"566","line":33,"column":10,"nodeType":"530","messageId":"531","endLine":33,"endColumn":15},{"ruleId":"528","severity":1,"message":"567","line":33,"column":17,"nodeType":"530","messageId":"531","endLine":33,"endColumn":25},{"ruleId":"528","severity":1,"message":"588","line":35,"column":10,"nodeType":"530","messageId":"531","endLine":35,"endColumn":24},{"ruleId":"528","severity":1,"message":"589","line":36,"column":10,"nodeType":"530","messageId":"531","endLine":36,"endColumn":24},{"ruleId":"528","severity":1,"message":"590","line":36,"column":26,"nodeType":"530","messageId":"531","endLine":36,"endColumn":43},{"ruleId":"528","severity":1,"message":"591","line":42,"column":11,"nodeType":"530","messageId":"531","endLine":42,"endColumn":24},{"ruleId":"528","severity":1,"message":"585","line":182,"column":26,"nodeType":"530","messageId":"531","endLine":182,"endColumn":41},{"ruleId":"528","severity":1,"message":"586","line":182,"column":43,"nodeType":"530","messageId":"531","endLine":182,"endColumn":47},{"ruleId":"528","severity":1,"message":"592","line":182,"column":49,"nodeType":"530","messageId":"531","endLine":182,"endColumn":57},{"ruleId":"528","severity":1,"message":"542","line":182,"column":59,"nodeType":"530","messageId":"531","endLine":182,"endColumn":62},{"ruleId":"528","severity":1,"message":"587","line":183,"column":11,"nodeType":"530","messageId":"531","endLine":183,"endColumn":22},{"ruleId":"528","severity":1,"message":"565","line":183,"column":36,"nodeType":"530","messageId":"531","endLine":183,"endColumn":46},{"ruleId":"528","severity":1,"message":"591","line":185,"column":11,"nodeType":"530","messageId":"531","endLine":185,"endColumn":24},{"ruleId":"532","severity":1,"message":"533","line":242,"column":37,"nodeType":"534","messageId":"535","endLine":242,"endColumn":39},{"ruleId":"548","severity":1,"message":"593","line":269,"column":6,"nodeType":"550","endLine":269,"endColumn":27,"suggestions":"594"},{"ruleId":"548","severity":1,"message":"595","line":278,"column":6,"nodeType":"550","endLine":278,"endColumn":22,"suggestions":"596"},{"ruleId":"528","severity":1,"message":"597","line":402,"column":20,"nodeType":"530","messageId":"531","endLine":402,"endColumn":36},{"ruleId":"528","severity":1,"message":"598","line":402,"column":54,"nodeType":"530","messageId":"531","endLine":402,"endColumn":65},{"ruleId":"528","severity":1,"message":"599","line":402,"column":67,"nodeType":"530","messageId":"531","endLine":402,"endColumn":75},{"ruleId":"528","severity":1,"message":"537","line":1,"column":8,"nodeType":"530","messageId":"531","endLine":1,"endColumn":9},{"ruleId":"528","severity":1,"message":"600","line":5,"column":8,"nodeType":"530","messageId":"531","endLine":5,"endColumn":21},{"ruleId":"528","severity":1,"message":"566","line":20,"column":10,"nodeType":"530","messageId":"531","endLine":20,"endColumn":15},{"ruleId":"528","severity":1,"message":"601","line":21,"column":24,"nodeType":"530","messageId":"531","endLine":21,"endColumn":33},{"ruleId":"528","severity":1,"message":"602","line":22,"column":26,"nodeType":"530","messageId":"531","endLine":22,"endColumn":43},{"ruleId":"528","severity":1,"message":"590","line":23,"column":26,"nodeType":"530","messageId":"531","endLine":23,"endColumn":43},{"ruleId":"528","severity":1,"message":"603","line":26,"column":26,"nodeType":"530","messageId":"531","endLine":26,"endColumn":39},{"ruleId":"528","severity":1,"message":"587","line":27,"column":11,"nodeType":"530","messageId":"531","endLine":27,"endColumn":22},{"ruleId":"528","severity":1,"message":"591","line":33,"column":11,"nodeType":"530","messageId":"531","endLine":33,"endColumn":24},{"ruleId":"528","severity":1,"message":"604","line":36,"column":9,"nodeType":"530","messageId":"531","endLine":36,"endColumn":16},{"ruleId":"528","severity":1,"message":"605","line":43,"column":9,"nodeType":"530","messageId":"531","endLine":43,"endColumn":21},{"ruleId":"528","severity":1,"message":"578","line":5,"column":3,"nodeType":"530","messageId":"531","endLine":5,"endColumn":9},{"ruleId":"528","severity":1,"message":"579","line":5,"column":11,"nodeType":"530","messageId":"531","endLine":5,"endColumn":15},{"ruleId":"528","severity":1,"message":"580","line":5,"column":17,"nodeType":"530","messageId":"531","endLine":5,"endColumn":20},{"ruleId":"528","severity":1,"message":"581","line":5,"column":45,"nodeType":"530","messageId":"531","endLine":5,"endColumn":61},{"ruleId":"528","severity":1,"message":"606","line":5,"column":69,"nodeType":"530","messageId":"531","endLine":5,"endColumn":78},{"ruleId":"528","severity":1,"message":"607","line":7,"column":24,"nodeType":"530","messageId":"531","endLine":7,"endColumn":29},{"ruleId":"528","severity":1,"message":"608","line":17,"column":18,"nodeType":"530","messageId":"531","endLine":17,"endColumn":26},{"ruleId":"528","severity":1,"message":"609","line":19,"column":35,"nodeType":"530","messageId":"531","endLine":19,"endColumn":53},{"ruleId":"528","severity":1,"message":"586","line":28,"column":43,"nodeType":"530","messageId":"531","endLine":28,"endColumn":47},{"ruleId":"528","severity":1,"message":"587","line":29,"column":11,"nodeType":"530","messageId":"531","endLine":29,"endColumn":22},{"ruleId":"528","severity":1,"message":"565","line":29,"column":36,"nodeType":"530","messageId":"531","endLine":29,"endColumn":46},{"ruleId":"528","severity":1,"message":"566","line":32,"column":10,"nodeType":"530","messageId":"531","endLine":32,"endColumn":15},{"ruleId":"528","severity":1,"message":"588","line":40,"column":10,"nodeType":"530","messageId":"531","endLine":40,"endColumn":24},{"ruleId":"528","severity":1,"message":"591","line":48,"column":11,"nodeType":"530","messageId":"531","endLine":48,"endColumn":24},{"ruleId":"528","severity":1,"message":"610","line":48,"column":85,"nodeType":"530","messageId":"531","endLine":48,"endColumn":99},{"ruleId":"528","severity":1,"message":"605","line":79,"column":9,"nodeType":"530","messageId":"531","endLine":79,"endColumn":21},{"ruleId":"532","severity":1,"message":"533","line":135,"column":34,"nodeType":"534","messageId":"535","endLine":135,"endColumn":36},{"ruleId":"548","severity":1,"message":"611","line":158,"column":6,"nodeType":"550","endLine":158,"endColumn":27,"suggestions":"612"},{"ruleId":"548","severity":1,"message":"613","line":160,"column":3,"nodeType":"530","endLine":160,"endColumn":12,"suggestions":"614"},{"ruleId":"528","severity":1,"message":"591","line":321,"column":11,"nodeType":"530","messageId":"531","endLine":321,"endColumn":24},{"ruleId":"524","replacedBy":"615"},{"ruleId":"526","replacedBy":"616"},{"ruleId":"528","severity":1,"message":"617","line":4,"column":29,"nodeType":"530","messageId":"531","endLine":4,"endColumn":39},{"ruleId":"528","severity":1,"message":"581","line":4,"column":58,"nodeType":"530","messageId":"531","endLine":4,"endColumn":74},{"ruleId":"528","severity":1,"message":"618","line":18,"column":10,"nodeType":"530","messageId":"531","endLine":18,"endColumn":36},{"ruleId":"528","severity":1,"message":"586","line":25,"column":43,"nodeType":"530","messageId":"531","endLine":25,"endColumn":47},{"ruleId":"528","severity":1,"message":"587","line":26,"column":11,"nodeType":"530","messageId":"531","endLine":26,"endColumn":22},{"ruleId":"528","severity":1,"message":"565","line":26,"column":36,"nodeType":"530","messageId":"531","endLine":26,"endColumn":46},{"ruleId":"528","severity":1,"message":"619","line":32,"column":10,"nodeType":"530","messageId":"531","endLine":32,"endColumn":20},{"ruleId":"528","severity":1,"message":"588","line":33,"column":10,"nodeType":"530","messageId":"531","endLine":33,"endColumn":24},{"ruleId":"528","severity":1,"message":"589","line":34,"column":10,"nodeType":"530","messageId":"531","endLine":34,"endColumn":24},{"ruleId":"528","severity":1,"message":"590","line":34,"column":26,"nodeType":"530","messageId":"531","endLine":34,"endColumn":43},{"ruleId":"528","severity":1,"message":"591","line":41,"column":11,"nodeType":"530","messageId":"531","endLine":41,"endColumn":24},{"ruleId":"620","severity":1,"message":"621","line":49,"column":18,"nodeType":"622","messageId":"558","endLine":49,"endColumn":20},{"ruleId":"620","severity":1,"message":"623","line":49,"column":70,"nodeType":"622","messageId":"558","endLine":49,"endColumn":72},{"ruleId":"548","severity":1,"message":"611","line":65,"column":6,"nodeType":"550","endLine":65,"endColumn":41,"suggestions":"624"},{"ruleId":"548","severity":1,"message":"613","line":67,"column":3,"nodeType":"530","endLine":67,"endColumn":12,"suggestions":"625"},{"ruleId":"528","severity":1,"message":"626","line":104,"column":11,"nodeType":"530","messageId":"531","endLine":104,"endColumn":24},{"ruleId":"528","severity":1,"message":"627","line":113,"column":11,"nodeType":"530","messageId":"531","endLine":113,"endColumn":25},{"ruleId":"532","severity":1,"message":"533","line":175,"column":44,"nodeType":"534","messageId":"535","endLine":175,"endColumn":46},{"ruleId":"532","severity":1,"message":"533","line":211,"column":49,"nodeType":"534","messageId":"535","endLine":211,"endColumn":51},{"ruleId":"620","severity":1,"message":"621","line":343,"column":36,"nodeType":"622","messageId":"558","endLine":343,"endColumn":38},{"ruleId":"620","severity":1,"message":"623","line":346,"column":72,"nodeType":"622","messageId":"558","endLine":346,"endColumn":74},{"ruleId":"620","severity":1,"message":"621","line":351,"column":91,"nodeType":"622","messageId":"558","endLine":351,"endColumn":93},{"ruleId":"528","severity":1,"message":"586","line":459,"column":43,"nodeType":"530","messageId":"531","endLine":459,"endColumn":47},{"ruleId":"528","severity":1,"message":"592","line":459,"column":49,"nodeType":"530","messageId":"531","endLine":459,"endColumn":57},{"ruleId":"528","severity":1,"message":"542","line":459,"column":59,"nodeType":"530","messageId":"531","endLine":459,"endColumn":62},{"ruleId":"528","severity":1,"message":"628","line":459,"column":64,"nodeType":"530","messageId":"531","endLine":459,"endColumn":75},{"ruleId":"528","severity":1,"message":"587","line":460,"column":11,"nodeType":"530","messageId":"531","endLine":460,"endColumn":22},{"ruleId":"528","severity":1,"message":"565","line":460,"column":36,"nodeType":"530","messageId":"531","endLine":460,"endColumn":46},{"ruleId":"528","severity":1,"message":"591","line":462,"column":11,"nodeType":"530","messageId":"531","endLine":462,"endColumn":24},{"ruleId":"548","severity":1,"message":"629","line":492,"column":6,"nodeType":"550","endLine":492,"endColumn":18,"suggestions":"630"},{"ruleId":"528","severity":1,"message":"631","line":4,"column":7,"nodeType":"530","messageId":"531","endLine":4,"endColumn":18},{"ruleId":"528","severity":1,"message":"632","line":5,"column":7,"nodeType":"530","messageId":"531","endLine":5,"endColumn":20},{"ruleId":"528","severity":1,"message":"633","line":6,"column":7,"nodeType":"530","messageId":"531","endLine":6,"endColumn":20},{"ruleId":"528","severity":1,"message":"634","line":7,"column":7,"nodeType":"530","messageId":"531","endLine":7,"endColumn":22},{"ruleId":"528","severity":1,"message":"635","line":5,"column":7,"nodeType":"530","messageId":"531","endLine":5,"endColumn":14},{"ruleId":"528","severity":1,"message":"636","line":6,"column":7,"nodeType":"530","messageId":"531","endLine":6,"endColumn":16},{"ruleId":"555","severity":1,"message":"637","line":183,"column":3,"nodeType":"557","messageId":"558","endLine":183,"endColumn":17},{"ruleId":"555","severity":1,"message":"638","line":186,"column":3,"nodeType":"557","messageId":"558","endLine":186,"endColumn":17},{"ruleId":"528","severity":1,"message":"639","line":2,"column":34,"nodeType":"530","messageId":"531","endLine":2,"endColumn":51},{"ruleId":"528","severity":1,"message":"640","line":12,"column":20,"nodeType":"530","messageId":"531","endLine":12,"endColumn":33},{"ruleId":"528","severity":1,"message":"588","line":12,"column":35,"nodeType":"530","messageId":"531","endLine":12,"endColumn":49},{"ruleId":"528","severity":1,"message":"589","line":12,"column":51,"nodeType":"530","messageId":"531","endLine":12,"endColumn":65},{"ruleId":"528","severity":1,"message":"641","line":12,"column":79,"nodeType":"530","messageId":"531","endLine":12,"endColumn":99},{"ruleId":"528","severity":1,"message":"537","line":1,"column":8,"nodeType":"530","messageId":"531","endLine":1,"endColumn":9},{"ruleId":"528","severity":1,"message":"617","line":3,"column":10,"nodeType":"530","messageId":"531","endLine":3,"endColumn":20},{"ruleId":"528","severity":1,"message":"642","line":4,"column":22,"nodeType":"530","messageId":"531","endLine":4,"endColumn":32},{"ruleId":"528","severity":1,"message":"591","line":11,"column":11,"nodeType":"530","messageId":"531","endLine":11,"endColumn":24},{"ruleId":"548","severity":1,"message":"643","line":22,"column":6,"nodeType":"550","endLine":22,"endColumn":24,"suggestions":"644"},{"ruleId":"528","severity":1,"message":"576","line":1,"column":17,"nodeType":"530","messageId":"531","endLine":1,"endColumn":25},{"ruleId":"528","severity":1,"message":"645","line":1,"column":38,"nodeType":"530","messageId":"531","endLine":1,"endColumn":53},{"ruleId":"528","severity":1,"message":"646","line":1,"column":55,"nodeType":"530","messageId":"531","endLine":1,"endColumn":61},{"ruleId":"528","severity":1,"message":"647","line":4,"column":22,"nodeType":"530","messageId":"531","endLine":4,"endColumn":26},{"ruleId":"528","severity":1,"message":"648","line":4,"column":28,"nodeType":"530","messageId":"531","endLine":4,"endColumn":42},{"ruleId":"528","severity":1,"message":"649","line":4,"column":44,"nodeType":"530","messageId":"531","endLine":4,"endColumn":55},{"ruleId":"528","severity":1,"message":"650","line":4,"column":57,"nodeType":"530","messageId":"531","endLine":4,"endColumn":68},{"ruleId":"528","severity":1,"message":"651","line":4,"column":70,"nodeType":"530","messageId":"531","endLine":4,"endColumn":79},{"ruleId":"528","severity":1,"message":"652","line":4,"column":81,"nodeType":"530","messageId":"531","endLine":4,"endColumn":87},{"ruleId":"528","severity":1,"message":"581","line":4,"column":89,"nodeType":"530","messageId":"531","endLine":4,"endColumn":105},{"ruleId":"528","severity":1,"message":"653","line":4,"column":107,"nodeType":"530","messageId":"531","endLine":4,"endColumn":111},{"ruleId":"528","severity":1,"message":"654","line":4,"column":113,"nodeType":"530","messageId":"531","endLine":4,"endColumn":120},{"ruleId":"528","severity":1,"message":"577","line":5,"column":10,"nodeType":"530","messageId":"531","endLine":5,"endColumn":20},{"ruleId":"528","severity":1,"message":"645","line":1,"column":38,"nodeType":"530","messageId":"531","endLine":1,"endColumn":53},{"ruleId":"528","severity":1,"message":"646","line":1,"column":55,"nodeType":"530","messageId":"531","endLine":1,"endColumn":61},{"ruleId":"528","severity":1,"message":"648","line":4,"column":28,"nodeType":"530","messageId":"531","endLine":4,"endColumn":42},{"ruleId":"528","severity":1,"message":"649","line":4,"column":44,"nodeType":"530","messageId":"531","endLine":4,"endColumn":55},{"ruleId":"528","severity":1,"message":"650","line":4,"column":57,"nodeType":"530","messageId":"531","endLine":4,"endColumn":68},{"ruleId":"528","severity":1,"message":"651","line":4,"column":70,"nodeType":"530","messageId":"531","endLine":4,"endColumn":79},{"ruleId":"528","severity":1,"message":"652","line":4,"column":81,"nodeType":"530","messageId":"531","endLine":4,"endColumn":87},{"ruleId":"528","severity":1,"message":"587","line":14,"column":11,"nodeType":"530","messageId":"531","endLine":14,"endColumn":22},{"ruleId":"548","severity":1,"message":"655","line":29,"column":6,"nodeType":"550","endLine":29,"endColumn":27,"suggestions":"656"},{"ruleId":"532","severity":1,"message":"533","line":41,"column":33,"nodeType":"534","messageId":"535","endLine":41,"endColumn":35},{"ruleId":"528","severity":1,"message":"646","line":2,"column":28,"nodeType":"530","messageId":"531","endLine":2,"endColumn":34},{"ruleId":"528","severity":1,"message":"657","line":2,"column":36,"nodeType":"530","messageId":"531","endLine":2,"endColumn":47},{"ruleId":"528","severity":1,"message":"658","line":7,"column":10,"nodeType":"530","messageId":"531","endLine":7,"endColumn":22},{"ruleId":"528","severity":1,"message":"561","line":8,"column":52,"nodeType":"530","messageId":"531","endLine":8,"endColumn":55},{"ruleId":"528","severity":1,"message":"659","line":8,"column":57,"nodeType":"530","messageId":"531","endLine":8,"endColumn":61},{"ruleId":"528","severity":1,"message":"660","line":9,"column":10,"nodeType":"530","messageId":"531","endLine":9,"endColumn":20},{"ruleId":"528","severity":1,"message":"586","line":15,"column":26,"nodeType":"530","messageId":"531","endLine":15,"endColumn":30},{"ruleId":"528","severity":1,"message":"542","line":15,"column":32,"nodeType":"530","messageId":"531","endLine":15,"endColumn":35},{"ruleId":"528","severity":1,"message":"628","line":15,"column":37,"nodeType":"530","messageId":"531","endLine":15,"endColumn":48},{"ruleId":"528","severity":1,"message":"587","line":16,"column":11,"nodeType":"530","messageId":"531","endLine":16,"endColumn":22},{"ruleId":"528","severity":1,"message":"565","line":16,"column":36,"nodeType":"530","messageId":"531","endLine":16,"endColumn":46},{"ruleId":"528","severity":1,"message":"661","line":18,"column":10,"nodeType":"530","messageId":"531","endLine":18,"endColumn":20},{"ruleId":"528","severity":1,"message":"662","line":18,"column":22,"nodeType":"530","messageId":"531","endLine":18,"endColumn":35},{"ruleId":"548","severity":1,"message":"663","line":28,"column":6,"nodeType":"550","endLine":28,"endColumn":27,"suggestions":"664"},{"ruleId":"528","severity":1,"message":"538","line":1,"column":27,"nodeType":"530","messageId":"531","endLine":1,"endColumn":36},{"ruleId":"528","severity":1,"message":"645","line":1,"column":38,"nodeType":"530","messageId":"531","endLine":1,"endColumn":53},{"ruleId":"528","severity":1,"message":"646","line":1,"column":55,"nodeType":"530","messageId":"531","endLine":1,"endColumn":61},{"ruleId":"528","severity":1,"message":"665","line":1,"column":63,"nodeType":"530","messageId":"531","endLine":1,"endColumn":73},{"ruleId":"528","severity":1,"message":"648","line":4,"column":28,"nodeType":"530","messageId":"531","endLine":4,"endColumn":42},{"ruleId":"528","severity":1,"message":"649","line":4,"column":44,"nodeType":"530","messageId":"531","endLine":4,"endColumn":55},{"ruleId":"528","severity":1,"message":"650","line":4,"column":57,"nodeType":"530","messageId":"531","endLine":4,"endColumn":68},{"ruleId":"528","severity":1,"message":"651","line":4,"column":70,"nodeType":"530","messageId":"531","endLine":4,"endColumn":79},{"ruleId":"528","severity":1,"message":"652","line":4,"column":81,"nodeType":"530","messageId":"531","endLine":4,"endColumn":87},{"ruleId":"528","severity":1,"message":"581","line":4,"column":89,"nodeType":"530","messageId":"531","endLine":4,"endColumn":105},{"ruleId":"528","severity":1,"message":"654","line":4,"column":113,"nodeType":"530","messageId":"531","endLine":4,"endColumn":120},{"ruleId":"528","severity":1,"message":"661","line":14,"column":10,"nodeType":"530","messageId":"531","endLine":14,"endColumn":20},{"ruleId":"528","severity":1,"message":"662","line":14,"column":22,"nodeType":"530","messageId":"531","endLine":14,"endColumn":35},{"ruleId":"528","severity":1,"message":"576","line":1,"column":17,"nodeType":"530","messageId":"531","endLine":1,"endColumn":25},{"ruleId":"528","severity":1,"message":"538","line":1,"column":27,"nodeType":"530","messageId":"531","endLine":1,"endColumn":36},{"ruleId":"528","severity":1,"message":"666","line":42,"column":10,"nodeType":"530","messageId":"531","endLine":42,"endColumn":14},{"ruleId":"528","severity":1,"message":"667","line":5,"column":9,"nodeType":"530","messageId":"531","endLine":5,"endColumn":22},{"ruleId":"528","severity":1,"message":"587","line":11,"column":11,"nodeType":"530","messageId":"531","endLine":11,"endColumn":22},{"ruleId":"548","severity":1,"message":"655","line":23,"column":6,"nodeType":"550","endLine":23,"endColumn":27,"suggestions":"668"},{"ruleId":"528","severity":1,"message":"645","line":1,"column":38,"nodeType":"530","messageId":"531","endLine":1,"endColumn":53},{"ruleId":"528","severity":1,"message":"646","line":1,"column":55,"nodeType":"530","messageId":"531","endLine":1,"endColumn":61},{"ruleId":"528","severity":1,"message":"587","line":13,"column":11,"nodeType":"530","messageId":"531","endLine":13,"endColumn":22},{"ruleId":"548","severity":1,"message":"669","line":26,"column":6,"nodeType":"550","endLine":26,"endColumn":27,"suggestions":"670"},{"ruleId":"545","severity":1,"message":"546","line":50,"column":17,"nodeType":"547","endLine":53,"endColumn":19},{"ruleId":"528","severity":1,"message":"671","line":3,"column":10,"nodeType":"530","messageId":"531","endLine":3,"endColumn":30},{"ruleId":"528","severity":1,"message":"667","line":4,"column":9,"nodeType":"530","messageId":"531","endLine":4,"endColumn":22},{"ruleId":"528","severity":1,"message":"537","line":1,"column":8,"nodeType":"530","messageId":"531","endLine":1,"endColumn":9},{"ruleId":"528","severity":1,"message":"537","line":1,"column":8,"nodeType":"530","messageId":"531","endLine":1,"endColumn":9},{"ruleId":"532","severity":1,"message":"672","line":32,"column":68,"nodeType":"534","messageId":"673","endLine":32,"endColumn":70},{"ruleId":"532","severity":1,"message":"672","line":9,"column":41,"nodeType":"534","messageId":"673","endLine":9,"endColumn":43},{"ruleId":"674","severity":1,"message":"675","line":11,"column":5,"nodeType":"676","messageId":"677","endLine":76,"endColumn":6},{"ruleId":"620","severity":1,"message":"621","line":26,"column":86,"nodeType":"622","messageId":"558","endLine":26,"endColumn":88},{"ruleId":"528","severity":1,"message":"606","line":2,"column":10,"nodeType":"530","messageId":"531","endLine":2,"endColumn":19},{"ruleId":"524","replacedBy":"678"},{"ruleId":"526","replacedBy":"679"},{"ruleId":"528","severity":1,"message":"680","line":2,"column":8,"nodeType":"530","messageId":"531","endLine":2,"endColumn":13},{"ruleId":"528","severity":1,"message":"681","line":3,"column":8,"nodeType":"530","messageId":"531","endLine":3,"endColumn":16},{"ruleId":"620","severity":1,"message":"621","line":26,"column":72,"nodeType":"622","messageId":"558","endLine":26,"endColumn":74},{"ruleId":"620","severity":1,"message":"621","line":33,"column":86,"nodeType":"622","messageId":"558","endLine":33,"endColumn":88},{"ruleId":"620","severity":1,"message":"621","line":42,"column":61,"nodeType":"622","messageId":"558","endLine":42,"endColumn":63},{"ruleId":"682","severity":1,"message":"683","line":68,"column":10,"nodeType":"684","messageId":"685","endLine":68,"endColumn":42,"fix":"686"},{"ruleId":"687","severity":1,"message":"688","line":57,"column":29,"nodeType":"689","messageId":"690","endLine":57,"endColumn":873},{"ruleId":"687","severity":1,"message":"688","line":42,"column":29,"nodeType":"689","messageId":"690","endLine":42,"endColumn":375},{"ruleId":"687","severity":1,"message":"688","line":67,"column":29,"nodeType":"689","messageId":"690","endLine":67,"endColumn":375},{"ruleId":"687","severity":1,"message":"688","line":104,"column":27,"nodeType":"689","messageId":"690","endLine":104,"endColumn":359},{"ruleId":"687","severity":1,"message":"688","line":133,"column":27,"nodeType":"689","messageId":"690","endLine":133,"endColumn":317},{"ruleId":"687","severity":1,"message":"688","line":163,"column":27,"nodeType":"689","messageId":"690","endLine":163,"endColumn":308},{"ruleId":"687","severity":1,"message":"688","line":194,"column":27,"nodeType":"689","messageId":"690","endLine":194,"endColumn":329},"no-native-reassign",["691"],"no-negated-in-lhs",["692"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'endSessionResponseData' is assigned a value but never used.","'_' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'useLocation' is defined but never used.","'sdk' is assigned a value but never used.","'initialHref' is assigned a value but never used.","'setInitialHref' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clientSession.lookerBaseUrl'. Either include it or remove the dependency array.","ArrayExpression",["693"],"React Hook useEffect has missing dependencies: 'codeShow' and 'highlightShow'. Either include them or remove the dependency array. You can also do a functional update 'setHighlightShow(h => ...)' if you only need 'highlightShow' in the 'setHighlightShow' call.",["694"],"'orange' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","'Icon' is defined but never used.","'setClientSession' is assigned a value but never used.","'Box' is defined but never used.","'EmbedHighlight' is defined but never used.","'VerticalSplit' is defined but never used.","'HorizontalSplit' is defined but never used.","'lookerHost' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","React Hook React.useMemo has a missing dependency: 'paletteToUse'. Either include it or remove the dependency array.",["695"],"React Hook useEffect has missing dependencies: 'corsApiCall', 'fontThemeSelectValue', 'lightThemeToggleValue', 'lookerContent', and 'performLookerApiCalls'. Either include them or remove the dependency array.",["696"],"React Hook useEffect has missing dependencies: 'dashboardObj', 'handleTileToggle', 'handleVisColorToggle', 'lookerContent', 'tileToggleValue', and 'visColorToggleValue'. Either include them or remove the dependency array.",["697"],"React Hook useEffect contains a call to 'setExpansionPanelHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [horizontalLayout] as a second argument to the useEffect Hook.",["698"],"'useState' is defined but never used.","'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'CircularProgress' is defined but never used.","'TabPanel' is defined but never used.","'a11yProps' is defined but never used.","'descendingComparator' is defined but never used.","'setPaywallModal' is assigned a value but never used.","'show' is assigned a value but never used.","'userProfile' is assigned a value but never used.","'clientSideCode' is assigned a value but never used.","'serverSideCode' is assigned a value but never used.","'setServerSideCode' is assigned a value but never used.","'staticContent' is assigned a value but never used.","'codeShow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filtersData' and 'initializeFieldChipDataHelper'. Either include them or remove the dependency array.",["699"],"React Hook useEffect has a missing dependency: 'handleQuerySubmit'. Either include it or remove the dependency array.",["700"],"'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'rawSampleCode' is defined but never used.","'setIFrame' is assigned a value but never used.","'setClientSideCode' is assigned a value but never used.","'highlightShow' is assigned a value but never used.","'codeTab' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'TextField' is defined but never used.","'Modal' is defined but never used.","'endOfDay' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'activeTabValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'corsApiCall', 'lookerContent', and 'performLookerApiCalls'. Either include them or remove the dependency array.",["701"],"React Hook useEffect contains a call to 'setExpansionPanelHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["702"],["691"],["692"],"'Typography' is defined but never used.","'SwapVerticalCircleOutlined' is defined but never used.","'exploreObj' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.",["703"],["704"],"'matchingIndex' is assigned a value but never used.","'lookerResponse' is assigned a value but never used.","'corsApiCall' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'expandedArr' and 'selected'. Either include them or remove the dependency array.",["705"],"'greyPrimary' is assigned a value but never used.","'greySecondary' is assigned a value but never used.","'orangePrimary' is assigned a value but never used.","'orangeSecondary' is assigned a value but never used.","'redDark' is assigned a value but never used.","'greenDark' is assigned a value but never used.","Duplicate key 'overflowScroll'.","Duplicate key 'overflowHidden'.","'ClickAwayListener' is defined but never used.","'lookerContent' is assigned a value but never used.","'permissionNeededCode' is assigned a value but never used.","'FilterList' is defined but never used.","React Hook useEffect has a missing dependency: 'expanded'. Either include it or remove the dependency array.",["706"],"'useLayoutEffect' is defined but never used.","'useRef' is defined but never used.","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has missing dependencies: 'corsApiCall' and 'runInlineQuery'. Either include them or remove the dependency array.",["707"],"'useCallback' is defined but never used.","'ApiHighlight' is defined but never used.","'Chip' is defined but never used.","'urlencoded' is defined but never used.","'apiContent' is assigned a value but never used.","'setApiContent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["708"],"'useContext' is defined but never used.","'rand' is defined but never used.","'validIdHelper' is assigned a value but never used.",["709"],"React Hook useEffect has missing dependencies: 'corsApiCall' and 'getThumbnail'. Either include them or remove the dependency array.",["710"],"'EmbedMethodHighlight' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["691"],["692"],"'React' is defined but never used.","'ReactDOM' is defined but never used.","no-useless-rename","Export CheckboxSVGMap unnecessarily renamed.","ExportSpecifier","unnecessarilyRenamed",{"range":"711","text":"712"},"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation",{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},{"desc":"731","fix":"735"},{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},{"desc":"740","fix":"744"},{"desc":"745","fix":"746"},[2665,2697],"CheckboxSVGMap","Update the dependencies array to be: [clientSession.lookerBaseUrl]",{"range":"747","text":"748"},"Update the dependencies array to be: [codeShow, democomponent, highlightShow]",{"range":"749","text":"750"},"Update the dependencies array to be: [paletteToUse]",{"range":"751","text":"752"},"Update the dependencies array to be: [lookerUser, isReady, selectedMenuItem, lightThemeToggleValue, fontThemeSelectValue, corsApiCall, performLookerApiCalls, lookerContent]",{"range":"753","text":"754"},"Update the dependencies array to be: [dashboardObj, dashboardOptions, handleTileToggle, handleVisColorToggle, lookerContent, tileToggleValue, visColorToggleValue]",{"range":"755","text":"756"},"Add dependencies array: [horizontalLayout]",{"range":"757","text":"758"},"Update the dependencies array to be: [lookerUser, isReady, filtersData, initializeFieldChipDataHelper]",{"range":"759","text":"760"},"Update the dependencies array to be: [handleQuerySubmit, queryShouldRun]",{"range":"761","text":"762"},"Update the dependencies array to be: [lookerUser, isReady, corsApiCall, performLookerApiCalls, lookerContent]",{"range":"763","text":"764"},"Add dependencies array: []",{"range":"765","text":"766"},"Update the dependencies array to be: [lookerUser, value, isReady, corsApiCall, performLookerApiCalls, lookerContent]",{"range":"767","text":"768"},{"range":"769","text":"766"},"Update the dependencies array to be: [apiContent, expandedArr, selected]",{"range":"770","text":"771"},"Update the dependencies array to be: [expanded, horizontalLayout]",{"range":"772","text":"773"},"Update the dependencies array to be: [lookerUser, isReady, corsApiCall, runInlineQuery]",{"range":"774","text":"775"},"Update the dependencies array to be: [lookerUser, isReady, fetchData]",{"range":"776","text":"777"},{"range":"778","text":"775"},"Update the dependencies array to be: [lookerUser, isReady, corsApiCall, getThumbnail]",{"range":"779","text":"780"},[3077,3079],"[clientSession.lookerBaseUrl]",[3360,3375],"[codeShow, democomponent, highlightShow]",[2605,2643],"[paletteToUse]",[6525,6564],"[lookerUser, isReady, selectedMenuItem, lightThemeToggleValue, fontThemeSelectValue, corsApiCall, performLookerApiCalls, lookerContent]",[6911,6929],"[dashboardObj, dashboardOptions, handleTileToggle, handleVisColorToggle, lookerContent, tileToggleValue, visColorToggleValue]",[7166,7166],", [horizontalLayout]",[9752,9773],"[lookerUser, isReady, filtersData, initializeFieldChipDataHelper]",[9971,9987],"[handleQuerySubmit, queryShouldRun]",[5761,5782],"[lookerUser, isReady, corsApiCall, performLookerApiCalls, lookerContent]",[5996,5996],", []",[2625,2660],"[lookerUser, value, isReady, corsApiCall, performLookerApiCalls, lookerContent]",[2874,2874],[20259,20271],"[apiContent, expandedArr, selected]",[958,976],"[expanded, horizontalLayout]",[1106,1127],"[lookerUser, isReady, corsApiCall, runInlineQuery]",[1083,1104],"[lookerUser, isReady, fetchData]",[841,862],[963,984],"[lookerUser, isReady, corsApiCall, getThumbnail]"]