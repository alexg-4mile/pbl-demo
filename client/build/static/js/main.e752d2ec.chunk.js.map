{"version":3,"sources":["images/splash_blog.jpg","images/splash_inventory.jpg","images/splash_macro.jpg","tools.js","images sync /^/.//.*_logo/.png$","images/atom_logo.png","images sync /^/.//.*/.jpg$","images/atom_background1.jpg","images/atom_background2.jpg","images/atom_background3.jpg","images/atom_background4.jpg","images sync /^/.//.*_logo_black/.svg$","images/atom_logo_black.svg","AppContext.js","components/Material/UserMenu.js","components/Demo/CodeFlyout.js","webpack:///./src/components/Demo/SplashPage/SplashPage.js?046c","components/Demo/SplashPage/styles.js","components/Demo/SplashPage/helpers.js","components/Highlights/Highlight.js","components/Demo/SplashPage/VectorThumbnail.js","components/Demo/SplashPage/SingleValueVis.js","components/Demo/SplashPage/Welcome.js","components/Demo/SplashPage/NaturalLanguage.js","components/Demo/SplashPage/ActionableInsights.js","components/Demo/SplashPage/EmbeddedDashboard.js","components/Demo/Dashboard/styles.js","components/Demo/Dashboard/helpers.js","components/Accessories/NumberToColoredPercent.js","components/Demo/Dashboard/Dashboard.js","webpack:///./src/components/Demo/Dashboard/Dashboard.js?b45b","components/Demo/SplashPage/SplashPage.js","components/Material/ModalTable.js","components/Demo/CustomVis/styles.js","components/Demo/CustomVis/helpers.js","components/Demo/CustomVis/CustomVis.js","webpack:///./src/components/Demo/CustomVis/CustomVis.js?b545","components/Demo/ReportBuilder/styles.js","components/Demo/ReportBuilder/helpers.js","components/Demo/ReportBuilder/ReportBuilder.js","webpack:///./src/components/Demo/ReportBuilder/ReportBuilder.js?9721","components/Demo/QueryBuilder/styles.js","components/Demo/QueryBuilder/helpers.js","components/Demo/QueryBuilder/QueryBuilder.js","webpack:///./src/components/Demo/QueryBuilder/QueryBuilder.js?9efc","components/HighlightSourcesLegend.js","components/Demo/MonetizationModal.js","components/Home.js","components/SignIn.js","components/Customizations.js","components/EditCustomization.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","validIdHelper","str","replace","prettifyString","frags","split","toUpperCase","slice","join","getUrlVars","url","hash","myJson","hashes","indexOf","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","AppContext","React","createContext","useStyles","require","makeStyles","theme","zIndex1500","zIndex","mr12","marginRight","UserMenu","props","lookerUser","switchLookerUser","onLogoutSuccess","lookerUserAttributeBrandOptions","switchUserAttributeBrand","classes","toggleShow","useContext","userProfile","useState","anchorEl","setAnchorEl","user_attributes","brand","selectedBrand","setSelectedBrand","handleClose","newValue","className","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","color","Avatar","alt","name","src","imageUrl","Typography","permission_level","substring","Menu","keepMounted","open","Boolean","onClose","MenuItem","autoFocus","Divider","divider","Autocomplete","options","getOptionLabel","option","label","style","width","onChange","target","innerText","renderInput","params","TextField","variant","loadingText","disableautofocus","onKeyDown","stopPropagation","CodeFlyout","lookerContent","clientSideCode","serverSideCode","Grid","item","sm","gridTitle","CodeSnippet","language","dracula","showLineNumbers","JSON","stringify","redPrimary","red","greenPrimary","green","root","flexGrow","backgroundColor","palette","background","paper","flexCentered","display","justifyContent","alignItems","hidden","visibility","position","tabs","dNone","dBlock","tree","height","maxWidth","icon","fontSize","overflow","mt12","marginTop","w100","mlAuto","marginLeft","skeleton","minWidth","minHeight","card","maxHeight200","maxHeight","mt30","mb30","marginBottom","textCenter","textAlign","cursorPointer","cursor","border","height800","maxHeight100","maxHeight400","minHeight680","minHeight200","redNeg","greenPos","padding30","padding","mb12","overflowScroll","overflowHidden","overflowVisible","TabPanel","children","value","index","other","component","role","aria-labelledby","Box","p","Highlight","margin","show","boxShadow","ApiHighlight","EmbedHighlight","VectorThumbnail","handleMenuItemSelect","undefined","svg","setSvg","useEffect","getThumbnail","a","fetch","resourceType","method","headers","Accept","lookerResponse","json","lookerResponseData","blob","Blob","type","URL","createObjectURL","SingleValueVis","apiContent","setApiContent","dataObjForSparkline","runInlineQuery","stringifiedQuery","encodeURIComponent","inlineQuery","resultFormat","data","dataArrForDataObj","queryResults","fields","thisDataItem","toString","change","y","push","borderLeft","visColor","Fragment","container","align","parseInt","toFixed","isNaN","top","right","bottom","left","xScale","format","precision","yScale","min","max","stacked","reverse","axisLeft","orient","tickSize","tickPadding","tickRotation","axisBottom","legend","legendOffset","legendPosition","enablePoints","enableGridX","enableGridY","colors","animate","Card","CircularProgress","circularProgress","Welcome","givenName","infiniteLoop","autoPlay","showThumbs","NaturalLanguage","inlineQueriesMap","ActionableInsights","spacing","inlineQueries","key","vectors","EmbeddedDashboard","iFrameExists","setIFrame","$","html","LookerEmbedSDK","createDashboardWithId","appendTo","document","getElementById","withClassName","withNext","withTheme","build","connect","then","look","catch","error","console","elevation","NumberToColoredPercent","val","positive_good","abs_val","up","down","val_formatted","abs","toLocaleString","minimumFractionDigits","Dashboard","setValue","dashboardObj","setDashboardObj","setClientSideCode","setServerSideCode","toggleValue","setToggleValue","dashboardLayout","setDashboardLayout","staticContent","handleTabChange","activeTabValue","codeTab","tabContent","demoComponentType","handleToggle","filteredLayout","_","filter","dashboard_layout_components","row","dynamicFieldLookUp","dashboard_element_id","newDashboardLayout","setOptions","performLookerApiCalls","dashboardId","on","dashboard","layouts","hasOwnProperty","jsonQuery","filters","desiredFilterName","queryResultsForDropdown","desiredProperty","AppBar","Tabs","Tab","a11yProps","tabContentItem","Array","isArray","renderOption","justify","trend","filterName","newFilterValue","updateFilters","run","ToggleButtonGroup","exclusive","ToggleButton","mt","SplashPage","innerIndex","gridWidth","shadows","table","getModalStyle","transform","ModalTable","modalContent","modalStyle","Modal","aria-describedby","title","body","TableContainer","Paper","Table","stickyHeader","size","TableHead","TableRow","TableCell","lastIndexOf","TableBody","rendered","round","height500","height700","textField","formControl","selectEmpty","CustomVis","fromDate","setFromDate","toDate","setToDate","category","setCategory","desiredField","setDesiredField","setOpen","setModalContent","toggleShowPayWallModal","lookerHost","handleModalOpen","day","originalInlineQueryCopy","parse","total","limit","modalObj","handleFromDate","Date","newValueAsDate","addDays","handleToDate","handleCategory","handleDesiredField","filterData","uniqueDates","Set","filteredAndReducedForAll","uniqueDate","reduce","acc","thisObj","setTimeout","desiredFields","uniqueCategories","incrementDate","redToBlueColorScale","yellowToGreenColorScale","FilterBar","Skeleton","animation","from","to","emptyColor","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","expanded","setExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","heading","ExpansionPanelDetails","FormControl","InputLabel","Select","labelId","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","dateInput","increment","dateFormatTotime","getTime","toISOString","ml24","parentHoverVisibility","childHoverVisibility","faSm","ReportBuilder","exploreObj","setExploreObj","handleChange","action","contentType","contentId","secondaryAction","qid","exploreId","newReportEmbedContainer","iFrameArray","classList","contains","remove","add","empty","createExploreWithId","withParams","explore","status","animateLoad","looksToUse","sharedFolder","looks","embeddedUserFolder","dashboardsToUse","dashboards","objToUse","lookId","lookIsRendered","createLookWithId","dashboardIsRendered","Icon","tabContentItemIndex","TreeSideBar","sharedFolderId","treeCounter","selected","setSelected","expandedArr","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","nodeIds","onNodeSelect","outerIndex","TreeItem","nodeId","capitalize","disabled","treecounter","contentid","folder_id","labelRoot","Button","client_id","greyPrimary","grey","greySecondary","orangePrimary","orange","orangeSecondary","typography","pxToRem","fontWeight","fontWeightRegular","ml12","tableContainer","visuallyHidden","clip","descendingComparator","b","orderBy","QueryBuilder","queryBody","newQuery","apiContentCopy","lookerCreateTaskResposnse","lookerCreateTaskResponseData","taskInterval","setInterval","queryTaskId","lookerCheckTaskResposnse","lookerCheckTaskResponseData","clearInterval","EnhancedTable","rows","measureCounter","dimensionCounter","datalabel","fieldType","fieldsChipData","setFieldsChipData","queryModified","setQueryModified","filterType","filtersData","setFilterData","handleFieldChipClick","chip","updatedFieldsChipData","handleSelectChange","updatedFiltersData","newFields","currentFilters","newQueryObj","handleQuerySubmit","datePermissionMap","advanced","basic","premium","Chip","measurecounter","dimensioncounter","EnhancedTableHead","order","onSelectAllClick","onRequestSort","numSelected","rowCount","numeric","disablePadding","sortDirection","TableSortLabel","active","property","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","hover","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","FormControlLabel","control","Switch","checked","HighlightSourcesLegend","MonetizationModal","showPayWallModal","modal","Fade","in","defaultTheme","createMuiTheme","atomTheme","primary","main","secondary","vidlyTheme","blue","Home","setState","state","toggleHighlightShow","highlightShow","fromSplash","selectedMenuItemValue","UsecaseContent","activeUsecase","demoComponents","lookerContentItem","renderedDemoComponentsCopy","renderedDemoComponents","prevState","selectedMenuItem","drawerOpen","drawerTabValue","appLayout","usecaseFromUrl","window","location","pathname","this","layout","init","prevProps","prevPermissionLevel","currPermissionLevel","prevUserBrand","currUserBrand","demoComponentMap","themeMap","activeCustomization","applySession","orderedDemoComponentsForMenu","orderedDemoComponentsForMenuObj","expandedTreeItemsArr","cumulativePusher","menuCategory","selectedMenuItemVal","Provider","ThemeProvider","CssBaseline","clsx","appBar","Toolbar","noWrap","vignette","Badge","badgeContent","AddAlert","Drawer","drawer","drawerPaper","drawerHeader","MenuList","highlightLegend","content","contentShift","DemoComponent","hide","Component","withStyles","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","flexShrink","mixins","toolbar","easeOut","enteringScreen","borderRight","relative","absolute","right0","top0","right24","top24","fontSize1em","padding10","mt5","mb5","list","nested","paddingLeft","demoComponentIconMap","HomeIcon","TrendingUp","Speed","StoreMallDirectory","DateRange","Search","FindInPage","List","outerItem","ListItem","button","ListItemText","MatchingIconComponent","ListItemIcon","lightGrey","h100","pos","actions","cardCopy","SignIn","googleClientId","onSuccess","onFailure","backgroundImageInt","backgroundImage","logoImage","backgroundSize","CardContent","CardActions","clientId","buttonText","cookiePolicy","Login","responseGoogle","response","log","profileObj","process","PrivateRoute","customizations","applyCustomization","editCustomization","indexOfCustomizationToEdit","saveCustomization","cancelIndexOfCustomizationToEdit","saveLookerContent","rest","render","App","checkSession","sessionResponse","sessionResponseData","session","external_user_id","googleId","first_name","last_name","familyName","permissions","LookerUserPermissions","InitialLookerUser","sessionData","customizationIndex","customizationResponse","lookerContentToUse","industry","validCustomizationIndex","formData","customizationResponseData","newLookerContent","newUser","userAttributeCopy","time_horizon","lookerUserResponse","newAttribute","href","basename","path","LookerUserAttributeBrandOptions","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e752d2ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/splash_blog.f5ac79c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/splash_inventory.bc226973.jpg\";","module.exports = __webpack_public_path__ + \"static/media/splash_macro.a3836bb2.jpg\";","module.exports = {\n    makeid: (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    },\n\n\n    validIdHelper: (str) => {\n        // console.log('validIdHelper')\n        // console.log('str', str)\n        //need to replace special characters that may be associated with id...\n        return str.replace(/[^a-zA-Z0-9-.#]/g, \"\")\n    },\n\n    prettifyString: (str) => {\n        var i, frags = str.split('_');\n        for (i = 0; i < frags.length; i++) {\n            frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\n        }\n        return frags.join(' ');\n    },\n\n    getUrlVars: (url) => {\n        var hash;\n        var myJson = {};\n        var hashes = url.slice(url.indexOf('?') + 1).split('&');\n        for (var i = 0; i < hashes.length; i++) {\n            hash = hashes[i].split('=');\n            myJson[hash[0]] = hash[1];\n            // If you want to get in native datatypes\n            // myJson[hash[0]] = JSON.parse(hash[1]); \n        }\n        return myJson;\n    }\n}","var map = {\n\t\"./atom_logo.png\": 879\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 878;","module.exports = __webpack_public_path__ + \"static/media/atom_logo.30c26478.png\";","var map = {\n\t\"./atom_background1.jpg\": 881,\n\t\"./atom_background2.jpg\": 882,\n\t\"./atom_background3.jpg\": 883,\n\t\"./atom_background4.jpg\": 884,\n\t\"./splash_blog.jpg\": 362,\n\t\"./splash_inventory.jpg\": 363,\n\t\"./splash_macro.jpg\": 364\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 880;","module.exports = __webpack_public_path__ + \"static/media/atom_background1.716b981c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_background2.96780042.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_background3.0bc7dd7a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_background4.1ceecbd2.jpg\";","var map = {\n\t\"./atom_logo_black.svg\": 886\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 885;","module.exports = __webpack_public_path__ + \"static/media/atom_logo_black.a213ea2a.svg\";","import React from 'react';\n \nconst AppContext = React.createContext(null);\n \nexport default AppContext;","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Menu, MenuItem, Typography, Divider, TextField, Avatar } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport AppContext from '../../AppContext';\n\nconst { validIdHelper } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  zIndex1500: {\n    zIndex: 1500\n  },\n  mr12: {\n    marginRight: 12\n  }\n}))\n\nexport default function UserMenu(props) {\n  // console.log('UserMenu')\n  // console.log('props', props)\n\n  const { lookerUser, switchLookerUser, onLogoutSuccess, lookerUserAttributeBrandOptions, switchUserAttributeBrand } = props\n  const classes = useStyles();\n  const { toggleShow } = useContext(AppContext)\n  const { userProfile } = useContext(AppContext);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedBrand, setSelectedBrand] = React.useState(lookerUser.user_attributes.brand || '');\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (newValue) => {\n\n\n    setAnchorEl(null);\n    if (newValue == null) {\n      onLogoutSuccess({})\n    } else if (newValue === 'basic' || newValue === 'advanced' || newValue === 'premium') {\n      switchLookerUser(newValue)\n    } else if (typeof newValue === 'string') {\n      switchUserAttributeBrand(newValue)\n      setSelectedBrand(newValue);\n    }\n  };\n\n\n  return (\n    <div className={`${classes.zIndex1500}`}>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        color=\"inherit\"\n      >\n        {/* <Avatar className={`${classes.mr12}`}>{userProfile.givenName.substring(0, 1)}</Avatar> */}\n        <Avatar alt={userProfile.name} src={userProfile.imageUrl} className={classes.mr12} />\n\n        <Typography>\n          {typeof lookerUser.permission_level === 'string' ?\n            lookerUser.permission_level.charAt(0).toUpperCase() + lookerUser.permission_level.substring(1) : ''}\n        </Typography>\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem autoFocus={false}>Select User Level</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('basic')}>Basic</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('advanced')}>Advanced</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('premium')}>Premium</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem onClick={() => { toggleShow() }}>Highlight Source</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem onClick={() => handleClose(null)}>Sign Out</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem>Current brand: {selectedBrand}</MenuItem>\n        <MenuItem>\n\n          <Autocomplete\n            id=\"combo-box-usermenu\"\n            options={lookerUserAttributeBrandOptions}\n            getOptionLabel={(option) => option.label}\n            style={{ width: 300 }}\n            onChange={(event) => handleClose(event.target.innerText || '')}\n            renderInput={(params) => <TextField {...params}\n              label=\"Change merchant brand\"\n              variant=\"outlined\"\n            />}\n            loadingText=\"Loading...\"\n            disableautofocus=\"true\"\n            onKeyDown={(event) => event.stopPropagation()}\n          />\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core'\n// import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n// import { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/hljs'; //hehe\n\n//helper function for rendering content in code tab\nexport default function CodeFlyout(props) {\n\n  // console.log('CodeFlyout')\n  // console.log('props', props)\n\n  const { classes, lookerContent, clientSideCode, serverSideCode, lookerUser } = props\n  return (\n    <Grid item sm={12} >\n      {/* {lookerContent.length ?\n        <>\n          <Typography variant=\"h5\" component=\"h2\" className={classes.gridTitle}>\n            Looker Content Array Referenced on Page<br />\n          </Typography>\n          <CodeSnippet code={lookerContent} />\n        </> : ''}\n      {clientSideCode.length ?\n        <>\n          <Typography variant=\"h5\" component=\"h2\" className={classes.gridTitle}>\n            Client Side Code<br />\n          </Typography>\n          <CodeSnippet code={clientSideCode} />\n        </> : ''}\n      {serverSideCode.length ?\n        <>\n          <Typography variant=\"h5\" component=\"h2\" className={classes.gridTitle}>\n            Server Side Code<br />\n          </Typography>\n          <CodeSnippet code={serverSideCode} />\n        </> : ''} */}\n      {Object.keys(lookerUser).length ?\n        <>\n          <Typography variant=\"h6\" className={classes.gridTitle}>\n            Looker User Object<br />\n          </Typography>\n          <CodeSnippet code={lookerUser} />\n        </> : ''}\n    </Grid>\n  )\n}\n\nfunction CodeSnippet(props) {\n  // console.log('CodeSnippet');\n  // console.log('props', props);\n  const { code } = props\n  return (\n    <SyntaxHighlighter language=\"json\" style={dracula} showLineNumbers={true} >\n      {typeof code === \"object\" ? JSON.stringify(code, true, 4) : code}\n    </SyntaxHighlighter>)\n}","export default \"//imports\\nimport $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, Divider } from '@material-ui/core'\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./SplashPage.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport { VectorThumbnail } from './VectorThumbnail';\\nimport { SingleValueVis } from './SingleValueVis';\\nimport { Welcome } from './Welcome';\\nimport { ActionableInsights } from './ActionableInsights';\\nimport { EmbeddedLook } from './EmbeddedLook';\\nimport { EmbeddedDashboard } from './EmbeddedDashboard';\\nimport Dashboard from '../Dashboard/Dashboard';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of SplashPage Component\\nexport default function SplashPage(props) {\\n  // console.log('SplashPage')\\n  //intialize state using hooks\\n  const [value, setValue] = useState(0);\\n  const [iFrameExists, setIFrame] = useState(1);\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, handleTabChange, handleMenuItemSelect, lookerUser } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  const tabContent = [[...lookerContent], codeTab];\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * setSampleCode\\n  */\\n  useEffect(() => {\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent]);\\n\\n\\n  /**\\n   * What this return  does:\\n   * Rendering of actual html elements,\\n   * this section is necessary but less relevant to looker functionality itself\\n   */\\n  return (\\n    <div className={`${classes.root} ${classes.minHeight680} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={classes.root}>\\n          {iFrameExists ? '' :\\n            <Grid item sm={12} >\\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                <CircularProgress className={classes.circularProgress} />\\n              </Card>\\n            </Grid>\\n          }\\n          <Box className={iFrameExists ? `` : `${classes.hidden}`}>\\n            <AppBar position=\\\"static\\\">\\n              <Tabs\\n                className={classes.tabs}\\n                value={value}\\n                onChange={handleChange}\\n                aria-label=\\\"simple tabs example\\\">\\n                {tabContent.map((item, index) => (\\n                  <Tab\\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\\n                    label={item.label ? item.label : 'At a glance'}\\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\\n                    {...a11yProps(index)} />\\n                ))}\\n              </Tabs>\\n            </AppBar>\\n            <Box className=\\\"tabPanelContainer\\\">\\n              {tabContent.map((tabContentItem, index) => {\\n                return <TabPanel\\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\\n                  value={value}\\n                  index={index}>\\n                  <Grid container\\n                    spacing={3}>\\n                    {tabContentItem.type === 'code flyout' ?\\n                      <CodeFlyout {...props}\\n                        classes={classes}\\n                        lookerContent={lookerContent}\\n                        clientSideCode={clientSideCode}\\n                        serverSideCode={serverSideCode}\\n                        lookerUser={lookerUser} />\\n                      :\\n                      <React.Fragment\\n                        key={`${validIdHelper(demoComponentType + '-outerFragment-' + index)}`}>\\n                        {tabContentItem.map((lookerContent, innerIndex) => {\\n                          return (\\n                            <Grid key={`${validIdHelper(demoComponentType + '-innerFragment-' + innerIndex)}`}\\n                              item\\n                              sm={parseInt(lookerContent.gridWidth)}\\n                            >\\n                              <Card className={classes.padding30}>\\n                                {(lookerContent.type === 'single value') && <SingleValueVis\\n                                  {...{ lookerContent, classes, demoComponentType }}\\n                                />}\\n                                {(lookerContent.type === 'welcome') && <Welcome\\n                                  {...{ lookerContent, classes, demoComponentType }}\\n                                />}\\n                                {(lookerContent.type === 'actionable insights') && <ActionableInsights\\n                                  {...{ lookerContent, classes, demoComponentType, handleMenuItemSelect }}\\n                                />}\\n                                {(lookerContent.type === 'dashboard') && <EmbeddedDashboard\\n                                  {...{ lookerContent, classes }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\\n                                />}\\n                              </Card>\\n                            </Grid>\\n                          )\\n                        })}\\n                      </React.Fragment>\\n                    }\\n                  </Grid>\\n                </TabPanel>\\n              })}\\n            </Box>\\n          </Box >\\n        </div >\\n      </Grid >\\n    </div >\\n  )\\n}\";","import { makeStyles } from '@material-ui/core/styles';\nimport { red, green } from '@material-ui/core/colors';\nconst redPrimary = red[500];\nconst greenPrimary = green[500];\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n  },\n  maxHeight200: {\n    maxHeight: 200,\n    height: 200,\n    overflow: 'hidden'\n  },\n  mt30: {\n    marginTop: 30\n  },\n  mb30: {\n    marginBottom: 30\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  cursorPointer: {\n    cursor: 'pointer'\n  },\n  border: {\n    border: '1px solid black'\n  },\n  height800: {\n    height: 800\n  },\n  maxHeight100: {\n    maxHeight: 100,\n    height: 100,\n  },\n  maxHeight400: {\n    maxHeight: 400,\n    height: 400,\n  },\n  minHeight680: {\n    minHeight: 680,\n  },\n  minHeight200: {\n    minHeight: 200,\n    overflow: 'scroll'\n  },\n  redNeg: {\n    color: redPrimary\n  },\n  greenPos: {\n    color: greenPrimary\n  },\n  padding30: {\n    padding: 30\n  },\n  mb12: {\n    marginBottom: 12\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  overflowVisible: {\n    overflow: 'visible'\n  }\n}));","import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}","import React, { useContext } from 'react';\nimport AppContext from '../../AppContext';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\n// maybe move this to config?\nexport const API_COLOR = '#FF0000'\nexport const EMBED_COLOR = '#0000FF'\n\nfunction Highlight({ children, color, height, width, margin, id, ...props }) {\n  const { show } = useContext(AppContext)\n  var style = {};\n  if (show) {\n    style = {\n      ...style,\n      boxShadow: `0 0 10px ${color}, \n      inset 0 0 10px ${color}`,\n      zIndex: 1000000\n    }\n  }\n\n  if (height) { style['height'] = height }\n  if (width) { style['width'] = width }\n  if (margin) { style['margin'] = margin }\n\n  // boxShadow: `0 4px 80px ${color}22`\n\n  return (\n    <div id={id} style={style} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport function ApiHighlight({ ...props }) {\n  return <Highlight {...props} color={API_COLOR}></Highlight>\n}\n\nexport function EmbedHighlight({ ...props }) {\n  return <Highlight {...props} color={EMBED_COLOR}></Highlight>\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Grid, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport function VectorThumbnail({ lookerContent, classes, item, handleMenuItemSelect }) {\n  const [svg, setSvg] = useState(undefined)\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    if (item) {\n      getThumbnail();\n    }\n  }, [item, lookerUser])\n\n  const getThumbnail = async () => {\n    let lookerResponse = await fetch(`/getthumbnail/${item.resourceType}/${item.id}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    const blob = new Blob([lookerResponseData.svg], { type: 'image/svg+xml' });\n    let url = URL.createObjectURL(blob);\n    setSvg(url)\n  }\n\n  return (\n    <Grid item sm={6}>\n      {svg ?\n        <Grid item sm={12}>\n          <Typography variant=\"subtitle1\" className={`${classes.textCenter}`} color=\"secondary\">{item.label}</Typography>\n          <ApiHighlight>\n            <div\n              onClick={() => handleMenuItemSelect(item.id, 1)}\n              className={` ${classes.maxHeight100} ${classes.textCenter} ${classes.cursorPointer} ${classes.overflowHidden}`}\n            >\n              <img\n                onClick={() => handleMenuItemSelect(item.id, 1)}\n                src={svg} />\n\n            </div>\n          </ApiHighlight></Grid>\n        :\n        ''\n      }\n    </Grid>\n\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid } from '@material-ui/core';\nimport { ResponsiveLine } from '@nivo/line';\nconst { validIdHelper } = require('../../../tools');\n\n\n\nexport function SingleValueVis({ lookerContent, classes }) {\n  // console.log('SingleValueVis')\n  // console.log('lookerContent', lookerContent)\n  // const [svg, setSvg] = useState(undefined)\n  const [apiContent, setApiContent] = useState([]);\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n\n\n  let dataObjForSparkline = {}\n  useEffect(() => {\n    if (lookerContent || lookerUser) {\n      runInlineQuery();\n    }\n  }, [lookerContent, lookerUser])\n\n\n\n  const runInlineQuery = async () => {\n    setApiContent([])\n    let stringifiedQuery = encodeURIComponent(JSON.stringify(lookerContent.inlineQuery))\n    let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    // console.log('lookerResponseData', lookerResponseData)\n    dataObjForSparkline.id = validIdHelper(`singleVisValue-${lookerContent.id}`);\n    dataObjForSparkline.data = [];\n\n    let dataArrForDataObj = [];\n    lookerResponseData.queryResults.map(item => {\n      if (item[lookerContent.inlineQuery.fields[0]]\n        // && item['order_items.count']['order_items.previous_period'][\"This Period\" ? \"This Period\" : \"Previous Period\"]\n      ) {\n        let thisDataItem = {\n          \"x\": item[lookerContent.inlineQuery.fields[0]].toString(),\n          \"y\": item[lookerContent.inlineQuery.fields[1]] || 0,\n          \"change\": item.change\n        }\n        if (thisDataItem.y !== \"null\") dataArrForDataObj.push(thisDataItem)\n      }\n    })\n    dataObjForSparkline.data = [...dataArrForDataObj]\n    setApiContent([dataObjForSparkline])\n  }\n\n  return (\n\n    <div\n      className={` ${classes.maxHeight200} ${classes.textCenter} ${classes.overflowHidden}`}\n      style={apiContent.length ? { borderLeft: `solid 3px ${lookerContent.visColor} ` } : {}}\n    >\n      {apiContent.length ?\n        <React.Fragment>\n          <ApiHighlight height={200}>\n            <Grid container>\n              <Grid item sm={1} />\n              <Grid item sm={5}>\n                <Typography variant=\"subtitle1\" align=\"left\">\n                  <b>{apiContent[0].data ? parseInt(apiContent[0].data[0].y).toFixed(2) : ''}</b>\n                </Typography>\n              </Grid>\n              <Grid item sm={5}>\n                <Typography variant=\"subtitle1\"\n                  className={isNaN((apiContent[0].data[0].change * 100).toFixed(2)) ? '' : parseInt((apiContent[0].data[0].change * 100).toFixed(0)) >= 0 ? classes.greenPos : classes.redNeg}\n                  align=\"right\">\n                  {apiContent[0].data ? `${parseInt(apiContent[0].data[0].change * 100).toFixed(0)}% ` : ''}\n                </Typography>\n              </Grid>\n              <Grid item sm={1} />\n\n\n            </Grid>\n            <ResponsiveLine\n              data={apiContent}\n              margin={{ top: 25, right: 25, bottom: 25, left: 25 }}\n              xScale={{\n                type: 'time',\n                format: '%Y-%m-%d',\n                precision: 'day',\n              }}\n              yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n              axisLeft={{\n                orient: \"left\",\n                tickSize: 0,\n                tickPadding: 5,\n                tickRotation: 0,\n                format: () => null\n              }}\n              axisBottom={{\n                orient: \"bottom\",\n                tickSize: 0,\n                tickPadding: 5,\n                tickRotation: 0,\n                format: () => null,\n                legend: lookerContent.label,\n                legendOffset: 15,\n                legendPosition: 'middle'\n              }}\n              enablePoints={false}\n              enableGridX={false}\n              enableGridY={false}\n              height={150}\n              colors={lookerContent.visColor}\n              animate={true}\n            />\n          </ApiHighlight>\n        </React.Fragment>\n        :\n        <Grid item sm={12} >\n          <Card className={`${classes.card} ${classes.flexCentered} ${classes.minHeight200} `}>\n            <CircularProgress className={classes.circularProgress}\n              style={{ color: `${lookerContent.visColor} ` }} />\n          </Card>\n        </Grid>\n      }\n    </div >\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nconst { validIdHelper } = require('../../../tools');\n\n\n\nexport function Welcome({ lookerContent, classes }) {\n  // console.log('Welcome')\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    // setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  return (\n    <div\n      className={` ${classes.maxHeight400} ${classes.overflowScroll}`}\n    >\n      <Typography variant=\"h5\" >\n        Welcome back, <b>{userProfile.givenName} & {lookerUser.user_attributes.brand}!</b>\n      </Typography>\n\n      <Typography variant=\"subtitle1\" display=\"inline\">\n        <b><i>atom</i> fashion</b> build an atomic connection with your customers\n      </Typography>\n      <Divider className={`${classes.divider} ${classes.mb12} ${classes.mt12}`} />\n      <Typography variant=\"h6\" >\n        Latest content for you\n      </Typography>\n\n      <Carousel infiniteLoop={true} autoPlay={true} showThumbs={false}>\n        <div>\n          <img src={require(`../../../images/splash_blog.jpg`)} />\n          <p className=\"legend\">Blog</p>\n        </div>\n        <div>\n          <img src={require(`../../../images/splash_inventory.jpg`)} />\n          <p className=\"legend\">Inventory Best Practices</p>\n        </div>\n        <div>\n          <img src={require(`../../../images/splash_macro.jpg`)} />\n          <p className=\"legend\">Macro Trends</p>\n        </div>\n      </Carousel>\n    </div >\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Grid, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport function NaturalLanguage({ lookerContent, item, index, classes }) {\n  const [apiContent, setApiContent] = useState(undefined);\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    if (item) {\n      runInlineQuery();\n    }\n  }, [item, lookerUser])\n\n  const runInlineQuery = async () => {\n    setApiContent(undefined)\n    let inlineQuery = item;\n    let stringifiedQuery = encodeURIComponent(JSON.stringify(inlineQuery))\n    let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    setApiContent(lookerResponseData.queryResults[0])\n  }\n  return (\n    <Grid item sm={12}>\n      {apiContent ?\n        <ApiHighlight>\n          <Typography variant=\"subtitle1\" display=\"inline\">\n            Your {lookerContent.inlineQueriesMap[index]} category, <b>{apiContent['products.category']}</b>, is {apiContent.change > 0 ? 'up ' : 'down '}\n          </Typography>\n          <Typography variant=\"subtitle1\" display=\"inline\" className={apiContent.change > 0 ? classes.greenPos : classes.redNeg}>\n            {`${parseInt(apiContent.change * 100).toFixed(0)}% `}\n          </Typography>\n          <Typography variant=\"subtitle1\" display=\"inline\">\n            over the past week.\n        </Typography>\n        </ApiHighlight>\n        : <div style={{ height: '56px' }}></div>\n      }\n    </Grid >\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ResponsiveLine } from '@nivo/line';\nimport { VectorThumbnail } from './VectorThumbnail';\nimport { NaturalLanguage } from './NaturalLanguage';\nconst { validIdHelper } = require('../../../tools');\n\n\n\nexport function ActionableInsights({ lookerContent, classes, handleMenuItemSelect }) {\n  const [apiContent, setApiContent] = useState([]);\n\n  return (\n    <div\n      className={` ${classes.maxHeight400} ${classes.overflowScroll}`}\n    >\n      <Typography variant=\"h5\" >\n        Actionable Insights\n      </Typography>\n\n      <Grid container\n        spacing={3}>\n        {lookerContent.inlineQueries.map((item, index) => (\n          <NaturalLanguage\n            key={`${validIdHelper('naturalLanguage-splashPage-' + index)}`}\n            {...{ lookerContent, item, index, classes }}\n\n          />\n        )\n        )}\n      </Grid>\n      <Divider className={`${classes.divider} ${classes.mb12} ${classes.mt12}`} />\n      <Grid container\n        spacing={3}>\n        <Grid item sm={12}>\n          <Typography variant=\"h6\" >\n            Popular Analysis\n          </Typography></Grid>\n        {lookerContent.vectors.map((item, index) => (\n          <VectorThumbnail\n            key={`${validIdHelper('vectorThumbnail-splashPage-' + index)}`}\n            {...{ lookerContent, item, classes, handleMenuItemSelect }}\n          // onClick={() => onClick(item.id, 1)}\n          />\n        )\n        )}\n      </Grid>\n\n    </div >\n  );\n}\n","import $ from 'jquery';\nimport React, { useEffect, useRef, useCallback, useState, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport { Typography, Grid, Card, CircularProgress, Box } from '@material-ui/core';\n\nexport function EmbeddedDashboard({ lookerContent, classes, id }) {\n\n  const [iFrameExists, setIFrame] = useState(0);\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    $(`#${id}`).html('')\n    setIFrame(0)\n    LookerEmbedSDK.createDashboardWithId(lookerContent.id)\n      .appendTo(document.getElementById(id))\n      .withClassName('dashboard')\n      .withClassName('splashPage')\n      .withClassName(lookerContent.id)\n      .withNext()\n      .withTheme('atom_fashion')\n      .build()\n      .connect()\n      .then((look) => {\n        setIFrame(1)\n      })\n      .catch((error) => {\n        console.error('Connection error', error)\n      })\n  }, [lookerUser])\n\n  return (\n\n    <div\n      className={` ${classes.maxHeight400} ${classes.textCenter} ${classes.overflowVisible}`}\n    >\n      {\n        iFrameExists ? '' :\n\n          <Grid item sm={12} >\n            <Card className={`${classes.card} ${classes.flexCentered} ${classes.maxHeight400} `} elevation={0}>\n              <CircularProgress className={classes.circularProgress}\n              />\n            </Card>\n          </Grid>\n      }\n      <Box >\n        <Grid item sm={12}>\n          <EmbedHighlight>\n            <div\n              className={`embedContainer splashPage`}\n              id={id}\n              key={id}\n            >\n            </div>\n          </EmbedHighlight>\n        </Grid>\n      </Box>\n    </div >\n\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    flexCentered: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    hidden: {\n        visibility: 'hidden',\n        position: 'absolute', //hack for obscuring other elements within Box\n        zIndex: -1\n    },\n    tabs: {\n        backgroundColor: 'white',\n        color: '#6c757d'\n    },\n    dNone: {\n        display: 'none'\n    },\n    dBlock: {\n        display: 'block'\n    },\n    tree: {\n        height: 240,\n        flexGrow: 1,\n        maxWidth: 400,\n    },\n    icon: {\n        marginRight: 12,\n        fontSize: '1rem',\n        overflow: 'visible'\n    },\n    mt12: {\n        marginTop: 12\n    },\n    w100: {\n        width: '100%'\n    },\n    mlAuto: {\n        marginLeft: 'auto'\n    },\n    skeleton: {\n        minWidth: 275,\n        minHeight: 600,\n    },\n    card: {\n        minWidth: 275,\n        minHeight: 800,\n    },\n}));","import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport function NumberToColoredPercent( {val, positive_good, abs_val}) {\n  const colors = {\n    up: (positive_good) ? 'green' : 'red',\n    down: (positive_good) ? 'red' : 'green'\n  }\n  const color = (val<0) ? colors.down : (val>0) ? colors.up : 'black'\n  const val_formatted = Math.abs(val).toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 2 })\n  const icon = (val<0) ? '▼' : (val>0) ? '▲' : '—'\n  \n  return (<>\n      <font\n        color={color}\n      >\n        {`${icon} ${val_formatted}`}\n      </font>\n  </>\n  )\n}","import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField } from '@material-ui/core'\nimport { Autocomplete, ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./Dashboard.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport { NumberToColoredPercent } from '../../Accessories/NumberToColoredPercent';\nconst { validIdHelper } = require('../../../tools');\n\n//start of Dashboard Component\nexport default function Dashboard(props) {\n  // console.log('Dashboard')\n  //initialize state using hooks\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState([]);\n  const [dashboardObj, setDashboardObj] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const [toggleValue, setToggleValue] = useState('');\n  const [dashboardLayout, setDashboardLayout] = useState({});\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  const tabContent = [...lookerContent, codeTab];\n  const demoComponentType = type || 'code flyout';\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  const handleToggle = (event, newValue) => {\n    setToggleValue(newValue)\n    const filteredLayout = _.filter(dashboardLayout.dashboard_layout_components, (row) => {\n      return (lookerContent[0].dynamicFieldLookUp[newValue].indexOf(row.dashboard_element_id) > -1)\n    })\n    const newDashboardLayout = {\n      ...dashboardLayout,\n      dashboard_layout_components: filteredLayout\n    }\n    dashboardObj.setOptions({ \"layouts\": [newDashboardLayout] })\n  };\n\n  /**\n   * listen for lookerContent and call \n   * performLookerApiCalls and setSampleCode\n  */\n  useEffect(() => {\n    performLookerApiCalls([...lookerContent])\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n\n  useEffect(() => {\n    if (Object.keys(dashboardLayout).length && Object.keys(dashboardObj).length && lookerContent[0].dynamicFieldLookUp) {\n      handleToggle(null, Object.keys(lookerContent[0].dynamicFieldLookUp)[0])\n    }\n  }, [dashboardLayout]);\n\n  /** \n   * What this function does:\n   * iterate over Looker Content array referenced above and\n   * calls specific endpoints and methods available from Looker Node SDK\n   * and embed SDK to create the experience on this page\n   */\n  const performLookerApiCalls = function (lookerContent) {\n    $(`.embedContainer.${validIdHelper(demoComponentType)}:visible`).html('')\n    // let embedContainerId = validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`);\n    // $(`#${embedContainerId}`).html();\n    setIFrame(0)\n    setApiContent([])\n    lookerContent.map(async lookerContent => {\n      let dashboardId = lookerContent.id;\n      LookerEmbedSDK.createDashboardWithId(dashboardId)\n        .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${dashboardId}`))\n        .withClassName('iframe')\n        .withNext()\n        // .withNext(lookerContent.isNext || false) //how can I make this dynamic based on prop??\n        .withTheme('atom_fashion')\n        .on('drillmenu:click', (event) => typeof (_.camelCase(demoComponentType) + 'Action') == 'function' ? this[_.camelCase(demoComponentType) + 'Action'](event) : '')\n        //.on('dashboard:loaded', dashboardLoaded)\n        .on('dashboard:loaded', (event) => {\n          // console.log('dashboard:loaded event', event)\n          setDashboardLayout(event.dashboard.options.layouts[0])\n        })\n        .build()\n        .connect()\n        .then((dashboard) => {\n          setIFrame(1)\n          setDashboardObj(dashboard)\n        })\n        .catch((error) => {\n          // console.error('Connection error', error)\n        })\n\n      if (lookerContent.hasOwnProperty('filter')) {\n        //get inline query from usecase file & set user attribute dynamically\n        let jsonQuery = lookerContent.inlineQuery;\n        jsonQuery.filters = {\n          ...jsonQuery.filters,\n          [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\n        };\n        lookerContent.inlineQuery = jsonQuery;\n        let stringifiedQuery = encodeURIComponent(JSON.stringify(lookerContent.inlineQuery))\n        let lookerResponse = await fetch('/runinlinequery/' + stringifiedQuery + '/json', {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          }\n        })\n        let lookerResponseData = await lookerResponse.json();\n        let queryResultsForDropdown = [];\n        let desiredProperty = Object.keys(lookerResponseData.queryResults[0])[0];\n        for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\n          queryResultsForDropdown.push({\n            'label': lookerResponseData.queryResults[i][desiredProperty],\n            'trend': (lookerResponseData.queryResults[i]['trend']) ? lookerResponseData.queryResults[i]['trend'] : undefined\n          })\n        }\n        setApiContent(queryResultsForDropdown);\n        if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\n      }\n    })\n  }\n\n  /**\n   * update dashboard when custom filter changed\n  */\n  const customFilterAction = (dashboardId, filterName, newFilterValue) => {\n    if (Object.keys(dashboardObj).length) {\n      dashboardObj.updateFilters({ [filterName]: newFilterValue })\n      dashboardObj.run()\n    }\n  }\n\n  /**\n   * What this return  does:\n   * Rendering of actual html elements,\n   * this section is necessary but less relevant to looker functionality itself\n   */\n  return (\n    <div className={`${classes.root} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={classes.root}>\n          {iFrameExists ? '' :\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\n                <CircularProgress className={classes.circularProgress} />\n              </Card>\n            </Grid>\n          }\n\n          {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\n          <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n            <AppBar position=\"static\">\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                aria-label=\"simple tabs example\">\n                {tabContent.map((item, index) => (\n                  <Tab\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                    label={item.label}\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\n                    {...a11yProps(index)} />\n                ))}\n              </Tabs>\n            </AppBar>\n            <Box className=\"tabPanelContainer\">\n              {tabContent.map((tabContentItem, index) => (\n                <TabPanel\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\n                  value={value}\n                  index={index}>\n                  <Grid container>\n                    {tabContentItem.type === 'code flyout' ?\n                      // could this go to home/parent component\n                      // so it's not in the demo component itself whatsoever\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerContent={lookerContent}\n                        clientSideCode={clientSideCode}\n                        serverSideCode={serverSideCode}\n                        lookerUser={lookerUser} />\n                      :\n                      <React.Fragment\n                        key={`${validIdHelper(demoComponentType + '-innerFragment-' + index)}`}>\n                        {tabContentItem.filter ?\n\n                          <Grid item sm={6}>\n                            <ApiHighlight>\n                              <Autocomplete\n                                id={`combo-box-dashboard-${lookerContent.id}`}\n                                options={Array.isArray(apiContent) ?\n                                  apiContent :\n                                  []}\n                                renderOption={(option) => (\n                                  <Grid container justify=\"space-between\">\n                                    <Grid item>\n                                      {option.label}\n                                    </Grid>\n                                    {option.trend && <Grid item>\n                                      <NumberToColoredPercent\n                                        val={option.trend}\n                                        positive_good={true}\n                                        abs_val={Math.abs(option.trend)}\n                                      />\n                                    </Grid>}\n                                  </Grid>\n                                )}\n                                getOptionLabel={(option) => option.label}\n                                style={{ width: 400 }}\n                                onChange={(event, newValue) => {\n                                  customFilterAction(tabContentItem.id, tabContentItem.filter.filterName, (newValue) ? newValue.label : '')\n                                }}\n                                renderInput={(params) => <TextField {...params} label={tabContentItem.filter.filterName} variant=\"outlined\" />}\n                                loadingText=\"Loading...\"\n                              />\n                            </ApiHighlight>\n                          </Grid> : ''\n                        }\n                        {tabContentItem.dynamicFieldLookUp ?\n                          <Grid item sm={6}>\n                            <ApiHighlight>\n                              <ToggleButtonGroup\n                                value={toggleValue}\n                                exclusive\n                                onChange={handleToggle}\n                                aria-label=\"text alignment\"\n                              >\n                                {Object.keys(tabContentItem.dynamicFieldLookUp).map(key => {\n                                  return (\n                                    <ToggleButton\n                                      key={validIdHelper(`dynamicDashToggle-${key}`)}\n                                      value={key} aria-label=\"left aligned\">\n                                      {key}\n                                    </ToggleButton>\n                                  )\n                                })}\n                              </ToggleButtonGroup>\n                            </ApiHighlight>\n                          </Grid>\n                          : ''\n                        }\n                        <Box className={classes.w100} mt={2}>\n                          <Grid item sm={12}>\n                            <EmbedHighlight>\n                              <div\n                                className={`embedContainer ${validIdHelper(demoComponentType)}`}\n                                id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                              >\n                              </div>\n                            </EmbedHighlight>\n                          </Grid>\n                        </Box>\n                      </React.Fragment>\n                    }\n                  </Grid>\n                </TabPanel>\n              ))}\n            </Box>\n          </Box >\n        </div>\n      </Grid >\n    </div >\n  )\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect } from 'react';\\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField } from '@material-ui/core'\\nimport { Autocomplete, ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./Dashboard.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\\nimport { NumberToColoredPercent } from '../../Accessories/NumberToColoredPercent';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of Dashboard Component\\nexport default function Dashboard(props) {\\n  // console.log('Dashboard')\\n  //initialize state using hooks\\n  const [value, setValue] = useState(0);\\n  const [iFrameExists, setIFrame] = useState(0);\\n  const [apiContent, setApiContent] = useState([]);\\n  const [dashboardObj, setDashboardObj] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const [toggleValue, setToggleValue] = useState('');\\n  const [dashboardLayout, setDashboardLayout] = useState({});\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  const tabContent = [...lookerContent, codeTab];\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  const handleToggle = (event, newValue) => {\\n    setToggleValue(newValue)\\n    const filteredLayout = _.filter(dashboardLayout.dashboard_layout_components, (row) => {\\n      return (lookerContent[0].dynamicFieldLookUp[newValue].indexOf(row.dashboard_element_id) > -1)\\n    })\\n    const newDashboardLayout = {\\n      ...dashboardLayout,\\n      dashboard_layout_components: filteredLayout\\n    }\\n    dashboardObj.setOptions({ \\\"layouts\\\": [newDashboardLayout] })\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * performLookerApiCalls and setSampleCode\\n  */\\n  useEffect(() => {\\n    performLookerApiCalls([...lookerContent])\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent, lookerUser]);\\n\\n\\n  useEffect(() => {\\n    if (Object.keys(dashboardLayout).length && Object.keys(dashboardObj).length && lookerContent[0].dynamicFieldLookUp) {\\n      handleToggle(null, Object.keys(lookerContent[0].dynamicFieldLookUp)[0])\\n    }\\n  }, [dashboardLayout]);\\n\\n  /** \\n   * What this function does:\\n   * iterate over Looker Content array referenced above and\\n   * calls specific endpoints and methods available from Looker Node SDK\\n   * and embed SDK to create the experience on this page\\n   */\\n  const performLookerApiCalls = function (lookerContent) {\\n    $(`.embedContainer.${validIdHelper(demoComponentType)}:visible`).html('')\\n    // let embedContainerId = validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`);\\n    // $(`#${embedContainerId}`).html();\\n    setIFrame(0)\\n    setApiContent([])\\n    lookerContent.map(async lookerContent => {\\n      let dashboardId = lookerContent.id;\\n      LookerEmbedSDK.createDashboardWithId(dashboardId)\\n        .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${dashboardId}`))\\n        .withClassName('iframe')\\n        .withNext()\\n        // .withNext(lookerContent.isNext || false) //how can I make this dynamic based on prop??\\n        .withTheme('atom_fashion')\\n        .on('drillmenu:click', (event) => typeof (_.camelCase(demoComponentType) + 'Action') == 'function' ? this[_.camelCase(demoComponentType) + 'Action'](event) : '')\\n        //.on('dashboard:loaded', dashboardLoaded)\\n        .on('dashboard:loaded', (event) => {\\n          // console.log('dashboard:loaded event', event)\\n          setDashboardLayout(event.dashboard.options.layouts[0])\\n        })\\n        .build()\\n        .connect()\\n        .then((dashboard) => {\\n          setIFrame(1)\\n          setDashboardObj(dashboard)\\n        })\\n        .catch((error) => {\\n          // console.error('Connection error', error)\\n        })\\n\\n      if (lookerContent.hasOwnProperty('filter')) {\\n        //get inline query from usecase file & set user attribute dynamically\\n        let jsonQuery = lookerContent.inlineQuery;\\n        jsonQuery.filters = {\\n          ...jsonQuery.filters,\\n          [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\\n        };\\n        lookerContent.inlineQuery = jsonQuery;\\n        let stringifiedQuery = encodeURIComponent(JSON.stringify(lookerContent.inlineQuery))\\n        let lookerResponse = await fetch('/runinlinequery/' + stringifiedQuery + '/json', {\\n          method: 'GET',\\n          headers: {\\n            Accept: 'application/json',\\n            'Content-Type': 'application/json'\\n          }\\n        })\\n        let lookerResponseData = await lookerResponse.json();\\n        let queryResultsForDropdown = [];\\n        let desiredProperty = Object.keys(lookerResponseData.queryResults[0])[0];\\n        for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\\n          queryResultsForDropdown.push({\\n            'label': lookerResponseData.queryResults[i][desiredProperty],\\n            'trend': (lookerResponseData.queryResults[i]['trend']) ? lookerResponseData.queryResults[i]['trend'] : undefined\\n          })\\n        }\\n        setApiContent(queryResultsForDropdown);\\n        if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\\n      }\\n    })\\n  }\\n\\n  /**\\n   * update dashboard when custom filter changed\\n  */\\n  const customFilterAction = (dashboardId, filterName, newFilterValue) => {\\n    if (Object.keys(dashboardObj).length) {\\n      dashboardObj.updateFilters({ [filterName]: newFilterValue })\\n      dashboardObj.run()\\n    }\\n  }\\n\\n  /**\\n   * What this return  does:\\n   * Rendering of actual html elements,\\n   * this section is necessary but less relevant to looker functionality itself\\n   */\\n  return (\\n    <div className={`${classes.root} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={classes.root}>\\n          {iFrameExists ? '' :\\n            <Grid item sm={12} >\\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                <CircularProgress className={classes.circularProgress} />\\n              </Card>\\n            </Grid>\\n          }\\n\\n          {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\\n          <Box className={iFrameExists ? `` : `${classes.hidden}`}>\\n            <AppBar position=\\\"static\\\">\\n              <Tabs\\n                className={classes.tabs}\\n                value={value}\\n                onChange={handleChange}\\n                aria-label=\\\"simple tabs example\\\">\\n                {tabContent.map((item, index) => (\\n                  <Tab\\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\\n                    label={item.label}\\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\\n                    {...a11yProps(index)} />\\n                ))}\\n              </Tabs>\\n            </AppBar>\\n            <Box className=\\\"tabPanelContainer\\\">\\n              {tabContent.map((tabContentItem, index) => (\\n                <TabPanel\\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\\n                  value={value}\\n                  index={index}>\\n                  <Grid container>\\n                    {tabContentItem.type === 'code flyout' ?\\n                      // could this go to home/parent component\\n                      // so it's not in the demo component itself whatsoever\\n                      <CodeFlyout {...props}\\n                        classes={classes}\\n                        lookerContent={lookerContent}\\n                        clientSideCode={clientSideCode}\\n                        serverSideCode={serverSideCode}\\n                        lookerUser={lookerUser} />\\n                      :\\n                      <React.Fragment\\n                        key={`${validIdHelper(demoComponentType + '-innerFragment-' + index)}`}>\\n                        {tabContentItem.filter ?\\n\\n                          <Grid item sm={6}>\\n                            <ApiHighlight>\\n                              <Autocomplete\\n                                id={`combo-box-dashboard-${lookerContent.id}`}\\n                                options={Array.isArray(apiContent) ?\\n                                  apiContent :\\n                                  []}\\n                                renderOption={(option) => (\\n                                  <Grid container justify=\\\"space-between\\\">\\n                                    <Grid item>\\n                                      {option.label}\\n                                    </Grid>\\n                                    {option.trend && <Grid item>\\n                                      <NumberToColoredPercent\\n                                        val={option.trend}\\n                                        positive_good={true}\\n                                        abs_val={Math.abs(option.trend)}\\n                                      />\\n                                    </Grid>}\\n                                  </Grid>\\n                                )}\\n                                getOptionLabel={(option) => option.label}\\n                                style={{ width: 400 }}\\n                                onChange={(event, newValue) => {\\n                                  customFilterAction(tabContentItem.id, tabContentItem.filter.filterName, (newValue) ? newValue.label : '')\\n                                }}\\n                                renderInput={(params) => <TextField {...params} label={tabContentItem.filter.filterName} variant=\\\"outlined\\\" />}\\n                                loadingText=\\\"Loading...\\\"\\n                              />\\n                            </ApiHighlight>\\n                          </Grid> : ''\\n                        }\\n                        {tabContentItem.dynamicFieldLookUp ?\\n                          <Grid item sm={6}>\\n                            <ApiHighlight>\\n                              <ToggleButtonGroup\\n                                value={toggleValue}\\n                                exclusive\\n                                onChange={handleToggle}\\n                                aria-label=\\\"text alignment\\\"\\n                              >\\n                                {Object.keys(tabContentItem.dynamicFieldLookUp).map(key => {\\n                                  return (\\n                                    <ToggleButton\\n                                      key={validIdHelper(`dynamicDashToggle-${key}`)}\\n                                      value={key} aria-label=\\\"left aligned\\\">\\n                                      {key}\\n                                    </ToggleButton>\\n                                  )\\n                                })}\\n                              </ToggleButtonGroup>\\n                            </ApiHighlight>\\n                          </Grid>\\n                          : ''\\n                        }\\n                        <Box className={classes.w100} mt={2}>\\n                          <Grid item sm={12}>\\n                            <EmbedHighlight>\\n                              <div\\n                                className={`embedContainer ${validIdHelper(demoComponentType)}`}\\n                                id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                              >\\n                              </div>\\n                            </EmbedHighlight>\\n                          </Grid>\\n                        </Box>\\n                      </React.Fragment>\\n                    }\\n                  </Grid>\\n                </TabPanel>\\n              ))}\\n            </Box>\\n          </Box >\\n        </div>\\n      </Grid >\\n    </div >\\n  )\\n}\";","//imports\nimport $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, Divider } from '@material-ui/core'\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./SplashPage.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport { VectorThumbnail } from './VectorThumbnail';\nimport { SingleValueVis } from './SingleValueVis';\nimport { Welcome } from './Welcome';\nimport { ActionableInsights } from './ActionableInsights';\nimport { EmbeddedLook } from './EmbeddedLook';\nimport { EmbeddedDashboard } from './EmbeddedDashboard';\nimport Dashboard from '../Dashboard/Dashboard';\nconst { validIdHelper } = require('../../../tools');\n\n//start of SplashPage Component\nexport default function SplashPage(props) {\n  // console.log('SplashPage')\n  //intialize state using hooks\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(1);\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, handleTabChange, handleMenuItemSelect, lookerUser } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  const tabContent = [[...lookerContent], codeTab];\n  const demoComponentType = type || 'code flyout';\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  /**\n   * listen for lookerContent and call \n   * setSampleCode\n  */\n  useEffect(() => {\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent]);\n\n\n  /**\n   * What this return  does:\n   * Rendering of actual html elements,\n   * this section is necessary but less relevant to looker functionality itself\n   */\n  return (\n    <div className={`${classes.root} ${classes.minHeight680} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={classes.root}>\n          {iFrameExists ? '' :\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\n                <CircularProgress className={classes.circularProgress} />\n              </Card>\n            </Grid>\n          }\n          <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n            <AppBar position=\"static\">\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                aria-label=\"simple tabs example\">\n                {tabContent.map((item, index) => (\n                  <Tab\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                    label={item.label ? item.label : 'At a glance'}\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\n                    {...a11yProps(index)} />\n                ))}\n              </Tabs>\n            </AppBar>\n            <Box className=\"tabPanelContainer\">\n              {tabContent.map((tabContentItem, index) => {\n                return <TabPanel\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\n                  value={value}\n                  index={index}>\n                  <Grid container\n                    spacing={3}>\n                    {tabContentItem.type === 'code flyout' ?\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerContent={lookerContent}\n                        clientSideCode={clientSideCode}\n                        serverSideCode={serverSideCode}\n                        lookerUser={lookerUser} />\n                      :\n                      <React.Fragment\n                        key={`${validIdHelper(demoComponentType + '-outerFragment-' + index)}`}>\n                        {tabContentItem.map((lookerContent, innerIndex) => {\n                          return (\n                            <Grid key={`${validIdHelper(demoComponentType + '-innerFragment-' + innerIndex)}`}\n                              item\n                              sm={parseInt(lookerContent.gridWidth)}\n                            >\n                              <Card className={classes.padding30}>\n                                {(lookerContent.type === 'single value') && <SingleValueVis\n                                  {...{ lookerContent, classes, demoComponentType }}\n                                />}\n                                {(lookerContent.type === 'welcome') && <Welcome\n                                  {...{ lookerContent, classes, demoComponentType }}\n                                />}\n                                {(lookerContent.type === 'actionable insights') && <ActionableInsights\n                                  {...{ lookerContent, classes, demoComponentType, handleMenuItemSelect }}\n                                />}\n                                {(lookerContent.type === 'dashboard') && <EmbeddedDashboard\n                                  {...{ lookerContent, classes }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\n                                />}\n                              </Card>\n                            </Grid>\n                          )\n                        })}\n                      </React.Fragment>\n                    }\n                  </Grid>\n                </TabPanel>\n              })}\n            </Box>\n          </Box >\n        </div >\n      </Grid >\n    </div >\n  )\n}","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst { validIdHelper, prettifyString } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 800,\n        maxHeight: 450,\n        overflow: 'scroll',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    table: {\n        maxHeight: 310\n    },\n    card: {\n        minWidth: 275,\n        minHeight: '10rem',\n        boxShadow: 'none'\n    },\n    flexCentered: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n}));\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 //+ rand();\n    const left = 50 //+ rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nexport default function ModalTable(props) {\n    // console.log('ModalTable')\n    // console.log('props', props)\n\n    const classes = useStyles();\n    const { open, onClose, modalContent } = props;\n    const [modalStyle] = React.useState(getModalStyle);\n\n\n    return (\n        <Modal\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n\n            <div style={modalStyle} className={classes.paper}>\n                <h2 id=\"simple-modal-title\">{modalContent.title}</h2>\n                {modalContent.body ?\n                    <TableContainer component={Paper} className={classes.table}>\n                        <Table stickyHeader className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                            <TableHead>\n                                <TableRow>\n                                    {Object.keys(modalContent.body[0]).map((key, index) => (\n                                        <TableCell align=\"right\"\n                                            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n                                            id={validIdHelper(key + '-TableHead-TableCell-' + index)}>\n                                            {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}</TableCell>\n\n\n                                    ))}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {modalContent.body.map((item, index) => (\n\n                                    <TableRow\n                                        key={validIdHelper('TableRow-' + index)}\n                                        id={validIdHelper('TableRow-' + index)} >\n                                        {\n                                            Object.keys(item).map(key => (\n                                                <TableCell align=\"right\"\n                                                    key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                                                    id={validIdHelper(key + '-TableBody-TableCell-' + index)}>\n                                                    {\n                                                        modalContent.body[index][key] ?\n                                                            modalContent.body[index][key].rendered ?\n                                                                modalContent.body[index][key].rendered :\n                                                                modalContent.body[index][key].value ?\n                                                                    modalContent.body[index][key].value :\n                                                                    typeof modalContent.body[index][key] === 'number' ?\n                                                                        (Math.round(modalContent.body[index][key] * 100) / 100)//.toLocaleString()\n                                                                        :\n                                                                        modalContent.body[index][key] //.toLocaleString() \n                                                            :\n                                                            ''\n                                                    }\n                                                </TableCell>\n                                            ))\n                                        }\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer >\n                    :\n\n                    <Card className={`${classes.card} ${classes.flexCentered}`}>\n                        <CircularProgress className={classes.circularProgress} />\n                    </Card>}\n\n            </div >\n        </Modal >\n    )\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    flexCentered: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    hidden: {\n        visibility: 'hidden',\n        // position: 'absolute', //hack for obscuring other elements within Box\n        zIndex: -1\n    },\n    tabs: {\n        backgroundColor: 'white',\n        color: '#6c757d'\n    },\n    dNone: {\n        display: 'none'\n    },\n    dBlock: {\n        display: 'block'\n    },\n    tree: {\n        height: 240,\n        flexGrow: 1,\n        maxWidth: 400,\n    },\n    icon: {\n        marginRight: 12,\n        fontSize: '1rem',\n        overflow: 'visible'\n    },\n    mt12: {\n        marginTop: 12\n    },\n    w100: {\n        width: '100%'\n    },\n    mlAuto: {\n        marginLeft: 'auto'\n    },\n    card: {\n        minWidth: 275,\n        minHeight: 800,\n    },\n    height500: {\n        height: 500\n    },\n    height700: {\n        height: 700\n    },\n    height800: {\n        height: 800\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    skeleton: {\n        height: 200,\n        width: '100%'\n    }\n}));","import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n","import _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, InputLabel, MenuItem,\n  FormControl, Select, Modal\n} from '@material-ui/core'\nimport { Skeleton } from '@material-ui/lab';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ModalTable from '../../Material/ModalTable';\nimport { ResponsiveCalendar } from '@nivo/calendar'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./CustomVis.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\n//new date pickers\nimport { format, endOfDay, addDays } from 'date-fns';\n// import React from 'react';\n// import Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\n//start of Custom Viz Calendar Component\nexport default function CustomVis(props) {\n  //initialize state using hooks\n  const [value, setValue] = useState(0);\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [category, setCategory] = useState('All')\n  const [desiredField, setDesiredField] = useState('')\n  const [apiContent, setApiContent] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [modalContent, setModalContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n\n  const { toggleShowPayWallModal } = useContext(AppContext)\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  const tabContent = [...lookerContent, codeTab]\n  const demoComponentType = type || 'code flyout';\n\n  //handle opening of modal for advanced and premium users\n  const handleModalOpen = async ({ day }) => {\n    let originalInlineQueryCopy = JSON.parse(JSON.stringify(lookerContent[0].inlineQuery));\n    originalInlineQueryCopy.filters = {\n      ...originalInlineQueryCopy.filters,\n      [originalInlineQueryCopy.fields[0]]: day,\n      [originalInlineQueryCopy.fields[1]]: category === \"All\" ? '' : category\n    }\n    originalInlineQueryCopy.total = true;\n    originalInlineQueryCopy.limit = \"25\";\n\n    setOpen(true);\n    let lookerResponse = await fetch('/runinlinequery/' + encodeURIComponent(JSON.stringify(originalInlineQueryCopy)) + '/json', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    let modalObj = {\n      \"title\": `Detail View for ${day}`,\n      \"body\": lookerResponseData.queryResults\n    }\n    setModalContent(modalObj);\n  };\n\n  //handle modal close\n  const handleModalClose = () => {\n    setModalContent({})\n    setOpen(false);\n  };\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  const handleFromDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setFromDate(newValueAsDate);\n    }\n  }\n  const handleToDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setToDate(newValueAsDate);\n    }\n  }\n  const handleCategory = newValue => {\n    setCategory(newValue)\n  }\n  const handleDesiredField = newValue => {\n    setDesiredField(newValue)\n  }\n\n  //format response from initial api call based on LookerContent array\n  //to match format required by Nivo Calendar component\n  let filterData = [];\n  if (apiContent.queryResults && apiContent.queryResults) {\n    //filtering for fromDate, toDate and category\n    filterData = _.filter(apiContent.queryResults, (row) => {\n      return (row[apiContent.inlineQuery.fields[0]] >= fromDate\n        && row[apiContent.inlineQuery.fields[0]] < toDate\n        && (category === 'All' ? true : row[apiContent.inlineQuery.fields[1]] === category)\n      )\n    })\n    //converting filterDAta to desired format for vis\n    filterData = filterData.map(item => {\n      return {\n        'day': item[apiContent.inlineQuery.fields[0]],\n        'category': item[apiContent.inlineQuery.fields[1]],\n        'value': item[desiredField]\n      }\n    })\n\n    //special exception for category all\n    //need to reduce array by day across categories\n    //destructuing in reduce of value would not work for dynamic var\n    if (category === 'All') {\n      //create array of all unique dates\n      const uniqueDates = [...new Set(filterData.map(item => item.day))];\n      let filteredAndReducedForAll = []\n      //iterate over unique date\n      uniqueDates.map(uniqueDate => {\n        //filter filterData for current unique date\n        let value = _.filter(filterData, row => {\n          return row.day === uniqueDate\n        }).reduce((acc, { value }) => acc + value, 0)\n        let thisObj = {\n          day: uniqueDate,\n          value: value,\n          category: 'All'\n        }\n        filteredAndReducedForAll.push(thisObj)\n\n      })\n      filterData = filteredAndReducedForAll;\n    }\n  }\n\n  /**\n   * listen for lookerContent and call \n   * performLookerApiCalls and setSampleCode\n  */\n  useEffect(() => {\n    if (lookerContent.length) {\n      setTimeout(() => performLookerApiCalls(lookerContent), 100);\n      setDesiredField(lookerContent[0].desiredFields[0])\n      setClientSideCode(rawSampleCode)\n    }\n  }, [lookerContent, lookerUser])\n\n  /** \n   * What this function does:\n   * iterate over Looker Content array referenced above and\n   * calls specific endpoints and methods available from Looker Node SDK\n   * and embed SDK to create the experience on this page\n   */\n  const performLookerApiCalls = function (lookerContent) {\n    setApiContent([]); //set to empty array to show progress bar and skeleton\n    lookerContent.map(async lookerContent => {\n      let inlineQuery = lookerContent.inlineQuery;\n      inlineQuery.filters = {\n        // ...inlineQuery.filters,\n        // [Object.keys(inlineQuery.filters)[0]]: lookerUser.user_attributes.time_horizon,\n        [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\n      };\n      let stringifiedQuery = encodeURIComponent(JSON.stringify(inlineQuery))\n      let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      let lookerResponseData = await lookerResponse.json();\n      lookerResponseData.queryResults = lookerResponseData.queryResults.filter(item => {\n        return item[inlineQuery.fields[0]]\n      })\n      let uniqueCategories = ['All'];\n      for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\n        if (uniqueCategories.indexOf(lookerResponseData.queryResults[i][inlineQuery.fields[1]]) === -1) {\n          uniqueCategories.push(lookerResponseData.queryResults[i][inlineQuery.fields[1]])\n        }\n      }\n      lookerResponseData.inlineQuery = inlineQuery;\n      lookerResponseData.uniqueCategories = uniqueCategories;\n      setFromDate(lookerResponseData.queryResults[lookerResponseData.queryResults.length - 1][lookerResponseData.inlineQuery.fields[0]]);\n      setToDate(incrementDate(lookerResponseData.queryResults[0][lookerResponseData.inlineQuery.fields[0]], 1));\n      setApiContent(lookerResponseData)\n      if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\n    })\n  }\n\n  let redToBlueColorScale = ['#0302FC', '#2A00D5', '#63009E', '#A1015D', '#D80027', '#FE0002'];\n  let yellowToGreenColorScale = ['#FEFE69', '#DDF969', '#A9F36A', '#A1015D', '#78EC6C', '#57E86B'];\n  return (\n    <div className={`${classes.root} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={classes.root}>\n          <Box>\n            <AppBar position=\"static\">\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                aria-label=\"simple tabs example\">\n                {tabContent.map((item, index) => (\n                  <Tab\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                    label={item.label}\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\n                    {...a11yProps(index)} />\n                ))}\n              </Tabs>\n            </AppBar>\n            <Box className=\"tabPanelContainer\">\n              {tabContent.map((tabContentItem, index) => (\n                <TabPanel\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\n                  value={value}\n                  index={index}>\n                  <Grid container>\n                    {tabContentItem.type === 'code flyout' ?\n\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerContent={lookerContent}\n                        clientSideCode={clientSideCode}\n                        serverSideCode={serverSideCode}\n                        lookerUser={lookerUser} />\n                      :\n                      <React.Fragment\n                        key={`${validIdHelper(demoComponentType + '-innerFragment-' + index)}`}>\n\n                        {!apiContent.queryResults ?\n                          <Skeleton variant=\"rect\" animation=\"wave\" className={classes.skeleton} />\n                          :\n                          <FilterBar {...props}\n                            classes={classes}\n                            apiContent={apiContent}\n                            fromDate={fromDate}\n                            toDate={toDate}\n                            category={category}\n                            desiredField={desiredField}\n                            handleFromDate={handleFromDate}\n                            handleToDate={handleToDate}\n                            handleCategory={handleCategory}\n                            handleDesiredField={handleDesiredField}\n                          />\n                        }\n                        <Divider className={classes.divider} />\n                        <Box\n                          className={classes.w100}\n                          mt={2}>\n                          {!apiContent.queryResults ?\n\n                            <Grid item sm={12} >\n                              <Card className={`${classes.card} ${classes.flexCentered}`}>\n                                <CircularProgress className={classes.circularProgress} />\n                              </Card>\n                            </Grid>\n\n                            : apiContent.queryResults && apiContent.queryResults.length ?\n                              <>\n                                <Grid item sm={12} className={classes.height800}>\n                                  <ApiHighlight height={400}>\n                                    <ResponsiveCalendar\n                                      data={filterData}\n                                      align=\"top\"\n                                      from={incrementDate(fromDate, 1)}\n                                      to={incrementDate(toDate, 1)}\n                                      emptyColor=\"#eeeeee\"\n                                      // colors={['#0302FC', '#2A00D5', '#63009E', '#A1015D', '#D80027', '#FE0002']}\n                                      colors={desiredField === lookerContent[0].desiredFields[0] ? redToBlueColorScale : yellowToGreenColorScale}\n                                      yearSpacing={40}\n                                      monthBorderColor=\"#ffffff\"\n                                      dayBorderWidth={2}\n                                      dayBorderColor=\"#ffffff\"\n                                      margin={{ bottom: 40, left: 40 }}\n                                      legends={[\n                                        {\n                                          anchor: 'bottom-right',\n                                          direction: 'row',\n                                          translateY: 36,\n                                          itemCount: 4,\n                                          itemWidth: 42,\n                                          itemHeight: 36,\n                                          itemsSpacing: 14,\n                                          itemDirection: 'right-to-left'\n                                        }\n                                      ]}\n                                      onClick={(day, event) => {\n                                        if (!day.value) {\n                                        } else if (lookerUser.permission_level === 'basic') {\n                                          toggleShowPayWallModal();\n                                        } else {\n                                          handleModalOpen(day)\n                                          event.stopPropagation();\n                                        }\n                                      }}\n                                    />\n                                  </ApiHighlight>\n                                </Grid>\n                              </> :\n                              ''\n                          }\n                        </Box>\n                      </React.Fragment>\n                    }\n                  </Grid>\n                </TabPanel>\n              ))}\n\n            </Box>\n          </Box >\n        </div>\n      </Grid >\n      {open ?\n        <ModalTable\n          {...props}\n          open={open}\n          onClose={handleModalClose}\n          classes={classes}\n          modalContent={modalContent}\n        />\n\n        : ''}\n    </div >\n  )\n}\n//Filter Bar code\nfunction FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\n    apiContent, fromDate, toDate, category, desiredField, handleFromDate, handleToDate, handleCategory, handleDesiredField } = props;\n\n  const [expanded, setExpanded] = useState(true);\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  // console.log('FilterBar')\n  // console.log('fromDate', fromDate)\n  // console.log('toDate', toDate)\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={classes.heading}>Filter Data</Typography>\n\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          {apiContent.queryResults ?\n            <>\n              <Grid item sm={3}>\n                <FormControl className={classes.formControl}>\n                  <InputLabel\n                    id={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                  >\n                    Metric</InputLabel>\n                  <Select\n                    labelId={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                    id={`${validIdHelper(type + '-FilterBar-DataPropery-Select')}`}\n                    value={desiredField}\n                    onChange={(event) => handleDesiredField(event.target.value)}\n                  >\n                    {lookerContent[0].desiredFields.map((item, index) => (\n\n                      <MenuItem\n                        id={validIdHelper(`${item}-${index}`)}\n                        key={validIdHelper(`${item}-${index}`)}\n                        value={item}\n                      >{item.substring(item.lastIndexOf(\".\") + 1, item.length).split(\"_\").map(item => item.charAt(0).toUpperCase() + item.substring(1)).join(\" \")}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item sm={3}>\n                <FormControl className={classes.formControl}>\n                  <InputLabel\n                    id={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                  >\n                    Category</InputLabel>\n                  <Select\n                    labelId={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                    id={`${validIdHelper(type + '-FilterBar-Category-Select')}`}\n                    value={category}\n                    onChange={(event) => handleCategory(event.target.value)}\n                  >\n                    {apiContent.uniqueCategories.map((item, index) => (\n\n                      <MenuItem\n                        id={validIdHelper(`${item}-${index}`)}\n                        key={validIdHelper(`${item}-${index}`)}\n                        value={item}>{item}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              <Grid item sm={3}>\n                {/* <form className={classes.container} >\n                  <TextField\n                    id=\"fromDate\"\n                    label=\"From date\"\n                    type=\"date\"\n                    value={fromDate}\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    onChange={(event) => handleFromDate(event.target.value)}\n                  />\n                </form> */}\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"fromDate\"\n                    label=\"From date\"\n                    value={fromDate}\n                    onChange={handleFromDate}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n\n              </Grid>\n              <Grid item sm={3}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"toDate\"\n                    label=\"To date\"\n                    value={toDate}\n                    onChange={handleToDate}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n            </>\n            : ''}\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel >\n  )\n}\n\nfunction incrementDate(dateInput, increment) {\n  var dateFormatTotime = new Date(dateInput);\n  var increasedDate = new Date(dateFormatTotime.getTime() + (increment * 86400000));\n  return increasedDate.toISOString().split('T')[0];\n}","export default \"import _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, InputLabel, MenuItem,\\n  FormControl, Select, Modal\\n} from '@material-ui/core'\\nimport { Skeleton } from '@material-ui/lab';\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\nimport ModalTable from '../../Material/ModalTable';\\nimport { ResponsiveCalendar } from '@nivo/calendar'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./CustomVis.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport { ApiHighlight } from '../../Highlights/Highlight';\\n\\n//new date pickers\\nimport { format, endOfDay, addDays } from 'date-fns';\\n// import React from 'react';\\n// import Grid from '@material-ui/core/Grid';\\nimport DateFnsUtils from '@date-io/date-fns';\\nimport {\\n  MuiPickersUtilsProvider,\\n  KeyboardTimePicker,\\n  KeyboardDatePicker,\\n} from '@material-ui/pickers';\\n\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of Custom Viz Calendar Component\\nexport default function CustomVis(props) {\\n  //initialize state using hooks\\n  const [value, setValue] = useState(0);\\n  const [fromDate, setFromDate] = useState('');\\n  const [toDate, setToDate] = useState('');\\n  const [category, setCategory] = useState('All')\\n  const [desiredField, setDesiredField] = useState('')\\n  const [apiContent, setApiContent] = useState([]);\\n  const [open, setOpen] = React.useState(false);\\n  const [modalContent, setModalContent] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n\\n  const { toggleShowPayWallModal } = useContext(AppContext)\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  const tabContent = [...lookerContent, codeTab]\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle opening of modal for advanced and premium users\\n  const handleModalOpen = async ({ day }) => {\\n    let originalInlineQueryCopy = JSON.parse(JSON.stringify(lookerContent[0].inlineQuery));\\n    originalInlineQueryCopy.filters = {\\n      ...originalInlineQueryCopy.filters,\\n      [originalInlineQueryCopy.fields[0]]: day,\\n      [originalInlineQueryCopy.fields[1]]: category === \\\"All\\\" ? '' : category\\n    }\\n    originalInlineQueryCopy.total = true;\\n    originalInlineQueryCopy.limit = \\\"25\\\";\\n\\n    setOpen(true);\\n    let lookerResponse = await fetch('/runinlinequery/' + encodeURIComponent(JSON.stringify(originalInlineQueryCopy)) + '/json', {\\n      method: 'GET',\\n      headers: {\\n        Accept: 'application/json',\\n        'Content-Type': 'application/json'\\n      }\\n    })\\n    let lookerResponseData = await lookerResponse.json();\\n    let modalObj = {\\n      \\\"title\\\": `Detail View for ${day}`,\\n      \\\"body\\\": lookerResponseData.queryResults\\n    }\\n    setModalContent(modalObj);\\n  };\\n\\n  //handle modal close\\n  const handleModalClose = () => {\\n    setModalContent({})\\n    setOpen(false);\\n  };\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  const handleFromDate = newValue => {\\n    let validDate = Date.parse(newValue);\\n    if (validDate > 0) {\\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\\n      setFromDate(newValueAsDate);\\n    }\\n  }\\n  const handleToDate = newValue => {\\n    let validDate = Date.parse(newValue);\\n    if (validDate > 0) {\\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\\n      setToDate(newValueAsDate);\\n    }\\n  }\\n  const handleCategory = newValue => {\\n    setCategory(newValue)\\n  }\\n  const handleDesiredField = newValue => {\\n    setDesiredField(newValue)\\n  }\\n\\n  //format response from initial api call based on LookerContent array\\n  //to match format required by Nivo Calendar component\\n  let filterData = [];\\n  if (apiContent.queryResults && apiContent.queryResults) {\\n    //filtering for fromDate, toDate and category\\n    filterData = _.filter(apiContent.queryResults, (row) => {\\n      return (row[apiContent.inlineQuery.fields[0]] >= fromDate\\n        && row[apiContent.inlineQuery.fields[0]] < toDate\\n        && (category === 'All' ? true : row[apiContent.inlineQuery.fields[1]] === category)\\n      )\\n    })\\n    //converting filterDAta to desired format for vis\\n    filterData = filterData.map(item => {\\n      return {\\n        'day': item[apiContent.inlineQuery.fields[0]],\\n        'category': item[apiContent.inlineQuery.fields[1]],\\n        'value': item[desiredField]\\n      }\\n    })\\n\\n    //special exception for category all\\n    //need to reduce array by day across categories\\n    //destructuing in reduce of value would not work for dynamic var\\n    if (category === 'All') {\\n      //create array of all unique dates\\n      const uniqueDates = [...new Set(filterData.map(item => item.day))];\\n      let filteredAndReducedForAll = []\\n      //iterate over unique date\\n      uniqueDates.map(uniqueDate => {\\n        //filter filterData for current unique date\\n        let value = _.filter(filterData, row => {\\n          return row.day === uniqueDate\\n        }).reduce((acc, { value }) => acc + value, 0)\\n        let thisObj = {\\n          day: uniqueDate,\\n          value: value,\\n          category: 'All'\\n        }\\n        filteredAndReducedForAll.push(thisObj)\\n\\n      })\\n      filterData = filteredAndReducedForAll;\\n    }\\n  }\\n\\n  /**\\n   * listen for lookerContent and call \\n   * performLookerApiCalls and setSampleCode\\n  */\\n  useEffect(() => {\\n    if (lookerContent.length) {\\n      setTimeout(() => performLookerApiCalls(lookerContent), 100);\\n      setDesiredField(lookerContent[0].desiredFields[0])\\n      setClientSideCode(rawSampleCode)\\n    }\\n  }, [lookerContent, lookerUser])\\n\\n  /** \\n   * What this function does:\\n   * iterate over Looker Content array referenced above and\\n   * calls specific endpoints and methods available from Looker Node SDK\\n   * and embed SDK to create the experience on this page\\n   */\\n  const performLookerApiCalls = function (lookerContent) {\\n    setApiContent([]); //set to empty array to show progress bar and skeleton\\n    lookerContent.map(async lookerContent => {\\n      let inlineQuery = lookerContent.inlineQuery;\\n      inlineQuery.filters = {\\n        // ...inlineQuery.filters,\\n        // [Object.keys(inlineQuery.filters)[0]]: lookerUser.user_attributes.time_horizon,\\n        [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\\n      };\\n      let stringifiedQuery = encodeURIComponent(JSON.stringify(inlineQuery))\\n      let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      })\\n      let lookerResponseData = await lookerResponse.json();\\n      lookerResponseData.queryResults = lookerResponseData.queryResults.filter(item => {\\n        return item[inlineQuery.fields[0]]\\n      })\\n      let uniqueCategories = ['All'];\\n      for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\\n        if (uniqueCategories.indexOf(lookerResponseData.queryResults[i][inlineQuery.fields[1]]) === -1) {\\n          uniqueCategories.push(lookerResponseData.queryResults[i][inlineQuery.fields[1]])\\n        }\\n      }\\n      lookerResponseData.inlineQuery = inlineQuery;\\n      lookerResponseData.uniqueCategories = uniqueCategories;\\n      setFromDate(lookerResponseData.queryResults[lookerResponseData.queryResults.length - 1][lookerResponseData.inlineQuery.fields[0]]);\\n      setToDate(incrementDate(lookerResponseData.queryResults[0][lookerResponseData.inlineQuery.fields[0]], 1));\\n      setApiContent(lookerResponseData)\\n      if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\\n    })\\n  }\\n\\n  let redToBlueColorScale = ['#0302FC', '#2A00D5', '#63009E', '#A1015D', '#D80027', '#FE0002'];\\n  let yellowToGreenColorScale = ['#FEFE69', '#DDF969', '#A9F36A', '#A1015D', '#78EC6C', '#57E86B'];\\n  return (\\n    <div className={`${classes.root} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={classes.root}>\\n          <Box>\\n            <AppBar position=\\\"static\\\">\\n              <Tabs\\n                className={classes.tabs}\\n                value={value}\\n                onChange={handleChange}\\n                aria-label=\\\"simple tabs example\\\">\\n                {tabContent.map((item, index) => (\\n                  <Tab\\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\\n                    label={item.label}\\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\\n                    {...a11yProps(index)} />\\n                ))}\\n              </Tabs>\\n            </AppBar>\\n            <Box className=\\\"tabPanelContainer\\\">\\n              {tabContent.map((tabContentItem, index) => (\\n                <TabPanel\\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\\n                  value={value}\\n                  index={index}>\\n                  <Grid container>\\n                    {tabContentItem.type === 'code flyout' ?\\n\\n                      <CodeFlyout {...props}\\n                        classes={classes}\\n                        lookerContent={lookerContent}\\n                        clientSideCode={clientSideCode}\\n                        serverSideCode={serverSideCode}\\n                        lookerUser={lookerUser} />\\n                      :\\n                      <React.Fragment\\n                        key={`${validIdHelper(demoComponentType + '-innerFragment-' + index)}`}>\\n\\n                        {!apiContent.queryResults ?\\n                          <Skeleton variant=\\\"rect\\\" animation=\\\"wave\\\" className={classes.skeleton} />\\n                          :\\n                          <FilterBar {...props}\\n                            classes={classes}\\n                            apiContent={apiContent}\\n                            fromDate={fromDate}\\n                            toDate={toDate}\\n                            category={category}\\n                            desiredField={desiredField}\\n                            handleFromDate={handleFromDate}\\n                            handleToDate={handleToDate}\\n                            handleCategory={handleCategory}\\n                            handleDesiredField={handleDesiredField}\\n                          />\\n                        }\\n                        <Divider className={classes.divider} />\\n                        <Box\\n                          className={classes.w100}\\n                          mt={2}>\\n                          {!apiContent.queryResults ?\\n\\n                            <Grid item sm={12} >\\n                              <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                                <CircularProgress className={classes.circularProgress} />\\n                              </Card>\\n                            </Grid>\\n\\n                            : apiContent.queryResults && apiContent.queryResults.length ?\\n                              <>\\n                                <Grid item sm={12} className={classes.height800}>\\n                                  <ApiHighlight height={400}>\\n                                    <ResponsiveCalendar\\n                                      data={filterData}\\n                                      align=\\\"top\\\"\\n                                      from={incrementDate(fromDate, 1)}\\n                                      to={incrementDate(toDate, 1)}\\n                                      emptyColor=\\\"#eeeeee\\\"\\n                                      // colors={['#0302FC', '#2A00D5', '#63009E', '#A1015D', '#D80027', '#FE0002']}\\n                                      colors={desiredField === lookerContent[0].desiredFields[0] ? redToBlueColorScale : yellowToGreenColorScale}\\n                                      yearSpacing={40}\\n                                      monthBorderColor=\\\"#ffffff\\\"\\n                                      dayBorderWidth={2}\\n                                      dayBorderColor=\\\"#ffffff\\\"\\n                                      margin={{ bottom: 40, left: 40 }}\\n                                      legends={[\\n                                        {\\n                                          anchor: 'bottom-right',\\n                                          direction: 'row',\\n                                          translateY: 36,\\n                                          itemCount: 4,\\n                                          itemWidth: 42,\\n                                          itemHeight: 36,\\n                                          itemsSpacing: 14,\\n                                          itemDirection: 'right-to-left'\\n                                        }\\n                                      ]}\\n                                      onClick={(day, event) => {\\n                                        if (!day.value) {\\n                                        } else if (lookerUser.permission_level === 'basic') {\\n                                          toggleShowPayWallModal();\\n                                        } else {\\n                                          handleModalOpen(day)\\n                                          event.stopPropagation();\\n                                        }\\n                                      }}\\n                                    />\\n                                  </ApiHighlight>\\n                                </Grid>\\n                              </> :\\n                              ''\\n                          }\\n                        </Box>\\n                      </React.Fragment>\\n                    }\\n                  </Grid>\\n                </TabPanel>\\n              ))}\\n\\n            </Box>\\n          </Box >\\n        </div>\\n      </Grid >\\n      {open ?\\n        <ModalTable\\n          {...props}\\n          open={open}\\n          onClose={handleModalClose}\\n          classes={classes}\\n          modalContent={modalContent}\\n        />\\n\\n        : ''}\\n    </div >\\n  )\\n}\\n//Filter Bar code\\nfunction FilterBar(props) {\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\\n    apiContent, fromDate, toDate, category, desiredField, handleFromDate, handleToDate, handleCategory, handleDesiredField } = props;\\n\\n  const [expanded, setExpanded] = useState(true);\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n\\n  // console.log('FilterBar')\\n  // console.log('fromDate', fromDate)\\n  // console.log('toDate', toDate)\\n\\n  return (\\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100}>\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMoreIcon />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <Typography className={classes.heading}>Filter Data</Typography>\\n\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        <Grid container spacing={3}>\\n          {apiContent.queryResults ?\\n            <>\\n              <Grid item sm={3}>\\n                <FormControl className={classes.formControl}>\\n                  <InputLabel\\n                    id={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\\n                  >\\n                    Metric</InputLabel>\\n                  <Select\\n                    labelId={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\\n                    id={`${validIdHelper(type + '-FilterBar-DataPropery-Select')}`}\\n                    value={desiredField}\\n                    onChange={(event) => handleDesiredField(event.target.value)}\\n                  >\\n                    {lookerContent[0].desiredFields.map((item, index) => (\\n\\n                      <MenuItem\\n                        id={validIdHelper(`${item}-${index}`)}\\n                        key={validIdHelper(`${item}-${index}`)}\\n                        value={item}\\n                      >{item.substring(item.lastIndexOf(\\\".\\\") + 1, item.length).split(\\\"_\\\").map(item => item.charAt(0).toUpperCase() + item.substring(1)).join(\\\" \\\")}</MenuItem>\\n                    ))}\\n                  </Select>\\n                </FormControl>\\n              </Grid>\\n              <Grid item sm={3}>\\n                <FormControl className={classes.formControl}>\\n                  <InputLabel\\n                    id={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\\n                  >\\n                    Category</InputLabel>\\n                  <Select\\n                    labelId={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\\n                    id={`${validIdHelper(type + '-FilterBar-Category-Select')}`}\\n                    value={category}\\n                    onChange={(event) => handleCategory(event.target.value)}\\n                  >\\n                    {apiContent.uniqueCategories.map((item, index) => (\\n\\n                      <MenuItem\\n                        id={validIdHelper(`${item}-${index}`)}\\n                        key={validIdHelper(`${item}-${index}`)}\\n                        value={item}>{item}</MenuItem>\\n                    ))}\\n                  </Select>\\n                </FormControl>\\n              </Grid>\\n\\n              <Grid item sm={3}>\\n                {/* <form className={classes.container} >\\n                  <TextField\\n                    id=\\\"fromDate\\\"\\n                    label=\\\"From date\\\"\\n                    type=\\\"date\\\"\\n                    value={fromDate}\\n                    className={classes.textField}\\n                    InputLabelProps={{\\n                      shrink: true,\\n                    }}\\n                    onChange={(event) => handleFromDate(event.target.value)}\\n                  />\\n                </form> */}\\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\\n                  <KeyboardDatePicker\\n                    disableToolbar\\n                    variant=\\\"inline\\\"\\n                    format=\\\"MM/dd/yyyy\\\"\\n                    margin=\\\"normal\\\"\\n                    id=\\\"fromDate\\\"\\n                    label=\\\"From date\\\"\\n                    value={fromDate}\\n                    onChange={handleFromDate}\\n                    KeyboardButtonProps={{\\n                      'aria-label': 'change date',\\n                    }}\\n                  />\\n                </MuiPickersUtilsProvider>\\n\\n              </Grid>\\n              <Grid item sm={3}>\\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\\n                  <KeyboardDatePicker\\n                    disableToolbar\\n                    variant=\\\"inline\\\"\\n                    format=\\\"MM/dd/yyyy\\\"\\n                    margin=\\\"normal\\\"\\n                    id=\\\"toDate\\\"\\n                    label=\\\"To date\\\"\\n                    value={toDate}\\n                    onChange={handleToDate}\\n                    KeyboardButtonProps={{\\n                      'aria-label': 'change date',\\n                    }}\\n                  />\\n                </MuiPickersUtilsProvider>\\n              </Grid>\\n            </>\\n            : ''}\\n        </Grid>\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel >\\n  )\\n}\\n\\nfunction incrementDate(dateInput, increment) {\\n  var dateFormatTotime = new Date(dateInput);\\n  var increasedDate = new Date(dateFormatTotime.getTime() + (increment * 86400000));\\n  return increasedDate.toISOString().split('T')[0];\\n}\";","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 800,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  ml24: {\n    marginLeft: 24\n  },\n  parentHoverVisibility: {\n    '&:hover $childHoverVisibility': {\n      visibility: 'visible'\n    }\n\n  },\n  childHoverVisibility: {\n    visibility: 'hidden'\n  },\n  faSm: {\n    fontSize: '.75em'\n  }\n}));","import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\n","import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button } from '@material-ui/core'\nimport { TreeView, TreeItem } from '@material-ui/lab';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./ReportBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport '../../Home.css';\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\n//start of ReportBuilder Component\nexport default function ReportBuilder(props) {\n  //initialize state using hooks\n  const [iFrameExists, setIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState([]);\n  const [exploreObj, setExploreObj] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n\n  const { toggleShowPayWallModal } = useContext(AppContext)\n\n  //declare constants\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, LookerEmbedSDK, activeTabValue, handleTabChange, lookerUser } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  const demoComponentType = type || 'code flyout';\n  // const tabContent = lookerUser.permission_level === 'premium' ?\n  //   [...lookerContent, codeTab] :\n  //   [lookerContent[0], codeTab];\n  const tabContent =\n    [...lookerContent, codeTab]\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n\n    if (newValue == 1 && lookerUser.permission_level != 'premium') {\n      toggleShowPayWallModal()\n    } else {\n      handleTabChange(newValue);\n      setValue(newValue);\n      if (newValue === 0) performLookerApiCalls(lookerContent)\n    }\n  };\n\n  /**\n   * listen for lookerContent and call \n   * performLookerApiCalls and setSampleCode\n  */\n  useEffect(() => {\n    if (activeTabValue > value) {\n      setValue(activeTabValue)\n    }\n    setTimeout(() => performLookerApiCalls(lookerContent, 1), 100)\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  const action = async (contentType, contentId, secondaryAction, qid, exploreId, newReportEmbedContainer) => {\n    let iFrameArray = $(\".embedContainer:visible > iframe\")\n\n    let matchingIndex = 0;\n    for (let i = 0; i < iFrameArray.length; i++) {\n      if (iFrameArray[i].classList.contains(contentType) && iFrameArray[i].classList.contains(contentId)) {\n        iFrameArray[i].classList.remove('dNone')\n        matchingIndex = i;\n      } else {\n        iFrameArray[i].classList.add('dNone')\n      }\n    }\n\n    if (secondaryAction === 'edit' || secondaryAction === 'explore') {\n      $(`#${newReportEmbedContainer}`).empty();\n\n      LookerEmbedSDK.createExploreWithId(exploreId)\n        .appendTo(`#${newReportEmbedContainer}`)\n        .withClassName('iframe')\n        .on('explore:state:changed', (event) => {\n        })\n        .withClassName(\"exploreIframe\")\n        .withParams({\n          qid: qid\n        })\n        .build()\n        .connect()\n        .then((explore) => {\n          setIFrame(1)\n          setExploreObj(explore)\n        })\n        .catch((error) => {\n          console.error('Connection error', error)\n        })\n      handleChange('edit', 1)\n    } else if (secondaryAction === 'delete') {\n      let lookerResponse = await fetch('/deletelook/' + contentId, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (lookerResponse.status === 200) {\n        performLookerApiCalls(lookerContent)\n      }\n    }\n  }\n\n  const performLookerApiCalls = function (lookerContent, animateLoad) {\n    // console.log('performLookerApiCalls')\n    if (animateLoad) {\n      handleChange('refresh', 0)\n      setIFrame(0)\n      setApiContent([])\n    }\n\n    lookerContent.map(async lookerContent => {\n      if (lookerContent.type === 'folder') {\n        let lookerResponse = await fetch('/fetchfolder/' + lookerContent.id, {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          }\n        })\n\n        let lookerResponseData = await lookerResponse.json();\n        if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\n\n        let looksToUse = [...lookerResponseData.sharedFolder.looks, ...lookerResponseData.embeddedUserFolder.looks]\n        let dashboardsToUse = [...lookerResponseData.sharedFolder.dashboards]\n        let objToUse = {\n          looks: looksToUse,\n          dashboards: dashboardsToUse\n        }\n        let iFrameArray = $(`.embedContainer.${validIdHelper(demoComponentType)} > iframe`);\n        if (objToUse.looks.length) {\n          objToUse.looks.map((item, index) => {\n\n            let lookId = item.id;\n            let lookIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('look') && iFrameArray[i].classList.contains(lookId)) {\n                lookIsRendered = true;\n              }\n            }\n\n            if (!lookIsRendered) {\n              LookerEmbedSDK.createLookWithId(lookId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('look')\n                .withClassName(lookerResponseData.sharedFolder.looks.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName(index > 0 ? 'dNone' : 'oops')\n                .withClassName(lookId)\n                .build()\n                .connect()\n                .then((look) => {\n                  // setIFrame(1)\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n            if (index === objToUse.looks.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n\n        if (objToUse.dashboards.length) {\n          objToUse.dashboards.map((item, index) => {\n            let dashboardId = item.id\n            let dashboardIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('dashboard') && iFrameArray[i].classList.contains(dashboardId)) {\n                dashboardIsRendered = true;\n              }\n            }\n            if (!dashboardIsRendered) {\n              LookerEmbedSDK.createDashboardWithId(dashboardId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('dashboard')\n                .withClassName(lookerResponseData.sharedFolder.dashboards.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName('dNone')\n                .withClassName(dashboardId)\n                .build()\n                .connect()\n                .then((dashboard) => {\n                  setTimeout(() => {\n                    // setIFrame(1)\n                  }, 1000)\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n\n            if (index === objToUse.dashboards.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n        setApiContent(objToUse)\n      } else if (lookerContent.type === 'explore' && lookerUser.permission_level === 'premium') {\n        let exploreId = lookerContent.id;\n        LookerEmbedSDK.createExploreWithId(exploreId)\n          .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n          .withClassName('iframe')\n          .on('explore:state:changed', (event) => {\n          })\n          .build()\n          .connect()\n          .then((explore) => {\n            setTimeout(() => setIFrame(1), 1000)\n            setExploreObj(exploreObj)\n          })\n          .catch((error) => {\n            console.error('Connection error', error)\n          })\n      }\n    })\n  }\n\n\n  return (\n    <div className={`${classes.root} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={classes.root}>\n          {iFrameExists ? '' :\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\n                <CircularProgress className={classes.circularProgress} />\n              </Card>\n            </Grid>\n          }\n\n          {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\n          <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n            <AppBar position=\"static\">\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                aria-label=\"simple tabs example\">\n                {tabContent.map((item, index) => (\n                  <Tab\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                    label={index == 1 && lookerUser.permission_level != 'premium' ?\n                      <div>{item.label} <Icon className={`fa fa-lock ${classes.faSm}`} /></div> :\n                      item.label}\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\n                    {...a11yProps(index)} />\n                ))}\n              </Tabs>\n            </AppBar>\n\n            <Box className=\"tabPanelContainer\">\n              {tabContent.map((tabContentItem, tabContentItemIndex) => (\n                <TabPanel\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + tabContentItemIndex)}`}\n                  value={value}\n                  index={tabContentItemIndex}>\n                  <Grid container>\n                    {tabContentItem.type === 'code flyout' ?\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerContent={lookerContent}\n                        clientSideCode={clientSideCode}\n                        serverSideCode={serverSideCode}\n                        lookerUser={lookerUser} />\n                      :\n                      tabContentItemIndex === 0\n                        ?\n                        <React.Fragment\n                          key={`${validIdHelper(demoComponentType + '-outerFragment-' + tabContentItemIndex)}`}>\n                          <Grid item sm={4} >\n                            <ApiHighlight height={400}>\n                              <TreeSideBar {...{\n                                toggleShowPayWallModal,\n                                classes,\n                                demoComponentType,\n                                tabContent,\n                                tabContentItemIndex,\n                                action,\n                                apiContent,\n                                ...props\n                              }}\n                              />\n                            </ApiHighlight>\n                          </Grid>\n                          <Grid item sm={8} >\n                            <EmbedHighlight>\n                              <div\n                                className={`embedContainer ${validIdHelper(demoComponentType)}`}\n                                id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                              >\n                              </div>\n                            </EmbedHighlight>\n                          </Grid>\n                        </React.Fragment>\n                        :\n                        <Grid item sm={12} >\n                          <EmbedHighlight>\n                            <div\n                              className=\"embedContainer\"\n                              id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                              key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                            >\n                            </div>\n                          </EmbedHighlight>\n                        </Grid>\n                    }\n                  </Grid>\n                </TabPanel>\n              ))}\n            </Box>\n          </Box >\n        </div>\n      </Grid >\n    </div >\n  )\n}\n\n\nfunction TreeSideBar(props) {\n  // console.log('TreeSideBar')\n  const { staticContent, staticContent: { lookerContent }, classes, demoComponentType, tabContent, tabContentItemIndex, action, apiContent, lookerUser, toggleShowPayWallModal } = props\n  const sharedFolderId = lookerContent[0].type === 'folder' ? lookerContent[0].id : '';\n  let treeCounter = 0;\n  const [selected, setSelected] = useState(2)\n  const expandedArr = Object.keys(apiContent).length ? [\"1\", \"\" + (2 + apiContent[Object.keys(apiContent)[0]].length)] : [];\n  const [expanded, setExpanded] = useState(expandedArr);\n\n  const handleToggle = (event, nodeIds) => {\n    setExpanded(nodeIds);\n  }\n\n  const handleSelect = (event, nodeIds) => {\n    setSelected(nodeIds);\n  };\n\n\n  useEffect(() => {\n    setExpanded(expandedArr)\n  }, [apiContent]);\n\n  return (\n    <TreeView\n      className={classes.tree}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n      expanded={expanded}\n      onNodeToggle={handleToggle}\n      onNodeSelect={handleSelect}\n    >\n      {apiContent ? Object.keys(apiContent).map((key, outerIndex) => (\n        <React.Fragment\n          key={`${validIdHelper(demoComponentType + '-innerFragment-' + outerIndex)}`}>\n          <TreeItem\n            key={`${validIdHelper(demoComponentType + '-outerTreeItem-' + outerIndex)}`}\n            nodeId={\"\" + (treeCounter += 1)}\n            // treecounter={treeCounter}\n            label={_.capitalize(key)}\n            icon={<Icon className={`fa fa-folder ${classes.icon}`} />}\n            disabled={apiContent[key].length ? false : true}\n          >\n            {\n              apiContent[key].length ?\n                apiContent[key].map((item, index) => (\n                  <TreeItem\n                    key={`${validIdHelper(demoComponentType + '-innerTreeItem-' + treeCounter)}`}\n                    nodeId={\"\" + (treeCounter += 1)}\n                    treecounter={treeCounter}\n                    selected={selected === treeCounter}\n                    className={selected === treeCounter ? `Mui-selected innerTreeItem` : `innerTreeItem`}\n                    contentid={item.id}\n                    label={item.folder_id === sharedFolderId &&\n                      key === 'looks' ?\n\n                      < div\n                        id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\n                        {item.title.length > 30 ? item.title.substring(0, 30) + '...' : item.title}\n\n                        <Button\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                          size=\"small\"\n                          className={`${classes.ml24} ${classes.childHoverVisibility}`}\n                          onClick={(event) => {\n                            if (lookerUser.permission_level === 'premium') {\n                              // setSelected(treeCounter);\n                              action(\n                                key.substring(0, key.length - 1),\n                                item.id,\n                                'explore',\n                                item.client_id,\n                                tabContent[tabContentItemIndex + 1].id,\n                                validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                              );\n                              event.stopPropagation();\n                            } else {\n                              toggleShowPayWallModal();\n                            }\n                          }\n                          }\n                          color=\"default\"\n                        >\n                          Explore\n                                                                                            </Button>\n                      </div>\n                      : key === 'looks' ?\n                        <div\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\n\n                          {item.title.length > 30 ? item.title.substring(0, 30) + '...' : item.title}                          <Button\n                            id={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                            key={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                            size=\"small\"\n                            className={`${classes.ml24} ${classes.childHoverVisibility}`}\n                            onClick={(event) => {\n                              if (lookerUser.permission_level === 'premium') {\n                                // setSelected(treeCounter);\n                                action(\n                                  key.substring(0, key.length - 1),\n                                  item.id,\n                                  'edit',\n                                  item.client_id,\n                                  tabContent[tabContentItemIndex + 1].id,\n                                  validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                );\n                                event.stopPropagation();\n                              } else {\n                                toggleShowPayWallModal();\n                              }\n                            }\n                            }\n                            color=\"primary\"\n                          >\n                            Edit\n                                                                                            </Button>\n                          <Button\n                            id={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                            key={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                            size=\"small\"\n                            className={`${classes.ml24} ${classes.childHoverVisibility}`}\n                            onClick={(event) => {\n                              if (lookerUser.permission_level === 'premium') {\n                                // setSelected(treeCounter);\n                                action(\n                                  key.substring(0, key.length - 1),\n                                  item.id,\n                                  'delete',\n                                  item.client_id,\n                                  tabContent[tabContentItemIndex + 1].id,\n                                  validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                );\n                                event.stopPropagation();\n                              } else {\n                                toggleShowPayWallModal();\n                              }\n                            }\n                            }\n                            color=\"secondary\"\n                          >\n                            Delete\n                                                                                            </Button>\n                        </div>\n                        : item.title.length > 30 ? item.title.substring(0, 30) + '...' : item.title\n                    }\n                    onClick={() => {\n                      // setSelected(treeCounter)\n                      action(\n                        key.substring(0, key.length - 1), item.id)\n                    }} />\n\n                ))\n                :\n                ''\n            }\n          </TreeItem>\n\n        </React.Fragment>\n      )) : ''}\n    </TreeView>\n  )\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button } from '@material-ui/core'\\nimport { TreeView, TreeItem } from '@material-ui/lab';\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./ReportBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport '../../Home.css';\\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of ReportBuilder Component\\nexport default function ReportBuilder(props) {\\n  //initialize state using hooks\\n  const [iFrameExists, setIFrame] = useState(0);\\n  const [apiContent, setApiContent] = useState([]);\\n  const [exploreObj, setExploreObj] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n\\n  const { toggleShowPayWallModal } = useContext(AppContext)\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const [value, setValue] = useState(0);\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, LookerEmbedSDK, activeTabValue, handleTabChange, lookerUser } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  const demoComponentType = type || 'code flyout';\\n  // const tabContent = lookerUser.permission_level === 'premium' ?\\n  //   [...lookerContent, codeTab] :\\n  //   [lookerContent[0], codeTab];\\n  const tabContent =\\n    [...lookerContent, codeTab]\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n\\n    if (newValue == 1 && lookerUser.permission_level != 'premium') {\\n      toggleShowPayWallModal()\\n    } else {\\n      handleTabChange(newValue);\\n      setValue(newValue);\\n      if (newValue === 0) performLookerApiCalls(lookerContent)\\n    }\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * performLookerApiCalls and setSampleCode\\n  */\\n  useEffect(() => {\\n    if (activeTabValue > value) {\\n      setValue(activeTabValue)\\n    }\\n    setTimeout(() => performLookerApiCalls(lookerContent, 1), 100)\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent, lookerUser]);\\n\\n  const action = async (contentType, contentId, secondaryAction, qid, exploreId, newReportEmbedContainer) => {\\n    let iFrameArray = $(\\\".embedContainer:visible > iframe\\\")\\n\\n    let matchingIndex = 0;\\n    for (let i = 0; i < iFrameArray.length; i++) {\\n      if (iFrameArray[i].classList.contains(contentType) && iFrameArray[i].classList.contains(contentId)) {\\n        iFrameArray[i].classList.remove('dNone')\\n        matchingIndex = i;\\n      } else {\\n        iFrameArray[i].classList.add('dNone')\\n      }\\n    }\\n\\n    if (secondaryAction === 'edit' || secondaryAction === 'explore') {\\n      $(`#${newReportEmbedContainer}`).empty();\\n\\n      LookerEmbedSDK.createExploreWithId(exploreId)\\n        .appendTo(`#${newReportEmbedContainer}`)\\n        .withClassName('iframe')\\n        .on('explore:state:changed', (event) => {\\n        })\\n        .withClassName(\\\"exploreIframe\\\")\\n        .withParams({\\n          qid: qid\\n        })\\n        .build()\\n        .connect()\\n        .then((explore) => {\\n          setIFrame(1)\\n          setExploreObj(explore)\\n        })\\n        .catch((error) => {\\n          console.error('Connection error', error)\\n        })\\n      handleChange('edit', 1)\\n    } else if (secondaryAction === 'delete') {\\n      let lookerResponse = await fetch('/deletelook/' + contentId, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      });\\n      if (lookerResponse.status === 200) {\\n        performLookerApiCalls(lookerContent)\\n      }\\n    }\\n  }\\n\\n  const performLookerApiCalls = function (lookerContent, animateLoad) {\\n    // console.log('performLookerApiCalls')\\n    if (animateLoad) {\\n      handleChange('refresh', 0)\\n      setIFrame(0)\\n      setApiContent([])\\n    }\\n\\n    lookerContent.map(async lookerContent => {\\n      if (lookerContent.type === 'folder') {\\n        let lookerResponse = await fetch('/fetchfolder/' + lookerContent.id, {\\n          method: 'GET',\\n          headers: {\\n            Accept: 'application/json',\\n            'Content-Type': 'application/json'\\n          }\\n        })\\n\\n        let lookerResponseData = await lookerResponse.json();\\n        if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\\n\\n        let looksToUse = [...lookerResponseData.sharedFolder.looks, ...lookerResponseData.embeddedUserFolder.looks]\\n        let dashboardsToUse = [...lookerResponseData.sharedFolder.dashboards]\\n        let objToUse = {\\n          looks: looksToUse,\\n          dashboards: dashboardsToUse\\n        }\\n        let iFrameArray = $(`.embedContainer.${validIdHelper(demoComponentType)} > iframe`);\\n        if (objToUse.looks.length) {\\n          objToUse.looks.map((item, index) => {\\n\\n            let lookId = item.id;\\n            let lookIsRendered = false;\\n            for (let i = 0; i < iFrameArray.length; i++) {\\n              if (iFrameArray[i].classList.contains('look') && iFrameArray[i].classList.contains(lookId)) {\\n                lookIsRendered = true;\\n              }\\n            }\\n\\n            if (!lookIsRendered) {\\n              LookerEmbedSDK.createLookWithId(lookId)\\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n                .withClassName('iframe')\\n                .withClassName('look')\\n                .withClassName(lookerResponseData.sharedFolder.looks.indexOf(item) > -1 ? \\\"shared\\\" : \\\"personal\\\")\\n                .withClassName(index > 0 ? 'dNone' : 'oops')\\n                .withClassName(lookId)\\n                .build()\\n                .connect()\\n                .then((look) => {\\n                  // setIFrame(1)\\n                })\\n                .catch((error) => {\\n                  console.error('Connection error', error)\\n                })\\n            }\\n\\n            if (index === objToUse.looks.length - 1) {\\n              setTimeout(() => setIFrame(1), 1000)\\n            }\\n          })\\n        }\\n\\n        if (objToUse.dashboards.length) {\\n          objToUse.dashboards.map((item, index) => {\\n            let dashboardId = item.id\\n            let dashboardIsRendered = false;\\n            for (let i = 0; i < iFrameArray.length; i++) {\\n              if (iFrameArray[i].classList.contains('dashboard') && iFrameArray[i].classList.contains(dashboardId)) {\\n                dashboardIsRendered = true;\\n              }\\n            }\\n            if (!dashboardIsRendered) {\\n              LookerEmbedSDK.createDashboardWithId(dashboardId)\\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n                .withClassName('iframe')\\n                .withClassName('dashboard')\\n                .withClassName(lookerResponseData.sharedFolder.dashboards.indexOf(item) > -1 ? \\\"shared\\\" : \\\"personal\\\")\\n                .withClassName('dNone')\\n                .withClassName(dashboardId)\\n                .build()\\n                .connect()\\n                .then((dashboard) => {\\n                  setTimeout(() => {\\n                    // setIFrame(1)\\n                  }, 1000)\\n                })\\n                .catch((error) => {\\n                  console.error('Connection error', error)\\n                })\\n            }\\n\\n\\n            if (index === objToUse.dashboards.length - 1) {\\n              setTimeout(() => setIFrame(1), 1000)\\n            }\\n          })\\n        }\\n        setApiContent(objToUse)\\n      } else if (lookerContent.type === 'explore' && lookerUser.permission_level === 'premium') {\\n        let exploreId = lookerContent.id;\\n        LookerEmbedSDK.createExploreWithId(exploreId)\\n          .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n          .withClassName('iframe')\\n          .on('explore:state:changed', (event) => {\\n          })\\n          .build()\\n          .connect()\\n          .then((explore) => {\\n            setTimeout(() => setIFrame(1), 1000)\\n            setExploreObj(exploreObj)\\n          })\\n          .catch((error) => {\\n            console.error('Connection error', error)\\n          })\\n      }\\n    })\\n  }\\n\\n\\n  return (\\n    <div className={`${classes.root} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={classes.root}>\\n          {iFrameExists ? '' :\\n            <Grid item sm={12} >\\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                <CircularProgress className={classes.circularProgress} />\\n              </Card>\\n            </Grid>\\n          }\\n\\n          {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\\n          <Box className={iFrameExists ? `` : `${classes.hidden}`}>\\n            <AppBar position=\\\"static\\\">\\n              <Tabs\\n                className={classes.tabs}\\n                value={value}\\n                onChange={handleChange}\\n                aria-label=\\\"simple tabs example\\\">\\n                {tabContent.map((item, index) => (\\n                  <Tab\\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\\n                    label={index == 1 && lookerUser.permission_level != 'premium' ?\\n                      <div>{item.label} <Icon className={`fa fa-lock ${classes.faSm}`} /></div> :\\n                      item.label}\\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\\n                    {...a11yProps(index)} />\\n                ))}\\n              </Tabs>\\n            </AppBar>\\n\\n            <Box className=\\\"tabPanelContainer\\\">\\n              {tabContent.map((tabContentItem, tabContentItemIndex) => (\\n                <TabPanel\\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + tabContentItemIndex)}`}\\n                  value={value}\\n                  index={tabContentItemIndex}>\\n                  <Grid container>\\n                    {tabContentItem.type === 'code flyout' ?\\n                      <CodeFlyout {...props}\\n                        classes={classes}\\n                        lookerContent={lookerContent}\\n                        clientSideCode={clientSideCode}\\n                        serverSideCode={serverSideCode}\\n                        lookerUser={lookerUser} />\\n                      :\\n                      tabContentItemIndex === 0\\n                        ?\\n                        <React.Fragment\\n                          key={`${validIdHelper(demoComponentType + '-outerFragment-' + tabContentItemIndex)}`}>\\n                          <Grid item sm={4} >\\n                            <ApiHighlight height={400}>\\n                              <TreeSideBar {...{\\n                                toggleShowPayWallModal,\\n                                classes,\\n                                demoComponentType,\\n                                tabContent,\\n                                tabContentItemIndex,\\n                                action,\\n                                apiContent,\\n                                ...props\\n                              }}\\n                              />\\n                            </ApiHighlight>\\n                          </Grid>\\n                          <Grid item sm={8} >\\n                            <EmbedHighlight>\\n                              <div\\n                                className={`embedContainer ${validIdHelper(demoComponentType)}`}\\n                                id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                              >\\n                              </div>\\n                            </EmbedHighlight>\\n                          </Grid>\\n                        </React.Fragment>\\n                        :\\n                        <Grid item sm={12} >\\n                          <EmbedHighlight>\\n                            <div\\n                              className=\\\"embedContainer\\\"\\n                              id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                              key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                            >\\n                            </div>\\n                          </EmbedHighlight>\\n                        </Grid>\\n                    }\\n                  </Grid>\\n                </TabPanel>\\n              ))}\\n            </Box>\\n          </Box >\\n        </div>\\n      </Grid >\\n    </div >\\n  )\\n}\\n\\n\\nfunction TreeSideBar(props) {\\n  // console.log('TreeSideBar')\\n  const { staticContent, staticContent: { lookerContent }, classes, demoComponentType, tabContent, tabContentItemIndex, action, apiContent, lookerUser, toggleShowPayWallModal } = props\\n  const sharedFolderId = lookerContent[0].type === 'folder' ? lookerContent[0].id : '';\\n  let treeCounter = 0;\\n  const [selected, setSelected] = useState(2)\\n  const expandedArr = Object.keys(apiContent).length ? [\\\"1\\\", \\\"\\\" + (2 + apiContent[Object.keys(apiContent)[0]].length)] : [];\\n  const [expanded, setExpanded] = useState(expandedArr);\\n\\n  const handleToggle = (event, nodeIds) => {\\n    setExpanded(nodeIds);\\n  }\\n\\n  const handleSelect = (event, nodeIds) => {\\n    setSelected(nodeIds);\\n  };\\n\\n\\n  useEffect(() => {\\n    setExpanded(expandedArr)\\n  }, [apiContent]);\\n\\n  return (\\n    <TreeView\\n      className={classes.tree}\\n      defaultCollapseIcon={<ExpandMoreIcon />}\\n      defaultExpandIcon={<ChevronRightIcon />}\\n      expanded={expanded}\\n      onNodeToggle={handleToggle}\\n      onNodeSelect={handleSelect}\\n    >\\n      {apiContent ? Object.keys(apiContent).map((key, outerIndex) => (\\n        <React.Fragment\\n          key={`${validIdHelper(demoComponentType + '-innerFragment-' + outerIndex)}`}>\\n          <TreeItem\\n            key={`${validIdHelper(demoComponentType + '-outerTreeItem-' + outerIndex)}`}\\n            nodeId={\\\"\\\" + (treeCounter += 1)}\\n            // treecounter={treeCounter}\\n            label={_.capitalize(key)}\\n            icon={<Icon className={`fa fa-folder ${classes.icon}`} />}\\n            disabled={apiContent[key].length ? false : true}\\n          >\\n            {\\n              apiContent[key].length ?\\n                apiContent[key].map((item, index) => (\\n                  <TreeItem\\n                    key={`${validIdHelper(demoComponentType + '-innerTreeItem-' + treeCounter)}`}\\n                    nodeId={\\\"\\\" + (treeCounter += 1)}\\n                    treecounter={treeCounter}\\n                    selected={selected === treeCounter}\\n                    className={selected === treeCounter ? `Mui-selected innerTreeItem` : `innerTreeItem`}\\n                    contentid={item.id}\\n                    label={item.folder_id === sharedFolderId &&\\n                      key === 'looks' ?\\n\\n                      < div\\n                        id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                        key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                        className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\\n                        {item.title.length > 30 ? item.title.substring(0, 30) + '...' : item.title}\\n\\n                        <Button\\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\\n                          size=\\\"small\\\"\\n                          className={`${classes.ml24} ${classes.childHoverVisibility}`}\\n                          onClick={(event) => {\\n                            if (lookerUser.permission_level === 'premium') {\\n                              // setSelected(treeCounter);\\n                              action(\\n                                key.substring(0, key.length - 1),\\n                                item.id,\\n                                'explore',\\n                                item.client_id,\\n                                tabContent[tabContentItemIndex + 1].id,\\n                                validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                              );\\n                              event.stopPropagation();\\n                            } else {\\n                              toggleShowPayWallModal();\\n                            }\\n                          }\\n                          }\\n                          color=\\\"default\\\"\\n                        >\\n                          Explore\\n                                                                                            </Button>\\n                      </div>\\n                      : key === 'looks' ?\\n                        <div\\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                          className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\\n\\n                          {item.title.length > 30 ? item.title.substring(0, 30) + '...' : item.title}                          <Button\\n                            id={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\\n                            key={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\\n                            size=\\\"small\\\"\\n                            className={`${classes.ml24} ${classes.childHoverVisibility}`}\\n                            onClick={(event) => {\\n                              if (lookerUser.permission_level === 'premium') {\\n                                // setSelected(treeCounter);\\n                                action(\\n                                  key.substring(0, key.length - 1),\\n                                  item.id,\\n                                  'edit',\\n                                  item.client_id,\\n                                  tabContent[tabContentItemIndex + 1].id,\\n                                  validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                                );\\n                                event.stopPropagation();\\n                              } else {\\n                                toggleShowPayWallModal();\\n                              }\\n                            }\\n                            }\\n                            color=\\\"primary\\\"\\n                          >\\n                            Edit\\n                                                                                            </Button>\\n                          <Button\\n                            id={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\\n                            key={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\\n                            size=\\\"small\\\"\\n                            className={`${classes.ml24} ${classes.childHoverVisibility}`}\\n                            onClick={(event) => {\\n                              if (lookerUser.permission_level === 'premium') {\\n                                // setSelected(treeCounter);\\n                                action(\\n                                  key.substring(0, key.length - 1),\\n                                  item.id,\\n                                  'delete',\\n                                  item.client_id,\\n                                  tabContent[tabContentItemIndex + 1].id,\\n                                  validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                                );\\n                                event.stopPropagation();\\n                              } else {\\n                                toggleShowPayWallModal();\\n                              }\\n                            }\\n                            }\\n                            color=\\\"secondary\\\"\\n                          >\\n                            Delete\\n                                                                                            </Button>\\n                        </div>\\n                        : item.title.length > 30 ? item.title.substring(0, 30) + '...' : item.title\\n                    }\\n                    onClick={() => {\\n                      // setSelected(treeCounter)\\n                      action(\\n                        key.substring(0, key.length - 1), item.id)\\n                    }} />\\n\\n                ))\\n                :\\n                ''\\n            }\\n          </TreeItem>\\n\\n        </React.Fragment>\\n      )) : ''}\\n    </TreeView>\\n  )\\n}\";","import { makeStyles } from '@material-ui/core/styles';\nimport { grey, orange } from '@material-ui/core/colors';\n\nconst greyPrimary = grey[400];\nconst greySecondary = grey[100];\nconst orangePrimary = orange[400];\nconst orangeSecondary = orange[100];\n\nexport default makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n    flexCentered: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    hidden: {\n        visibility: 'hidden',\n        position: 'absolute', //hack for obscuring other elements within Box\n        zIndex: -1\n    },\n    tabs: {\n        backgroundColor: 'white',\n        color: '#6c757d'\n    },\n    dNone: {\n        display: 'none'\n    },\n    dBlock: {\n        display: 'block'\n    },\n    tree: {\n        height: 240,\n        flexGrow: 1,\n        maxWidth: 400,\n    },\n    icon: {\n        marginRight: 12,\n        fontSize: '1rem',\n        overflow: 'visible'\n    },\n    ml12: {\n        marginLeft: 12\n    },\n    mt12: {\n        marginTop: 12\n    },\n    w100: {\n        width: '100%'\n    },\n    mlAuto: {\n        marginLeft: 'auto'\n    },\n    table: {\n        minWidth: 650,\n    },\n    tableContainer: {\n        maxHeight: 650,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    greyPrimary: {\n        backgroundColor: greyPrimary\n    },\n    greySecondary: {\n        backgroundColor: greySecondary\n    },\n    orangePrimary: {\n        backgroundColor: orangePrimary\n    },\n    orangeSecondary: {\n        backgroundColor: orangeSecondary\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    skeleton: {\n        minWidth: 275,\n        minHeight: 600,\n    },\n    card: {\n        minWidth: 275,\n        minHeight: 600,\n    },\n    textCenter: {\n        textAlign: 'center'\n    }\n}));","import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport function descendingComparator(a, b, orderBy) {\n    if (a[orderBy] && b[orderBy] && b[orderBy].value < a[orderBy].value) {\n        return -1;\n    }\n    if (a[orderBy] && b[orderBy] && b[orderBy].value > a[orderBy].value) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}","import $ from 'jquery';\nimport _ from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputLabel, MenuItem, FormControl,\n  Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,\n  TableSortLabel, FormControlLabel, Switch, Chip, Divider\n} from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./QueryBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { TabPanel, a11yProps, descendingComparator, getComparator, stableSort } from './helpers.js';\nconst { validIdHelper, prettifyString } = require('../../../tools');\n\n//start of QueryBuilder Component\nexport default function QueryBuilder(props) {\n  // console.log('QueryBuilder')\n  // console.log('props', props)\n\n  //initialize state using hooks\n  const [value, setValue] = useState(0);\n  const [apiContent, setApiContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  //declare constants\n\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  const tabContent = [...lookerContent, codeTab];\n  const demoComponentType = type || 'code flyout';\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  /**\n   * listen for lookerContent and call \n   * performLookerApiCalls and setSampleCode\n  */\n  useEffect(() => {\n    lookerContent.map(lookerContent => {\n      setTimeout(() => action(lookerContent.queryBody, lookerContent.resultFormat), 100);\n    })\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser])\n\n  const action = async (newQuery, resultFormat) => {\n    // console.log('action')\n    let apiContentCopy = { ...apiContent }\n    apiContentCopy.status = 'running';\n    setApiContent(apiContentCopy)\n\n    let lookerCreateTaskResposnse = await fetch('/createquerytask/' + JSON.stringify(newQuery), {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerCreateTaskResponseData = await lookerCreateTaskResposnse.json();\n\n    let taskInterval = setInterval(async () => {\n      let lookerCheckTaskResposnse = await fetch('/checkquerytask/' + lookerCreateTaskResponseData.queryTaskId, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      let lookerCheckTaskResponseData = await lookerCheckTaskResposnse.json();\n      if (lookerCheckTaskResponseData.queryResults.status === 'complete') {\n        clearInterval(taskInterval);\n        setApiContent(lookerCheckTaskResponseData.queryResults)\n        setServerSideCode(lookerCreateTaskResponseData.code)\n      }\n    }, 5000)\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={classes.root}>\n          <Box>\n            <AppBar position=\"static\">\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                aria-label=\"simple tabs example\">\n                {tabContent.map((item, index) => (\n                  <Tab\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                    label={item.label}\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\n                    {...a11yProps(index)} />\n                ))}\n              </Tabs>\n            </AppBar>\n            <Box className=\"tabPanelContainer\">\n              {tabContent.map((tabContentItem, index) => (\n                <TabPanel\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\n                  value={value}\n                  index={index}>\n                  <Grid container>\n                    {tabContentItem.type === 'code flyout' ?\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerContent={lookerContent}\n                        clientSideCode={clientSideCode}\n                        serverSideCode={serverSideCode}\n                        lookerUser={lookerUser} />\n                      :\n                      <React.Fragment\n                        key={`${validIdHelper(demoComponentType + '-innerFragment-' + index)}`}>\n                        <FilterBar {...props}\n                          classes={classes}\n                          action={action}\n                        />\n                        <Divider className={classes.divider} />\n                        <Box\n                          className={classes.w100}\n                          mt={2}>\n                          {apiContent.status === 'running' ?\n                            <Grid item sm={12} >\n                              <Card className={`${classes.card} ${classes.flexCentered}`}>\n                                <CircularProgress className={classes.circularProgress} />\n                              </Card>\n                            </Grid >\n                            : apiContent.data && apiContent.data.length ?\n                              <Grid item sm={12}>\n                                <EnhancedTable\n                                  {...props}\n                                  classes={classes}\n                                  rows={apiContent.data}\n                                  lookerContent={lookerContent}\n                                />\n                              </Grid>\n                              :\n                              <Grid item sm={12} >\n                                <Typography variant=\"h6\" component=\"h6\" className={`${classes.gridTitle} ${classes.textCenter}`}>\n                                  No results found, try a new query<br />\n                                </Typography>\n                              </Grid>\n                          }\n                        </Box >\n                      </React.Fragment >\n                    }\n                  </Grid >\n                </TabPanel >\n              ))}\n            </Box >\n          </Box >\n        </div >\n      </Grid >\n    </div >\n  )\n}\n\n\nfunction FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, classes, action, lookerUser } = props;\n  let measureCounter = 0;\n  let dimensionCounter = 0;\n\n  const [expanded, setExpanded] = useState(true);\n  const [fieldsChipData, setFieldsChipData] = useState(lookerContent[0].queryBody ? lookerContent[0].queryBody.fields.map((item, index) => {\n    return {\n      key: 'fieldChipData' + index,\n      label: prettifyString(item.substring(item.lastIndexOf('.') + 1, item.length)),\n      datalabel: item,\n      selected: true,\n      fieldType: lookerContent[0].fieldType[item]\n    }\n  }) : '');\n  const [queryModified, setQueryModified] = useState(false);\n  const [filtersData, setFilterData] = useState(lookerContent[0].queryBody ? Object.keys(lookerContent[0].queryBody.filters).map((key, index) => {\n    return {\n      key: 'filter' + index,\n      label: key,\n      value: lookerContent[0].queryBody.filters[key],\n      type: lookerContent[0].filterType[key]\n    }\n  }) : '')\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  const handleFieldChipClick = (chip, index) => {\n    let updatedFieldsChipData = [...fieldsChipData]\n    updatedFieldsChipData[index].selected = updatedFieldsChipData[index].selected === false ? true : false\n    setFieldsChipData(updatedFieldsChipData)\n    setQueryModified(true)\n  }\n\n  const handleSelectChange = (index, newValue) => {\n    let updatedFiltersData = [...filtersData]\n    updatedFiltersData[index].value = newValue;\n    setFilterData(updatedFiltersData)\n    setQueryModified(true)\n  }\n\n  const handleQuerySubmit = (event) => {\n    if (queryModified) {\n      let newFields = fieldsChipData.filter(chip => chip.selected).map(item => item.datalabel);\n      let currentFilters = {}; //needs to be object\n      filtersData.map((item, index) => {\n        currentFilters[item.label] = item.value\n      })\n      let newQueryObj = lookerContent[0].queryBody;\n      newQueryObj.fields = newFields;\n      newQueryObj.filters = currentFilters;\n      action(newQueryObj, lookerContent[0].resultFormat);\n    }\n  }\n\n  useEffect(() => {\n    handleQuerySubmit()\n  }, [fieldsChipData, filtersData]);\n\n  const datePermissionMap = {\n    'basic': [\"1 week\", \"1 month\", \"3 months\", \"6 months\"]\n  }\n  datePermissionMap.advanced = [...datePermissionMap.basic, \"1 year\"]\n  datePermissionMap.premium = [...datePermissionMap.advanced, \"before today\"]\n\n  useEffect(() => {\n    let updatedFiltersData = [...filtersData]\n    updatedFiltersData[3].value = \"6 months\";\n    setFilterData(updatedFiltersData)\n  }, [lookerUser]);\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={classes.heading}>Build Query</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Select Fields:\n      {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'measure' ?\n                      <Chip\n                        key={item.label}\n                        // key={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        measurecounter={measureCounter += 1}\n                        className={item.selected ? `${classes.orangePrimary}` : ``}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <DoneIcon className={classes.dBlock} /> : <DoneIcon className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Totals:\n                          {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'dimension' ?\n                      <Chip\n                        key={item.label}\n                        dimensioncounter={dimensionCounter += 1}\n                        className={item.selected ? `${classes.greyPrimary}` : ``}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <DoneIcon className={classes.dBlock} /> : <DoneIcon className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Filter By:\n                      </Typography>\n            {filtersData.length ? filtersData.map((item, index) => {\n              return (\n                <FormControl className={item.value.length ? classes.formControl : classes.hidden} key={validIdHelper(`${item.label}FormControl`)}>\n                  {\n                    item.type === 'yesno' ?\n                      <>\n                        <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n                        <Select\n                          labelId={validIdHelper(`${item.label}FilterLabel`)}\n                          id={validIdHelper(`${item.label}FilterSelect`)}\n                          value={item.value}\n                          onChange={(event) => handleSelectChange(index, event.target.value)}\n                        >\n                          <MenuItem value=\"Yes\">Yes</MenuItem>\n                          <MenuItem value=\"No\">No</MenuItem>\n                          <MenuItem value=\"All\">All</MenuItem>\n                        </Select>\n                      </>\n                      : item.type === 'date' ?\n                        <>\n                          <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n\n                          <Select\n                            labelId={validIdHelper(`${item.label}FilterLabel`)}\n                            id={validIdHelper(`${item.label}FilterSelect`)}\n                            value={item.value || '6 months'}\n                            onChange={(event) => handleSelectChange(index, event.target.value)}\n                          >\n                            {lookerUser.permission_level ? datePermissionMap[lookerUser.permission_level].map(item => (\n                              <MenuItem key={validIdHelper(item)} value={item}>{_.capitalize(item)}</MenuItem>\n                            )) : ''}\n                          </Select>\n                        </>\n                        : ''\n                  }\n                </FormControl>\n              )\n            }) : ''}\n          </Grid>\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, rows } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {Object.keys(rows[0]).map((key, index) => (\n          <TableCell\n            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            id={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            align={key.numeric ? 'right' : 'left'}\n            padding={key.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === key ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === key}\n              direction={orderBy === key ? order : 'asc'}\n              onClick={createSortHandler(key)}\n            >\n              {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}\n              {orderBy === key ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  // onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nfunction EnhancedTable(props) {\n  const { rows, classes, lookerContent } = props;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(Object.keys(rows[0])[0]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <ApiHighlight>\n      <div className={classes.root}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              {...props}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      key={validIdHelper('TableRow-' + index)}\n                      id={validIdHelper('TableRow-' + index)}>\n                      {Object.keys(row).map((key, index) => (\n                        <TableCell\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          className={lookerContent[0].fieldType[key] === 'dimension' ? classes.greySecondary : classes.orangeSecondary}\n                          align=\"right\">\n                          {row[key].rendered ? row[key].rendered : row[key].value}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n        <FormControlLabel\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\n          label=\"Compact\"\n        />\n      </div>\n    </ApiHighlight>\n  );\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash';\\nimport React, { useState, useEffect } from 'react';\\nimport PropTypes from 'prop-types';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputLabel, MenuItem, FormControl,\\n  Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,\\n  TableSortLabel, FormControlLabel, Switch, Chip, Divider\\n} from '@material-ui/core'\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\nimport DoneIcon from '@material-ui/icons/Done';\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./QueryBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { ApiHighlight } from '../../Highlights/Highlight';\\nimport { TabPanel, a11yProps, descendingComparator, getComparator, stableSort } from './helpers.js';\\nconst { validIdHelper, prettifyString } = require('../../../tools');\\n\\n//start of QueryBuilder Component\\nexport default function QueryBuilder(props) {\\n  // console.log('QueryBuilder')\\n  // console.log('props', props)\\n\\n  //initialize state using hooks\\n  const [value, setValue] = useState(0);\\n  const [apiContent, setApiContent] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  //declare constants\\n\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  const tabContent = [...lookerContent, codeTab];\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * performLookerApiCalls and setSampleCode\\n  */\\n  useEffect(() => {\\n    lookerContent.map(lookerContent => {\\n      setTimeout(() => action(lookerContent.queryBody, lookerContent.resultFormat), 100);\\n    })\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent, lookerUser])\\n\\n  const action = async (newQuery, resultFormat) => {\\n    // console.log('action')\\n    let apiContentCopy = { ...apiContent }\\n    apiContentCopy.status = 'running';\\n    setApiContent(apiContentCopy)\\n\\n    let lookerCreateTaskResposnse = await fetch('/createquerytask/' + JSON.stringify(newQuery), {\\n      method: 'GET',\\n      headers: {\\n        Accept: 'application/json',\\n        'Content-Type': 'application/json'\\n      }\\n    })\\n    let lookerCreateTaskResponseData = await lookerCreateTaskResposnse.json();\\n\\n    let taskInterval = setInterval(async () => {\\n      let lookerCheckTaskResposnse = await fetch('/checkquerytask/' + lookerCreateTaskResponseData.queryTaskId, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      })\\n      let lookerCheckTaskResponseData = await lookerCheckTaskResposnse.json();\\n      if (lookerCheckTaskResponseData.queryResults.status === 'complete') {\\n        clearInterval(taskInterval);\\n        setApiContent(lookerCheckTaskResponseData.queryResults)\\n        setServerSideCode(lookerCreateTaskResponseData.code)\\n      }\\n    }, 5000)\\n  }\\n\\n  return (\\n    <div className={`${classes.root} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={classes.root}>\\n          <Box>\\n            <AppBar position=\\\"static\\\">\\n              <Tabs\\n                className={classes.tabs}\\n                value={value}\\n                onChange={handleChange}\\n                aria-label=\\\"simple tabs example\\\">\\n                {tabContent.map((item, index) => (\\n                  <Tab\\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\\n                    label={item.label}\\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\\n                    {...a11yProps(index)} />\\n                ))}\\n              </Tabs>\\n            </AppBar>\\n            <Box className=\\\"tabPanelContainer\\\">\\n              {tabContent.map((tabContentItem, index) => (\\n                <TabPanel\\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\\n                  value={value}\\n                  index={index}>\\n                  <Grid container>\\n                    {tabContentItem.type === 'code flyout' ?\\n                      <CodeFlyout {...props}\\n                        classes={classes}\\n                        lookerContent={lookerContent}\\n                        clientSideCode={clientSideCode}\\n                        serverSideCode={serverSideCode}\\n                        lookerUser={lookerUser} />\\n                      :\\n                      <React.Fragment\\n                        key={`${validIdHelper(demoComponentType + '-innerFragment-' + index)}`}>\\n                        <FilterBar {...props}\\n                          classes={classes}\\n                          action={action}\\n                        />\\n                        <Divider className={classes.divider} />\\n                        <Box\\n                          className={classes.w100}\\n                          mt={2}>\\n                          {apiContent.status === 'running' ?\\n                            <Grid item sm={12} >\\n                              <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                                <CircularProgress className={classes.circularProgress} />\\n                              </Card>\\n                            </Grid >\\n                            : apiContent.data && apiContent.data.length ?\\n                              <Grid item sm={12}>\\n                                <EnhancedTable\\n                                  {...props}\\n                                  classes={classes}\\n                                  rows={apiContent.data}\\n                                  lookerContent={lookerContent}\\n                                />\\n                              </Grid>\\n                              :\\n                              <Grid item sm={12} >\\n                                <Typography variant=\\\"h6\\\" component=\\\"h6\\\" className={`${classes.gridTitle} ${classes.textCenter}`}>\\n                                  No results found, try a new query<br />\\n                                </Typography>\\n                              </Grid>\\n                          }\\n                        </Box >\\n                      </React.Fragment >\\n                    }\\n                  </Grid >\\n                </TabPanel >\\n              ))}\\n            </Box >\\n          </Box >\\n        </div >\\n      </Grid >\\n    </div >\\n  )\\n}\\n\\n\\nfunction FilterBar(props) {\\n  const { staticContent, staticContent: { lookerContent }, classes, action, lookerUser } = props;\\n  let measureCounter = 0;\\n  let dimensionCounter = 0;\\n\\n  const [expanded, setExpanded] = useState(true);\\n  const [fieldsChipData, setFieldsChipData] = useState(lookerContent[0].queryBody ? lookerContent[0].queryBody.fields.map((item, index) => {\\n    return {\\n      key: 'fieldChipData' + index,\\n      label: prettifyString(item.substring(item.lastIndexOf('.') + 1, item.length)),\\n      datalabel: item,\\n      selected: true,\\n      fieldType: lookerContent[0].fieldType[item]\\n    }\\n  }) : '');\\n  const [queryModified, setQueryModified] = useState(false);\\n  const [filtersData, setFilterData] = useState(lookerContent[0].queryBody ? Object.keys(lookerContent[0].queryBody.filters).map((key, index) => {\\n    return {\\n      key: 'filter' + index,\\n      label: key,\\n      value: lookerContent[0].queryBody.filters[key],\\n      type: lookerContent[0].filterType[key]\\n    }\\n  }) : '')\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n\\n  const handleFieldChipClick = (chip, index) => {\\n    let updatedFieldsChipData = [...fieldsChipData]\\n    updatedFieldsChipData[index].selected = updatedFieldsChipData[index].selected === false ? true : false\\n    setFieldsChipData(updatedFieldsChipData)\\n    setQueryModified(true)\\n  }\\n\\n  const handleSelectChange = (index, newValue) => {\\n    let updatedFiltersData = [...filtersData]\\n    updatedFiltersData[index].value = newValue;\\n    setFilterData(updatedFiltersData)\\n    setQueryModified(true)\\n  }\\n\\n  const handleQuerySubmit = (event) => {\\n    if (queryModified) {\\n      let newFields = fieldsChipData.filter(chip => chip.selected).map(item => item.datalabel);\\n      let currentFilters = {}; //needs to be object\\n      filtersData.map((item, index) => {\\n        currentFilters[item.label] = item.value\\n      })\\n      let newQueryObj = lookerContent[0].queryBody;\\n      newQueryObj.fields = newFields;\\n      newQueryObj.filters = currentFilters;\\n      action(newQueryObj, lookerContent[0].resultFormat);\\n    }\\n  }\\n\\n  useEffect(() => {\\n    handleQuerySubmit()\\n  }, [fieldsChipData, filtersData]);\\n\\n  const datePermissionMap = {\\n    'basic': [\\\"1 week\\\", \\\"1 month\\\", \\\"3 months\\\", \\\"6 months\\\"]\\n  }\\n  datePermissionMap.advanced = [...datePermissionMap.basic, \\\"1 year\\\"]\\n  datePermissionMap.premium = [...datePermissionMap.advanced, \\\"before today\\\"]\\n\\n  useEffect(() => {\\n    let updatedFiltersData = [...filtersData]\\n    updatedFiltersData[3].value = \\\"6 months\\\";\\n    setFilterData(updatedFiltersData)\\n  }, [lookerUser]);\\n\\n  return (\\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel}>\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMoreIcon />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <Typography className={classes.heading}>Build Query</Typography>\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        <Grid container spacing={3}>\\n          <Grid item sm={12}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Select Fields:\\n      {fieldsChipData.length ?\\n                fieldsChipData.map((item, index) => {\\n                  return (\\n                    item.fieldType === 'measure' ?\\n                      <Chip\\n                        key={item.label}\\n                        // key={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        measurecounter={measureCounter += 1}\\n                        className={item.selected ? `${classes.orangePrimary}` : ``}\\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        datalabel={item.label}\\n                        onClick={() => handleFieldChipClick(item, index)}\\n                        icon={item.selected ? <DoneIcon className={classes.dBlock} /> : <DoneIcon className={classes.dNone} />}\\n                      /> : ''\\n                  )\\n                }) : ''\\n              }<br />\\n            </Typography>\\n          </Grid>\\n          <Grid item sm={12}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Totals:\\n                          {fieldsChipData.length ?\\n                fieldsChipData.map((item, index) => {\\n                  return (\\n                    item.fieldType === 'dimension' ?\\n                      <Chip\\n                        key={item.label}\\n                        dimensioncounter={dimensionCounter += 1}\\n                        className={item.selected ? `${classes.greyPrimary}` : ``}\\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        datalabel={item.label}\\n                        onClick={() => handleFieldChipClick(item, index)}\\n                        icon={item.selected ? <DoneIcon className={classes.dBlock} /> : <DoneIcon className={classes.dNone} />}\\n                      /> : ''\\n                  )\\n                }) : ''\\n              }<br />\\n            </Typography>\\n          </Grid>\\n\\n          <Grid item sm={12}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Filter By:\\n                      </Typography>\\n            {filtersData.length ? filtersData.map((item, index) => {\\n              return (\\n                <FormControl className={item.value.length ? classes.formControl : classes.hidden} key={validIdHelper(`${item.label}FormControl`)}>\\n                  {\\n                    item.type === 'yesno' ?\\n                      <>\\n                        <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\\n                        <Select\\n                          labelId={validIdHelper(`${item.label}FilterLabel`)}\\n                          id={validIdHelper(`${item.label}FilterSelect`)}\\n                          value={item.value}\\n                          onChange={(event) => handleSelectChange(index, event.target.value)}\\n                        >\\n                          <MenuItem value=\\\"Yes\\\">Yes</MenuItem>\\n                          <MenuItem value=\\\"No\\\">No</MenuItem>\\n                          <MenuItem value=\\\"All\\\">All</MenuItem>\\n                        </Select>\\n                      </>\\n                      : item.type === 'date' ?\\n                        <>\\n                          <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\\n\\n                          <Select\\n                            labelId={validIdHelper(`${item.label}FilterLabel`)}\\n                            id={validIdHelper(`${item.label}FilterSelect`)}\\n                            value={item.value || '6 months'}\\n                            onChange={(event) => handleSelectChange(index, event.target.value)}\\n                          >\\n                            {lookerUser.permission_level ? datePermissionMap[lookerUser.permission_level].map(item => (\\n                              <MenuItem key={validIdHelper(item)} value={item}>{_.capitalize(item)}</MenuItem>\\n                            )) : ''}\\n                          </Select>\\n                        </>\\n                        : ''\\n                  }\\n                </FormControl>\\n              )\\n            }) : ''}\\n          </Grid>\\n        </Grid>\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel>\\n  )\\n}\\n\\nfunction EnhancedTableHead(props) {\\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, rows } = props;\\n  const createSortHandler = (property) => (event) => {\\n    onRequestSort(event, property);\\n  };\\n\\n  return (\\n    <TableHead>\\n      <TableRow>\\n        {Object.keys(rows[0]).map((key, index) => (\\n          <TableCell\\n            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\\n            id={validIdHelper(key + '-TableHead-TableCell-' + index)}\\n            align={key.numeric ? 'right' : 'left'}\\n            padding={key.disablePadding ? 'none' : 'default'}\\n            sortDirection={orderBy === key ? order : false}\\n          >\\n            <TableSortLabel\\n              active={orderBy === key}\\n              direction={orderBy === key ? order : 'asc'}\\n              onClick={createSortHandler(key)}\\n            >\\n              {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}\\n              {orderBy === key ? (\\n                <span className={classes.visuallyHidden}>\\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\\n                </span>\\n              ) : null}\\n            </TableSortLabel>\\n          </TableCell>\\n        ))}\\n      </TableRow>\\n    </TableHead>\\n  );\\n}\\n\\nEnhancedTableHead.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n  // numSelected: PropTypes.number.isRequired,\\n  onRequestSort: PropTypes.func.isRequired,\\n  // onSelectAllClick: PropTypes.func.isRequired,\\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\\n  orderBy: PropTypes.string.isRequired,\\n  rowCount: PropTypes.number.isRequired,\\n};\\n\\nfunction EnhancedTable(props) {\\n  const { rows, classes, lookerContent } = props;\\n  const [order, setOrder] = React.useState('asc');\\n  const [orderBy, setOrderBy] = React.useState(Object.keys(rows[0])[0]);\\n  const [page, setPage] = React.useState(0);\\n  const [dense, setDense] = React.useState(true);\\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\\n\\n  const handleRequestSort = (event, property) => {\\n    const isAsc = orderBy === property && order === 'asc';\\n    setOrder(isAsc ? 'desc' : 'asc');\\n    setOrderBy(property);\\n  };\\n\\n  const handleChangePage = (event, newPage) => {\\n    setPage(newPage);\\n  };\\n\\n  const handleChangeRowsPerPage = (event) => {\\n    setRowsPerPage(parseInt(event.target.value, 10));\\n    setPage(0);\\n  };\\n\\n  const handleChangeDense = (event) => {\\n    setDense(event.target.checked);\\n  };\\n\\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\\n\\n  return (\\n    <ApiHighlight>\\n      <div className={classes.root}>\\n        <TableContainer>\\n          <Table\\n            className={classes.table}\\n            aria-labelledby=\\\"tableTitle\\\"\\n            size={dense ? 'small' : 'medium'}\\n            aria-label=\\\"enhanced table\\\"\\n          >\\n            <EnhancedTableHead\\n              {...props}\\n              classes={classes}\\n              order={order}\\n              orderBy={orderBy}\\n              onRequestSort={handleRequestSort}\\n              rowCount={rows.length}\\n            />\\n\\n            <TableBody>\\n              {stableSort(rows, getComparator(order, orderBy))\\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\\n                .map((row, index) => {\\n                  return (\\n                    <TableRow\\n                      hover\\n                      key={validIdHelper('TableRow-' + index)}\\n                      id={validIdHelper('TableRow-' + index)}>\\n                      {Object.keys(row).map((key, index) => (\\n                        <TableCell\\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}\\n                          className={lookerContent[0].fieldType[key] === 'dimension' ? classes.greySecondary : classes.orangeSecondary}\\n                          align=\\\"right\\\">\\n                          {row[key].rendered ? row[key].rendered : row[key].value}\\n                        </TableCell>\\n                      ))}\\n                    </TableRow>\\n                  );\\n                })}\\n              {emptyRows > 0 && (\\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\\n                  <TableCell colSpan={6} />\\n                </TableRow>\\n              )}\\n            </TableBody>\\n          </Table>\\n        </TableContainer>\\n        <TablePagination\\n          rowsPerPageOptions={[5, 10, 25, 50]}\\n          component=\\\"div\\\"\\n          count={rows.length}\\n          rowsPerPage={rowsPerPage}\\n          page={page}\\n          onChangePage={handleChangePage}\\n          onChangeRowsPerPage={handleChangeRowsPerPage}\\n        />\\n        <FormControlLabel\\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\\n          label=\\\"Compact\\\"\\n        />\\n      </div>\\n    </ApiHighlight>\\n  );\\n}\";","import React, { useContext } from 'react';\nimport AppContext from '../AppContext';\nimport { Box, Typography, Grid } from '@material-ui/core';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport { API_COLOR, EMBED_COLOR } from './Highlights/Highlight';\nexport function HighlightSourcesLegend({ className }) {\n\n  const { show } = useContext(AppContext)\n  if (show) {\n    return (\n      <Box\n        className={className}\n      >\n        <Grid container>\n          <Grid item sm={6}>\n            <Typography variant=\"subtitle1\" ><CheckBoxOutlineBlankIcon style={{ color: API_COLOR }} /> API</Typography>\n          </Grid>\n          <Grid item sm={6}>\n            <Typography variant=\"subtitle1\" ><CheckBoxOutlineBlankIcon style={{ color: EMBED_COLOR }} /> Embed</Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    )\n  } else {\n    return (\n      <></>\n    );\n  }\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport AppContext from '../../AppContext';\nimport { Modal, Fade } from '@material-ui/core';\n\n\n\nexport function MonetizationModal({ classes }) {\n  const { showPayWallModal, toggleShowPayWallModal, lookerUser } = useContext(AppContext)\n  return (\n    <Modal\n      className={classes.modal}\n      open={showPayWallModal}\n      onClose={toggleShowPayWallModal}\n    >\n      <Fade in={showPayWallModal}>\n        <div className={classes.paper}>\n          <h3>Tier Type: {lookerUser.permission_level}</h3>\n        </div>\n      </Fade>\n    </Modal>\n  );\n}\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport clsx from 'clsx';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Drawer, CssBaseline, AppBar, Toolbar, Typography,\n  Divider, IconButton, Tabs, Tab, Icon, Box, Avatar,\n  ListSubheader, List, ListItem, ListItemIcon, ListItemText,\n  Badge\n} from '@material-ui/core/';\n\nimport { AddAlert, Speed, TrendingUp, StoreMallDirectory, DateRange, Search, FindInPage } from '@material-ui/icons';\nimport HomeIcon from '@material-ui/icons/Home'; //can't reuse home name\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, grey } from '@material-ui/core/colors';\nimport UserMenu from './Material/UserMenu';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport UsecaseContent from '../usecaseContent.json';\nimport SplashPage from './Demo/SplashPage/SplashPage';\nimport Dashboard from './Demo/Dashboard/Dashboard';\nimport CustomVis from './Demo/CustomVis/CustomVis';\nimport ReportBuilder from './Demo/ReportBuilder/ReportBuilder';\nimport QueryBuilder from './Demo/QueryBuilder/QueryBuilder';\nimport AppContext from '../AppContext';\nimport { HighlightSourcesLegend } from './HighlightSourcesLegend';\nimport style from 'react-syntax-highlighter/dist/esm/styles/hljs/agate';\nimport './Home.css'; //needed for iframe height\nimport { MonetizationModal } from './Demo/MonetizationModal';\n\n\n\nconst drawerWidth = 240;\nconst { validIdHelper } = require('../tools');\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    zIndex: 1201\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  relative: {\n    position: 'relative'\n  },\n  absolute: {\n    position: 'absolute'\n  },\n  right0: {\n    right: 0\n  },\n  top0: {\n    top: 0\n  },\n  right24: {\n    right: 24\n  },\n  top24: {\n    top: 24\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  mr12: {\n    marginRight: 12\n  },\n  mt12: {\n    marginTop: 12\n  },\n  highlightLegend: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2),\n    zIndex: 1200\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400\n  },\n  parentHoverVisibility: {\n    '&:hover $childHoverVisibility': {\n      visibility: 'visible'\n    }\n\n  },\n  childHoverVisibility: {\n    visibility: 'hidden'\n  },\n  fontSize1em: {\n    fontSize: '1em'\n  },\n  padding10: {\n    padding: 10\n  },\n  mt5: {\n    marginTop: 5\n  },\n  mb5: {\n    marginBottom: 5\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  list: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n});\n\nconst defaultTheme = createMuiTheme({})\nconst atomTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[900],\n    },\n    secondary: {\n      main: grey[400],\n    },\n  },\n})\n\nconst vidlyTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500],\n    },\n  },\n})\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawerOpen: true,\n      drawerTabValue: 0,\n      activeTabValue: 0,\n      activeUsecase: '',\n      appLayout: '',\n      highlightShow: false,\n      showPayWallModal: false,\n      selectedMenuItem: '',\n      renderedDemoComponents: []\n    }\n  }\n\n  toggleShowPayWallModal = () => {\n    this.setState({ showPayWallModal: !this.state.showPayWallModal })\n  }\n\n  toggleHighlightShow = () => {\n    this.setState({ highlightShow: !this.state.highlightShow })\n  }\n\n  handleTabChange = newValue => {\n    this.setState({\n      activeTabValue: newValue\n    })\n  }\n\n  handleMenuItemSelect = (newValue, fromSplash) => {\n    let selectedMenuItemValue = ''\n    if (fromSplash) {\n      UsecaseContent[this.state.activeUsecase].demoComponents.map(item => {\n        if (item.type !== \"splash page\") {\n          item.lookerContent.map(lookerContentItem => {\n            if (lookerContentItem.id === newValue) {\n              selectedMenuItemValue = validIdHelper(item.type + lookerContentItem.id)\n            }\n          })\n        }\n      })\n    } else selectedMenuItemValue = newValue;\n\n    let renderedDemoComponentsCopy = [...this.state.renderedDemoComponents]\n    if (renderedDemoComponentsCopy.indexOf(selectedMenuItemValue) == -1) renderedDemoComponentsCopy.push(selectedMenuItemValue)\n\n    this.setState((prevState) => ({\n      selectedMenuItem: selectedMenuItemValue,\n      renderedDemoComponents: [...renderedDemoComponentsCopy]\n    }))\n  };\n\n  componentDidMount(props) {\n    let usecaseFromUrl = window.location.pathname.replace(/^\\/([^\\/]*).*$/, '$1');\n    this.setState({\n      activeUsecase: usecaseFromUrl,\n      appLayout: UsecaseContent[usecaseFromUrl].layout || 'left-sidebar'\n    }, () => {\n      LookerEmbedSDK.init(`${this.props.lookerHost}.looker.com`, '/auth');\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    let prevPermissionLevel = prevProps.lookerUser.permission_level;\n    let currPermissionLevel = this.props.lookerUser.permission_level;\n    let prevUserBrand = prevProps.lookerUser.user_attributes.brand;\n    let currUserBrand = this.props.lookerUser.user_attributes.brand;\n\n    if ((prevPermissionLevel !== currPermissionLevel) || (prevUserBrand !== currUserBrand)) {\n      this.setState({\n        renderedDemoComponents: [this.state.selectedMenuItem]\n      })\n    }\n  }\n\n  render() {\n\n    //how to make this dynamic????\n    const demoComponentMap = {\n      \"splashpage19\": SplashPage,\n      \"simpledashboard5\": Dashboard,\n      \"simpledashboard9\": Dashboard,\n      \"customfilter1\": Dashboard,\n      \"customvis\": CustomVis,\n      \"querybuilderexplorelite\": QueryBuilder,\n      \"reportbuilder14\": ReportBuilder,\n    };\n\n    const themeMap = {\n      \"atom\": atomTheme,\n      \"vidly\": vidlyTheme\n    }\n\n    const { drawerTabValue, drawerOpen, activeTabValue, activeUsecase, selectedMenuItem, renderedDemoComponents } = this.state;\n    const { handleTabChange, handleMenuItemSelect } = this;\n    const { classes, activeCustomization, switchLookerUser, lookerUser, applySession, lookerUserAttributeBrandOptions, switchUserAttributeBrand, lookerHost, userProfile } = this.props\n\n    let orderedDemoComponentsForMenu = activeUsecase ? _.orderBy(UsecaseContent[activeUsecase].demoComponents, ['menuCategory'], ['asc']) : []; // Use Lodash to sort array by 'name'\n    let orderedDemoComponentsForMenuObj = {};\n    let expandedTreeItemsArr = [];\n    let cumulativePusher = 0;\n    orderedDemoComponentsForMenu.map((item, index) => {\n      if (orderedDemoComponentsForMenuObj.hasOwnProperty(item.menuCategory)) {\n        orderedDemoComponentsForMenuObj[item.menuCategory] = [...orderedDemoComponentsForMenuObj[item.menuCategory], item]\n      } else {\n        orderedDemoComponentsForMenuObj[item.menuCategory] = [item];\n        cumulativePusher += 1;\n        expandedTreeItemsArr.push(\"\" + (index + cumulativePusher));\n      }\n    })\n\n    if (activeUsecase && !selectedMenuItem.length) {\n      let selectedMenuItemVal =\n        UsecaseContent[activeUsecase].demoComponents[0].lookerContent[0].id ?\n          validIdHelper(UsecaseContent[activeUsecase].demoComponents[0].type + UsecaseContent[activeUsecase].demoComponents[0].lookerContent[0].id) :\n          validIdHelper(UsecaseContent[activeUsecase].demoComponents[0].type)\n      this.setState({\n        selectedMenuItem: selectedMenuItemVal,\n        renderedDemoComponents: [selectedMenuItemVal]\n      }, () => {\n      })\n\n      //couldn't figure this out...\n      // UsecaseContent[activeUsecase].demoComponents.map(item => {\n      //   demoComponentMap[item.lookerContent[0].id ?\n      //     validIdHelper(item.type + item.lookerContent[0].id) :\n      //     validIdHelper(item.type)] = item.type.split(\" \").map(item => _.capitalize(item)).join(\"\")\n      // })\n    }\n\n    return (\n      <div className={classes.root}>\n        <AppContext.Provider value={\n          {\n            show: this.state.highlightShow,\n            toggleShow: this.toggleHighlightShow,\n            showPayWallModal: this.state.showPayWallModal,\n            toggleShowPayWallModal: this.toggleShowPayWallModal,\n            lookerUser,\n            userProfile\n          }\n        } >\n          <ThemeProvider theme={activeUsecase ? themeMap[activeUsecase] : defaultTheme}>\n            <CssBaseline />\n            <AppBar\n              position=\"fixed\"\n              className={clsx(classes.appBar)}\n            >\n              <Toolbar>\n\n                {activeUsecase ?\n                  <Avatar alt=\"Icon\"\n                    src={require(`../images/${activeUsecase}_logo.png`)}\n                  // src={require(`../images/${activeUsecase}_logo_white.svg`)}\n                  /> : ''}\n\n                <Typography variant=\"h6\" noWrap className={`${classes.title} ${classes.ml12}`}>\n                  {activeUsecase ? UsecaseContent[activeUsecase].vignette.name : ''}\n                </Typography>\n\n                {/* Math.floor(Math.random() * 5) + 1 */}\n                <Badge badgeContent={3} color=\"error\" className={classes.mr12}>\n                  <AddAlert />\n                </Badge>\n                <UserMenu\n                  lookerUser={lookerUser}\n                  switchLookerUser={switchLookerUser}\n                  onLogoutSuccess={applySession}\n                  lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions}\n                  switchUserAttributeBrand={switchUserAttributeBrand}\n                />\n              </Toolbar>\n            </AppBar>\n            <Drawer\n              className={classes.drawer}\n              variant=\"persistent\"\n              anchor=\"left\"\n              open={drawerOpen}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <div className={classes.drawerHeader} />\n\n              {Object.keys(orderedDemoComponentsForMenuObj).length ?\n                <MenuList {...this.props}\n                  classes={classes}\n                  activeUsecase={activeUsecase}\n                  orderedDemoComponentsForMenuObj={orderedDemoComponentsForMenuObj}\n                  selectedMenuItem={selectedMenuItem}\n                  handleMenuItemSelect={handleMenuItemSelect} /> : ''}\n\n              <HighlightSourcesLegend className={classes.highlightLegend} />\n              <MonetizationModal {...{ classes }} />\n            </Drawer>\n            <main\n              className={clsx(classes.content, {\n                [classes.contentShift]: drawerOpen,\n              })}\n            >\n              <div className={classes.drawerHeader} />\n              {activeUsecase ?\n                UsecaseContent[activeUsecase].demoComponents.map((item, index) => {\n                  const key = item.lookerContent[0].id ? validIdHelper(item.type + item.lookerContent[0].id) : validIdHelper(item.type);\n                  const DemoComponent = demoComponentMap[key];\n                  return (\n                    <React.Fragment\n                      key={validIdHelper(`outerFragment-${item.type}-${index}`)}>\n                      {renderedDemoComponents.indexOf(key) > -1 ? <Box key={validIdHelper(`box-${item.type}-${index}`)}\n                        className={key === selectedMenuItem ? `` : `${classes.hide}`}\n                      >\n                        <DemoComponent key={validIdHelper(`treeItem-${item.type}-${index}`)}\n                          staticContent={item}\n                          handleMenuItemSelect={handleMenuItemSelect}\n                          activeTabValue={activeTabValue}\n                          handleTabChange={handleTabChange}\n                          lookerUser={lookerUser}\n                          activeUsecase={activeUsecase}\n                          LookerEmbedSDK={LookerEmbedSDK}\n                          lookerHost={lookerHost}\n                          userProfile={userProfile}\n                        />\n                      </Box> : ''}\n                    </React.Fragment>)\n                }) :\n                ''\n              }\n            </main >\n          </ThemeProvider>\n        </AppContext.Provider>\n      </div >\n    )\n  }\n}\nexport default withStyles(styles)(Home);\n\nfunction MenuList(props) {\n  const { classes, activeUsecase, orderedDemoComponentsForMenuObj, selectedMenuItem, handleMenuItemSelect } = props\n  const demoComponentIconMap = {\n    \"splashpage19\": HomeIcon,\n    \"simpledashboard5\": TrendingUp,\n    \"simpledashboard9\": Speed,\n    \"customfilter1\": StoreMallDirectory,\n    \"customvis\": DateRange,\n    \"querybuilderexplorelite\": Search,\n    \"reportbuilder14\": FindInPage,\n  }\n\n  return (<List\n    component=\"nav\"\n    aria-labelledby=\"nested-list-subheader\"\n    className={classes.list}\n  >\n    {activeUsecase ? Object.keys(orderedDemoComponentsForMenuObj).map((outerItem, outerIndex) => {\n      return (\n        < React.Fragment\n          key={`${validIdHelper(outerItem + '-menuList-' + outerIndex)}`}>\n          <ListItem button\n            key={`${validIdHelper(outerItem + '-outerListItem-' + outerIndex)}`}\n          >\n            <ListItemText primary={_.capitalize(outerItem)} />\n          </ListItem>\n          < List component=\"div\" disablePadding\n            key={`${validIdHelper(outerItem + '-innerList-' + outerIndex)}`}>\n            {orderedDemoComponentsForMenuObj[outerItem].map((item, innerIndex) => {\n              const key = item.lookerContent[0].id ? validIdHelper(item.type + item.lookerContent[0].id) : validIdHelper(item.type);\n              const MatchingIconComponent = demoComponentIconMap[key]\n\n              return (\n                <ListItem button className={classes.nested}\n                  key={`${validIdHelper(outerItem + '-innerListItem-' + innerIndex)}`}\n                  onClick={\n                    () => handleMenuItemSelect(validIdHelper(item.lookerContent[0].id ? item.type + item.lookerContent[0].id : item.type))\n                  }\n                  selected={validIdHelper(item.lookerContent[0].id ? item.type + item.lookerContent[0].id : item.type) === selectedMenuItem}\n                >\n                  <ListItemIcon>\n                    <MatchingIconComponent />\n                  </ListItemIcon>\n                  <ListItemText primary={_.capitalize(item.label)} />\n                </ListItem>\n              )\n            })}\n          </List>\n        </React.Fragment>\n      )\n\n\n    }) : ''\n    }\n  </List >\n  )\n}","import _ from 'lodash'\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, CardActions, CardContent, Typography } from '@material-ui/core'\nimport { grey, orange } from '@material-ui/core/colors';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport './Home.css';\nconst { validIdHelper } = require('../tools');\nconst lightGrey = grey[200];\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  card: {\n    minWidth: 350,\n    minHeight: 500,\n    left: '75%',\n    top: '50%',\n    transform: `translate(-75%, -50%)`,\n    position: 'absolute',\n    textAlign: 'center',\n    backgroundColor: lightGrey\n  },\n  h100: {\n    height: '100%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  actions: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  cardCopy: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: `translate(-50%, -50%)`,\n    margin: '0',\n    width: '80%',\n  }\n}));\n\n\nexport default function SignIn(props) {\n\n  // console.log('SignIn')\n  // console.log('props', props)\n\n  const { googleClientId, onSuccess, onFailure, } = props;\n  const classes = useStyles();\n  let usecaseFromUrl = window.location.pathname.replace(/^\\/([^\\/]*).*$/, '$1');\n  const backgroundImageInt = Math.floor(Math.random() * 4) + 1;\n  const backgroundImage = require(`../images/${usecaseFromUrl}_background${backgroundImageInt}.jpg`);\n  const logoImage = require(`../images/${usecaseFromUrl}_logo_black.svg`)\n\n  return (\n    <div className={`${classes.root} demoComponent ${classes.h100}`}>\n      <Grid container\n        key={validIdHelper('sign in page')}\n        className={`${classes.h100}`}>\n        <Grid item sm={12} className={'sign-in-background-img'}\n          style={{\n            backgroundImage: `url(${backgroundImage})`,\n            backgroundSize: 'cover'\n          }}\n        >\n          <Card className={classes.card}>\n            <div className={classes.cardCopy}>\n              <img\n                src={logoImage}\n              />\n              <CardContent >\n                <Typography variant=\"h5\" component=\"h2\">\n                  Welcome\n                            </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  Please sign in to access <br /> your merchant portal\n                            </Typography>\n              </CardContent>\n              <CardActions className={`${classes.actions}`} >\n                <GoogleLogin\n                  clientId={googleClientId}\n                  buttonText=\"Login\"\n                  onSuccess={onSuccess}\n                  onFailure={onSuccess}\n                  cookiePolicy={'single_host_origin'}\n                />\n              </CardActions>\n            </div>\n          </Card>\n        </Grid>\n      </Grid>\n    </div >\n  )\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\n\nclass Customizations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.editCustomization = this.editCustomization.bind(this);\n        this.applyCustomization = this.applyCustomization.bind(this);\n        this.state = {\n            customizations: this.props.customizations,\n            isOrdered: null\n        }\n    }\n\n    componentDidMount() {\n        // console.log('Customize componentDidMount')\n        // console.log('this.props', this.props)\n    }\n\n    editCustomization(customizationIndex) {\n        this.props.editCustomization(customizationIndex)\n        this.props.history.push('/customize/edit')\n    }\n\n    applyCustomization(customizationIndex) {\n        this.props.applyCustomization(customizationIndex)\n        this.props.history.push('/home') //customize\n    }\n\n    sortByCreatedDate() {\n        let { isOrdered } = this.state\n        let sortedCustomizations;\n        if (isOrdered === null || isOrdered === \"DESC\") {\n            sortedCustomizations = this.state.customizations.sort((a, b) => (a.date > b.date) ? 1 : -1)\n            this.setState({\n                isOrdered: \"ASC\"\n            })\n        } else if (isOrdered === \"ASC\") {\n            sortedCustomizations = this.state.customizations.sort((a, b) => (a.date > b.date) ? -1 : 1)\n            this.setState({\n                isOrdered: \"DESC\"\n            })\n\n        }\n        this.setState({\n            customizations: sortedCustomizations\n        })\n    }\n\n    render() {\n        const { activeCustomization } = this.props\n        const { customizations } = this.state\n        const { isOrdered } = this.state\n        return (\n            <div className=\"home container p-5 position-relative\">\n                <div className=\"row pt-5\">\n                    <div className=\"col-sm-12\">\n                        <h1>Customizations</h1>\n                        <table className=\"table pt-3 mt-3\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\" className=\"cursor\" onClick={() => this.sortByCreatedDate()}><a>Last Saved {isOrdered === null ? '' : isOrdered === \"ASC\" ? '∧' : '∨'}</a></th>\n                                    <th scope=\"col\">Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {customizations.map((customization, index) => {\n                                    return (\n                                        <tr key={customization.id} id={customization.id} index={index} >\n                                            <td >{customization.companyName}</td>\n                                            <td >{Moment(customization.date).format('LLL')}</td>\n                                            <td>\n                                                <span className=\"badge badge-info p-3 mr-2\">Active</span>\n                                                <button type=\"button\" className=\"btn btn-primary mr-2\" data-index={index} onClick={() => this.applyCustomization(index)}>Apply</button>\n                                                <button type=\"button\" className=\"btn btn-secondary mr-2\" data-index={index} onClick={() => this.editCustomization(index)}>Edit</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                        <Link to='/customize/edit'>\n                            <button type=\"button\" className=\"btn btn-primary\">New Customization</button>\n                        </Link>\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}\nexport default Customizations","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nlet emptyCustomizationObj = {\n    id: '',\n    date: '',\n    salesforceUrl: '',\n    companyName: '',\n    logoUrl: ''\n}\n\nfunction prettifyKey(key) {\n    switch (key) {\n        case 'salesforceUrl':\n            return 'Salesforce Url';\n            break;\n        case 'companyName':\n            return 'Company Name';\n            break;\n        case 'logoUrl':\n            return 'Logo Url';\n            break;\n        default:\n            return null;\n            break;\n    }\n}\n\nclass NewCustomization extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        const { indexOfCustomizationToEdit, customizations } = this.props\n        this.state = {\n            companyName: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].companyName : '',\n            logoUrl: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].logoUrl : '',\n            salesforceUrl: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].salesforceUrl : '',\n            validSalesforceUrl: indexOfCustomizationToEdit ? this.validateSalesforceUrl(customizations[indexOfCustomizationToEdit].salesforceUrl) : false,\n            industry: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].industry : '',\n        }\n    }\n\n    componentDidMount() {\n        this.salesforceUrlInput.focus();\n    }\n\n    componentWillUnmount() {\n        // console.log('NewCustomization componentWillUnmount')\n        this.props.cancelIndexOfCustomizationToEdit()\n    }\n\n    handleSubmit(event) {\n        // console.log('handleSubmit')\n        event.preventDefault();\n        const data = new FormData(event.target);\n        let objForBody = {}\n        for (var [key, value] of data.entries()) {\n            objForBody[key] = value\n        }\n        this.props.saveCustomization(objForBody)\n        setTimeout(() => {\n            this.props.history.push('/home') //causes error w/ out time out\n        }, 100)\n    }\n\n    updateInput(e) {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n\n        if (e.target.id === \"salesforceUrl\") {\n            this.setState({ validSalesforceUrl: this.validateSalesforceUrl(e.target.value) })\n        }\n    }\n\n    validateSalesforceUrl = (url) => {\n        let urlexp = new RegExp('^https:\\/\\/looker.my.salesforce.com(?:$|/)');\n        let res = url.match(urlexp)\n        let returnVal = false;\n        if (res !== null) {\n            returnVal = true;\n        }\n        return returnVal\n    }\n\n\n    dropdownSelect = (e) => {\n        const targetId = e.target.id\n        this.setState({\n            [targetId]: e.target.value\n        })\n    }\n\n    render() {\n        // console.log('EditCustomization render');\n        const { indexOfCustomizationToEdit, customizations, lookerHost } = this.props\n        const { validSalesforceUrl, industry } = this.state\n        // let lookerHostNameToUse = lookerHost.substr(0, lookerHost.indexOf('.'));\n        // console.log('lookerHost', lookerHost)\n\n\n        return (\n            <div className=\"home container p-5\" >\n                <div className=\"row pt-5\">\n                    <div className=\"col-sm-9\">\n                        <h1>Edit Customization</h1>\n                        <form className=\"border-top mt-3 pt-3\" onSubmit={this.handleSubmit}>\n                            <input type=\"hidden\" id=\"id\" name=\"id\" value={indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].id : ''} />\n                            <input type=\"hidden\" id=\"customizationIndex\" name=\"customizationIndex\" value={indexOfCustomizationToEdit ? indexOfCustomizationToEdit : ''} />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"salesforceUrl\">Salesforce Url</label>\n                                <input id=\"salesforceUrl\"\n                                    className=\"form-control\"\n                                    name=\"salesforceUrl\"\n                                    type=\"text\"\n                                    value={this.state.salesforceUrl}\n                                    onChange={e => this.updateInput(e)}\n                                    ref={input => {\n                                        this.salesforceUrlInput = input;\n                                    }} />\n                                {validSalesforceUrl ?\n                                    <small id=\"salesforceUrlHelp\" className=\"form-text text-success\">Valid Salesforce Url!</small>\n                                    : this.state.salesforceUrl.length ?\n                                        <small id=\"salesforceUrlHelp\" className=\"form-text text-danger\">Must be valid Looker Salesforce Opportunity Url</small>\n                                        : <small id=\"salesforceUrlHelp\" className=\"form-text text-muted\">This field is required</small>}\n                            </div>\n                            <div id=\"subForm\">\n                                {/* {DefaultLookerContent[lookerHost] ?\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"industry\">Choose industry</label>\n                                        <select\n                                            id=\"industry\"\n                                            className=\"form-control\"\n                                            onChange={(e) => this.dropdownSelect(e)}\n                                            name=\"industry\"\n                                            type=\"select-one\"\n                                            value={this.state.industry}\n                                            disabled={validSalesforceUrl ? false : true}>\n\n                                            <option\n                                                key=\"none\"\n                                                value=\"none\"\n                                            > None</option>\n                                            {Object.keys(DefaultLookerContent[lookerHost]).map(key => {\n                                                return (\n                                                    <option\n                                                        key={key}\n                                                        value={key}\n                                                    > {(key.charAt(0).toUpperCase() + key.substring(1)).replace('_', ' ')}</option>\n                                                )\n                                            })}</select>\n                                    </div>\n                                    : ''} */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"companyName\">Company name</label>\n                                    <input id=\"companyName\"\n                                        className=\"form-control\"\n                                        name=\"companyName\"\n                                        type=\"text\"\n                                        value={this.state.companyName}\n                                        onChange={e => this.updateInput(e)}\n                                        disabled={validSalesforceUrl ? false : true}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"logoUrl\">Logo URL</label>\n                                    <input id=\"logoUrl\"\n                                        className=\"form-control\"\n                                        name=\"logoUrl\"\n                                        type=\"text\"\n                                        value={this.state.logoUrl}\n                                        onChange={e => this.updateInput(e)}\n                                        disabled={validSalesforceUrl ? false : true}\n                                    />\n                                </div>\n                                <div className=\"form-group mt-3 pt-3\">\n                                    <button className=\"btn btn-primary mr-2\"\n                                        disabled={validSalesforceUrl ? false : true}>Save Customization</button>\n                                    <Link to='/customize'>\n                                        <button type=\"button\" className=\"btn btn-secondary \">Cancel</button>\n                                    </Link>\n                                </div></div>\n                        </form>\n\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}\nexport default NewCustomization","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter, useHistory } from 'react-router-dom'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n// import Config from './clientConfig.json';\nimport Home from './components/Home'\nimport SignIn from './components/SignIn'\n// import Header from './components/Header'\n// import Footer from './components/Footer'\nimport Customizations from './components/Customizations'\nimport EditCustomization from './components/EditCustomization'\n//make looker user dynamic\nimport LookerUserPermissions from './lookerUserPermissions.json';\nimport InitialLookerUser from './initialLookerUser.json';\nimport UsecaseContent from './usecaseContent.json';\nimport LookerUserAttributeBrandOptions from './lookerUserAttributeBrandOptions.json';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  responseGoogle = (response) => {\n    // debugger //from Jim\n    if (response.error) {\n      console.log('response.error', response.error)\n    } else {\n      this.props.applySession(response.profileObj)\n    }\n  }\n\n  render() {\n    // console.log(\"Login render\")\n    const { from } = this.props.location.state || { from: { pathname: '/home' } } //needs work?\n    const { pathname } = this.props.location\n    const { activeCustomization } = this.props\n    const { userProfile } = this.props\n\n    const googleClientId = `${process.env.REACT_APP_GOOGLE_CLIENT_ID}.apps.googleusercontent.com`\n    if (Object.keys(userProfile).length) {\n      return (\n        <div className=\"App\">\n          <Redirect to={from} />\n        </div>\n      )\n    } else {\n      return (\n        <SignIn\n          googleClientId={googleClientId}\n          onSuccess={this.responseGoogle}\n          onFailure={this.responseGoogle}\n        />\n      )\n    }\n  }\n}\n\nconst PrivateRoute = ({\n  component: Component,\n  customizations,\n  activeCustomization,\n  applyCustomization,\n  editCustomization,\n  indexOfCustomizationToEdit,\n  saveCustomization,\n  cancelIndexOfCustomizationToEdit,\n  lookerContent,\n  saveLookerContent,\n  userProfile,\n  lookerUser,\n  lookerHost,\n  switchLookerUser,\n  applySession,\n  lookerUserAttributeBrandOptions,\n  switchUserAttributeBrand,\n  ...rest }) => (\n    < Route {...rest} render={(props) => (\n      Object.keys(userProfile).length ?\n        <Component {...props}\n          customizations={customizations}\n          activeCustomization={activeCustomization}\n          applyCustomization={applyCustomization}\n          editCustomization={editCustomization}\n          indexOfCustomizationToEdit={indexOfCustomizationToEdit}\n          saveCustomization={saveCustomization}\n          cancelIndexOfCustomizationToEdit={cancelIndexOfCustomizationToEdit}\n          lookerContent={lookerContent}\n          saveLookerContent={saveLookerContent}\n          userProfile={userProfile}\n          lookerUser={lookerUser}\n          lookerHost={lookerHost}\n          switchLookerUser={switchLookerUser}\n          applySession={applySession}\n          lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions}\n          switchUserAttributeBrand={switchUserAttributeBrand}\n        />\n        : <Redirect to={{\n          pathname: '/',\n          state: { from: props.location }\n        }} />\n    )} />\n  )\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userProfile: {},\n      customizations: [],\n      activeCustomization: {},\n      indexOfCustomizationToEdit: null,\n      lookerContent: [],\n      lookerUser: {\n        ...InitialLookerUser\n      },\n      lookerHost: '',\n      activeUsecase: ''\n    }\n  }\n\n  componentDidMount() {\n    // console.log('App componentDidMount')\n    this.checkSession()\n  }\n\n  //called on componentDidMount\n  //get request so should only check info, never update\n  checkSession = async () => {\n    // console.log('checkSession')\n    let sessionResponse = await fetch('/readsession', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    const sessionResponseData = await sessionResponse.json();\n    // console.log('sessionResponseData', sessionResponseData)\n    const { userProfile } = sessionResponseData.session\n    const { customizations } = sessionResponseData.session\n    const activeCustomization = sessionResponseData.session.activeCustomization ? sessionResponseData.session.activeCustomization : 0;\n    const lookerUser = sessionResponseData.session.lookerUser ? sessionResponseData.session.lookerUser : this.state.lookerUser;\n    const lookerHost = sessionResponseData.session.lookerHost ? sessionResponseData.session.lookerHost : this.state.lookerHost;\n    // console.log('lookerUser', lookerUser)\n    //make sure defined and contains properties\n    if (userProfile && Object.keys(userProfile).length) {\n      this.setState((prevState) => ({\n        userProfile, //think we want this here?\n        customizations,\n        lookerUser: {\n          ...prevState.lookerUser,\n          external_user_id: userProfile.googleId,\n          first_name: userProfile.givenName,\n          last_name: userProfile.familyName,\n          permissions: LookerUserPermissions[lookerUser.permission_level] || LookerUserPermissions['basic'],\n          permission_level: lookerUser.permission_level || 'basic',\n          user_attributes: {\n            ...lookerUser.user_attributes || {\n              \"locale\": \"en_US\",\n              \"country\": \"USA\",\n              \"brand\": \"Calvin Klein\"\n            }\n          }\n        },\n        lookerHost\n      }), () => {\n        // console.log('checkSession callback 1111 this.state.lookerUser', this.state.lookerUser)\n        this.applyCustomization(activeCustomization)\n      })\n    }\n  }\n\n  // called by responseGoogle once it gets response\n  // since login can assume activeCustomization will be default..\n  applySession = async (userProfile) => {\n    // console.log('applySession')\n    // console.log('userProfile', userProfile)\n\n    if (Object.keys(userProfile).length === 0) {\n      // console.log('inside ifff')\n      let sessionData = await fetch('/endsession', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      this.setState({\n        userProfile: {},\n        lookerUser: { ...InitialLookerUser }\n      })\n    } else {\n      // console.log('inside else')\n      let sessionData = await fetch('/writesession', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ userProfile, lookerUser: this.state.lookerUser })\n      })\n      const sessionResponseData = await sessionData.json();\n      const { customizations } = sessionResponseData.session\n      const lookerUser = sessionResponseData.session.lookerUser ? sessionResponseData.session.lookerUser : this.state.lookerUser;\n      const lookerHost = sessionResponseData.session.lookerHost ? sessionResponseData.session.lookerHost : this.state.lookerHost;\n\n      this.setState(prevState => ({\n        userProfile,\n        customizations,\n        lookerUser: {\n          ...prevState.lookerUser,\n          external_user_id: userProfile.googleId,\n          first_name: userProfile.givenName,\n          last_name: userProfile.familyName,\n          permissions: LookerUserPermissions[lookerUser.permission_level] || LookerUserPermissions['basic'], //assume good initially,\n          permission_level: lookerUser.permission_level || 'basic',\n          user_attributes: {\n            ...lookerUser.user_attributes || {\n              \"locale\": \"en_US\",\n              \"country\": \"USA\",\n              \"brand\": \"Calvin Klein\",\n              \"time_horizon\": \"last 6 months\"\n            }\n          }\n        },\n        lookerHost\n      }), () => {\n        this.applyCustomization(0) //assume default customization, set lookerContent and activeCustomization in applyCustomization\n      });\n    }\n  }\n\n  //called by: checkSession, applySession, applyButton, saveCustomization\n  applyCustomization = async (customizationIndex) => {\n    // console.log('applyCustomization')\n    // console.log('customizationIndex', customizationIndex)\n\n    let customizationResponse = await fetch('/applyactivecustomziation', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ customizationIndex })\n    })\n\n    let customizationResponseData = await customizationResponse.json();\n\n    let lookerContentToUse = [];\n    //check industry first, insert to array\n    if (this.state.customizations[customizationIndex].industry) {\n      // lookerContentToUse = [...DefaultLookerContent[this.state.lookerHost][this.state.customizations[customizationIndex].industry]]\n    }\n    //then check custom content, insert to array\n    if (this.state.customizations[customizationIndex].lookerContent) {\n      // lookerContentToUse = [...lookerContentToUse, ...this.state.customizations[customizationIndex].lookerContent]\n    }\n\n    this.setState({\n      activeCustomization: this.state.customizations[customizationIndex],\n      lookerContent: lookerContentToUse\n    }, () => {\n      // console.log('applyCustomization callback this.state.lookerContent', this.state.lookerContent)\n      // console.log('applyCustomization callback this.state.activeCustomization', this.state.activeCustomization)\n      // this.props.history.push('/home') //not going to work here :P\n    });\n  }\n\n  editCustomization = (customizationIndex) => {\n    // console.log('editCustomization')\n    // console.log('customizationIndex', customizationIndex)\n    const validCustomizationIndex = typeof this.state.customizations[customizationIndex] === 'undefined' ? null : customizationIndex\n    this.setState({\n      indexOfCustomizationToEdit: validCustomizationIndex,\n    }, () => {\n      // console.log('editCustomization callback this.state.indexOfCustomizationToEdit', this.state.indexOfCustomizationToEdit)\n    });\n  }\n\n  saveCustomization = async (formData) => {\n    // console.log('saveCustomization')\n    // console.log('formData', formData)\n    let customizationResponse = await fetch('/savecustomization', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n\n    let customizationResponseData = await customizationResponse.json();\n\n    // console.log('customizationResponseData', customizationResponseData)\n\n    this.setState({\n      customizations: customizationResponseData.customizations,\n      // indexOfCustomizationToEdit: null\n    }, () => {\n      this.applyCustomization(formData.customizationIndex) //sessionActiveCustomization\n    })\n  }\n\n\n  cancelIndexOfCustomizationToEdit = () => {\n    // console.log(\"cancelIndexOfCustomizationToEdit\")\n    this.setState({\n      indexOfCustomizationToEdit: null\n    })\n  }\n\n  saveLookerContent = async (newLookerContent) => {\n    // console.log('saveLookerContent')\n    // console.log('newLookerContent', newLookerContent)\n\n    /*let customizationResponse = await fetch('/savelookercontent', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ activeCustomization: this.state.activeCustomization, newLookerContent: newLookerContent })\n    })\n    let customizationResponseData = await customizationResponse.json();\n\n    this.setState(prevState => ({\n      lookerContent: [...prevState.lookerContent, newLookerContent] //should I be using DB as source here?\n    }))*/\n\n  }\n\n  switchLookerUser = (newUser) => {\n    // console.log('switchLookerUser')\n    // console.log('newUser', newUser)\n    // console.log('LookerUserPermissions[newUser]', LookerUserPermissions[newUser])\n\n\n    let lookerUserTimeHorizonMap = {\n      'basic': 'last 6 months',\n      'advanced': 'last 12 months',\n      'premium': 'before today'\n    }\n    let userAttributeCopy = { ...this.state.lookerUser.user_attributes }\n    userAttributeCopy.time_horizon = lookerUserTimeHorizonMap[newUser];\n\n\n    this.setState(prevState => ({\n      lookerUser: {\n        ...prevState.lookerUser,\n        permissions: LookerUserPermissions[newUser],\n        permission_level: newUser,\n        user_attributes: userAttributeCopy\n      }\n    }), async () => {\n\n      let lookerUserResponse = await fetch('/updatelookeruser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.lookerUser)\n      })\n\n      let lookerUserResponseData = await lookerUserResponse.json();\n\n    });\n  }\n\n  switchUserAttributeBrand = (newAttribute) => {\n    // console.log('switchUserAttributeBrand')\n    // console.log('newAttribute', newAttribute)\n\n    let userAttributeCopy = { ...this.state.lookerUser.user_attributes }\n    userAttributeCopy.brand = newAttribute;\n\n    this.setState(prevState => ({\n      lookerUser: {\n        ...prevState.lookerUser,\n        user_attributes: userAttributeCopy\n      }\n    }), async () => {\n\n      let lookerUserResponse = await fetch('/updatelookeruser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.lookerUser)\n      })\n\n      let lookerUserResponseData = await lookerUserResponse.json();\n\n    });\n  }\n\n  render() {\n    // console.log('App render');\n    // console.log('this.props', this.props);\n    const { userProfile, customizations, activeCustomization, indexOfCustomizationToEdit, lookerContent, lookerUser, lookerHost } = this.state\n    // const { activeIndustry } = this.state;\n    // console.log('activeCustomization', activeCustomization);\n\n    let usecaseFromUrl = window.location.pathname.replace(/^\\/([^\\/]*).*$/, '$1');\n    // console.log('usecaseFromUrl', usecaseFromUrl)\n    if (!usecaseFromUrl.length) {     //no usecase\n      window.location.href = window.location.href + 'atom'\n    } else if (!UsecaseContent.hasOwnProperty(usecaseFromUrl)) {     //usecase param isn't in JSON file\n      window.location.href = window.location.href.replace(usecaseFromUrl, 'atom')\n    }\n    return (\n      <Router basename={usecaseFromUrl}>\n        <div>\n          <Route path='' render={(props) => <Login\n            {...props}\n            applySession={this.applySession}\n            userProfile={userProfile}\n            activeCustomization={activeCustomization}\n            lookerUser={lookerUser}\n            switchLookerUser={this.switchLookerUser}\n            lookerHost={lookerHost}\n          />}\n          />\n          <PrivateRoute path='*/home' component={Home}\n            activeCustomization={activeCustomization}\n            lookerContent={lookerContent}\n            saveLookerContent={this.saveLookerContent}\n            userProfile={userProfile}\n            lookerUser={lookerUser}\n            applySession={this.applySession}\n            lookerHost={lookerHost}\n            switchLookerUser={this.switchLookerUser}\n            lookerUserAttributeBrandOptions={LookerUserAttributeBrandOptions}\n            switchUserAttributeBrand={this.switchUserAttributeBrand}\n          />\n        </div>\n      </Router>\n    )\n  }\n}\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}