{
  "version": 3,
  "sources": [
    "images/atom_splash_blog.jpg",
    "images/atom_splash_inventory.jpg",
    "images/atom_splash_trends.jpg",
    "tools.js",
    "images sync /^/.//.*_logo_white/.svg$",
    "images/atom_logo_white.svg",
    "images sync /^/.//.*/.jpg$",
    "images/atom_background1.jpg",
    "images/atom_background2.jpg",
    "images/atom_background3.jpg",
    "images/atom_background4.jpg",
    "images sync /^/.//.*_logo_black/.svg$",
    "images/atom_logo_black.svg",
    "AppContext.js",
    "components/Material/UserMenu.js",
    "components/Demo/CodeFlyout.js",
    "webpack:///./src/components/Demo/SplashPage/SplashPage.js?046c",
    "components/Demo/SplashPage/styles.js",
    "components/Highlights/Highlight.js",
    "components/Demo/SplashPage/SingleValueVis.js",
    "components/Demo/SplashPage/NaturalLanguage.js",
    "components/Demo/SplashPage/Welcome.js",
    "components/Demo/SplashPage/VectorThumbnail.js",
    "components/Demo/SplashPage/PopularAnalysis.js",
    "components/Demo/SplashPage/EmbeddedDashboard.js",
    "components/Demo/SplashPage/ContentCarousel.js",
    "components/Demo/SplashPage/SplashPage.js",
    "components/Demo/Dashboard/styles.js",
    "components/Demo/Dashboard/helpers.js",
    "components/Accessories/NumberToColoredPercent.js",
    "components/Demo/Dashboard/Dashboard.js",
    "webpack:///./src/components/Demo/Dashboard/Dashboard.js?b45b",
    "components/Material/ModalTable.js",
    "components/Demo/CustomVis/styles.js",
    "components/Demo/CustomVis/helpers.js",
    "components/Demo/CustomVis/CustomVis.js",
    "webpack:///./src/components/Demo/CustomVis/CustomVis.js?b545",
    "components/Demo/ReportBuilder/styles.js",
    "components/Demo/ReportBuilder/helpers.js",
    "components/Demo/ReportBuilder/ReportBuilder.js",
    "webpack:///./src/components/Demo/ReportBuilder/ReportBuilder.js?9721",
    "components/Demo/QueryBuilder/styles.js",
    "components/Demo/QueryBuilder/helpers.js",
    "components/Demo/QueryBuilder/QueryBuilder.js",
    "webpack:///./src/components/Demo/QueryBuilder/QueryBuilder.js?9efc",
    "components/HighlightSourcesLegend.js",
    "components/Demo/MonetizationModal.js",
    "components/Home.js",
    "components/SignIn.js",
    "components/Customizations.js",
    "components/EditCustomization.js",
    "App.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "module",
    "exports",
    "makeid",
    "length",
    "result",
    "characters",
    "charactersLength",
    "i",
    "charAt",
    "Math",
    "floor",
    "random",
    "validIdHelper",
    "str",
    "replace",
    "prettifyString",
    "frags",
    "split",
    "toUpperCase",
    "slice",
    "join",
    "getUrlVars",
    "url",
    "hash",
    "myJson",
    "hashes",
    "indexOf",
    "decodeHtml",
    "html",
    "txt",
    "document",
    "createElement",
    "innerHTML",
    "value",
    "map",
    "webpackContext",
    "req",
    "id",
    "webpackContextResolve",
    "__webpack_require__",
    "o",
    "e",
    "Error",
    "code",
    "keys",
    "Object",
    "resolve",
    "AppContext",
    "React",
    "createContext",
    "useStyles",
    "require",
    "makeStyles",
    "theme",
    "zIndex1500",
    "zIndex",
    "mr12",
    "marginRight",
    "UserMenu",
    "props",
    "lookerUser",
    "switchLookerUser",
    "onLogoutSuccess",
    "lookerUserAttributeBrandOptions",
    "switchUserAttributeBrand",
    "classes",
    "toggleShow",
    "useContext",
    "userProfile",
    "useState",
    "anchorEl",
    "setAnchorEl",
    "user_attributes",
    "brand",
    "selectedBrand",
    "setSelectedBrand",
    "handleClose",
    "newValue",
    "className",
    "IconButton",
    "aria-label",
    "aria-controls",
    "aria-haspopup",
    "onClick",
    "event",
    "currentTarget",
    "color",
    "Avatar",
    "alt",
    "name",
    "src",
    "imageUrl",
    "Typography",
    "permission_level",
    "substring",
    "Menu",
    "keepMounted",
    "open",
    "Boolean",
    "onClose",
    "MenuItem",
    "autoFocus",
    "Divider",
    "divider",
    "Autocomplete",
    "options",
    "getOptionLabel",
    "option",
    "label",
    "style",
    "width",
    "onChange",
    "target",
    "innerText",
    "renderInput",
    "params",
    "TextField",
    "variant",
    "loadingText",
    "disableautofocus",
    "onKeyDown",
    "stopPropagation",
    "CodeFlyout",
    "lookerContent",
    "clientSideCode",
    "serverSideCode",
    "permissionNeededCode",
    "Grid",
    "item",
    "sm",
    "gridTitle",
    "CodeSnippet",
    "language",
    "dracula",
    "showLineNumbers",
    "JSON",
    "stringify",
    "redPrimary",
    "red",
    "greenPrimary",
    "green",
    "redLight",
    "greenLight",
    "root",
    "flexGrow",
    "backgroundColor",
    "palette",
    "background",
    "paper",
    "flexCentered",
    "display",
    "justifyContent",
    "alignItems",
    "hidden",
    "visibility",
    "position",
    "tabs",
    "dNone",
    "dBlock",
    "tree",
    "height",
    "maxWidth",
    "icon",
    "fontSize",
    "overflow",
    "mt12",
    "marginTop",
    "w100",
    "mlAuto",
    "marginLeft",
    "skeleton",
    "minWidth",
    "minHeight",
    "card",
    "maxHeight200",
    "maxHeight",
    "mt30",
    "mb30",
    "marginBottom",
    "textCenter",
    "textAlign",
    "cursorPointer",
    "cursor",
    "border",
    "height800",
    "maxHeight100",
    "maxHeight400",
    "minHeight680",
    "minHeight200",
    "redNeg",
    "fontWeight",
    "greenPos",
    "padding30",
    "padding",
    "mb12",
    "overflowScroll",
    "overflowHidden",
    "overflowVisible",
    "maxHeight150",
    "minHeight150",
    "carouselLegend",
    "opacity",
    "Highlight",
    "children",
    "margin",
    "show",
    "boxShadow",
    "ApiHighlight",
    "EmbedHighlight",
    "SingleValueVis",
    "apiContent",
    "setApiContent",
    "dataObjForSparkline",
    "useEffect",
    "setTimeout",
    "runInlineQuery",
    "a",
    "stringifiedQuery",
    "encodeURIComponent",
    "inlineQuery",
    "fetch",
    "resultFormat",
    "method",
    "headers",
    "Accept",
    "lookerResponse",
    "json",
    "lookerResponseData",
    "data",
    "dataArrForDataObj",
    "queryResults",
    "fields",
    "thisDataItem",
    "toString",
    "change",
    "y",
    "push",
    "upOrDownArrow",
    "isNaN",
    "toFixed",
    "parseInt",
    "Card",
    "elevation",
    "Fragment",
    "container",
    "align",
    "Chip",
    "size",
    "top",
    "right",
    "bottom",
    "left",
    "xScale",
    "type",
    "format",
    "precision",
    "yScale",
    "min",
    "max",
    "stacked",
    "reverse",
    "axisLeft",
    "orient",
    "tickSize",
    "tickPadding",
    "tickRotation",
    "axisBottom",
    "enablePoints",
    "enableGridX",
    "enableGridY",
    "colors",
    "visColor",
    "animate",
    "CircularProgress",
    "circularProgress",
    "NaturalLanguage",
    "index",
    "undefined",
    "inlineQueriesMap",
    "Welcome",
    "givenName",
    "inlineQueries",
    "key",
    "VectorThumbnail",
    "handleMenuItemSelect",
    "svg",
    "setSvg",
    "getThumbnail",
    "resourceType",
    "blob",
    "Blob",
    "URL",
    "createObjectURL",
    "spacing",
    "PopularAnalysis",
    "vectors",
    "EmbeddedDashboard",
    "iFrameExists",
    "setIFrame",
    "$",
    "LookerEmbedSDK",
    "createDashboardWithId",
    "appendTo",
    "getElementById",
    "withClassName",
    "withTheme",
    "build",
    "connect",
    "then",
    "look",
    "catch",
    "error",
    "console",
    "Box",
    "ContentCarousel",
    "infiniteLoop",
    "autoPlay",
    "showThumbs",
    "SplashPage",
    "setClientSideCode",
    "staticContent",
    "handleTabChange",
    "tabContent",
    "demoComponentType",
    "tabContentItem",
    "innerIndex",
    "gridWidth",
    "TabPanel",
    "other",
    "component",
    "role",
    "aria-labelledby",
    "p",
    "NumberToColoredPercent",
    "val",
    "positive_good",
    "abs_val",
    "up",
    "down",
    "val_formatted",
    "abs",
    "toLocaleString",
    "minimumFractionDigits",
    "Dashboard",
    "setValue",
    "dashboardObj",
    "setDashboardObj",
    "setServerSideCode",
    "toggleValue",
    "setToggleValue",
    "dashboardLayout",
    "setDashboardLayout",
    "togglePayWallModal",
    "activeTabValue",
    "codeTab",
    "handleToggle",
    "filteredLayout",
    "_",
    "filter",
    "dashboard_layout_components",
    "row",
    "dynamicFieldLookUp",
    "dashboard_element_id",
    "newDashboardLayout",
    "setOptions",
    "performLookerApiCalls",
    "dashboardId",
    "withNext",
    "withParams",
    "on",
    "changeHeight",
    "dashboard",
    "layouts",
    "hasOwnProperty",
    "jsonQuery",
    "filters",
    "desiredFilterName",
    "queryResultsForDropdown",
    "desiredProperty",
    "AppBar",
    "Tabs",
    "Tab",
    "a11yProps",
    "Array",
    "isArray",
    "renderOption",
    "justify",
    "trend",
    "filterName",
    "newFilterValue",
    "updateFilters",
    "run",
    "ToggleButtonGroup",
    "exclusive",
    "ToggleButton",
    "mt",
    "shadows",
    "table",
    "getModalStyle",
    "transform",
    "ModalTable",
    "modalContent",
    "modalStyle",
    "Modal",
    "aria-describedby",
    "title",
    "body",
    "TableContainer",
    "Paper",
    "Table",
    "stickyHeader",
    "TableHead",
    "TableRow",
    "TableCell",
    "lastIndexOf",
    "TableBody",
    "rendered",
    "round",
    "height500",
    "height700",
    "textField",
    "formControl",
    "selectEmpty",
    "CustomVis",
    "fromDate",
    "setFromDate",
    "toDate",
    "setToDate",
    "category",
    "setCategory",
    "desiredField",
    "setDesiredField",
    "setOpen",
    "setModalContent",
    "lookerHost",
    "handleModalOpen",
    "day",
    "originalInlineQueryCopy",
    "parse",
    "total",
    "limit",
    "modalObj",
    "handleFromDate",
    "Date",
    "newValueAsDate",
    "addDays",
    "handleToDate",
    "handleCategory",
    "handleDesiredField",
    "filterData",
    "uniqueDates",
    "Set",
    "filteredAndReducedForAll",
    "uniqueDate",
    "reduce",
    "acc",
    "thisObj",
    "desiredFields",
    "uniqueCategories",
    "incrementDate",
    "nivoColorScale",
    "googleColorScale",
    "FilterBar",
    "Skeleton",
    "animation",
    "from",
    "to",
    "emptyColor",
    "yearSpacing",
    "monthBorderColor",
    "dayBorderWidth",
    "dayBorderColor",
    "legends",
    "anchor",
    "direction",
    "translateY",
    "itemCount",
    "itemWidth",
    "itemHeight",
    "itemsSpacing",
    "itemDirection",
    "expanded",
    "setExpanded",
    "ExpansionPanel",
    "ExpansionPanelSummary",
    "expandIcon",
    "heading",
    "ExpansionPanelDetails",
    "FormControl",
    "InputLabel",
    "Select",
    "labelId",
    "utils",
    "DateFnsUtils",
    "disableToolbar",
    "KeyboardButtonProps",
    "dateInput",
    "increment",
    "dateFormatTotime",
    "getTime",
    "toISOString",
    "ml24",
    "parentHoverVisibility",
    "childHoverVisibility",
    "faSm",
    "ReportBuilder",
    "exploreObj",
    "setExploreObj",
    "handleChange",
    "action",
    "contentType",
    "contentId",
    "secondaryAction",
    "qid",
    "exploreId",
    "newReportEmbedContainer",
    "iFrameArray",
    "classList",
    "contains",
    "remove",
    "add",
    "empty",
    "createExploreWithId",
    "explore",
    "status",
    "animateLoad",
    "looksToUse",
    "sharedFolder",
    "looks",
    "embeddedUserFolder",
    "dashboardsToUse",
    "dashboards",
    "objToUse",
    "lookId",
    "lookIsRendered",
    "createLookWithId",
    "dashboardIsRendered",
    "Icon",
    "tabContentItemIndex",
    "TreeSideBar",
    "sharedFolderId",
    "treeCounter",
    "selected",
    "setSelected",
    "expandedArr",
    "TreeView",
    "defaultCollapseIcon",
    "defaultExpandIcon",
    "onNodeToggle",
    "nodeIds",
    "onNodeSelect",
    "outerIndex",
    "TreeItem",
    "nodeId",
    "capitalize",
    "disabled",
    "treecounter",
    "contentid",
    "folder_id",
    "labelRoot",
    "Button",
    "client_id",
    "greyPrimary",
    "grey",
    "greySecondary",
    "orangePrimary",
    "orange",
    "orangeSecondary",
    "typography",
    "pxToRem",
    "fontWeightRegular",
    "ml12",
    "tableContainer",
    "visuallyHidden",
    "clip",
    "descendingComparator",
    "b",
    "orderBy",
    "QueryBuilder",
    "queryBody",
    "newQuery",
    "apiContentCopy",
    "lookerCreateTaskResposnse",
    "lookerCreateTaskResponseData",
    "taskInterval",
    "setInterval",
    "queryTaskId",
    "lookerCheckTaskResposnse",
    "lookerCheckTaskResponseData",
    "clearInterval",
    "EnhancedTable",
    "rows",
    "measureCounter",
    "dimensionCounter",
    "datalabel",
    "fieldType",
    "fieldsChipData",
    "setFieldsChipData",
    "queryModified",
    "setQueryModified",
    "filterType",
    "filtersData",
    "setFilterData",
    "handleFieldChipClick",
    "chip",
    "updatedFieldsChipData",
    "handleSelectChange",
    "updatedFiltersData",
    "newFields",
    "currentFilters",
    "newQueryObj",
    "handleQuerySubmit",
    "datePermissionMap",
    "advanced",
    "basic",
    "premium",
    "measurecounter",
    "dimensioncounter",
    "EnhancedTableHead",
    "order",
    "onSelectAllClick",
    "onRequestSort",
    "numSelected",
    "rowCount",
    "numeric",
    "disablePadding",
    "sortDirection",
    "TableSortLabel",
    "active",
    "property",
    "setOrder",
    "setOrderBy",
    "page",
    "setPage",
    "dense",
    "setDense",
    "rowsPerPage",
    "setRowsPerPage",
    "emptyRows",
    "array",
    "comparator",
    "stabilizedThis",
    "el",
    "sort",
    "stableSort",
    "getComparator",
    "hover",
    "colSpan",
    "TablePagination",
    "rowsPerPageOptions",
    "count",
    "onChangePage",
    "newPage",
    "onChangeRowsPerPage",
    "FormControlLabel",
    "control",
    "Switch",
    "checked",
    "HighlightSourcesLegend",
    "flexDirection",
    "transition",
    "padding15",
    "MonetizationModal",
    "payWallModal",
    "modal",
    "Fade",
    "in",
    "permissionNeeded",
    "LookerUserPermissions",
    "CardContent",
    "gutterBottom",
    "permission",
    "CardActions",
    "disableSpacing",
    "defaultTheme",
    "createMuiTheme",
    "atomTheme",
    "primary",
    "main",
    "secondary",
    "vidlyTheme",
    "blue",
    "Home",
    "setState",
    "toggleHighlightShow",
    "highlightShow",
    "state",
    "fromSplash",
    "selectedMenuItemValue",
    "UsecaseContent",
    "activeUsecase",
    "demoComponents",
    "lookerContentItem",
    "renderedDemoComponentsCopy",
    "renderedDemoComponents",
    "unshift",
    "prevState",
    "selectedMenuItem",
    "drawerOpen",
    "drawerTabValue",
    "appLayout",
    "usecaseFromUrl",
    "window",
    "location",
    "pathname",
    "this",
    "layout",
    "init",
    "prevProps",
    "prevPermissionLevel",
    "currPermissionLevel",
    "prevUserBrand",
    "currUserBrand",
    "demoComponentMap",
    "themeMap",
    "activeCustomization",
    "applySession",
    "orderedDemoComponentsForMenu",
    "orderedDemoComponentsForMenuObj",
    "expandedTreeItemsArr",
    "cumulativePusher",
    "menuCategory",
    "selectedMenuItemVal",
    "Provider",
    "ThemeProvider",
    "CssBaseline",
    "clsx",
    "appBar",
    "Toolbar",
    "mrAuto",
    "Badge",
    "badgeContent",
    "AddAlert",
    "Drawer",
    "drawer",
    "drawerPaper",
    "drawerHeader",
    "MenuList",
    "highlightLegend",
    "content",
    "contentShift",
    "DemoComponent",
    "hide",
    "Component",
    "withStyles",
    "transitions",
    "create",
    "easing",
    "sharp",
    "duration",
    "leavingScreen",
    "menuButton",
    "flexShrink",
    "mixins",
    "toolbar",
    "easeOut",
    "enteringScreen",
    "borderRight",
    "relative",
    "absolute",
    "right0",
    "top0",
    "right24",
    "top24",
    "fontSize1em",
    "padding10",
    "mt5",
    "mb5",
    "list",
    "nested",
    "paddingLeft",
    "demoComponentIconMap",
    "HomeIcon",
    "TrendingUp",
    "Speed",
    "StoreMallDirectory",
    "DateRange",
    "Search",
    "FindInPage",
    "List",
    "outerItem",
    "ListItem",
    "button",
    "ListItemText",
    "MatchingIconComponent",
    "ListItemIcon",
    "lightGrey",
    "h100",
    "pos",
    "actions",
    "cardCopy",
    "SignIn",
    "googleClientId",
    "onSuccess",
    "onFailure",
    "backgroundImageInt",
    "backgroundImage",
    "logoImage",
    "backgroundSize",
    "clientId",
    "buttonText",
    "cookiePolicy",
    "Login",
    "responseGoogle",
    "response",
    "log",
    "profileObj",
    "process",
    "PrivateRoute",
    "customizations",
    "applyCustomization",
    "editCustomization",
    "indexOfCustomizationToEdit",
    "saveCustomization",
    "cancelIndexOfCustomizationToEdit",
    "saveLookerContent",
    "rest",
    "render",
    "App",
    "checkSession",
    "sessionResponse",
    "sessionResponseData",
    "session",
    "external_user_id",
    "googleId",
    "first_name",
    "last_name",
    "familyName",
    "permissions",
    "InitialLookerUser",
    "sessionData",
    "customizationIndex",
    "customizationResponse",
    "lookerContentToUse",
    "industry",
    "validCustomizationIndex",
    "formData",
    "customizationResponseData",
    "newLookerContent",
    "newUser",
    "userAttributeCopy",
    "time_horizon",
    "lookerUserResponse",
    "newAttribute",
    "href",
    "basename",
    "path",
    "LookerUserAttributeBrandOptions",
    "hostname",
    "match",
    "ReactDOM",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "file": "static/js/main.3cefb340.chunk.js",
  "sourcesContent": [
    "module.exports = __webpack_public_path__ + \"static/media/atom_splash_blog.89cd1730.jpg\";",
    "module.exports = __webpack_public_path__ + \"static/media/atom_splash_inventory.5ac8518d.jpg\";",
    "module.exports = __webpack_public_path__ + \"static/media/atom_splash_trends.3591acf3.jpg\";",
    "module.exports = {\n  makeid: (length) => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  },\n\n\n  validIdHelper: (str) => {\n    // console.log('validIdHelper')\n    // console.log('str', str)\n    //need to replace special characters that may be associated with id...\n    return str.replace(/[^a-zA-Z0-9-.#]/g, \"\")\n  },\n\n  prettifyString: (str) => {\n    var i, frags = str.split('_');\n    for (i = 0; i < frags.length; i++) {\n      frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\n    }\n    return frags.join(' ');\n  },\n\n  getUrlVars: (url) => {\n    var hash;\n    var myJson = {};\n    var hashes = url.slice(url.indexOf('?') + 1).split('&');\n    for (var i = 0; i < hashes.length; i++) {\n      hash = hashes[i].split('=');\n      myJson[hash[0]] = hash[1];\n      // If you want to get in native datatypes\n      // myJson[hash[0]] = JSON.parse(hash[1]); \n    }\n    return myJson;\n  },\n\n\n  decodeHtml: (html) => {\n    var txt = document.createElement(\"textarea\");\n    txt.innerHTML = html;\n    return txt.value;\n  }\n}",
    "var map = {\n\t\"./atom_logo_white.svg\": 879\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 878;",
    "module.exports = __webpack_public_path__ + \"static/media/atom_logo_white.89cfe3df.svg\";",
    "var map = {\n\t\"./atom_background1.jpg\": 881,\n\t\"./atom_background2.jpg\": 882,\n\t\"./atom_background3.jpg\": 883,\n\t\"./atom_background4.jpg\": 884,\n\t\"./atom_splash_blog.jpg\": 364,\n\t\"./atom_splash_inventory.jpg\": 365,\n\t\"./atom_splash_trends.jpg\": 366\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 880;",
    "module.exports = __webpack_public_path__ + \"static/media/atom_background1.9ed7593f.jpg\";",
    "module.exports = __webpack_public_path__ + \"static/media/atom_background2.c5efc290.jpg\";",
    "module.exports = __webpack_public_path__ + \"static/media/atom_background3.b9aecb61.jpg\";",
    "module.exports = __webpack_public_path__ + \"static/media/atom_background4.1acd6c1b.jpg\";",
    "var map = {\n\t\"./atom_logo_black.svg\": 886\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 885;",
    "module.exports = __webpack_public_path__ + \"static/media/atom_logo_black.a213ea2a.svg\";",
    "import React from 'react';\n \nconst AppContext = React.createContext(null);\n \nexport default AppContext;",
    "import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Menu, MenuItem, Typography, Divider, TextField, Avatar } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport AppContext from '../../AppContext';\n\nconst { validIdHelper } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  zIndex1500: {\n    zIndex: 1500\n  },\n  mr12: {\n    marginRight: 12\n  }\n}))\n\nexport default function UserMenu(props) {\n  // console.log('UserMenu')\n  // console.log('props', props)\n\n  const { lookerUser, switchLookerUser, onLogoutSuccess, lookerUserAttributeBrandOptions, switchUserAttributeBrand } = props\n  const classes = useStyles();\n  const { toggleShow } = useContext(AppContext)\n  const { userProfile } = useContext(AppContext);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedBrand, setSelectedBrand] = React.useState(lookerUser.user_attributes.brand || '');\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (newValue) => {\n\n\n    setAnchorEl(null);\n    if (newValue == null) {\n      onLogoutSuccess({})\n    } else if (newValue === 'basic' || newValue === 'advanced' || newValue === 'premium') {\n      switchLookerUser(newValue)\n    } else if (typeof newValue === 'string') {\n      switchUserAttributeBrand(newValue)\n      setSelectedBrand(newValue);\n    }\n  };\n\n\n  return (\n    <div className={`${classes.zIndex1500}`}>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        color=\"inherit\"\n      >\n        {/* <Avatar className={`${classes.mr12}`}>{userProfile.givenName.substring(0, 1)}</Avatar> */}\n        <Avatar alt={userProfile.name} src={userProfile.imageUrl} className={classes.mr12} />\n\n        <Typography>\n          {typeof lookerUser.user_attributes.permission_level === 'string' ?\n            lookerUser.user_attributes.permission_level.charAt(0).toUpperCase() + lookerUser.user_attributes.permission_level.substring(1) : ''}\n        </Typography>\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem autoFocus={false}>Select User Level</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('basic')}>Basic</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('advanced')}>Advanced</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('premium')}>Premium</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem onClick={() => { toggleShow() }}>Highlight Source</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem onClick={() => handleClose(null)}>Sign Out</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem>Current brand: {selectedBrand}</MenuItem>\n        <MenuItem>\n\n          <Autocomplete\n            id=\"combo-box-usermenu\"\n            options={lookerUserAttributeBrandOptions}\n            getOptionLabel={(option) => option.label}\n            style={{ width: 300 }}\n            onChange={(event) => handleClose(event.target.innerText || '')}\n            renderInput={(params) => <TextField {...params}\n              label=\"Change merchant brand\"\n              variant=\"outlined\"\n            />}\n            loadingText=\"Loading...\"\n            disableautofocus=\"true\"\n            onKeyDown={(event) => event.stopPropagation()}\n          />\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n",
    "import React from 'react';\nimport { Typography, Grid } from '@material-ui/core'\n// import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n// import { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/hljs'; //hehe\n\n//helper function for rendering content in code tab\nexport default function CodeFlyout(props) {\n\n  // console.log('CodeFlyout')\n  // console.log('props', props)\n\n  const { classes, lookerContent, clientSideCode, serverSideCode, lookerUser, permissionNeededCode } = props\n  return (\n    <Grid item sm={12} >\n      {/* {lookerContent.length ?\n        <>\n          <Typography variant=\"h5\" component=\"h2\" className={classes.gridTitle}>\n            Looker Content Array Referenced on Page<br />\n          </Typography>\n          <CodeSnippet code={lookerContent} />\n        </> : ''}\n      {clientSideCode.length ?\n        <>\n          <Typography variant=\"h5\" component=\"h2\" className={classes.gridTitle}>\n            Client Side Code<br />\n          </Typography>\n          <CodeSnippet code={clientSideCode} />\n        </> : ''}\n      {serverSideCode.length ?\n        <>\n          <Typography variant=\"h5\" component=\"h2\" className={classes.gridTitle}>\n            Server Side Code<br />\n          </Typography>\n          <CodeSnippet code={serverSideCode} />\n        </> : ''} */}\n      {Object.keys(lookerUser).length ?\n        <>\n          <Typography variant=\"h6\" className={classes.gridTitle}>\n            Looker User Object<br />\n          </Typography>\n          <CodeSnippet code={lookerUser} />\n        </> : ''}\n      {/* {Object.keys(permissionNeededCode).length ?\n        <>\n          <CodeSnippet code={permissionNeededCode} />\n        </> : ''} */}\n    </Grid>\n  )\n}\n\nfunction CodeSnippet(props) {\n  // console.log('CodeSnippet');\n  // console.log('props', props);\n  const { code } = props\n  return (\n    <SyntaxHighlighter language=\"json\" style={dracula} showLineNumbers={true} >\n      {typeof code === \"object\" ? JSON.stringify(code, true, 4) : code}\n    </SyntaxHighlighter>)\n}",
    "export default \"//imports\\nimport $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, Divider } from '@material-ui/core'\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./SplashPage.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport { SingleValueVis } from './SingleValueVis';\\nimport { Welcome } from './Welcome';\\nimport { PopularAnalysis } from './PopularAnalysis';\\nimport { EmbeddedLook } from './EmbeddedLook';\\nimport { EmbeddedDashboard } from './EmbeddedDashboard';\\nimport { ContentCarousel } from './ContentCarousel';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of SplashPage Component\\nexport default function SplashPage(props) {\\n  // console.log('SplashPage')\\n  //intialize state using hooks\\n  const [value, setValue] = useState(0);\\n  const [iFrameExists, setIFrame] = useState(1);\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, handleTabChange, handleMenuItemSelect, lookerUser } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  // const tabContent = [[...lookerContent], codeTab];\\n  const tabContent = [[...lookerContent]];\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * setSampleCode\\n  */\\n  useEffect(() => {\\n    // console.log('useEffect')\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent]);\\n\\n\\n  /**\\n   * What this return  does:\\n   * Rendering of actual html elements,\\n   * this section is necessary but less relevant to looker functionality itself\\n   */\\n  return (\\n    <div className={`${classes.root} ${classes.minHeight680} ${classes.padding30} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={classes.root}>\\n          {iFrameExists ? '' :\\n            <Grid item sm={12} >\\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                <CircularProgress className={classes.circularProgress} />\\n              </Card>\\n            </Grid>\\n          }\\n          <Box className={iFrameExists ? `` : `${classes.hidden}`}>\\n            <Box className=\\\"tabPanelContainer\\\">\\n              {tabContent.map((tabContentItem, index) => {\\n                return <Grid container\\n                  spacing={3}\\n                  key={`${validIdHelper(demoComponentType + '-gridContainer-' + index)}`}\\n                >\\n                  {tabContentItem.type === 'code flyout' ?\\n                    <CodeFlyout {...props}\\n                      classes={classes}\\n                      lookerContent={lookerContent}\\n                      clientSideCode={clientSideCode}\\n                      serverSideCode={serverSideCode}\\n                      lookerUser={lookerUser} />\\n                    :\\n                    <React.Fragment\\n                      key={`${validIdHelper(demoComponentType + '-outerFragment-' + index)}`}>\\n                      {tabContentItem.map((lookerContent, innerIndex) => {\\n                        return (\\n                          <Grid\\n                            key={`${validIdHelper(demoComponentType + '-innerFragment-' + innerIndex)}`}\\n                            item\\n                            sm={parseInt(lookerContent.gridWidth)}\\n                          >\\n                            {/* <Card className={classes.padding30}> */}\\n                            {(lookerContent.type === 'welcome') && <Welcome\\n                              {...{ lookerContent, classes, demoComponentType }}\\n                            />}\\n                            {(lookerContent.type === 'carousel') && <ContentCarousel\\n                              {...{ lookerContent, classes, demoComponentType }}\\n                            />}\\n                            {(lookerContent.type === 'single value') && <SingleValueVis\\n                              {...{ lookerContent, classes, demoComponentType }}\\n                            />}\\n                            {(lookerContent.type === 'dashboard') && <EmbeddedDashboard\\n                              {...{ lookerContent, classes }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\\n                            />}\\n                            {(lookerContent.type === 'popular analysis') && <PopularAnalysis\\n                              {...{ lookerContent, classes, demoComponentType, handleMenuItemSelect }}\\n                            />}\\n                          </Grid>\\n                        )\\n                      })}\\n                    </React.Fragment>\\n                  }\\n                </Grid>\\n                // </TabPanel>\\n              })}\\n            </Box>\\n          </Box >\\n        </div >\\n      </Grid >\\n    </div >\\n  )\\n}\";",
    "import { makeStyles } from '@material-ui/core/styles';\nimport { red, green } from '@material-ui/core/colors';\nconst redPrimary = red[500];\nconst greenPrimary = green[500];\nconst redDark = red[900];\nconst greenDark = green[900];\nconst redLight = red[100];\nconst greenLight = green[100];\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n  },\n  maxHeight200: {\n    maxHeight: 200,\n    height: 200,\n    overflow: 'hidden'\n  },\n  mt30: {\n    marginTop: 30\n  },\n  mb30: {\n    marginBottom: 30\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  cursorPointer: {\n    cursor: 'pointer'\n  },\n  border: {\n    border: '1px solid black'\n  },\n  height800: {\n    height: 800\n  },\n  maxHeight100: {\n    maxHeight: 100,\n    height: 100,\n  },\n  maxHeight400: {\n    maxHeight: 400,\n    height: 400,\n  },\n  minHeight680: {\n    minHeight: 680,\n  },\n  minHeight200: {\n    minHeight: 200,\n    overflow: 'scroll'\n  },\n  redNeg: {\n    backgroundColor: redLight,\n    color: redPrimary,\n    fontWeight: 800\n  },\n  greenPos: {\n    backgroundColor: greenLight,\n    color: greenPrimary,\n    fontWeight: 800\n  },\n  padding30: {\n    padding: 30\n  },\n  mb12: {\n    marginBottom: 12\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  overflowVisible: {\n    overflow: 'visible'\n  },\n  maxHeight150: {\n    maxHeight: 150,\n    height: 150,\n  },\n  minHeight150: {\n    minHeight: 150,\n    overflow: 'scroll'\n  },\n  carouselLegend: {\n    backgroundColor: 'rgb(192,192,192, .5)\t !important',\n    fontSize: '24px !important',\n    textAlign: 'center !important',\n    opacity: `100 !important`,\n    fontWeight: 800,\n    // width: `${25}% !important`,\n  }\n}));",
    "import React, { useContext } from 'react';\nimport AppContext from '../../AppContext';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\n// maybe move this to config?\nexport const API_COLOR = '#FF0000'\nexport const EMBED_COLOR = '#0000FF'\n\nfunction Highlight({ children, color, height, width, margin, id, ...props }) {\n  const { show } = useContext(AppContext)\n  var style = {};\n  if (show) {\n    style = {\n      ...style,\n      boxShadow: `0 0 10px ${color}, \n      inset 0 0 10px ${color}`,\n      zIndex: 1000000\n    }\n  }\n\n  if (height) { style['height'] = height }\n  if (width) { style['width'] = width }\n  if (margin) { style['margin'] = margin }\n\n  // boxShadow: `0 4px 80px ${color}22`\n\n  return (\n    <div id={id} style={style} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport function ApiHighlight({ ...props }) {\n  return <Highlight {...props} color={API_COLOR}></Highlight>\n}\n\nexport function EmbedHighlight({ ...props }) {\n  return <Highlight {...props} color={EMBED_COLOR}></Highlight>\n}\n",
    "import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Chip } from '@material-ui/core';\nimport { ResponsiveLine } from '@nivo/line';\nconst { validIdHelper, decodeHtml } = require('../../../tools');\n\n\n\nexport function SingleValueVis({ lookerContent, classes }) {\n  // console.log('SingleValueVis')\n  // console.log('lookerContent', lookerContent)\n  // const [svg, setSvg] = useState(undefined)\n  const [apiContent, setApiContent] = useState([]);\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n\n\n  let dataObjForSparkline = {}\n  useEffect(() => {\n    if (lookerContent || lookerUser) {\n      setTimeout(() => runInlineQuery(), 1000);\n    }\n  }, [lookerContent, lookerUser])\n\n\n\n  const runInlineQuery = async () => {\n    // console.log('runInlineQuery')\n    setApiContent([])\n    let stringifiedQuery = encodeURIComponent(JSON.stringify(lookerContent.inlineQuery))\n    let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    // console.log('lookerResponseData', lookerResponseData)\n    dataObjForSparkline.id = validIdHelper(`singleVisValue-${lookerContent.id}`);\n    dataObjForSparkline.data = [];\n\n    let dataArrForDataObj = [];\n    lookerResponseData.queryResults.map(item => {\n      if (item[lookerContent.inlineQuery.fields[0]]\n        // && item['order_items.count']['order_items.previous_period'][\"This Period\" ? \"This Period\" : \"Previous Period\"]\n      ) {\n        let thisDataItem = {\n          \"x\": item[lookerContent.inlineQuery.fields[0]].toString(),\n          \"y\": item[lookerContent.inlineQuery.fields[1]] || 0,\n          \"change\": item.change\n        }\n        if (thisDataItem && thisDataItem.y !== \"null\") dataArrForDataObj.push(thisDataItem)\n      }\n    })\n    dataObjForSparkline.data = [...dataArrForDataObj]\n    setApiContent([dataObjForSparkline])\n  }\n\n  const upOrDownArrow = apiContent.length ? isNaN((apiContent[0].data[0].change * 100).toFixed(2)) ? '' : parseInt((apiContent[0].data[0].change * 100).toFixed(0)) >= 0 ? `&uarr;` : `&darr;` : '';\n\n  return (\n    <Card elevation={1} className={classes.padding30}>\n      <div\n        className={`${classes.textCenter} ${classes.overflowHidden}`}\n        style={\n          // apiContent.length ? { borderLeft: `solid 3px ${lookerContent.visColor} `, height: lookerContent.height } : \n          { height: lookerContent.height }\n        }\n      >\n        {apiContent.length ?\n          <React.Fragment>\n            <ApiHighlight height={150}>\n              <Grid container>\n                <Grid item sm={12}>\n                  <Typography variant=\"body2\" align=\"left\" color=\"secondary\">\n                    {lookerContent.label}\n                  </Typography>\n                </Grid>\n                <Grid item sm={6}>\n                  <Typography variant=\"subtitle1\" align=\"left\">\n                    <b>{apiContent[0].data && apiContent[0].data[0] ? parseInt(apiContent[0].data[0].y).toFixed(2) : ''}</b>\n                  </Typography>\n                </Grid>\n                <Grid item sm={6}>\n                  <Chip size=\"small\"\n                    label={`${decodeHtml(upOrDownArrow)} ${parseInt(apiContent[0].data[0].change * 100).toFixed(0)}% `}\n                    className={isNaN((apiContent[0].data[0].change * 100).toFixed(2)) ? '' : parseInt((apiContent[0].data[0].change * 100).toFixed(0)) >= 0 ? classes.greenPos : classes.redNeg}\n                    display=\"inline\"\n                    align=\"right\"\n                  />\n                </Grid>\n              </Grid>\n              <ResponsiveLine\n                data={apiContent}\n                margin={{ top: 25, right: 25, bottom: 25, left: 25 }}\n                xScale={{\n                  type: 'time',\n                  format: '%Y-%m-%d',\n                  precision: 'day',\n                }}\n                yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                axisLeft={{\n                  orient: \"left\",\n                  tickSize: 0,\n                  tickPadding: 5,\n                  tickRotation: 0,\n                  format: () => null\n                }}\n                axisBottom={{\n                  orient: \"bottom\",\n                  tickSize: 0,\n                  tickPadding: 5,\n                  tickRotation: 0,\n                  format: () => null,\n                  // legend: lookerContent.label,\n                  // legendOffset: 15,\n                  // legendPosition: 'middle'\n                }}\n                enablePoints={false}\n                enableGridX={false}\n                enableGridY={false}\n                height={100}\n                colors={lookerContent.visColor}\n                animate={true}\n              />\n            </ApiHighlight>\n          </React.Fragment>\n          :\n          <Grid item sm={12} className={`${classes.flexCentered}`} style={{ height: lookerContent.height }}>\n            <CircularProgress className={classes.circularProgress}\n              style={{ color: `${lookerContent.visColor} ` }} />\n          </Grid>\n        }\n      </div >\n    </Card>\n  );\n}\n",
    "import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Grid, CircularProgress, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst { validIdHelper, decodeHtml } = require('../../../tools');\n\nexport function NaturalLanguage({ lookerContent, item, index, classes }) {\n  const [apiContent, setApiContent] = useState(undefined);\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    if (item) {\n      runInlineQuery();\n    }\n  }, [item, lookerUser])\n\n  const runInlineQuery = async () => {\n    setApiContent(undefined)\n    let inlineQuery = item;\n    let stringifiedQuery = encodeURIComponent(JSON.stringify(inlineQuery))\n    let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    setApiContent(lookerResponseData.queryResults[0])\n  }\n\n  const upOrDownArrow = apiContent ? apiContent.change > 0 ? `&uarr;` : `&darr;` : '';\n\n  return (\n    <Grid item sm={12}>\n      {apiContent ?\n        <ApiHighlight classes={classes} >\n          <Typography variant=\"subtitle1\" display=\"inline\">\n            Your {lookerContent.inlineQueriesMap[index]} category, <b>{apiContent['products.category']}</b>, is {apiContent.change > 0 ? 'up ' : 'down '}\n          </Typography>\n          <Chip size=\"small\"\n            label={`${decodeHtml(upOrDownArrow)} ${parseInt(apiContent.change * 100).toFixed(0)}% `}\n            className={apiContent.change > 0 ? classes.greenPos : classes.redNeg}\n            display=\"inline\"\n          />\n          <Typography variant=\"subtitle1\" display=\"inline\">\n            &nbsp;over the past week.\n        </Typography>\n        </ApiHighlight>\n        : <div style={{ height: '56px' }}></div>\n\n        // <Grid item sm={12} >\n        //   <Card className={`${classes.card} ${classes.flexCentered}`}>\n        //     <CircularProgress className={classes.circularProgress}\n        //       style={{ color: `${lookerContent.visColor} ` }} />\n        //   </Card>\n        // </Grid>\n      }\n    </Grid >\n  );\n}\n\n",
    "import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { NaturalLanguage } from './NaturalLanguage';\nconst { validIdHelper } = require('../../../tools');\n\nexport function Welcome({ lookerContent, classes }) {\n  // console.log('Welcome')\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    // setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  return (\n    <div\n      className={`${classes.overflowScroll}`}\n      style={{ height: lookerContent.height }}\n    >\n      <Typography variant=\"h4\">Welcome back</Typography>\n      <br />\n      <Typography variant=\"subtitle1\" display=\"inline\">\n        Hi <b>{userProfile.givenName}</b>, hope you're having a good day. Here are a few things you might want to know.\n      </Typography>\n      <br />\n      <>\n        {lookerContent.inlineQueries.map((item, index) => (\n          <NaturalLanguage\n            key={`${validIdHelper('naturalLanguage-splashPage-' + index)}`}\n            {...{ lookerContent, item, index, classes }}\n          />\n        )\n        )}\n      </>\n    </div >\n  );\n}\n",
    "import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Grid, CircularProgress, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport function VectorThumbnail({ lookerContent, classes, item, handleMenuItemSelect }) {\n  const [svg, setSvg] = useState(undefined)\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    if (item) {\n      getThumbnail();\n    }\n  }, [item, lookerUser])\n\n  const getThumbnail = async () => {\n    let lookerResponse = await fetch(`/getthumbnail/${item.resourceType}/${item.id}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    const blob = new Blob([lookerResponseData.svg], { type: 'image/svg+xml' });\n    let url = URL.createObjectURL(blob);\n    setSvg(url)\n  }\n\n  return (\n    <Grid container\n      alignItems=\"center\"\n      spacing={3}\n      onClick={() => handleMenuItemSelect(item.id, 1)}\n      className={`${classes.cursorPointer}`}\n    >\n      {svg ?\n        <>\n          <Grid item sm={6}>\n            <ApiHighlight classes={classes} >\n              <div\n                className={` ${classes.maxHeight100} ${classes.textCenter} ${classes.cursorPointer} ${classes.overflowHidden}`}\n              >\n                <img\n                  onClick={() => handleMenuItemSelect(item.id, 1)}\n                  src={svg} />\n\n              </div>\n            </ApiHighlight>\n          </Grid>\n          <Grid item sm={5}>\n            <Typography variant=\"subtitle1\"  >{item.label}</Typography>\n          </Grid>\n          <Grid item sm={12}>\n            <Divider className={`${classes.divider} ${classes.mb12} ${classes.mt12}`} />\n          </Grid>\n        </>\n        :\n        ''\n      }\n    </Grid >\n\n  );\n}\n",
    "import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ResponsiveLine } from '@nivo/line';\nimport { VectorThumbnail } from './VectorThumbnail';\nimport { NaturalLanguage } from './NaturalLanguage';\nconst { validIdHelper } = require('../../../tools');\n\n\n\nexport function PopularAnalysis({ lookerContent, classes, handleMenuItemSelect }) {\n  const [apiContent, setApiContent] = useState([]);\n\n  return (\n\n    <Card elevation={1} className={classes.padding30}>\n      <div\n        className={`${classes.overflowScroll}`}\n        style={{ height: lookerContent.height }}\n      >\n        <Grid container\n          spacing={3}>\n          <Grid item sm={12}>\n            <Typography variant=\"h6\" align=\"center\" color=\"secondary\">\n              Helpful Dashboards\n          </Typography></Grid>\n          {lookerContent.vectors.map((item, index) => {\n            return (\n              <VectorThumbnail\n                key={`${validIdHelper('vectorThumbnail-splashPage-' + index)}`}\n                {...{ lookerContent, item, classes, handleMenuItemSelect }}\n              />\n            )\n          }\n          )}\n        </Grid>\n\n      </div >\n    </Card>\n  );\n}\n",
    "import $ from 'jquery';\nimport React, { useEffect, useRef, useCallback, useState, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport { Typography, Grid, Card, CircularProgress, Box } from '@material-ui/core';\n\nexport function EmbeddedDashboard({ lookerContent, classes, id }) {\n\n  const [iFrameExists, setIFrame] = useState(0);\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    $(`#${id}`).html('')\n    setIFrame(0)\n    LookerEmbedSDK.createDashboardWithId(lookerContent.id)\n      .appendTo(document.getElementById(id))\n      .withClassName('dashboard')\n      .withClassName('splashPage')\n      .withClassName(lookerContent.id)\n      // .withNext()\n      .withTheme('atom_fashion')\n      .build()\n      .connect()\n      .then((look) => {\n        setIFrame(1)\n      })\n      .catch((error) => {\n        console.error('Connection error', error)\n      })\n  }, [lookerUser])\n\n  return (\n\n    <Card elevation={1} className={classes.padding30}>\n\n      <div\n        className={`${classes.textCenter} ${classes.overflowVisible}`}\n        style={\n          { height: lookerContent.height }\n        }\n      >\n        {\n          iFrameExists ? '' :\n\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered} ${classes.maxHeight400} `} elevation={0}>\n                <CircularProgress className={classes.circularProgress}\n                />\n              </Card>\n            </Grid>\n        }\n        <Box >\n          <Grid item sm={12}>\n           <EmbedHighlight classes={classes}>\n              <div\n                className={`embedContainer splashPage`}\n                id={id}\n                key={id}\n              >\n              </div>\n            </EmbedHighlight>\n          </Grid>\n        </Box>\n      </div >\n    </Card >\n  );\n}",
    "import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nconst { validIdHelper } = require('../../../tools');\n\n\n\nexport function ContentCarousel({ lookerContent, classes }) {\n  // console.log('Welcome')\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    // setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  return (\n    <div\n      className={`${classes.overflowScroll}`}\n      style={{ height: lookerContent.height }}\n    >\n\n      <Carousel infiniteLoop={true} autoPlay={true} showThumbs={false}>\n        <div style={{ maxHeight: lookerContent.height }}>\n          <img src={require(`../../../images/atom_splash_blog.jpg`)} />\n          <p className={`legend ${classes.carouselLegend}`}>Blog</p>\n        </div>\n        <div style={{ maxHeight: lookerContent.height }}>\n          <img src={require(`../../../images/atom_splash_inventory.jpg`)} />\n          <p className={`legend ${classes.carouselLegend}`}>Inventory Best Practices</p>\n        </div>\n        <div style={{ maxHeight: lookerContent.height }}>\n          <img src={require(`../../../images/atom_splash_trends.jpg`)} />\n          <p className={`legend ${classes.carouselLegend}`}>Macro Trends</p>\n        </div>\n      </Carousel>\n    </div >\n  );\n}\n",
    "//imports\nimport $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, Divider } from '@material-ui/core'\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./SplashPage.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport { SingleValueVis } from './SingleValueVis';\nimport { Welcome } from './Welcome';\nimport { PopularAnalysis } from './PopularAnalysis';\nimport { EmbeddedLook } from './EmbeddedLook';\nimport { EmbeddedDashboard } from './EmbeddedDashboard';\nimport { ContentCarousel } from './ContentCarousel';\nconst { validIdHelper } = require('../../../tools');\n\n//start of SplashPage Component\nexport default function SplashPage(props) {\n  // console.log('SplashPage')\n  //intialize state using hooks\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(1);\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, handleTabChange, handleMenuItemSelect, lookerUser } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  // const tabContent = [[...lookerContent], codeTab];\n  const tabContent = [[...lookerContent]];\n  const demoComponentType = type || 'code flyout';\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  /**\n   * listen for lookerContent and call \n   * setSampleCode\n  */\n  useEffect(() => {\n    // console.log('useEffect')\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent]);\n\n\n  /**\n   * What this return  does:\n   * Rendering of actual html elements,\n   * this section is necessary but less relevant to looker functionality itself\n   */\n  return (\n    <div className={`${classes.root} ${classes.minHeight680} ${classes.padding30} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={classes.root}>\n          {iFrameExists ? '' :\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\n                <CircularProgress className={classes.circularProgress} />\n              </Card>\n            </Grid>\n          }\n          <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n            <Box className=\"tabPanelContainer\">\n              {tabContent.map((tabContentItem, index) => {\n                return <Grid container\n                  spacing={3}\n                  key={`${validIdHelper(demoComponentType + '-gridContainer-' + index)}`}\n                >\n                  {tabContentItem.type === 'code flyout' ?\n                    <CodeFlyout {...props}\n                      classes={classes}\n                      lookerContent={lookerContent}\n                      clientSideCode={clientSideCode}\n                      serverSideCode={serverSideCode}\n                      lookerUser={lookerUser} />\n                    :\n                    <React.Fragment\n                      key={`${validIdHelper(demoComponentType + '-outerFragment-' + index)}`}>\n                      {tabContentItem.map((lookerContent, innerIndex) => {\n                        return (\n                          <Grid\n                            key={`${validIdHelper(demoComponentType + '-innerFragment-' + innerIndex)}`}\n                            item\n                            sm={parseInt(lookerContent.gridWidth)}\n                          >\n                            {/* <Card className={classes.padding30}> */}\n                            {(lookerContent.type === 'welcome') && <Welcome\n                              {...{ lookerContent, classes, demoComponentType }}\n                            />}\n                            {(lookerContent.type === 'carousel') && <ContentCarousel\n                              {...{ lookerContent, classes, demoComponentType }}\n                            />}\n                            {(lookerContent.type === 'single value') && <SingleValueVis\n                              {...{ lookerContent, classes, demoComponentType }}\n                            />}\n                            {(lookerContent.type === 'dashboard') && <EmbeddedDashboard\n                              {...{ lookerContent, classes }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\n                            />}\n                            {(lookerContent.type === 'popular analysis') && <PopularAnalysis\n                              {...{ lookerContent, classes, demoComponentType, handleMenuItemSelect }}\n                            />}\n                          </Grid>\n                        )\n                      })}\n                    </React.Fragment>\n                  }\n                </Grid>\n                // </TabPanel>\n              })}\n            </Box>\n          </Box >\n        </div >\n      </Grid >\n    </div >\n  )\n}",
    "import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 800,\n  },\n}));",
    "import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}",
    "import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport function NumberToColoredPercent( {val, positive_good, abs_val}) {\n  const colors = {\n    up: (positive_good) ? 'green' : 'red',\n    down: (positive_good) ? 'red' : 'green'\n  }\n  const color = (val<0) ? colors.down : (val>0) ? colors.up : 'black'\n  const val_formatted = Math.abs(val).toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 2 })\n  const icon = (val<0) ? '▼' : (val>0) ? '▲' : '—'\n  \n  return (<>\n      <font\n        color={color}\n      >\n        {`${icon} ${val_formatted}`}\n      </font>\n  </>\n  )\n}",
    "import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField } from '@material-ui/core'\nimport { Autocomplete, ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./Dashboard.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport { NumberToColoredPercent } from '../../Accessories/NumberToColoredPercent';\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\n//start of Dashboard Component\nexport default function Dashboard(props) {\n  // console.log('Dashboard')\n  //initialize state using hooks\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState([]);\n  const [dashboardObj, setDashboardObj] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const [toggleValue, setToggleValue] = useState('');\n  const [dashboardLayout, setDashboardLayout] = useState({});\n  const { togglePayWallModal } = useContext(AppContext)\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  const tabContent = [...lookerContent, codeTab];\n  const demoComponentType = type || 'code flyout';\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  const handleToggle = (event, newValue) => {\n    setToggleValue(newValue)\n    const filteredLayout = _.filter(dashboardLayout.dashboard_layout_components, (row) => {\n      return (lookerContent[0].dynamicFieldLookUp[newValue].indexOf(row.dashboard_element_id) > -1)\n    })\n    const newDashboardLayout = {\n      ...dashboardLayout,\n      dashboard_layout_components: filteredLayout\n    }\n    dashboardObj.setOptions({ \"layouts\": [newDashboardLayout] })\n  };\n\n  /**\n   * listen for lookerContent and call \n   * performLookerApiCalls and setSampleCode\n  */\n  useEffect(() => {\n    // console.log('validIdHelper(demoComponentType + lookerContent[0].id)', validIdHelper(demoComponentType + lookerContent[0].id))\n    // if (validIdHelper(demoComponentType + lookerContent[0].id) === selectedMenuItem) {\n    setTimeout(() => performLookerApiCalls([...lookerContent]), 1000)\n    setClientSideCode(rawSampleCode)\n    // }\n  }, [lookerContent, lookerUser]);\n\n\n  useEffect(() => {\n    if (Object.keys(dashboardLayout).length && Object.keys(dashboardObj).length && lookerContent[0].dynamicFieldLookUp) {\n      handleToggle(null, Object.keys(lookerContent[0].dynamicFieldLookUp)[0])\n    }\n  }, [dashboardLayout]);\n\n  /** \n   * What this function does:\n   * iterate over Looker Content array referenced above and\n   * calls specific endpoints and methods available from Looker Node SDK\n   * and embed SDK to create the experience on this page\n   */\n  const performLookerApiCalls = function (lookerContent) {\n    // console.log('performLookerApiCalls')\n    $(`.embedContainer.${validIdHelper(demoComponentType)}:visible`).html('')\n    setIFrame(0)\n    setApiContent([])\n    lookerContent.map(async lookerContent => {\n      // console.log('lookerContent map')\n      let dashboardId = lookerContent.id;\n      // console.log('dashboardId ', dashboardId)\n      // console.log('embed container exists??', $('#' + validIdHelper(`embedContainer-${demoComponentType}-${dashboardId}`)).length)\n      // console.log('embed container html??', $('#' + validIdHelper(`embedContainer-${demoComponentType}-${dashboardId}`)).html())\n\n\n      //how can test to see if it has content???\n      LookerEmbedSDK.createDashboardWithId(dashboardId)\n        .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${dashboardId}`))\n        .withClassName('iframe')\n        .withNext()\n        // .withNext(lookerContent.isNext || false) //how can I make this dynamic based on prop??\n        .withTheme('atom_fashion')\n        .withParams({ 'schedule_modal': 'true' })\n        .on('page:property:change', (event) => {\n          // console.log('page property is changing!!!!')\n          changeHeight(event)\n        }) // dashboards-next\n        .on('dashboard:loaded', (event) => {\n          setDashboardLayout(event.dashboard.options.layouts[0])\n        })\n        // .on('drillmenu:click', (event) => {\n        //   drillMenuClick(event)\n        // })\n        .build()\n        .connect()\n        .then((dashboard) => {\n          setIFrame(1)\n          setDashboardObj(dashboard)\n        })\n        .catch((error) => {\n          // console.error('Connection error', error)\n        })\n\n      if (lookerContent.hasOwnProperty('filter')) {\n        //get inline query from usecase file & set user attribute dynamically\n        let jsonQuery = lookerContent.inlineQuery;\n        jsonQuery.filters = {\n          ...jsonQuery.filters,\n          [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\n        };\n        lookerContent.inlineQuery = jsonQuery;\n        let stringifiedQuery = encodeURIComponent(JSON.stringify(lookerContent.inlineQuery))\n        let lookerResponse = await fetch('/runinlinequery/' + stringifiedQuery + '/json', {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          }\n        })\n        let lookerResponseData = await lookerResponse.json();\n        let queryResultsForDropdown = [];\n        let desiredProperty = Object.keys(lookerResponseData.queryResults[0])[0];\n        for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\n          queryResultsForDropdown.push({\n            'label': lookerResponseData.queryResults[i][desiredProperty],\n            'trend': (lookerResponseData.queryResults[i]['trend']) ? lookerResponseData.queryResults[i]['trend'] : undefined\n          })\n        }\n        setApiContent(queryResultsForDropdown);\n        if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\n      }\n    })\n  }\n\n  /**\n   * update dashboard when custom filter changed\n  */\n  const customFilterAction = (dashboardId, filterName, newFilterValue) => {\n    if (Object.keys(dashboardObj).length) {\n      dashboardObj.updateFilters({ [filterName]: newFilterValue })\n      dashboardObj.run()\n    }\n  }\n\n  // const drillMenuClick = (event) => {\n\n  //   const basicLookerUser = lookerUser.user_attributes.permission_level === 'basic' ? true : false;\n  //   if (basicLookerUser) {\n  //     togglePayWallModal()\n  //     return { cancel: (basicLookerUser) ? true : false }\n  //   }\n  // }\n\n  const changeHeight = (event) => {\n    // console.log('changeHeight')\n    // console.log('event', event)\n  }\n\n  /**\n   * What this return  does:\n   * Rendering of actual html elements,\n   * this section is necessary but less relevant to looker functionality itself\n   */\n  return (\n    <div className={`${classes.root} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={classes.root}>\n          {iFrameExists ? '' :\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\n                <CircularProgress className={classes.circularProgress} />\n              </Card>\n            </Grid>\n          }\n\n          {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\n          <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n            <AppBar position=\"static\">\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                aria-label=\"simple tabs example\">\n                {tabContent.map((item, index) => (\n                  <Tab\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                    label={item.label}\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\n                    {...a11yProps(index)} />\n                ))}\n              </Tabs>\n            </AppBar>\n            <Box className=\"tabPanelContainer\">\n              {tabContent.map((tabContentItem, index) => (\n                <TabPanel\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\n                  value={value}\n                  index={index}>\n                  <Grid container>\n                    {tabContentItem.type === 'code flyout' ?\n                      // could this go to home/parent component\n                      // so it's not in the demo component itself whatsoever\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerContent={lookerContent}\n                        clientSideCode={clientSideCode}\n                        serverSideCode={serverSideCode}\n                        lookerUser={lookerUser} />\n                      :\n                      <React.Fragment\n                        key={`${validIdHelper(demoComponentType + '-innerFragment-' + index)}`}>\n                        {tabContentItem.filter ?\n\n                          <Grid item sm={6}>\n                            <ApiHighlight classes={classes} >\n                              <Autocomplete\n                                id={`combo-box-dashboard-${lookerContent.id}`}\n                                options={Array.isArray(apiContent) ?\n                                  apiContent :\n                                  []}\n                                renderOption={(option) => (\n                                  <Grid container justify=\"space-between\">\n                                    <Grid item>\n                                      {option.label}\n                                    </Grid>\n                                    {option.trend && <Grid item>\n                                      <NumberToColoredPercent\n                                        val={option.trend}\n                                        positive_good={true}\n                                        abs_val={Math.abs(option.trend)}\n                                      />\n                                    </Grid>}\n                                  </Grid>\n                                )}\n                                getOptionLabel={(option) => option.label}\n                                style={{ width: 400 }}\n                                onChange={(event, newValue) => {\n                                  customFilterAction(tabContentItem.id, tabContentItem.filter.filterName, (newValue) ? newValue.label : '')\n                                }}\n                                renderInput={(params) => <TextField {...params} label={tabContentItem.filter.filterName} variant=\"outlined\" />}\n                                loadingText=\"Loading...\"\n                              />\n                            </ApiHighlight>\n                          </Grid> : ''\n                        }\n                        {tabContentItem.dynamicFieldLookUp ?\n                          <Grid item sm={6}>\n                            <ApiHighlight classes={classes} >\n                              <ToggleButtonGroup\n                                value={toggleValue}\n                                exclusive\n                                onChange={handleToggle}\n                                aria-label=\"text alignment\"\n                              >\n                                {Object.keys(tabContentItem.dynamicFieldLookUp).map(key => {\n                                  return (\n                                    <ToggleButton\n                                      key={validIdHelper(`dynamicDashToggle-${key}`)}\n                                      value={key} aria-label=\"left aligned\">\n                                      {key}\n                                    </ToggleButton>\n                                  )\n                                })}\n                              </ToggleButtonGroup>\n                            </ApiHighlight>\n                          </Grid>\n                          : ''\n                        }\n                        <Box className={classes.w100} mt={2}>\n                          <Grid item sm={12}>\n                           <EmbedHighlight classes={classes}>\n                              <div\n                                className={`embedContainer ${validIdHelper(demoComponentType)}`}\n                                id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                              >\n                              </div>\n                            </EmbedHighlight>\n                          </Grid>\n                        </Box>\n                      </React.Fragment>\n                    }\n                  </Grid>\n                </TabPanel>\n              ))}\n            </Box>\n          </Box >\n        </div>\n      </Grid >\n    </div >\n  )\n}",
    "export default \"import $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField } from '@material-ui/core'\\nimport { Autocomplete, ToggleButton, ToggleButtonGroup } from '@material-ui/lab'\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./Dashboard.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\\nimport { NumberToColoredPercent } from '../../Accessories/NumberToColoredPercent';\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of Dashboard Component\\nexport default function Dashboard(props) {\\n  // console.log('Dashboard')\\n  //initialize state using hooks\\n  const [value, setValue] = useState(0);\\n  const [iFrameExists, setIFrame] = useState(0);\\n  const [apiContent, setApiContent] = useState([]);\\n  const [dashboardObj, setDashboardObj] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const [toggleValue, setToggleValue] = useState('');\\n  const [dashboardLayout, setDashboardLayout] = useState({});\\n  const { togglePayWallModal } = useContext(AppContext)\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  const tabContent = [...lookerContent, codeTab];\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  const handleToggle = (event, newValue) => {\\n    setToggleValue(newValue)\\n    const filteredLayout = _.filter(dashboardLayout.dashboard_layout_components, (row) => {\\n      return (lookerContent[0].dynamicFieldLookUp[newValue].indexOf(row.dashboard_element_id) > -1)\\n    })\\n    const newDashboardLayout = {\\n      ...dashboardLayout,\\n      dashboard_layout_components: filteredLayout\\n    }\\n    dashboardObj.setOptions({ \\\"layouts\\\": [newDashboardLayout] })\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * performLookerApiCalls and setSampleCode\\n  */\\n  useEffect(() => {\\n    // console.log('validIdHelper(demoComponentType + lookerContent[0].id)', validIdHelper(demoComponentType + lookerContent[0].id))\\n    // if (validIdHelper(demoComponentType + lookerContent[0].id) === selectedMenuItem) {\\n    setTimeout(() => performLookerApiCalls([...lookerContent]), 1000)\\n    setClientSideCode(rawSampleCode)\\n    // }\\n  }, [lookerContent, lookerUser]);\\n\\n\\n  useEffect(() => {\\n    if (Object.keys(dashboardLayout).length && Object.keys(dashboardObj).length && lookerContent[0].dynamicFieldLookUp) {\\n      handleToggle(null, Object.keys(lookerContent[0].dynamicFieldLookUp)[0])\\n    }\\n  }, [dashboardLayout]);\\n\\n  /** \\n   * What this function does:\\n   * iterate over Looker Content array referenced above and\\n   * calls specific endpoints and methods available from Looker Node SDK\\n   * and embed SDK to create the experience on this page\\n   */\\n  const performLookerApiCalls = function (lookerContent) {\\n    // console.log('performLookerApiCalls')\\n    $(`.embedContainer.${validIdHelper(demoComponentType)}:visible`).html('')\\n    setIFrame(0)\\n    setApiContent([])\\n    lookerContent.map(async lookerContent => {\\n      // console.log('lookerContent map')\\n      let dashboardId = lookerContent.id;\\n      // console.log('dashboardId ', dashboardId)\\n      // console.log('embed container exists??', $('#' + validIdHelper(`embedContainer-${demoComponentType}-${dashboardId}`)).length)\\n      // console.log('embed container html??', $('#' + validIdHelper(`embedContainer-${demoComponentType}-${dashboardId}`)).html())\\n\\n\\n      //how can test to see if it has content???\\n      LookerEmbedSDK.createDashboardWithId(dashboardId)\\n        .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${dashboardId}`))\\n        .withClassName('iframe')\\n        .withNext()\\n        // .withNext(lookerContent.isNext || false) //how can I make this dynamic based on prop??\\n        .withTheme('atom_fashion')\\n        .withParams({ 'schedule_modal': 'true' })\\n        .on('page:property:change', (event) => {\\n          // console.log('page property is changing!!!!')\\n          changeHeight(event)\\n        }) // dashboards-next\\n        .on('dashboard:loaded', (event) => {\\n          setDashboardLayout(event.dashboard.options.layouts[0])\\n        })\\n        // .on('drillmenu:click', (event) => {\\n        //   drillMenuClick(event)\\n        // })\\n        .build()\\n        .connect()\\n        .then((dashboard) => {\\n          setIFrame(1)\\n          setDashboardObj(dashboard)\\n        })\\n        .catch((error) => {\\n          // console.error('Connection error', error)\\n        })\\n\\n      if (lookerContent.hasOwnProperty('filter')) {\\n        //get inline query from usecase file & set user attribute dynamically\\n        let jsonQuery = lookerContent.inlineQuery;\\n        jsonQuery.filters = {\\n          ...jsonQuery.filters,\\n          [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\\n        };\\n        lookerContent.inlineQuery = jsonQuery;\\n        let stringifiedQuery = encodeURIComponent(JSON.stringify(lookerContent.inlineQuery))\\n        let lookerResponse = await fetch('/runinlinequery/' + stringifiedQuery + '/json', {\\n          method: 'GET',\\n          headers: {\\n            Accept: 'application/json',\\n            'Content-Type': 'application/json'\\n          }\\n        })\\n        let lookerResponseData = await lookerResponse.json();\\n        let queryResultsForDropdown = [];\\n        let desiredProperty = Object.keys(lookerResponseData.queryResults[0])[0];\\n        for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\\n          queryResultsForDropdown.push({\\n            'label': lookerResponseData.queryResults[i][desiredProperty],\\n            'trend': (lookerResponseData.queryResults[i]['trend']) ? lookerResponseData.queryResults[i]['trend'] : undefined\\n          })\\n        }\\n        setApiContent(queryResultsForDropdown);\\n        if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\\n      }\\n    })\\n  }\\n\\n  /**\\n   * update dashboard when custom filter changed\\n  */\\n  const customFilterAction = (dashboardId, filterName, newFilterValue) => {\\n    if (Object.keys(dashboardObj).length) {\\n      dashboardObj.updateFilters({ [filterName]: newFilterValue })\\n      dashboardObj.run()\\n    }\\n  }\\n\\n  // const drillMenuClick = (event) => {\\n\\n  //   const basicLookerUser = lookerUser.user_attributes.permission_level === 'basic' ? true : false;\\n  //   if (basicLookerUser) {\\n  //     togglePayWallModal()\\n  //     return { cancel: (basicLookerUser) ? true : false }\\n  //   }\\n  // }\\n\\n  const changeHeight = (event) => {\\n    // console.log('changeHeight')\\n    // console.log('event', event)\\n  }\\n\\n  /**\\n   * What this return  does:\\n   * Rendering of actual html elements,\\n   * this section is necessary but less relevant to looker functionality itself\\n   */\\n  return (\\n    <div className={`${classes.root} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={classes.root}>\\n          {iFrameExists ? '' :\\n            <Grid item sm={12} >\\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                <CircularProgress className={classes.circularProgress} />\\n              </Card>\\n            </Grid>\\n          }\\n\\n          {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\\n          <Box className={iFrameExists ? `` : `${classes.hidden}`}>\\n            <AppBar position=\\\"static\\\">\\n              <Tabs\\n                className={classes.tabs}\\n                value={value}\\n                onChange={handleChange}\\n                aria-label=\\\"simple tabs example\\\">\\n                {tabContent.map((item, index) => (\\n                  <Tab\\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\\n                    label={item.label}\\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\\n                    {...a11yProps(index)} />\\n                ))}\\n              </Tabs>\\n            </AppBar>\\n            <Box className=\\\"tabPanelContainer\\\">\\n              {tabContent.map((tabContentItem, index) => (\\n                <TabPanel\\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\\n                  value={value}\\n                  index={index}>\\n                  <Grid container>\\n                    {tabContentItem.type === 'code flyout' ?\\n                      // could this go to home/parent component\\n                      // so it's not in the demo component itself whatsoever\\n                      <CodeFlyout {...props}\\n                        classes={classes}\\n                        lookerContent={lookerContent}\\n                        clientSideCode={clientSideCode}\\n                        serverSideCode={serverSideCode}\\n                        lookerUser={lookerUser} />\\n                      :\\n                      <React.Fragment\\n                        key={`${validIdHelper(demoComponentType + '-innerFragment-' + index)}`}>\\n                        {tabContentItem.filter ?\\n\\n                          <Grid item sm={6}>\\n                            <ApiHighlight classes={classes} >\\n                              <Autocomplete\\n                                id={`combo-box-dashboard-${lookerContent.id}`}\\n                                options={Array.isArray(apiContent) ?\\n                                  apiContent :\\n                                  []}\\n                                renderOption={(option) => (\\n                                  <Grid container justify=\\\"space-between\\\">\\n                                    <Grid item>\\n                                      {option.label}\\n                                    </Grid>\\n                                    {option.trend && <Grid item>\\n                                      <NumberToColoredPercent\\n                                        val={option.trend}\\n                                        positive_good={true}\\n                                        abs_val={Math.abs(option.trend)}\\n                                      />\\n                                    </Grid>}\\n                                  </Grid>\\n                                )}\\n                                getOptionLabel={(option) => option.label}\\n                                style={{ width: 400 }}\\n                                onChange={(event, newValue) => {\\n                                  customFilterAction(tabContentItem.id, tabContentItem.filter.filterName, (newValue) ? newValue.label : '')\\n                                }}\\n                                renderInput={(params) => <TextField {...params} label={tabContentItem.filter.filterName} variant=\\\"outlined\\\" />}\\n                                loadingText=\\\"Loading...\\\"\\n                              />\\n                            </ApiHighlight>\\n                          </Grid> : ''\\n                        }\\n                        {tabContentItem.dynamicFieldLookUp ?\\n                          <Grid item sm={6}>\\n                            <ApiHighlight classes={classes} >\\n                              <ToggleButtonGroup\\n                                value={toggleValue}\\n                                exclusive\\n                                onChange={handleToggle}\\n                                aria-label=\\\"text alignment\\\"\\n                              >\\n                                {Object.keys(tabContentItem.dynamicFieldLookUp).map(key => {\\n                                  return (\\n                                    <ToggleButton\\n                                      key={validIdHelper(`dynamicDashToggle-${key}`)}\\n                                      value={key} aria-label=\\\"left aligned\\\">\\n                                      {key}\\n                                    </ToggleButton>\\n                                  )\\n                                })}\\n                              </ToggleButtonGroup>\\n                            </ApiHighlight>\\n                          </Grid>\\n                          : ''\\n                        }\\n                        <Box className={classes.w100} mt={2}>\\n                          <Grid item sm={12}>\\n                           <EmbedHighlight classes={classes}>\\n                              <div\\n                                className={`embedContainer ${validIdHelper(demoComponentType)}`}\\n                                id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                              >\\n                              </div>\\n                            </EmbedHighlight>\\n                          </Grid>\\n                        </Box>\\n                      </React.Fragment>\\n                    }\\n                  </Grid>\\n                </TabPanel>\\n              ))}\\n            </Box>\\n          </Box >\\n        </div>\\n      </Grid >\\n    </div >\\n  )\\n}\";",
    "import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst { validIdHelper, prettifyString } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 800,\n        maxHeight: 450,\n        overflow: 'scroll',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    table: {\n        maxHeight: 310\n    },\n    card: {\n        minWidth: 275,\n        minHeight: '10rem',\n        boxShadow: 'none'\n    },\n    flexCentered: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n}));\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 //+ rand();\n    const left = 50 //+ rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nexport default function ModalTable(props) {\n    // console.log('ModalTable')\n    // console.log('props', props)\n\n    const classes = useStyles();\n    const { open, onClose, modalContent } = props;\n    const [modalStyle] = React.useState(getModalStyle);\n\n\n    return (\n        <Modal\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n\n            <div style={modalStyle} className={classes.paper}>\n                <h2 id=\"simple-modal-title\">{modalContent.title}</h2>\n                {modalContent.body ?\n                    <TableContainer component={Paper} className={classes.table}>\n                        <Table stickyHeader className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                            <TableHead>\n                                <TableRow>\n                                    {Object.keys(modalContent.body[0]).map((key, index) => (\n                                        <TableCell align=\"right\"\n                                            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n                                            id={validIdHelper(key + '-TableHead-TableCell-' + index)}>\n                                            {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}</TableCell>\n\n\n                                    ))}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {modalContent.body.map((item, index) => (\n\n                                    <TableRow\n                                        key={validIdHelper('TableRow-' + index)}\n                                        id={validIdHelper('TableRow-' + index)} >\n                                        {\n                                            Object.keys(item).map(key => (\n                                                <TableCell align=\"right\"\n                                                    key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                                                    id={validIdHelper(key + '-TableBody-TableCell-' + index)}>\n                                                    {\n                                                        modalContent.body[index][key] ?\n                                                            modalContent.body[index][key].rendered ?\n                                                                modalContent.body[index][key].rendered :\n                                                                modalContent.body[index][key].value ?\n                                                                    modalContent.body[index][key].value :\n                                                                    typeof modalContent.body[index][key] === 'number' ?\n                                                                        (Math.round(modalContent.body[index][key] * 100) / 100)//.toLocaleString()\n                                                                        :\n                                                                        modalContent.body[index][key] //.toLocaleString() \n                                                            :\n                                                            ''\n                                                    }\n                                                </TableCell>\n                                            ))\n                                        }\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer >\n                    :\n\n                    <Card className={`${classes.card} ${classes.flexCentered}`}>\n                        <CircularProgress className={classes.circularProgress} />\n                    </Card>}\n\n            </div >\n        </Modal >\n    )\n}",
    "import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    flexCentered: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    hidden: {\n        visibility: 'hidden',\n        // position: 'absolute', //hack for obscuring other elements within Box\n        zIndex: -1\n    },\n    tabs: {\n        backgroundColor: 'white',\n        color: '#6c757d'\n    },\n    dNone: {\n        display: 'none'\n    },\n    dBlock: {\n        display: 'block'\n    },\n    tree: {\n        height: 240,\n        flexGrow: 1,\n        maxWidth: 400,\n    },\n    icon: {\n        marginRight: 12,\n        fontSize: '1rem',\n        overflow: 'visible'\n    },\n    mt12: {\n        marginTop: 12\n    },\n    w100: {\n        width: '100%'\n    },\n    mlAuto: {\n        marginLeft: 'auto'\n    },\n    card: {\n        minWidth: 275,\n        minHeight: 800,\n    },\n    height500: {\n        height: 500\n    },\n    height700: {\n        height: 700\n    },\n    height800: {\n        height: 800\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    skeleton: {\n        height: 200,\n        width: '100%'\n    }\n}));",
    "import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n",
    "import _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, InputLabel, MenuItem,\n  FormControl, Select, Modal\n} from '@material-ui/core'\nimport { Skeleton } from '@material-ui/lab';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ModalTable from '../../Material/ModalTable';\nimport { ResponsiveCalendar } from '@nivo/calendar'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./CustomVis.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\n//new date pickers\nimport { format, endOfDay, addDays } from 'date-fns';\n// import React from 'react';\n// import Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\n//start of Custom Viz Calendar Component\nexport default function CustomVis(props) {\n  // console.log('CustomVis')\n  //initialize state using hooks\n  const [value, setValue] = useState(0);\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [category, setCategory] = useState('All')\n  const [desiredField, setDesiredField] = useState('')\n  const [apiContent, setApiContent] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [modalContent, setModalContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n\n  const { togglePayWallModal } = useContext(AppContext)\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  const tabContent = [...lookerContent, codeTab]\n  const demoComponentType = type || 'code flyout';\n\n  //handle opening of modal for advanced and premium users\n  const handleModalOpen = async ({ day }) => {\n    let originalInlineQueryCopy = JSON.parse(JSON.stringify(lookerContent[0].inlineQuery));\n    originalInlineQueryCopy.filters = {\n      ...originalInlineQueryCopy.filters,\n      [originalInlineQueryCopy.fields[0]]: day,\n      [originalInlineQueryCopy.fields[1]]: category === \"All\" ? '' : category\n    }\n    originalInlineQueryCopy.total = true;\n    originalInlineQueryCopy.limit = \"25\";\n\n    setOpen(true);\n    let lookerResponse = await fetch('/runinlinequery/' + encodeURIComponent(JSON.stringify(originalInlineQueryCopy)) + '/json', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    let modalObj = {\n      \"title\": `Detail View for ${day}`,\n      \"body\": lookerResponseData.queryResults\n    }\n    setModalContent(modalObj);\n  };\n\n  //handle modal close\n  const handleModalClose = () => {\n    setModalContent({})\n    setOpen(false);\n  };\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  const handleFromDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setFromDate(newValueAsDate);\n    }\n  }\n  const handleToDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setToDate(newValueAsDate);\n    }\n  }\n  const handleCategory = newValue => {\n    setCategory(newValue)\n  }\n  const handleDesiredField = newValue => {\n    setDesiredField(newValue)\n  }\n\n  //format response from initial api call based on LookerContent array\n  //to match format required by Nivo Calendar component\n  let filterData = [];\n  if (apiContent.queryResults && apiContent.queryResults) {\n    //filtering for fromDate, toDate and category\n    filterData = _.filter(apiContent.queryResults, (row) => {\n      return (row[apiContent.inlineQuery.fields[0]] >= fromDate\n        && row[apiContent.inlineQuery.fields[0]] < toDate\n        && (category === 'All' ? true : row[apiContent.inlineQuery.fields[1]] === category)\n      )\n    })\n    //converting filterDAta to desired format for vis\n    filterData = filterData.map(item => {\n      return {\n        'day': item[apiContent.inlineQuery.fields[0]],\n        'category': item[apiContent.inlineQuery.fields[1]],\n        'value': item[desiredField]\n      }\n    })\n\n    //special exception for category all\n    //need to reduce array by day across categories\n    //destructuing in reduce of value would not work for dynamic var\n    if (category === 'All') {\n      //create array of all unique dates\n      const uniqueDates = [...new Set(filterData.map(item => item.day))];\n      let filteredAndReducedForAll = []\n      //iterate over unique date\n      uniqueDates.map(uniqueDate => {\n        //filter filterData for current unique date\n        let value = _.filter(filterData, row => {\n          return row.day === uniqueDate\n        }).reduce((acc, { value }) => acc + value, 0)\n        let thisObj = {\n          day: uniqueDate,\n          value: value,\n          category: 'All'\n        }\n        filteredAndReducedForAll.push(thisObj)\n\n      })\n      filterData = filteredAndReducedForAll;\n    }\n  }\n\n  /**\n   * listen for lookerContent and call \n   * performLookerApiCalls and setSampleCode\n  */\n  useEffect(() => {\n    if (lookerContent.length) {\n      setTimeout(() => performLookerApiCalls(lookerContent), 100);\n      setDesiredField(lookerContent[0].desiredFields[0])\n      setClientSideCode(rawSampleCode)\n    }\n  }, [lookerContent, lookerUser])\n\n  /** \n   * What this function does:\n   * iterate over Looker Content array referenced above and\n   * calls specific endpoints and methods available from Looker Node SDK\n   * and embed SDK to create the experience on this page\n   */\n  const performLookerApiCalls = function (lookerContent) {\n    // console.log('performLookerApiCalls')\n    setApiContent([]); //set to empty array to show progress bar and skeleton\n    lookerContent.map(async lookerContent => {\n      let inlineQuery = lookerContent.inlineQuery;\n      inlineQuery.filters = {\n        // ...inlineQuery.filters,\n        // [Object.keys(inlineQuery.filters)[0]]: lookerUser.user_attributes.time_horizon,\n        [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\n      };\n      let stringifiedQuery = encodeURIComponent(JSON.stringify(inlineQuery))\n      let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      let lookerResponseData = await lookerResponse.json();\n      lookerResponseData.queryResults = lookerResponseData.queryResults.filter(item => {\n        return item[inlineQuery.fields[0]]\n      })\n      let uniqueCategories = ['All'];\n      for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\n        if (uniqueCategories.indexOf(lookerResponseData.queryResults[i][inlineQuery.fields[1]]) === -1) {\n          uniqueCategories.push(lookerResponseData.queryResults[i][inlineQuery.fields[1]])\n        }\n      }\n      lookerResponseData.inlineQuery = inlineQuery;\n      lookerResponseData.uniqueCategories = uniqueCategories;\n      setFromDate(lookerResponseData.queryResults[lookerResponseData.queryResults.length - 1][lookerResponseData.inlineQuery.fields[0]]);\n      setToDate(incrementDate(lookerResponseData.queryResults[0][lookerResponseData.inlineQuery.fields[0]], 1));\n      setApiContent(lookerResponseData)\n      if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\n    })\n  }\n\n  let redToBlueColorScale = ['#0302FC', '#2A00D5', '#63009E', '#A1015D', '#D80027', '#FE0002'];\n  let yellowToGreenColorScale = ['#FEFE69', '#DDF969', '#A9F36A', '#A1015D', '#78EC6C', '#57E86B'];\n  let nivoColorScale = ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']\n  let googleColorScale = ['#4595EC', '#F3A759', '#E24E3A', '#65AB5A'];\n  return (\n    <div className={`${classes.root} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={classes.root}>\n          <Box>\n            <AppBar position=\"static\">\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                aria-label=\"simple tabs example\">\n                {tabContent.map((item, index) => (\n                  <Tab\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                    label={item.label}\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\n                    {...a11yProps(index)} />\n                ))}\n              </Tabs>\n            </AppBar>\n            <Box className=\"tabPanelContainer\">\n              {tabContent.map((tabContentItem, index) => (\n                <TabPanel\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\n                  value={value}\n                  index={index}>\n                  <Grid container>\n                    {tabContentItem.type === 'code flyout' ?\n\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerContent={lookerContent}\n                        clientSideCode={clientSideCode}\n                        serverSideCode={serverSideCode}\n                        lookerUser={lookerUser} />\n                      :\n                      <React.Fragment\n                        key={`${validIdHelper(demoComponentType + '-innerFragment-' + index)}`}>\n\n                        {!apiContent.queryResults ?\n                          <Skeleton variant=\"rect\" animation=\"wave\" className={classes.skeleton} />\n                          :\n                          <FilterBar {...props}\n                            classes={classes}\n                            apiContent={apiContent}\n                            fromDate={fromDate}\n                            toDate={toDate}\n                            category={category}\n                            desiredField={desiredField}\n                            handleFromDate={handleFromDate}\n                            handleToDate={handleToDate}\n                            handleCategory={handleCategory}\n                            handleDesiredField={handleDesiredField}\n                          />\n                        }\n                        <Divider className={classes.divider} />\n                        <Box\n                          className={classes.w100}\n                          mt={2}>\n                          {!apiContent.queryResults ?\n\n                            <Grid item sm={12} >\n                              <Card className={`${classes.card} ${classes.flexCentered}`}>\n                                <CircularProgress className={classes.circularProgress} />\n                              </Card>\n                            </Grid>\n\n                            : apiContent.queryResults && apiContent.queryResults.length ?\n                              <>\n                                <Grid item sm={12} className={classes.height800}>\n                                  <ApiHighlight height={400}>\n                                    <ResponsiveCalendar\n                                      data={filterData}\n                                      align=\"top\"\n                                      from={incrementDate(fromDate, 1)}\n                                      to={incrementDate(toDate, 1)}\n                                      emptyColor=\"#eeeeee\"\n                                      colors={desiredField === lookerContent[0].desiredFields[0] ? googleColorScale : nivoColorScale}\n                                      yearSpacing={40}\n                                      monthBorderColor=\"#ffffff\"\n                                      dayBorderWidth={2}\n                                      dayBorderColor=\"#ffffff\"\n                                      margin={{ bottom: 40, left: 40 }}\n                                      legends={[\n                                        {\n                                          anchor: 'bottom-right',\n                                          direction: 'row',\n                                          translateY: 36,\n                                          itemCount: 4,\n                                          itemWidth: 42,\n                                          itemHeight: 36,\n                                          itemsSpacing: 14,\n                                          itemDirection: 'right-to-left'\n                                        }\n                                      ]}\n                                      onClick={(day, event) => {\n                                        if (!day.value) {\n                                        } else if (lookerUser.user_attributes.permission_level === 'basic') {\n                                          togglePayWallModal({\n                                            'show': true,\n                                            'permissionNeeded': 'see_drill_overlay'\n                                          });\n                                        } else {\n                                          handleModalOpen(day)\n                                          event.stopPropagation();\n                                        }\n                                      }}\n                                    />\n                                  </ApiHighlight>\n                                </Grid>\n                              </> :\n                              ''\n                          }\n                        </Box>\n                      </React.Fragment>\n                    }\n                  </Grid>\n                </TabPanel>\n              ))}\n\n            </Box>\n          </Box >\n        </div>\n      </Grid >\n      {open ?\n        <ModalTable\n          {...props}\n          open={open}\n          onClose={handleModalClose}\n          classes={classes}\n          modalContent={modalContent}\n        />\n\n        : ''}\n    </div >\n  )\n}\n//Filter Bar code\nfunction FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\n    apiContent, fromDate, toDate, category, desiredField, handleFromDate, handleToDate, handleCategory, handleDesiredField } = props;\n\n  const [expanded, setExpanded] = useState(true);\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  // console.log('FilterBar')\n  // console.log('fromDate', fromDate)\n  // console.log('toDate', toDate)\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={classes.heading}>Filter Data</Typography>\n\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          {apiContent.queryResults ?\n            <>\n              <Grid item sm={3}>\n                <FormControl className={classes.formControl}>\n                  <InputLabel\n                    id={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                  >\n                    Metric</InputLabel>\n                  <Select\n                    labelId={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                    id={`${validIdHelper(type + '-FilterBar-DataPropery-Select')}`}\n                    value={desiredField}\n                    onChange={(event) => handleDesiredField(event.target.value)}\n                  >\n                    {lookerContent[0].desiredFields.map((item, index) => (\n\n                      <MenuItem\n                        id={validIdHelper(`${item}-${index}`)}\n                        key={validIdHelper(`${item}-${index}`)}\n                        value={item}\n                      >{item.substring(item.lastIndexOf(\".\") + 1, item.length).split(\"_\").map(item => item.charAt(0).toUpperCase() + item.substring(1)).join(\" \")}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item sm={3}>\n                <FormControl className={classes.formControl}>\n                  <InputLabel\n                    id={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                  >\n                    Category</InputLabel>\n                  <Select\n                    labelId={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                    id={`${validIdHelper(type + '-FilterBar-Category-Select')}`}\n                    value={category}\n                    onChange={(event) => handleCategory(event.target.value)}\n                  >\n                    {apiContent.uniqueCategories.map((item, index) => (\n\n                      <MenuItem\n                        id={validIdHelper(`${item}-${index}`)}\n                        key={validIdHelper(`${item}-${index}`)}\n                        value={item}>{item}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              <Grid item sm={3}>\n                {/* <form className={classes.container} >\n                  <TextField\n                    id=\"fromDate\"\n                    label=\"From date\"\n                    type=\"date\"\n                    value={fromDate}\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    onChange={(event) => handleFromDate(event.target.value)}\n                  />\n                </form> */}\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"fromDate\"\n                    label=\"From date\"\n                    value={fromDate}\n                    onChange={handleFromDate}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n\n              </Grid>\n              <Grid item sm={3}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"toDate\"\n                    label=\"To date\"\n                    value={toDate}\n                    onChange={handleToDate}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n              </Grid>\n            </>\n            : ''}\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel >\n  )\n}\n\nfunction incrementDate(dateInput, increment) {\n  var dateFormatTotime = new Date(dateInput);\n  var increasedDate = new Date(dateFormatTotime.getTime() + (increment * 86400000));\n  return increasedDate.toISOString().split('T')[0];\n}",
    "export default \"import _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, InputLabel, MenuItem,\\n  FormControl, Select, Modal\\n} from '@material-ui/core'\\nimport { Skeleton } from '@material-ui/lab';\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\nimport ModalTable from '../../Material/ModalTable';\\nimport { ResponsiveCalendar } from '@nivo/calendar'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./CustomVis.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport { ApiHighlight } from '../../Highlights/Highlight';\\n\\n//new date pickers\\nimport { format, endOfDay, addDays } from 'date-fns';\\n// import React from 'react';\\n// import Grid from '@material-ui/core/Grid';\\nimport DateFnsUtils from '@date-io/date-fns';\\nimport {\\n  MuiPickersUtilsProvider,\\n  KeyboardTimePicker,\\n  KeyboardDatePicker,\\n} from '@material-ui/pickers';\\n\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of Custom Viz Calendar Component\\nexport default function CustomVis(props) {\\n  // console.log('CustomVis')\\n  //initialize state using hooks\\n  const [value, setValue] = useState(0);\\n  const [fromDate, setFromDate] = useState('');\\n  const [toDate, setToDate] = useState('');\\n  const [category, setCategory] = useState('All')\\n  const [desiredField, setDesiredField] = useState('')\\n  const [apiContent, setApiContent] = useState([]);\\n  const [open, setOpen] = React.useState(false);\\n  const [modalContent, setModalContent] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n\\n  const { togglePayWallModal } = useContext(AppContext)\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  const tabContent = [...lookerContent, codeTab]\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle opening of modal for advanced and premium users\\n  const handleModalOpen = async ({ day }) => {\\n    let originalInlineQueryCopy = JSON.parse(JSON.stringify(lookerContent[0].inlineQuery));\\n    originalInlineQueryCopy.filters = {\\n      ...originalInlineQueryCopy.filters,\\n      [originalInlineQueryCopy.fields[0]]: day,\\n      [originalInlineQueryCopy.fields[1]]: category === \\\"All\\\" ? '' : category\\n    }\\n    originalInlineQueryCopy.total = true;\\n    originalInlineQueryCopy.limit = \\\"25\\\";\\n\\n    setOpen(true);\\n    let lookerResponse = await fetch('/runinlinequery/' + encodeURIComponent(JSON.stringify(originalInlineQueryCopy)) + '/json', {\\n      method: 'GET',\\n      headers: {\\n        Accept: 'application/json',\\n        'Content-Type': 'application/json'\\n      }\\n    })\\n    let lookerResponseData = await lookerResponse.json();\\n    let modalObj = {\\n      \\\"title\\\": `Detail View for ${day}`,\\n      \\\"body\\\": lookerResponseData.queryResults\\n    }\\n    setModalContent(modalObj);\\n  };\\n\\n  //handle modal close\\n  const handleModalClose = () => {\\n    setModalContent({})\\n    setOpen(false);\\n  };\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  const handleFromDate = newValue => {\\n    let validDate = Date.parse(newValue);\\n    if (validDate > 0) {\\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\\n      setFromDate(newValueAsDate);\\n    }\\n  }\\n  const handleToDate = newValue => {\\n    let validDate = Date.parse(newValue);\\n    if (validDate > 0) {\\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\\n      setToDate(newValueAsDate);\\n    }\\n  }\\n  const handleCategory = newValue => {\\n    setCategory(newValue)\\n  }\\n  const handleDesiredField = newValue => {\\n    setDesiredField(newValue)\\n  }\\n\\n  //format response from initial api call based on LookerContent array\\n  //to match format required by Nivo Calendar component\\n  let filterData = [];\\n  if (apiContent.queryResults && apiContent.queryResults) {\\n    //filtering for fromDate, toDate and category\\n    filterData = _.filter(apiContent.queryResults, (row) => {\\n      return (row[apiContent.inlineQuery.fields[0]] >= fromDate\\n        && row[apiContent.inlineQuery.fields[0]] < toDate\\n        && (category === 'All' ? true : row[apiContent.inlineQuery.fields[1]] === category)\\n      )\\n    })\\n    //converting filterDAta to desired format for vis\\n    filterData = filterData.map(item => {\\n      return {\\n        'day': item[apiContent.inlineQuery.fields[0]],\\n        'category': item[apiContent.inlineQuery.fields[1]],\\n        'value': item[desiredField]\\n      }\\n    })\\n\\n    //special exception for category all\\n    //need to reduce array by day across categories\\n    //destructuing in reduce of value would not work for dynamic var\\n    if (category === 'All') {\\n      //create array of all unique dates\\n      const uniqueDates = [...new Set(filterData.map(item => item.day))];\\n      let filteredAndReducedForAll = []\\n      //iterate over unique date\\n      uniqueDates.map(uniqueDate => {\\n        //filter filterData for current unique date\\n        let value = _.filter(filterData, row => {\\n          return row.day === uniqueDate\\n        }).reduce((acc, { value }) => acc + value, 0)\\n        let thisObj = {\\n          day: uniqueDate,\\n          value: value,\\n          category: 'All'\\n        }\\n        filteredAndReducedForAll.push(thisObj)\\n\\n      })\\n      filterData = filteredAndReducedForAll;\\n    }\\n  }\\n\\n  /**\\n   * listen for lookerContent and call \\n   * performLookerApiCalls and setSampleCode\\n  */\\n  useEffect(() => {\\n    if (lookerContent.length) {\\n      setTimeout(() => performLookerApiCalls(lookerContent), 100);\\n      setDesiredField(lookerContent[0].desiredFields[0])\\n      setClientSideCode(rawSampleCode)\\n    }\\n  }, [lookerContent, lookerUser])\\n\\n  /** \\n   * What this function does:\\n   * iterate over Looker Content array referenced above and\\n   * calls specific endpoints and methods available from Looker Node SDK\\n   * and embed SDK to create the experience on this page\\n   */\\n  const performLookerApiCalls = function (lookerContent) {\\n    // console.log('performLookerApiCalls')\\n    setApiContent([]); //set to empty array to show progress bar and skeleton\\n    lookerContent.map(async lookerContent => {\\n      let inlineQuery = lookerContent.inlineQuery;\\n      inlineQuery.filters = {\\n        // ...inlineQuery.filters,\\n        // [Object.keys(inlineQuery.filters)[0]]: lookerUser.user_attributes.time_horizon,\\n        [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\\n      };\\n      let stringifiedQuery = encodeURIComponent(JSON.stringify(inlineQuery))\\n      let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      })\\n      let lookerResponseData = await lookerResponse.json();\\n      lookerResponseData.queryResults = lookerResponseData.queryResults.filter(item => {\\n        return item[inlineQuery.fields[0]]\\n      })\\n      let uniqueCategories = ['All'];\\n      for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\\n        if (uniqueCategories.indexOf(lookerResponseData.queryResults[i][inlineQuery.fields[1]]) === -1) {\\n          uniqueCategories.push(lookerResponseData.queryResults[i][inlineQuery.fields[1]])\\n        }\\n      }\\n      lookerResponseData.inlineQuery = inlineQuery;\\n      lookerResponseData.uniqueCategories = uniqueCategories;\\n      setFromDate(lookerResponseData.queryResults[lookerResponseData.queryResults.length - 1][lookerResponseData.inlineQuery.fields[0]]);\\n      setToDate(incrementDate(lookerResponseData.queryResults[0][lookerResponseData.inlineQuery.fields[0]], 1));\\n      setApiContent(lookerResponseData)\\n      if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\\n    })\\n  }\\n\\n  let redToBlueColorScale = ['#0302FC', '#2A00D5', '#63009E', '#A1015D', '#D80027', '#FE0002'];\\n  let yellowToGreenColorScale = ['#FEFE69', '#DDF969', '#A9F36A', '#A1015D', '#78EC6C', '#57E86B'];\\n  let nivoColorScale = ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']\\n  let googleColorScale = ['#4595EC', '#F3A759', '#E24E3A', '#65AB5A'];\\n  return (\\n    <div className={`${classes.root} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={classes.root}>\\n          <Box>\\n            <AppBar position=\\\"static\\\">\\n              <Tabs\\n                className={classes.tabs}\\n                value={value}\\n                onChange={handleChange}\\n                aria-label=\\\"simple tabs example\\\">\\n                {tabContent.map((item, index) => (\\n                  <Tab\\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\\n                    label={item.label}\\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\\n                    {...a11yProps(index)} />\\n                ))}\\n              </Tabs>\\n            </AppBar>\\n            <Box className=\\\"tabPanelContainer\\\">\\n              {tabContent.map((tabContentItem, index) => (\\n                <TabPanel\\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\\n                  value={value}\\n                  index={index}>\\n                  <Grid container>\\n                    {tabContentItem.type === 'code flyout' ?\\n\\n                      <CodeFlyout {...props}\\n                        classes={classes}\\n                        lookerContent={lookerContent}\\n                        clientSideCode={clientSideCode}\\n                        serverSideCode={serverSideCode}\\n                        lookerUser={lookerUser} />\\n                      :\\n                      <React.Fragment\\n                        key={`${validIdHelper(demoComponentType + '-innerFragment-' + index)}`}>\\n\\n                        {!apiContent.queryResults ?\\n                          <Skeleton variant=\\\"rect\\\" animation=\\\"wave\\\" className={classes.skeleton} />\\n                          :\\n                          <FilterBar {...props}\\n                            classes={classes}\\n                            apiContent={apiContent}\\n                            fromDate={fromDate}\\n                            toDate={toDate}\\n                            category={category}\\n                            desiredField={desiredField}\\n                            handleFromDate={handleFromDate}\\n                            handleToDate={handleToDate}\\n                            handleCategory={handleCategory}\\n                            handleDesiredField={handleDesiredField}\\n                          />\\n                        }\\n                        <Divider className={classes.divider} />\\n                        <Box\\n                          className={classes.w100}\\n                          mt={2}>\\n                          {!apiContent.queryResults ?\\n\\n                            <Grid item sm={12} >\\n                              <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                                <CircularProgress className={classes.circularProgress} />\\n                              </Card>\\n                            </Grid>\\n\\n                            : apiContent.queryResults && apiContent.queryResults.length ?\\n                              <>\\n                                <Grid item sm={12} className={classes.height800}>\\n                                  <ApiHighlight height={400}>\\n                                    <ResponsiveCalendar\\n                                      data={filterData}\\n                                      align=\\\"top\\\"\\n                                      from={incrementDate(fromDate, 1)}\\n                                      to={incrementDate(toDate, 1)}\\n                                      emptyColor=\\\"#eeeeee\\\"\\n                                      colors={desiredField === lookerContent[0].desiredFields[0] ? googleColorScale : nivoColorScale}\\n                                      yearSpacing={40}\\n                                      monthBorderColor=\\\"#ffffff\\\"\\n                                      dayBorderWidth={2}\\n                                      dayBorderColor=\\\"#ffffff\\\"\\n                                      margin={{ bottom: 40, left: 40 }}\\n                                      legends={[\\n                                        {\\n                                          anchor: 'bottom-right',\\n                                          direction: 'row',\\n                                          translateY: 36,\\n                                          itemCount: 4,\\n                                          itemWidth: 42,\\n                                          itemHeight: 36,\\n                                          itemsSpacing: 14,\\n                                          itemDirection: 'right-to-left'\\n                                        }\\n                                      ]}\\n                                      onClick={(day, event) => {\\n                                        if (!day.value) {\\n                                        } else if (lookerUser.user_attributes.permission_level === 'basic') {\\n                                          togglePayWallModal({\\n                                            'show': true,\\n                                            'permissionNeeded': 'see_drill_overlay'\\n                                          });\\n                                        } else {\\n                                          handleModalOpen(day)\\n                                          event.stopPropagation();\\n                                        }\\n                                      }}\\n                                    />\\n                                  </ApiHighlight>\\n                                </Grid>\\n                              </> :\\n                              ''\\n                          }\\n                        </Box>\\n                      </React.Fragment>\\n                    }\\n                  </Grid>\\n                </TabPanel>\\n              ))}\\n\\n            </Box>\\n          </Box >\\n        </div>\\n      </Grid >\\n      {open ?\\n        <ModalTable\\n          {...props}\\n          open={open}\\n          onClose={handleModalClose}\\n          classes={classes}\\n          modalContent={modalContent}\\n        />\\n\\n        : ''}\\n    </div >\\n  )\\n}\\n//Filter Bar code\\nfunction FilterBar(props) {\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\\n    apiContent, fromDate, toDate, category, desiredField, handleFromDate, handleToDate, handleCategory, handleDesiredField } = props;\\n\\n  const [expanded, setExpanded] = useState(true);\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n\\n  // console.log('FilterBar')\\n  // console.log('fromDate', fromDate)\\n  // console.log('toDate', toDate)\\n\\n  return (\\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100}>\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMoreIcon />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <Typography className={classes.heading}>Filter Data</Typography>\\n\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        <Grid container spacing={3}>\\n          {apiContent.queryResults ?\\n            <>\\n              <Grid item sm={3}>\\n                <FormControl className={classes.formControl}>\\n                  <InputLabel\\n                    id={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\\n                  >\\n                    Metric</InputLabel>\\n                  <Select\\n                    labelId={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\\n                    id={`${validIdHelper(type + '-FilterBar-DataPropery-Select')}`}\\n                    value={desiredField}\\n                    onChange={(event) => handleDesiredField(event.target.value)}\\n                  >\\n                    {lookerContent[0].desiredFields.map((item, index) => (\\n\\n                      <MenuItem\\n                        id={validIdHelper(`${item}-${index}`)}\\n                        key={validIdHelper(`${item}-${index}`)}\\n                        value={item}\\n                      >{item.substring(item.lastIndexOf(\\\".\\\") + 1, item.length).split(\\\"_\\\").map(item => item.charAt(0).toUpperCase() + item.substring(1)).join(\\\" \\\")}</MenuItem>\\n                    ))}\\n                  </Select>\\n                </FormControl>\\n              </Grid>\\n              <Grid item sm={3}>\\n                <FormControl className={classes.formControl}>\\n                  <InputLabel\\n                    id={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\\n                  >\\n                    Category</InputLabel>\\n                  <Select\\n                    labelId={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\\n                    id={`${validIdHelper(type + '-FilterBar-Category-Select')}`}\\n                    value={category}\\n                    onChange={(event) => handleCategory(event.target.value)}\\n                  >\\n                    {apiContent.uniqueCategories.map((item, index) => (\\n\\n                      <MenuItem\\n                        id={validIdHelper(`${item}-${index}`)}\\n                        key={validIdHelper(`${item}-${index}`)}\\n                        value={item}>{item}</MenuItem>\\n                    ))}\\n                  </Select>\\n                </FormControl>\\n              </Grid>\\n\\n              <Grid item sm={3}>\\n                {/* <form className={classes.container} >\\n                  <TextField\\n                    id=\\\"fromDate\\\"\\n                    label=\\\"From date\\\"\\n                    type=\\\"date\\\"\\n                    value={fromDate}\\n                    className={classes.textField}\\n                    InputLabelProps={{\\n                      shrink: true,\\n                    }}\\n                    onChange={(event) => handleFromDate(event.target.value)}\\n                  />\\n                </form> */}\\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\\n                  <KeyboardDatePicker\\n                    disableToolbar\\n                    variant=\\\"inline\\\"\\n                    format=\\\"MM/dd/yyyy\\\"\\n                    margin=\\\"normal\\\"\\n                    id=\\\"fromDate\\\"\\n                    label=\\\"From date\\\"\\n                    value={fromDate}\\n                    onChange={handleFromDate}\\n                    KeyboardButtonProps={{\\n                      'aria-label': 'change date',\\n                    }}\\n                  />\\n                </MuiPickersUtilsProvider>\\n\\n              </Grid>\\n              <Grid item sm={3}>\\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\\n                  <KeyboardDatePicker\\n                    disableToolbar\\n                    variant=\\\"inline\\\"\\n                    format=\\\"MM/dd/yyyy\\\"\\n                    margin=\\\"normal\\\"\\n                    id=\\\"toDate\\\"\\n                    label=\\\"To date\\\"\\n                    value={toDate}\\n                    onChange={handleToDate}\\n                    KeyboardButtonProps={{\\n                      'aria-label': 'change date',\\n                    }}\\n                  />\\n                </MuiPickersUtilsProvider>\\n              </Grid>\\n            </>\\n            : ''}\\n        </Grid>\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel >\\n  )\\n}\\n\\nfunction incrementDate(dateInput, increment) {\\n  var dateFormatTotime = new Date(dateInput);\\n  var increasedDate = new Date(dateFormatTotime.getTime() + (increment * 86400000));\\n  return increasedDate.toISOString().split('T')[0];\\n}\";",
    "import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 800,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  ml24: {\n    marginLeft: 24\n  },\n  parentHoverVisibility: {\n    '&:hover $childHoverVisibility': {\n      visibility: 'visible'\n    }\n\n  },\n  childHoverVisibility: {\n    visibility: 'hidden'\n  },\n  faSm: {\n    fontSize: '.75em'\n  }\n}));",
    "import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\n",
    "import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button } from '@material-ui/core'\nimport { TreeView, TreeItem } from '@material-ui/lab';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./ReportBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport '../../Home.css';\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\n//start of ReportBuilder Component\nexport default function ReportBuilder(props) {\n  //initialize state using hooks\n  const [iFrameExists, setIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState([]);\n  const [exploreObj, setExploreObj] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n\n  const { togglePayWallModal } = useContext(AppContext)\n\n  //declare constants\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  const demoComponentType = type || 'code flyout';\n  // const tabContent = lookerUser.user_attributes.permission_level === 'premium' ?\n  //   [...lookerContent, codeTab] :\n  //   [lookerContent[0], codeTab];\n  const tabContent =\n    [...lookerContent, codeTab]\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n\n    if (newValue == 1 && lookerUser.user_attributes.permission_level != 'premium') {\n      // togglePayWallModal()\n\n      togglePayWallModal({\n        'show': true,\n        'permissionNeeded': 'explore'\n      });\n    } else {\n      handleTabChange(newValue);\n      setValue(newValue);\n      if (value > 0 && newValue === 0) performLookerApiCalls(lookerContent)\n    }\n  };\n\n  /**\n   * listen for lookerContent and call \n   * performLookerApiCalls and setSampleCode\n  */\n  useEffect(() => {\n    if (activeTabValue > value) {\n      setValue(activeTabValue)\n    }\n    setTimeout(() => performLookerApiCalls(lookerContent, 1), 100)\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  const action = async (contentType, contentId, secondaryAction, qid, exploreId, newReportEmbedContainer) => {\n    let iFrameArray = $(\".embedContainer:visible > iframe\")\n\n    let matchingIndex = 0;\n    for (let i = 0; i < iFrameArray.length; i++) {\n      if (iFrameArray[i].classList.contains(contentType) && iFrameArray[i].classList.contains(contentId)) {\n        iFrameArray[i].classList.remove('dNone')\n        matchingIndex = i;\n      } else {\n        iFrameArray[i].classList.add('dNone')\n      }\n    }\n\n    if (secondaryAction === 'edit' || secondaryAction === 'explore') {\n      $(`#${newReportEmbedContainer}`).empty();\n\n      LookerEmbedSDK.createExploreWithId(exploreId)\n        .appendTo(`#${newReportEmbedContainer}`)\n        .withClassName('iframe')\n        .on('explore:state:changed', (event) => {\n        })\n        .withClassName(\"exploreIframe\")\n        .withParams({\n          qid: qid\n        })\n        .build()\n        .connect()\n        .then((explore) => {\n          setIFrame(1)\n          setExploreObj(explore)\n        })\n        .catch((error) => {\n          console.error('Connection error', error)\n        })\n      handleChange('edit', 1)\n    } else if (secondaryAction === 'delete') {\n      let lookerResponse = await fetch('/deletelook/' + contentId, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (lookerResponse.status === 200) {\n        performLookerApiCalls(lookerContent)\n      }\n    }\n  }\n\n  const performLookerApiCalls = function (lookerContent, animateLoad) {\n    if (animateLoad) {\n      handleChange('refresh', 0)\n      setIFrame(0)\n      setApiContent([])\n    }\n\n    lookerContent.map(async lookerContent => {\n      if (lookerContent.type === 'folder') {\n        let lookerResponse = await fetch('/fetchfolder/' + lookerContent.id, {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          }\n        })\n\n        let lookerResponseData = await lookerResponse.json();\n        if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\n\n        let looksToUse = [...lookerResponseData.sharedFolder.looks, ...lookerResponseData.embeddedUserFolder.looks]\n        let dashboardsToUse = [...lookerResponseData.sharedFolder.dashboards]\n        let objToUse = {\n          looks: looksToUse,\n          dashboards: dashboardsToUse\n        }\n        let iFrameArray = $(`.embedContainer.${validIdHelper(demoComponentType)} > iframe`);\n        if (objToUse.looks.length) {\n          objToUse.looks.map((item, index) => {\n\n            let lookId = item.id;\n            let lookIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('look') && iFrameArray[i].classList.contains(lookId)) {\n                lookIsRendered = true;\n              }\n            }\n\n            if (!lookIsRendered) {\n              LookerEmbedSDK.createLookWithId(lookId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('look')\n                .withClassName(lookerResponseData.sharedFolder.looks.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName(index > 0 ? 'dNone' : 'oops')\n                .withClassName(lookId)\n                .build()\n                .connect()\n                .then((look) => {\n                  // setIFrame(1)\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n            if (index === objToUse.looks.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n\n        if (objToUse.dashboards.length) {\n          objToUse.dashboards.map((item, index) => {\n            let dashboardId = item.id\n            let dashboardIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('dashboard') && iFrameArray[i].classList.contains(dashboardId)) {\n                dashboardIsRendered = true;\n              }\n            }\n            if (!dashboardIsRendered) {\n              LookerEmbedSDK.createDashboardWithId(dashboardId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('dashboard')\n                .withClassName(lookerResponseData.sharedFolder.dashboards.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName('dNone')\n                .withClassName(dashboardId)\n                .build()\n                .connect()\n                .then((dashboard) => {\n                  setTimeout(() => {\n                    // setIFrame(1)\n                  }, 1000)\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n\n            if (index === objToUse.dashboards.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n        setApiContent(objToUse)\n      } else if (lookerContent.type === 'explore' && lookerUser.user_attributes.permission_level === 'premium') {\n        let exploreId = lookerContent.id;\n        $(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`)).html('')\n        LookerEmbedSDK.createExploreWithId(exploreId)\n          .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n          .withClassName('iframe')\n          .on('explore:state:changed', (event) => {\n          })\n          .build()\n          .connect()\n          .then((explore) => {\n            setTimeout(() => setIFrame(1), 1000)\n            setExploreObj(exploreObj)\n          })\n          .catch((error) => {\n            console.error('Connection error', error)\n          })\n      }\n    })\n  }\n\n\n  return (\n    <div className={`${classes.root} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={classes.root}>\n          {iFrameExists ? '' :\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\n                <CircularProgress className={classes.circularProgress} />\n              </Card>\n            </Grid>\n          }\n\n          {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\n          <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n            <AppBar position=\"static\">\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                aria-label=\"simple tabs example\">\n                {tabContent.map((item, index) => (\n                  <Tab\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                    label={index == 1 && lookerUser.user_attributes.permission_level != 'premium' ?\n                      <div>{item.label} <Icon className={`fa fa-lock ${classes.faSm}`} /></div> :\n                      item.label}\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\n                    {...a11yProps(index)} />\n                ))}\n              </Tabs>\n            </AppBar>\n\n            <Box className=\"tabPanelContainer\">\n              {tabContent.map((tabContentItem, tabContentItemIndex) => (\n                <TabPanel\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + tabContentItemIndex)}`}\n                  value={value}\n                  index={tabContentItemIndex}>\n                  <Grid container>\n                    {tabContentItem.type === 'code flyout' ?\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerContent={lookerContent}\n                        clientSideCode={clientSideCode}\n                        serverSideCode={serverSideCode}\n                        lookerUser={lookerUser} />\n                      :\n                      tabContentItemIndex === 0\n                        ?\n                        <React.Fragment\n                          key={`${validIdHelper(demoComponentType + '-outerFragment-' + tabContentItemIndex)}`}>\n                          <Grid item sm={4} >\n                            <ApiHighlight height={400}>\n                              <TreeSideBar {...{\n                                togglePayWallModal,\n                                classes,\n                                demoComponentType,\n                                tabContent,\n                                tabContentItemIndex,\n                                action,\n                                apiContent,\n                                ...props\n                              }}\n                              />\n                            </ApiHighlight>\n                          </Grid>\n                          <Grid item sm={8} >\n                           <EmbedHighlight classes={classes}>\n                              <div\n                                className={`embedContainer ${validIdHelper(demoComponentType)}`}\n                                id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                              >\n                              </div>\n                            </EmbedHighlight>\n                          </Grid>\n                        </React.Fragment>\n                        :\n                        <Grid item sm={12} >\n                         <EmbedHighlight classes={classes}>\n                            <div\n                              className=\"embedContainer\"\n                              id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                              key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                            >\n                            </div>\n                          </EmbedHighlight>\n                        </Grid>\n                    }\n                  </Grid>\n                </TabPanel>\n              ))}\n            </Box>\n          </Box >\n        </div>\n      </Grid >\n    </div >\n  )\n}\n\n\nfunction TreeSideBar(props) {\n  // console.log('TreeSideBar')\n  const { staticContent, staticContent: { lookerContent }, classes, demoComponentType, tabContent, tabContentItemIndex, action, apiContent, lookerUser, togglePayWallModal } = props\n  const sharedFolderId = lookerContent[0].type === 'folder' ? lookerContent[0].id : '';\n  let treeCounter = 0;\n  const [selected, setSelected] = useState(2)\n  const expandedArr = Object.keys(apiContent).length ? [\"1\", \"\" + (2 + apiContent[Object.keys(apiContent)[0]].length)] : [];\n  const [expanded, setExpanded] = useState(expandedArr);\n\n  const handleToggle = (event, nodeIds) => {\n    setExpanded(nodeIds);\n  }\n\n  const handleSelect = (event, nodeIds) => {\n    setSelected(nodeIds);\n  };\n\n\n  useEffect(() => {\n    setExpanded(expandedArr)\n  }, [apiContent]);\n\n  return (\n    <TreeView\n      className={classes.tree}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n      expanded={expanded}\n      onNodeToggle={handleToggle}\n      onNodeSelect={handleSelect}\n    >\n      {apiContent ? Object.keys(apiContent).map((key, outerIndex) => (\n        <React.Fragment\n          key={`${validIdHelper(demoComponentType + '-innerFragment-' + outerIndex)}`}>\n          <TreeItem\n            key={`${validIdHelper(demoComponentType + '-outerTreeItem-' + outerIndex)}`}\n            nodeId={\"\" + (treeCounter += 1)}\n            // treecounter={treeCounter}\n            label={_.capitalize(key)}\n            icon={<Icon className={`fa fa-folder ${classes.icon}`} />}\n            disabled={apiContent[key].length ? false : true}\n          >\n            {\n              apiContent[key].length ?\n                apiContent[key].map((item, index) => (\n                  <TreeItem\n                    key={`${validIdHelper(demoComponentType + '-innerTreeItem-' + treeCounter)}`}\n                    nodeId={\"\" + (treeCounter += 1)}\n                    treecounter={treeCounter}\n                    selected={selected === treeCounter}\n                    className={selected === treeCounter ? `Mui-selected innerTreeItem` : `innerTreeItem`}\n                    contentid={item.id}\n                    label={item.folder_id === sharedFolderId &&\n                      key === 'looks' ?\n\n                      < div\n                        id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\n                        {item.title.length > 30 ? item.title.substring(0, 30) + '...' : item.title}\n\n                        <Button\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                          size=\"small\"\n                          className={`${classes.ml24} ${classes.childHoverVisibility}`}\n                          onClick={(event) => {\n                            if (lookerUser.user_attributes.permission_level === 'premium') {\n                              // setSelected(treeCounter);\n                              action(\n                                key.substring(0, key.length - 1),\n                                item.id,\n                                'explore',\n                                item.client_id,\n                                tabContent[tabContentItemIndex + 1].id,\n                                validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                              );\n                              event.stopPropagation();\n                            } else {\n                              // togglePayWallModal();\n\n                              togglePayWallModal({\n                                'show': true,\n                                'permissionNeeded': 'explore'\n                              });\n                            }\n                          }\n                          }\n                          color=\"default\"\n                        >\n                          Explore\n                                                                                            </Button>\n                      </div>\n                      : key === 'looks' ?\n                        <div\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\n\n                          {item.title.length > 30 ? item.title.substring(0, 30) + '...' : item.title}                          <Button\n                            id={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                            key={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                            size=\"small\"\n                            className={`${classes.ml24} ${classes.childHoverVisibility}`}\n                            onClick={(event) => {\n                              if (lookerUser.user_attributes.permission_level === 'premium') {\n                                // setSelected(treeCounter);\n                                action(\n                                  key.substring(0, key.length - 1),\n                                  item.id,\n                                  'edit',\n                                  item.client_id,\n                                  tabContent[tabContentItemIndex + 1].id,\n                                  validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                );\n                                event.stopPropagation();\n                              } else {\n                                // togglePayWallModal();\n\n                                togglePayWallModal({\n                                  'show': true,\n                                  'permissionNeeded': 'explore'\n                                });\n                              }\n                            }\n                            }\n                            color=\"primary\"\n                          >\n                            Edit\n                                                                                            </Button>\n                          <Button\n                            id={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                            key={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                            size=\"small\"\n                            className={`${classes.ml24} ${classes.childHoverVisibility}`}\n                            onClick={(event) => {\n                              if (lookerUser.user_attributes.permission_level === 'premium') {\n                                // setSelected(treeCounter);\n                                action(\n                                  key.substring(0, key.length - 1),\n                                  item.id,\n                                  'delete',\n                                  item.client_id,\n                                  tabContent[tabContentItemIndex + 1].id,\n                                  validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                );\n                                event.stopPropagation();\n                              } else {\n                                // togglePayWallModal();\n\n                                togglePayWallModal({\n                                  'show': true,\n                                  'permissionNeeded': 'explore'\n                                });\n                              }\n                            }\n                            }\n                            color=\"secondary\"\n                          >\n                            Delete\n                                                                                            </Button>\n                        </div>\n                        : item.title.length > 30 ? item.title.substring(0, 30) + '...' : item.title\n                    }\n                    onClick={() => {\n                      // setSelected(treeCounter)\n                      action(\n                        key.substring(0, key.length - 1), item.id)\n                    }} />\n\n                ))\n                :\n                ''\n            }\n          </TreeItem>\n\n        </React.Fragment>\n      )) : ''}\n    </TreeView>\n  )\n}",
    "export default \"import $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button } from '@material-ui/core'\\nimport { TreeView, TreeItem } from '@material-ui/lab';\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./ReportBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport '../../Home.css';\\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of ReportBuilder Component\\nexport default function ReportBuilder(props) {\\n  //initialize state using hooks\\n  const [iFrameExists, setIFrame] = useState(0);\\n  const [apiContent, setApiContent] = useState([]);\\n  const [exploreObj, setExploreObj] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n\\n  const { togglePayWallModal } = useContext(AppContext)\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const [value, setValue] = useState(0);\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  const demoComponentType = type || 'code flyout';\\n  // const tabContent = lookerUser.user_attributes.permission_level === 'premium' ?\\n  //   [...lookerContent, codeTab] :\\n  //   [lookerContent[0], codeTab];\\n  const tabContent =\\n    [...lookerContent, codeTab]\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n\\n    if (newValue == 1 && lookerUser.user_attributes.permission_level != 'premium') {\\n      // togglePayWallModal()\\n\\n      togglePayWallModal({\\n        'show': true,\\n        'permissionNeeded': 'explore'\\n      });\\n    } else {\\n      handleTabChange(newValue);\\n      setValue(newValue);\\n      if (value > 0 && newValue === 0) performLookerApiCalls(lookerContent)\\n    }\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * performLookerApiCalls and setSampleCode\\n  */\\n  useEffect(() => {\\n    if (activeTabValue > value) {\\n      setValue(activeTabValue)\\n    }\\n    setTimeout(() => performLookerApiCalls(lookerContent, 1), 100)\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent, lookerUser]);\\n\\n  const action = async (contentType, contentId, secondaryAction, qid, exploreId, newReportEmbedContainer) => {\\n    let iFrameArray = $(\\\".embedContainer:visible > iframe\\\")\\n\\n    let matchingIndex = 0;\\n    for (let i = 0; i < iFrameArray.length; i++) {\\n      if (iFrameArray[i].classList.contains(contentType) && iFrameArray[i].classList.contains(contentId)) {\\n        iFrameArray[i].classList.remove('dNone')\\n        matchingIndex = i;\\n      } else {\\n        iFrameArray[i].classList.add('dNone')\\n      }\\n    }\\n\\n    if (secondaryAction === 'edit' || secondaryAction === 'explore') {\\n      $(`#${newReportEmbedContainer}`).empty();\\n\\n      LookerEmbedSDK.createExploreWithId(exploreId)\\n        .appendTo(`#${newReportEmbedContainer}`)\\n        .withClassName('iframe')\\n        .on('explore:state:changed', (event) => {\\n        })\\n        .withClassName(\\\"exploreIframe\\\")\\n        .withParams({\\n          qid: qid\\n        })\\n        .build()\\n        .connect()\\n        .then((explore) => {\\n          setIFrame(1)\\n          setExploreObj(explore)\\n        })\\n        .catch((error) => {\\n          console.error('Connection error', error)\\n        })\\n      handleChange('edit', 1)\\n    } else if (secondaryAction === 'delete') {\\n      let lookerResponse = await fetch('/deletelook/' + contentId, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      });\\n      if (lookerResponse.status === 200) {\\n        performLookerApiCalls(lookerContent)\\n      }\\n    }\\n  }\\n\\n  const performLookerApiCalls = function (lookerContent, animateLoad) {\\n    if (animateLoad) {\\n      handleChange('refresh', 0)\\n      setIFrame(0)\\n      setApiContent([])\\n    }\\n\\n    lookerContent.map(async lookerContent => {\\n      if (lookerContent.type === 'folder') {\\n        let lookerResponse = await fetch('/fetchfolder/' + lookerContent.id, {\\n          method: 'GET',\\n          headers: {\\n            Accept: 'application/json',\\n            'Content-Type': 'application/json'\\n          }\\n        })\\n\\n        let lookerResponseData = await lookerResponse.json();\\n        if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\\n\\n        let looksToUse = [...lookerResponseData.sharedFolder.looks, ...lookerResponseData.embeddedUserFolder.looks]\\n        let dashboardsToUse = [...lookerResponseData.sharedFolder.dashboards]\\n        let objToUse = {\\n          looks: looksToUse,\\n          dashboards: dashboardsToUse\\n        }\\n        let iFrameArray = $(`.embedContainer.${validIdHelper(demoComponentType)} > iframe`);\\n        if (objToUse.looks.length) {\\n          objToUse.looks.map((item, index) => {\\n\\n            let lookId = item.id;\\n            let lookIsRendered = false;\\n            for (let i = 0; i < iFrameArray.length; i++) {\\n              if (iFrameArray[i].classList.contains('look') && iFrameArray[i].classList.contains(lookId)) {\\n                lookIsRendered = true;\\n              }\\n            }\\n\\n            if (!lookIsRendered) {\\n              LookerEmbedSDK.createLookWithId(lookId)\\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n                .withClassName('iframe')\\n                .withClassName('look')\\n                .withClassName(lookerResponseData.sharedFolder.looks.indexOf(item) > -1 ? \\\"shared\\\" : \\\"personal\\\")\\n                .withClassName(index > 0 ? 'dNone' : 'oops')\\n                .withClassName(lookId)\\n                .build()\\n                .connect()\\n                .then((look) => {\\n                  // setIFrame(1)\\n                })\\n                .catch((error) => {\\n                  console.error('Connection error', error)\\n                })\\n            }\\n\\n            if (index === objToUse.looks.length - 1) {\\n              setTimeout(() => setIFrame(1), 1000)\\n            }\\n          })\\n        }\\n\\n        if (objToUse.dashboards.length) {\\n          objToUse.dashboards.map((item, index) => {\\n            let dashboardId = item.id\\n            let dashboardIsRendered = false;\\n            for (let i = 0; i < iFrameArray.length; i++) {\\n              if (iFrameArray[i].classList.contains('dashboard') && iFrameArray[i].classList.contains(dashboardId)) {\\n                dashboardIsRendered = true;\\n              }\\n            }\\n            if (!dashboardIsRendered) {\\n              LookerEmbedSDK.createDashboardWithId(dashboardId)\\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n                .withClassName('iframe')\\n                .withClassName('dashboard')\\n                .withClassName(lookerResponseData.sharedFolder.dashboards.indexOf(item) > -1 ? \\\"shared\\\" : \\\"personal\\\")\\n                .withClassName('dNone')\\n                .withClassName(dashboardId)\\n                .build()\\n                .connect()\\n                .then((dashboard) => {\\n                  setTimeout(() => {\\n                    // setIFrame(1)\\n                  }, 1000)\\n                })\\n                .catch((error) => {\\n                  console.error('Connection error', error)\\n                })\\n            }\\n\\n\\n            if (index === objToUse.dashboards.length - 1) {\\n              setTimeout(() => setIFrame(1), 1000)\\n            }\\n          })\\n        }\\n        setApiContent(objToUse)\\n      } else if (lookerContent.type === 'explore' && lookerUser.user_attributes.permission_level === 'premium') {\\n        let exploreId = lookerContent.id;\\n        $(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`)).html('')\\n        LookerEmbedSDK.createExploreWithId(exploreId)\\n          .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n          .withClassName('iframe')\\n          .on('explore:state:changed', (event) => {\\n          })\\n          .build()\\n          .connect()\\n          .then((explore) => {\\n            setTimeout(() => setIFrame(1), 1000)\\n            setExploreObj(exploreObj)\\n          })\\n          .catch((error) => {\\n            console.error('Connection error', error)\\n          })\\n      }\\n    })\\n  }\\n\\n\\n  return (\\n    <div className={`${classes.root} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={classes.root}>\\n          {iFrameExists ? '' :\\n            <Grid item sm={12} >\\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                <CircularProgress className={classes.circularProgress} />\\n              </Card>\\n            </Grid>\\n          }\\n\\n          {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\\n          <Box className={iFrameExists ? `` : `${classes.hidden}`}>\\n            <AppBar position=\\\"static\\\">\\n              <Tabs\\n                className={classes.tabs}\\n                value={value}\\n                onChange={handleChange}\\n                aria-label=\\\"simple tabs example\\\">\\n                {tabContent.map((item, index) => (\\n                  <Tab\\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\\n                    label={index == 1 && lookerUser.user_attributes.permission_level != 'premium' ?\\n                      <div>{item.label} <Icon className={`fa fa-lock ${classes.faSm}`} /></div> :\\n                      item.label}\\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\\n                    {...a11yProps(index)} />\\n                ))}\\n              </Tabs>\\n            </AppBar>\\n\\n            <Box className=\\\"tabPanelContainer\\\">\\n              {tabContent.map((tabContentItem, tabContentItemIndex) => (\\n                <TabPanel\\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + tabContentItemIndex)}`}\\n                  value={value}\\n                  index={tabContentItemIndex}>\\n                  <Grid container>\\n                    {tabContentItem.type === 'code flyout' ?\\n                      <CodeFlyout {...props}\\n                        classes={classes}\\n                        lookerContent={lookerContent}\\n                        clientSideCode={clientSideCode}\\n                        serverSideCode={serverSideCode}\\n                        lookerUser={lookerUser} />\\n                      :\\n                      tabContentItemIndex === 0\\n                        ?\\n                        <React.Fragment\\n                          key={`${validIdHelper(demoComponentType + '-outerFragment-' + tabContentItemIndex)}`}>\\n                          <Grid item sm={4} >\\n                            <ApiHighlight height={400}>\\n                              <TreeSideBar {...{\\n                                togglePayWallModal,\\n                                classes,\\n                                demoComponentType,\\n                                tabContent,\\n                                tabContentItemIndex,\\n                                action,\\n                                apiContent,\\n                                ...props\\n                              }}\\n                              />\\n                            </ApiHighlight>\\n                          </Grid>\\n                          <Grid item sm={8} >\\n                           <EmbedHighlight classes={classes}>\\n                              <div\\n                                className={`embedContainer ${validIdHelper(demoComponentType)}`}\\n                                id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                              >\\n                              </div>\\n                            </EmbedHighlight>\\n                          </Grid>\\n                        </React.Fragment>\\n                        :\\n                        <Grid item sm={12} >\\n                         <EmbedHighlight classes={classes}>\\n                            <div\\n                              className=\\\"embedContainer\\\"\\n                              id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                              key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                            >\\n                            </div>\\n                          </EmbedHighlight>\\n                        </Grid>\\n                    }\\n                  </Grid>\\n                </TabPanel>\\n              ))}\\n            </Box>\\n          </Box >\\n        </div>\\n      </Grid >\\n    </div >\\n  )\\n}\\n\\n\\nfunction TreeSideBar(props) {\\n  // console.log('TreeSideBar')\\n  const { staticContent, staticContent: { lookerContent }, classes, demoComponentType, tabContent, tabContentItemIndex, action, apiContent, lookerUser, togglePayWallModal } = props\\n  const sharedFolderId = lookerContent[0].type === 'folder' ? lookerContent[0].id : '';\\n  let treeCounter = 0;\\n  const [selected, setSelected] = useState(2)\\n  const expandedArr = Object.keys(apiContent).length ? [\\\"1\\\", \\\"\\\" + (2 + apiContent[Object.keys(apiContent)[0]].length)] : [];\\n  const [expanded, setExpanded] = useState(expandedArr);\\n\\n  const handleToggle = (event, nodeIds) => {\\n    setExpanded(nodeIds);\\n  }\\n\\n  const handleSelect = (event, nodeIds) => {\\n    setSelected(nodeIds);\\n  };\\n\\n\\n  useEffect(() => {\\n    setExpanded(expandedArr)\\n  }, [apiContent]);\\n\\n  return (\\n    <TreeView\\n      className={classes.tree}\\n      defaultCollapseIcon={<ExpandMoreIcon />}\\n      defaultExpandIcon={<ChevronRightIcon />}\\n      expanded={expanded}\\n      onNodeToggle={handleToggle}\\n      onNodeSelect={handleSelect}\\n    >\\n      {apiContent ? Object.keys(apiContent).map((key, outerIndex) => (\\n        <React.Fragment\\n          key={`${validIdHelper(demoComponentType + '-innerFragment-' + outerIndex)}`}>\\n          <TreeItem\\n            key={`${validIdHelper(demoComponentType + '-outerTreeItem-' + outerIndex)}`}\\n            nodeId={\\\"\\\" + (treeCounter += 1)}\\n            // treecounter={treeCounter}\\n            label={_.capitalize(key)}\\n            icon={<Icon className={`fa fa-folder ${classes.icon}`} />}\\n            disabled={apiContent[key].length ? false : true}\\n          >\\n            {\\n              apiContent[key].length ?\\n                apiContent[key].map((item, index) => (\\n                  <TreeItem\\n                    key={`${validIdHelper(demoComponentType + '-innerTreeItem-' + treeCounter)}`}\\n                    nodeId={\\\"\\\" + (treeCounter += 1)}\\n                    treecounter={treeCounter}\\n                    selected={selected === treeCounter}\\n                    className={selected === treeCounter ? `Mui-selected innerTreeItem` : `innerTreeItem`}\\n                    contentid={item.id}\\n                    label={item.folder_id === sharedFolderId &&\\n                      key === 'looks' ?\\n\\n                      < div\\n                        id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                        key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                        className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\\n                        {item.title.length > 30 ? item.title.substring(0, 30) + '...' : item.title}\\n\\n                        <Button\\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\\n                          size=\\\"small\\\"\\n                          className={`${classes.ml24} ${classes.childHoverVisibility}`}\\n                          onClick={(event) => {\\n                            if (lookerUser.user_attributes.permission_level === 'premium') {\\n                              // setSelected(treeCounter);\\n                              action(\\n                                key.substring(0, key.length - 1),\\n                                item.id,\\n                                'explore',\\n                                item.client_id,\\n                                tabContent[tabContentItemIndex + 1].id,\\n                                validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                              );\\n                              event.stopPropagation();\\n                            } else {\\n                              // togglePayWallModal();\\n\\n                              togglePayWallModal({\\n                                'show': true,\\n                                'permissionNeeded': 'explore'\\n                              });\\n                            }\\n                          }\\n                          }\\n                          color=\\\"default\\\"\\n                        >\\n                          Explore\\n                                                                                            </Button>\\n                      </div>\\n                      : key === 'looks' ?\\n                        <div\\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                          className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\\n\\n                          {item.title.length > 30 ? item.title.substring(0, 30) + '...' : item.title}                          <Button\\n                            id={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\\n                            key={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\\n                            size=\\\"small\\\"\\n                            className={`${classes.ml24} ${classes.childHoverVisibility}`}\\n                            onClick={(event) => {\\n                              if (lookerUser.user_attributes.permission_level === 'premium') {\\n                                // setSelected(treeCounter);\\n                                action(\\n                                  key.substring(0, key.length - 1),\\n                                  item.id,\\n                                  'edit',\\n                                  item.client_id,\\n                                  tabContent[tabContentItemIndex + 1].id,\\n                                  validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                                );\\n                                event.stopPropagation();\\n                              } else {\\n                                // togglePayWallModal();\\n\\n                                togglePayWallModal({\\n                                  'show': true,\\n                                  'permissionNeeded': 'explore'\\n                                });\\n                              }\\n                            }\\n                            }\\n                            color=\\\"primary\\\"\\n                          >\\n                            Edit\\n                                                                                            </Button>\\n                          <Button\\n                            id={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\\n                            key={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\\n                            size=\\\"small\\\"\\n                            className={`${classes.ml24} ${classes.childHoverVisibility}`}\\n                            onClick={(event) => {\\n                              if (lookerUser.user_attributes.permission_level === 'premium') {\\n                                // setSelected(treeCounter);\\n                                action(\\n                                  key.substring(0, key.length - 1),\\n                                  item.id,\\n                                  'delete',\\n                                  item.client_id,\\n                                  tabContent[tabContentItemIndex + 1].id,\\n                                  validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                                );\\n                                event.stopPropagation();\\n                              } else {\\n                                // togglePayWallModal();\\n\\n                                togglePayWallModal({\\n                                  'show': true,\\n                                  'permissionNeeded': 'explore'\\n                                });\\n                              }\\n                            }\\n                            }\\n                            color=\\\"secondary\\\"\\n                          >\\n                            Delete\\n                                                                                            </Button>\\n                        </div>\\n                        : item.title.length > 30 ? item.title.substring(0, 30) + '...' : item.title\\n                    }\\n                    onClick={() => {\\n                      // setSelected(treeCounter)\\n                      action(\\n                        key.substring(0, key.length - 1), item.id)\\n                    }} />\\n\\n                ))\\n                :\\n                ''\\n            }\\n          </TreeItem>\\n\\n        </React.Fragment>\\n      )) : ''}\\n    </TreeView>\\n  )\\n}\";",
    "import { makeStyles } from '@material-ui/core/styles';\nimport { grey, orange } from '@material-ui/core/colors';\n\nconst greyPrimary = grey[400];\nconst greySecondary = grey[100];\nconst orangePrimary = orange[400];\nconst orangeSecondary = orange[100];\n\nexport default makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n    flexCentered: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    hidden: {\n        visibility: 'hidden',\n        position: 'absolute', //hack for obscuring other elements within Box\n        zIndex: -1\n    },\n    tabs: {\n        backgroundColor: 'white',\n        color: '#6c757d'\n    },\n    dNone: {\n        display: 'none'\n    },\n    dBlock: {\n        display: 'block'\n    },\n    tree: {\n        height: 240,\n        flexGrow: 1,\n        maxWidth: 400,\n    },\n    icon: {\n        marginRight: 12,\n        fontSize: '1rem',\n        overflow: 'visible'\n    },\n    ml12: {\n        marginLeft: 12\n    },\n    mt12: {\n        marginTop: 12\n    },\n    w100: {\n        width: '100%'\n    },\n    mlAuto: {\n        marginLeft: 'auto'\n    },\n    table: {\n        minWidth: 650,\n    },\n    tableContainer: {\n        maxHeight: 650,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    greyPrimary: {\n        backgroundColor: greyPrimary\n    },\n    greySecondary: {\n        backgroundColor: greySecondary\n    },\n    orangePrimary: {\n        backgroundColor: orangePrimary\n    },\n    orangeSecondary: {\n        backgroundColor: orangeSecondary\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    skeleton: {\n        minWidth: 275,\n        minHeight: 600,\n    },\n    card: {\n        minWidth: 275,\n        minHeight: 600,\n    },\n    textCenter: {\n        textAlign: 'center'\n    }\n}));",
    "import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport function descendingComparator(a, b, orderBy) {\n    if (a[orderBy] && b[orderBy] && b[orderBy].value < a[orderBy].value) {\n        return -1;\n    }\n    if (a[orderBy] && b[orderBy] && b[orderBy].value > a[orderBy].value) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}",
    "import $ from 'jquery';\nimport _ from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputLabel, MenuItem, FormControl,\n  Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,\n  TableSortLabel, FormControlLabel, Switch, Chip, Divider\n} from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./QueryBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { TabPanel, a11yProps, descendingComparator, getComparator, stableSort } from './helpers.js';\nconst { validIdHelper, prettifyString } = require('../../../tools');\n\n//start of QueryBuilder Component\nexport default function QueryBuilder(props) {\n  // console.log('QueryBuilder')\n  // console.log('props', props)\n\n  //initialize state using hooks\n  const [value, setValue] = useState(0);\n  const [apiContent, setApiContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  //declare constants\n\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  const tabContent = [...lookerContent, codeTab];\n  const demoComponentType = type || 'code flyout';\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  /**\n   * listen for lookerContent and call \n   * performLookerApiCalls and setSampleCode\n  */\n  useEffect(() => {\n    lookerContent.map(lookerContent => {\n      setTimeout(() => action(lookerContent.queryBody, lookerContent.resultFormat), 100);\n    })\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser])\n\n  const action = async (newQuery, resultFormat) => {\n    // console.log('action')\n    let apiContentCopy = { ...apiContent }\n    apiContentCopy.status = 'running';\n    setApiContent(apiContentCopy)\n\n    let lookerCreateTaskResposnse = await fetch('/createquerytask/' + JSON.stringify(newQuery), {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerCreateTaskResponseData = await lookerCreateTaskResposnse.json();\n\n    let taskInterval = setInterval(async () => {\n      let lookerCheckTaskResposnse = await fetch('/checkquerytask/' + lookerCreateTaskResponseData.queryTaskId, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      let lookerCheckTaskResponseData = await lookerCheckTaskResposnse.json();\n      if (lookerCheckTaskResponseData.queryResults.status === 'complete') {\n        clearInterval(taskInterval);\n        setApiContent(lookerCheckTaskResponseData.queryResults)\n        setServerSideCode(lookerCreateTaskResponseData.code)\n      }\n    }, 5000)\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={classes.root}>\n          <Box>\n            <AppBar position=\"static\">\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                aria-label=\"simple tabs example\">\n                {tabContent.map((item, index) => (\n                  <Tab\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                    label={item.label}\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\n                    {...a11yProps(index)} />\n                ))}\n              </Tabs>\n            </AppBar>\n            <Box className=\"tabPanelContainer\">\n              {tabContent.map((tabContentItem, index) => (\n                <TabPanel\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\n                  value={value}\n                  index={index}>\n                  <Grid container>\n                    {tabContentItem.type === 'code flyout' ?\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerContent={lookerContent}\n                        clientSideCode={clientSideCode}\n                        serverSideCode={serverSideCode}\n                        lookerUser={lookerUser} />\n                      :\n                      <React.Fragment\n                        key={`${validIdHelper(demoComponentType + '-innerFragment-' + index)}`}>\n                        <FilterBar {...props}\n                          classes={classes}\n                          action={action}\n                        />\n                        <Divider className={classes.divider} />\n                        <Box\n                          className={classes.w100}\n                          mt={2}>\n                          {apiContent.status === 'running' ?\n                            <Grid item sm={12} >\n                              <Card className={`${classes.card} ${classes.flexCentered}`}>\n                                <CircularProgress className={classes.circularProgress} />\n                              </Card>\n                            </Grid >\n                            : apiContent.data && apiContent.data.length ?\n                              <Grid item sm={12}>\n                                <EnhancedTable\n                                  {...props}\n                                  classes={classes}\n                                  rows={apiContent.data}\n                                  lookerContent={lookerContent}\n                                />\n                              </Grid>\n                              :\n                              <Grid item sm={12} >\n                                <Typography variant=\"h6\" component=\"h6\" className={`${classes.gridTitle} ${classes.textCenter}`}>\n                                  No results found, try a new query<br />\n                                </Typography>\n                              </Grid>\n                          }\n                        </Box >\n                      </React.Fragment >\n                    }\n                  </Grid >\n                </TabPanel >\n              ))}\n            </Box >\n          </Box >\n        </div >\n      </Grid >\n    </div >\n  )\n}\n\n\nfunction FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, classes, action, lookerUser } = props;\n  let measureCounter = 0;\n  let dimensionCounter = 0;\n\n  const [expanded, setExpanded] = useState(true);\n  const [fieldsChipData, setFieldsChipData] = useState(lookerContent[0].queryBody ? lookerContent[0].queryBody.fields.map((item, index) => {\n    return {\n      key: 'fieldChipData' + index,\n      label: prettifyString(item.substring(item.lastIndexOf('.') + 1, item.length)),\n      datalabel: item,\n      selected: true,\n      fieldType: lookerContent[0].fieldType[item]\n    }\n  }) : '');\n  const [queryModified, setQueryModified] = useState(false);\n  const [filtersData, setFilterData] = useState(lookerContent[0].queryBody ? Object.keys(lookerContent[0].queryBody.filters).map((key, index) => {\n    return {\n      key: 'filter' + index,\n      label: key,\n      value: lookerContent[0].queryBody.filters[key],\n      type: lookerContent[0].filterType[key]\n    }\n  }) : '')\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  const handleFieldChipClick = (chip, index) => {\n    let updatedFieldsChipData = [...fieldsChipData]\n    updatedFieldsChipData[index].selected = updatedFieldsChipData[index].selected === false ? true : false\n    setFieldsChipData(updatedFieldsChipData)\n    setQueryModified(true)\n  }\n\n  const handleSelectChange = (index, newValue) => {\n    let updatedFiltersData = [...filtersData]\n    updatedFiltersData[index].value = newValue;\n    setFilterData(updatedFiltersData)\n    setQueryModified(true)\n  }\n\n  const handleQuerySubmit = (event) => {\n    if (queryModified) {\n      let newFields = fieldsChipData.filter(chip => chip.selected).map(item => item.datalabel);\n      let currentFilters = {}; //needs to be object\n      filtersData.map((item, index) => {\n        currentFilters[item.label] = item.value\n      })\n      let newQueryObj = lookerContent[0].queryBody;\n      newQueryObj.fields = newFields;\n      newQueryObj.filters = currentFilters;\n      action(newQueryObj, lookerContent[0].resultFormat);\n    }\n  }\n\n  useEffect(() => {\n    handleQuerySubmit()\n  }, [fieldsChipData, filtersData]);\n\n  const datePermissionMap = {\n    'basic': [\"1 week\", \"1 month\", \"3 months\", \"6 months\"]\n  }\n  datePermissionMap.advanced = [...datePermissionMap.basic, \"1 year\"]\n  datePermissionMap.premium = [...datePermissionMap.advanced, \"before today\"]\n\n  useEffect(() => {\n    let updatedFiltersData = [...filtersData]\n    updatedFiltersData[3].value = \"6 months\";\n    setFilterData(updatedFiltersData)\n  }, [lookerUser]);\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={classes.heading}>Build Query</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Select Fields:\n      {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'measure' ?\n                      <Chip\n                        key={item.label}\n                        // key={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        measurecounter={measureCounter += 1}\n                        className={item.selected ? `${classes.orangePrimary}` : ``}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <DoneIcon className={classes.dBlock} /> : <DoneIcon className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Totals:\n                          {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'dimension' ?\n                      <Chip\n                        key={item.label}\n                        dimensioncounter={dimensionCounter += 1}\n                        className={item.selected ? `${classes.greyPrimary}` : ``}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <DoneIcon className={classes.dBlock} /> : <DoneIcon className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Filter By:\n                      </Typography>\n            {filtersData.length ? filtersData.map((item, index) => {\n              return (\n                <FormControl className={item.value.length ? classes.formControl : classes.hidden} key={validIdHelper(`${item.label}FormControl`)}>\n                  {\n                    item.type === 'yesno' ?\n                      <>\n                        <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n                        <Select\n                          labelId={validIdHelper(`${item.label}FilterLabel`)}\n                          id={validIdHelper(`${item.label}FilterSelect`)}\n                          value={item.value}\n                          onChange={(event) => handleSelectChange(index, event.target.value)}\n                        >\n                          <MenuItem value=\"Yes\">Yes</MenuItem>\n                          <MenuItem value=\"No\">No</MenuItem>\n                          <MenuItem value=\"All\">All</MenuItem>\n                        </Select>\n                      </>\n                      : item.type === 'date' ?\n                        <>\n                          <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n\n                          <Select\n                            labelId={validIdHelper(`${item.label}FilterLabel`)}\n                            id={validIdHelper(`${item.label}FilterSelect`)}\n                            value={item.value || '6 months'}\n                            onChange={(event) => handleSelectChange(index, event.target.value)}\n                          >\n                            {lookerUser.user_attributes.permission_level ? datePermissionMap[lookerUser.user_attributes.permission_level].map(item => (\n                              <MenuItem key={validIdHelper(item)} value={item}>{_.capitalize(item)}</MenuItem>\n                            )) : ''}\n                          </Select>\n                        </>\n                        : ''\n                  }\n                </FormControl>\n              )\n            }) : ''}\n          </Grid>\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, rows } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {Object.keys(rows[0]).map((key, index) => (\n          <TableCell\n            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            id={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            align={key.numeric ? 'right' : 'left'}\n            padding={key.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === key ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === key}\n              direction={orderBy === key ? order : 'asc'}\n              onClick={createSortHandler(key)}\n            >\n              {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}\n              {orderBy === key ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  // onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nfunction EnhancedTable(props) {\n  const { rows, classes, lookerContent } = props;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(Object.keys(rows[0])[0]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <ApiHighlight classes={classes} >\n      <div className={classes.root}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              {...props}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      key={validIdHelper('TableRow-' + index)}\n                      id={validIdHelper('TableRow-' + index)}>\n                      {Object.keys(row).map((key, index) => (\n                        <TableCell\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          className={lookerContent[0].fieldType[key] === 'dimension' ? classes.greySecondary : classes.orangeSecondary}\n                          align=\"right\">\n                          {row[key].rendered ? row[key].rendered : row[key].value}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n        <FormControlLabel\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\n          label=\"Compact\"\n        />\n      </div>\n    </ApiHighlight>\n  );\n}",
    "export default \"import $ from 'jquery';\\nimport _ from 'lodash';\\nimport React, { useState, useEffect } from 'react';\\nimport PropTypes from 'prop-types';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputLabel, MenuItem, FormControl,\\n  Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,\\n  TableSortLabel, FormControlLabel, Switch, Chip, Divider\\n} from '@material-ui/core'\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\nimport DoneIcon from '@material-ui/icons/Done';\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./QueryBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { ApiHighlight } from '../../Highlights/Highlight';\\nimport { TabPanel, a11yProps, descendingComparator, getComparator, stableSort } from './helpers.js';\\nconst { validIdHelper, prettifyString } = require('../../../tools');\\n\\n//start of QueryBuilder Component\\nexport default function QueryBuilder(props) {\\n  // console.log('QueryBuilder')\\n  // console.log('props', props)\\n\\n  //initialize state using hooks\\n  const [value, setValue] = useState(0);\\n  const [apiContent, setApiContent] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  //declare constants\\n\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  const tabContent = [...lookerContent, codeTab];\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * performLookerApiCalls and setSampleCode\\n  */\\n  useEffect(() => {\\n    lookerContent.map(lookerContent => {\\n      setTimeout(() => action(lookerContent.queryBody, lookerContent.resultFormat), 100);\\n    })\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent, lookerUser])\\n\\n  const action = async (newQuery, resultFormat) => {\\n    // console.log('action')\\n    let apiContentCopy = { ...apiContent }\\n    apiContentCopy.status = 'running';\\n    setApiContent(apiContentCopy)\\n\\n    let lookerCreateTaskResposnse = await fetch('/createquerytask/' + JSON.stringify(newQuery), {\\n      method: 'GET',\\n      headers: {\\n        Accept: 'application/json',\\n        'Content-Type': 'application/json'\\n      }\\n    })\\n    let lookerCreateTaskResponseData = await lookerCreateTaskResposnse.json();\\n\\n    let taskInterval = setInterval(async () => {\\n      let lookerCheckTaskResposnse = await fetch('/checkquerytask/' + lookerCreateTaskResponseData.queryTaskId, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      })\\n      let lookerCheckTaskResponseData = await lookerCheckTaskResposnse.json();\\n      if (lookerCheckTaskResponseData.queryResults.status === 'complete') {\\n        clearInterval(taskInterval);\\n        setApiContent(lookerCheckTaskResponseData.queryResults)\\n        setServerSideCode(lookerCreateTaskResponseData.code)\\n      }\\n    }, 5000)\\n  }\\n\\n  return (\\n    <div className={`${classes.root} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={classes.root}>\\n          <Box>\\n            <AppBar position=\\\"static\\\">\\n              <Tabs\\n                className={classes.tabs}\\n                value={value}\\n                onChange={handleChange}\\n                aria-label=\\\"simple tabs example\\\">\\n                {tabContent.map((item, index) => (\\n                  <Tab\\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\\n                    label={item.label}\\n                    className={item.type === 'code flyout' ? `${classes.mlAuto}` : ``}\\n                    {...a11yProps(index)} />\\n                ))}\\n              </Tabs>\\n            </AppBar>\\n            <Box className=\\\"tabPanelContainer\\\">\\n              {tabContent.map((tabContentItem, index) => (\\n                <TabPanel\\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + index)}`}\\n                  value={value}\\n                  index={index}>\\n                  <Grid container>\\n                    {tabContentItem.type === 'code flyout' ?\\n                      <CodeFlyout {...props}\\n                        classes={classes}\\n                        lookerContent={lookerContent}\\n                        clientSideCode={clientSideCode}\\n                        serverSideCode={serverSideCode}\\n                        lookerUser={lookerUser} />\\n                      :\\n                      <React.Fragment\\n                        key={`${validIdHelper(demoComponentType + '-innerFragment-' + index)}`}>\\n                        <FilterBar {...props}\\n                          classes={classes}\\n                          action={action}\\n                        />\\n                        <Divider className={classes.divider} />\\n                        <Box\\n                          className={classes.w100}\\n                          mt={2}>\\n                          {apiContent.status === 'running' ?\\n                            <Grid item sm={12} >\\n                              <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                                <CircularProgress className={classes.circularProgress} />\\n                              </Card>\\n                            </Grid >\\n                            : apiContent.data && apiContent.data.length ?\\n                              <Grid item sm={12}>\\n                                <EnhancedTable\\n                                  {...props}\\n                                  classes={classes}\\n                                  rows={apiContent.data}\\n                                  lookerContent={lookerContent}\\n                                />\\n                              </Grid>\\n                              :\\n                              <Grid item sm={12} >\\n                                <Typography variant=\\\"h6\\\" component=\\\"h6\\\" className={`${classes.gridTitle} ${classes.textCenter}`}>\\n                                  No results found, try a new query<br />\\n                                </Typography>\\n                              </Grid>\\n                          }\\n                        </Box >\\n                      </React.Fragment >\\n                    }\\n                  </Grid >\\n                </TabPanel >\\n              ))}\\n            </Box >\\n          </Box >\\n        </div >\\n      </Grid >\\n    </div >\\n  )\\n}\\n\\n\\nfunction FilterBar(props) {\\n  const { staticContent, staticContent: { lookerContent }, classes, action, lookerUser } = props;\\n  let measureCounter = 0;\\n  let dimensionCounter = 0;\\n\\n  const [expanded, setExpanded] = useState(true);\\n  const [fieldsChipData, setFieldsChipData] = useState(lookerContent[0].queryBody ? lookerContent[0].queryBody.fields.map((item, index) => {\\n    return {\\n      key: 'fieldChipData' + index,\\n      label: prettifyString(item.substring(item.lastIndexOf('.') + 1, item.length)),\\n      datalabel: item,\\n      selected: true,\\n      fieldType: lookerContent[0].fieldType[item]\\n    }\\n  }) : '');\\n  const [queryModified, setQueryModified] = useState(false);\\n  const [filtersData, setFilterData] = useState(lookerContent[0].queryBody ? Object.keys(lookerContent[0].queryBody.filters).map((key, index) => {\\n    return {\\n      key: 'filter' + index,\\n      label: key,\\n      value: lookerContent[0].queryBody.filters[key],\\n      type: lookerContent[0].filterType[key]\\n    }\\n  }) : '')\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n\\n  const handleFieldChipClick = (chip, index) => {\\n    let updatedFieldsChipData = [...fieldsChipData]\\n    updatedFieldsChipData[index].selected = updatedFieldsChipData[index].selected === false ? true : false\\n    setFieldsChipData(updatedFieldsChipData)\\n    setQueryModified(true)\\n  }\\n\\n  const handleSelectChange = (index, newValue) => {\\n    let updatedFiltersData = [...filtersData]\\n    updatedFiltersData[index].value = newValue;\\n    setFilterData(updatedFiltersData)\\n    setQueryModified(true)\\n  }\\n\\n  const handleQuerySubmit = (event) => {\\n    if (queryModified) {\\n      let newFields = fieldsChipData.filter(chip => chip.selected).map(item => item.datalabel);\\n      let currentFilters = {}; //needs to be object\\n      filtersData.map((item, index) => {\\n        currentFilters[item.label] = item.value\\n      })\\n      let newQueryObj = lookerContent[0].queryBody;\\n      newQueryObj.fields = newFields;\\n      newQueryObj.filters = currentFilters;\\n      action(newQueryObj, lookerContent[0].resultFormat);\\n    }\\n  }\\n\\n  useEffect(() => {\\n    handleQuerySubmit()\\n  }, [fieldsChipData, filtersData]);\\n\\n  const datePermissionMap = {\\n    'basic': [\\\"1 week\\\", \\\"1 month\\\", \\\"3 months\\\", \\\"6 months\\\"]\\n  }\\n  datePermissionMap.advanced = [...datePermissionMap.basic, \\\"1 year\\\"]\\n  datePermissionMap.premium = [...datePermissionMap.advanced, \\\"before today\\\"]\\n\\n  useEffect(() => {\\n    let updatedFiltersData = [...filtersData]\\n    updatedFiltersData[3].value = \\\"6 months\\\";\\n    setFilterData(updatedFiltersData)\\n  }, [lookerUser]);\\n\\n  return (\\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel}>\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMoreIcon />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <Typography className={classes.heading}>Build Query</Typography>\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        <Grid container spacing={3}>\\n          <Grid item sm={12}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Select Fields:\\n      {fieldsChipData.length ?\\n                fieldsChipData.map((item, index) => {\\n                  return (\\n                    item.fieldType === 'measure' ?\\n                      <Chip\\n                        key={item.label}\\n                        // key={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        measurecounter={measureCounter += 1}\\n                        className={item.selected ? `${classes.orangePrimary}` : ``}\\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        datalabel={item.label}\\n                        onClick={() => handleFieldChipClick(item, index)}\\n                        icon={item.selected ? <DoneIcon className={classes.dBlock} /> : <DoneIcon className={classes.dNone} />}\\n                      /> : ''\\n                  )\\n                }) : ''\\n              }<br />\\n            </Typography>\\n          </Grid>\\n          <Grid item sm={12}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Totals:\\n                          {fieldsChipData.length ?\\n                fieldsChipData.map((item, index) => {\\n                  return (\\n                    item.fieldType === 'dimension' ?\\n                      <Chip\\n                        key={item.label}\\n                        dimensioncounter={dimensionCounter += 1}\\n                        className={item.selected ? `${classes.greyPrimary}` : ``}\\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        datalabel={item.label}\\n                        onClick={() => handleFieldChipClick(item, index)}\\n                        icon={item.selected ? <DoneIcon className={classes.dBlock} /> : <DoneIcon className={classes.dNone} />}\\n                      /> : ''\\n                  )\\n                }) : ''\\n              }<br />\\n            </Typography>\\n          </Grid>\\n\\n          <Grid item sm={12}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Filter By:\\n                      </Typography>\\n            {filtersData.length ? filtersData.map((item, index) => {\\n              return (\\n                <FormControl className={item.value.length ? classes.formControl : classes.hidden} key={validIdHelper(`${item.label}FormControl`)}>\\n                  {\\n                    item.type === 'yesno' ?\\n                      <>\\n                        <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\\n                        <Select\\n                          labelId={validIdHelper(`${item.label}FilterLabel`)}\\n                          id={validIdHelper(`${item.label}FilterSelect`)}\\n                          value={item.value}\\n                          onChange={(event) => handleSelectChange(index, event.target.value)}\\n                        >\\n                          <MenuItem value=\\\"Yes\\\">Yes</MenuItem>\\n                          <MenuItem value=\\\"No\\\">No</MenuItem>\\n                          <MenuItem value=\\\"All\\\">All</MenuItem>\\n                        </Select>\\n                      </>\\n                      : item.type === 'date' ?\\n                        <>\\n                          <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\\n\\n                          <Select\\n                            labelId={validIdHelper(`${item.label}FilterLabel`)}\\n                            id={validIdHelper(`${item.label}FilterSelect`)}\\n                            value={item.value || '6 months'}\\n                            onChange={(event) => handleSelectChange(index, event.target.value)}\\n                          >\\n                            {lookerUser.user_attributes.permission_level ? datePermissionMap[lookerUser.user_attributes.permission_level].map(item => (\\n                              <MenuItem key={validIdHelper(item)} value={item}>{_.capitalize(item)}</MenuItem>\\n                            )) : ''}\\n                          </Select>\\n                        </>\\n                        : ''\\n                  }\\n                </FormControl>\\n              )\\n            }) : ''}\\n          </Grid>\\n        </Grid>\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel>\\n  )\\n}\\n\\nfunction EnhancedTableHead(props) {\\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, rows } = props;\\n  const createSortHandler = (property) => (event) => {\\n    onRequestSort(event, property);\\n  };\\n\\n  return (\\n    <TableHead>\\n      <TableRow>\\n        {Object.keys(rows[0]).map((key, index) => (\\n          <TableCell\\n            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\\n            id={validIdHelper(key + '-TableHead-TableCell-' + index)}\\n            align={key.numeric ? 'right' : 'left'}\\n            padding={key.disablePadding ? 'none' : 'default'}\\n            sortDirection={orderBy === key ? order : false}\\n          >\\n            <TableSortLabel\\n              active={orderBy === key}\\n              direction={orderBy === key ? order : 'asc'}\\n              onClick={createSortHandler(key)}\\n            >\\n              {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}\\n              {orderBy === key ? (\\n                <span className={classes.visuallyHidden}>\\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\\n                </span>\\n              ) : null}\\n            </TableSortLabel>\\n          </TableCell>\\n        ))}\\n      </TableRow>\\n    </TableHead>\\n  );\\n}\\n\\nEnhancedTableHead.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n  // numSelected: PropTypes.number.isRequired,\\n  onRequestSort: PropTypes.func.isRequired,\\n  // onSelectAllClick: PropTypes.func.isRequired,\\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\\n  orderBy: PropTypes.string.isRequired,\\n  rowCount: PropTypes.number.isRequired,\\n};\\n\\nfunction EnhancedTable(props) {\\n  const { rows, classes, lookerContent } = props;\\n  const [order, setOrder] = React.useState('asc');\\n  const [orderBy, setOrderBy] = React.useState(Object.keys(rows[0])[0]);\\n  const [page, setPage] = React.useState(0);\\n  const [dense, setDense] = React.useState(true);\\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\\n\\n  const handleRequestSort = (event, property) => {\\n    const isAsc = orderBy === property && order === 'asc';\\n    setOrder(isAsc ? 'desc' : 'asc');\\n    setOrderBy(property);\\n  };\\n\\n  const handleChangePage = (event, newPage) => {\\n    setPage(newPage);\\n  };\\n\\n  const handleChangeRowsPerPage = (event) => {\\n    setRowsPerPage(parseInt(event.target.value, 10));\\n    setPage(0);\\n  };\\n\\n  const handleChangeDense = (event) => {\\n    setDense(event.target.checked);\\n  };\\n\\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\\n\\n  return (\\n    <ApiHighlight classes={classes} >\\n      <div className={classes.root}>\\n        <TableContainer>\\n          <Table\\n            className={classes.table}\\n            aria-labelledby=\\\"tableTitle\\\"\\n            size={dense ? 'small' : 'medium'}\\n            aria-label=\\\"enhanced table\\\"\\n          >\\n            <EnhancedTableHead\\n              {...props}\\n              classes={classes}\\n              order={order}\\n              orderBy={orderBy}\\n              onRequestSort={handleRequestSort}\\n              rowCount={rows.length}\\n            />\\n\\n            <TableBody>\\n              {stableSort(rows, getComparator(order, orderBy))\\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\\n                .map((row, index) => {\\n                  return (\\n                    <TableRow\\n                      hover\\n                      key={validIdHelper('TableRow-' + index)}\\n                      id={validIdHelper('TableRow-' + index)}>\\n                      {Object.keys(row).map((key, index) => (\\n                        <TableCell\\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}\\n                          className={lookerContent[0].fieldType[key] === 'dimension' ? classes.greySecondary : classes.orangeSecondary}\\n                          align=\\\"right\\\">\\n                          {row[key].rendered ? row[key].rendered : row[key].value}\\n                        </TableCell>\\n                      ))}\\n                    </TableRow>\\n                  );\\n                })}\\n              {emptyRows > 0 && (\\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\\n                  <TableCell colSpan={6} />\\n                </TableRow>\\n              )}\\n            </TableBody>\\n          </Table>\\n        </TableContainer>\\n        <TablePagination\\n          rowsPerPageOptions={[5, 10, 25, 50]}\\n          component=\\\"div\\\"\\n          count={rows.length}\\n          rowsPerPage={rowsPerPage}\\n          page={page}\\n          onChangePage={handleChangePage}\\n          onChangeRowsPerPage={handleChangeRowsPerPage}\\n        />\\n        <FormControlLabel\\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\\n          label=\\\"Compact\\\"\\n        />\\n      </div>\\n    </ApiHighlight>\\n  );\\n}\";",
    "import React, { useContext } from 'react';\nimport AppContext from '../AppContext';\nimport { Box, Typography, Grid } from '@material-ui/core';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport { API_COLOR, EMBED_COLOR } from './Highlights/Highlight';\nexport function HighlightSourcesLegend({ className }) {\n\n  const { show } = useContext(AppContext)\n  if (show) {\n    return (\n      <Box\n        className={className}\n      >\n        <Grid container>\n          <Grid item sm={6}>\n            <Typography variant=\"subtitle1\" ><CheckBoxOutlineBlankIcon style={{ color: API_COLOR }} /> API</Typography>\n          </Grid>\n          <Grid item sm={6}>\n            <Typography variant=\"subtitle1\" ><CheckBoxOutlineBlankIcon style={{ color: EMBED_COLOR }} /> Embed</Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    )\n  } else {\n    return (\n      <></>\n    );\n  }\n}\n",
    "import _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppContext from '../../AppContext';\nimport { Modal, Fade, Grid, Paper, Card, CardContent, CardActions, Button, Typography, Chip } from '@material-ui/core';\nimport LookerUserPermissions from '../../lookerUserPermissions.json';\nconst { validIdHelper } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 1000,\n    maxHeight: 450,\n    overflow: 'scroll',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    maxHeight: 300,\n    minHeight: 300,\n    overflow: 'scroll',\n    cursor: 'pointer',\n    '&:hover': {\n      transform: 'scale(1.05)',\n      transition: 'transform .2s'\n    }\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  padding15: {\n    padding: 15\n  }\n}));\n\nfunction getModalStyle() {\n  const top = 10 //+ rand();\n  const left = 50 //+ rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${left}%, -${top}%)`,\n  };\n}\n\n\nexport function MonetizationModal({ props, switchLookerUser }) {\n  // console.log('MonetizationModal')\n  const { payWallModal, togglePayWallModal, lookerUser } = useContext(AppContext);\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n\n\n  return (\n    < Modal\n      className={`${classes.modal} ${classes.padding15}`}\n      open={payWallModal.show || false}\n      onClose={togglePayWallModal}\n    >\n      <Fade in={payWallModal.show || false}>\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">Upgrade user account to {payWallModal.permissionNeeded}</h2>\n\n          <Grid container\n            spacing={3}>\n            {Object.keys(LookerUserPermissions).map(key => {\n              return (\n                <Grid item sm={4}\n                  key={validIdHelper(`monetizationModal-gridItem-${key}`)}\n                >\n\n                  <Card className={`${classes.card} `} elevation={1}\n                    style={key === lookerUser.user_attributes.permission_level ? {\n                      transform: 'scale(1.05)',\n                      transition: 'transform .2s'\n                    } : {}}>\n                    <CardContent>\n\n                      <Typography variant=\"h6\">\n                        {_.capitalize(key)} user permissions\n                      {key === lookerUser.user_attributes.permission_level ? <Chip\n                          label=\"Active\" /> : ''}\n                      </Typography>\n\n\n                      {key === 'advanced' ?\n                        <Typography variant=\"subtitle2\" gutterBottom>...Basic user permissions plus</Typography> :\n                        key === 'premium' ?\n                          <Typography variant=\"subtitle2\" gutterBottom>...Advanced user permissions plus</Typography> :\n                          ''}\n\n                      {LookerUserPermissions[key] ? LookerUserPermissions[key].map(permission => (\n                        <Typography variant=\"subtitle2\"\n                          gutterBottom\n                          color=\"secondary\"\n                          key={validIdHelper(`monetizationModal-${key}-permissionItem-${permission}`)}\n                          style={permission === payWallModal.permissionNeeded ? { backgroundColor: 'yellow' } : {}}>\n                          {key === 'basic' ?\n                            permission :\n                            key === 'advanced' && LookerUserPermissions['basic'].indexOf(permission) == -1 ?\n                              permission :\n                              key === 'premium' && LookerUserPermissions['advanced'].indexOf(permission) == -1 ? permission : ''}\n                        </Typography>\n                      )) : ''}\n\n                    </CardContent>\n\n                    <CardActions disableSpacing={false}>\n                      {key === lookerUser.user_attributes.permission_level ? '' :\n                        <Button color=\"primary\"\n                          onClick={() => {\n                            switchLookerUser(key)\n                            togglePayWallModal()\n                          }}>{'Upgrade'}</Button>\n                      }\n                    </CardActions>\n                  </Card>\n                </Grid>\n              )\n            })}\n          </Grid>\n        </div>\n      </Fade >\n    </Modal >\n  );\n}\n",
    "import _ from 'lodash'\nimport React, { Component } from 'react'\nimport clsx from 'clsx';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Drawer, CssBaseline, AppBar, Toolbar, Typography,\n  Divider, IconButton, Tabs, Tab, Icon, Box, Avatar,\n  ListSubheader, List, ListItem, ListItemIcon, ListItemText,\n  Badge\n} from '@material-ui/core/';\n\nimport { AddAlert, Speed, TrendingUp, StoreMallDirectory, DateRange, Search, FindInPage } from '@material-ui/icons';\nimport HomeIcon from '@material-ui/icons/Home'; //can't reuse home name\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, grey } from '@material-ui/core/colors';\nimport UserMenu from './Material/UserMenu';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport UsecaseContent from '../usecaseContent.json';\nimport SplashPage from './Demo/SplashPage/SplashPage';\nimport Dashboard from './Demo/Dashboard/Dashboard';\nimport CustomVis from './Demo/CustomVis/CustomVis';\nimport ReportBuilder from './Demo/ReportBuilder/ReportBuilder';\nimport QueryBuilder from './Demo/QueryBuilder/QueryBuilder';\nimport AppContext from '../AppContext';\nimport { HighlightSourcesLegend } from './HighlightSourcesLegend';\nimport style from 'react-syntax-highlighter/dist/esm/styles/hljs/agate';\nimport './Home.css'; //needed for iframe height\nimport { MonetizationModal } from './Demo/MonetizationModal';\n\n\n\nconst drawerWidth = 240;\nconst { validIdHelper } = require('../tools');\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    zIndex: 1201,\n    backgroundColor: \"#605E57\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  relative: {\n    position: 'relative'\n  },\n  absolute: {\n    position: 'absolute'\n  },\n  right0: {\n    right: 0\n  },\n  top0: {\n    top: 0\n  },\n  right24: {\n    right: 24\n  },\n  top24: {\n    top: 24\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  mr12: {\n    marginRight: 12\n  },\n  mt12: {\n    marginTop: 12\n  },\n  highlightLegend: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2),\n    zIndex: 1200\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400\n  },\n  parentHoverVisibility: {\n    '&:hover $childHoverVisibility': {\n      visibility: 'visible'\n    }\n\n  },\n  childHoverVisibility: {\n    visibility: 'hidden'\n  },\n  fontSize1em: {\n    fontSize: '1em'\n  },\n  padding10: {\n    padding: 10\n  },\n  mt5: {\n    marginTop: 5\n  },\n  mb5: {\n    marginBottom: 5\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  list: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  mrAuto: {\n    marginRight: 'auto'\n  }\n});\n\nconst defaultTheme = createMuiTheme({})\nconst atomTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[900],\n    },\n    secondary: {\n      main: grey[400],\n    },\n  },\n})\n\nconst vidlyTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500],\n    },\n  },\n})\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawerOpen: true,\n      drawerTabValue: 0,\n      activeTabValue: 0,\n      activeUsecase: '',\n      appLayout: '',\n      highlightShow: false,\n      payWallModal: {},\n      selectedMenuItem: '',\n      renderedDemoComponents: []\n    }\n  }\n\n  togglePayWallModal = (modalContent) => {\n    this.setState({ payWallModal: { ...modalContent } })\n  }\n\n  toggleHighlightShow = () => {\n    this.setState({ highlightShow: !this.state.highlightShow })\n  }\n\n  handleTabChange = newValue => {\n    this.setState({\n      activeTabValue: newValue\n    })\n  }\n\n  handleMenuItemSelect = (newValue, fromSplash) => {\n    // console.log('handleMenuItemSelect')\n    this.handleTabChange(0)\n    let selectedMenuItemValue = ''\n    if (fromSplash) {\n      UsecaseContent[this.state.activeUsecase].demoComponents.map(item => {\n        if (item.type !== \"splash page\") {\n          item.lookerContent.map(lookerContentItem => {\n            if (lookerContentItem.id === newValue) {\n              selectedMenuItemValue = validIdHelper(item.type + lookerContentItem.id)\n            }\n          })\n        }\n      })\n    } else selectedMenuItemValue = newValue;\n\n    let renderedDemoComponentsCopy = [...this.state.renderedDemoComponents]\n    if (renderedDemoComponentsCopy.indexOf(selectedMenuItemValue) == -1) renderedDemoComponentsCopy.unshift(selectedMenuItemValue)\n\n    this.setState((prevState) => ({\n      selectedMenuItem: selectedMenuItemValue,\n      renderedDemoComponents: [...renderedDemoComponentsCopy]\n    }))\n  };\n\n  componentDidMount(props) {\n    // console.log('componentDidMount')\n    let usecaseFromUrl = window.location.pathname.replace(/^\\/([^\\/]*).*$/, '$1');\n    this.setState({\n      activeUsecase: usecaseFromUrl,\n      appLayout: UsecaseContent[usecaseFromUrl].layout || 'left-sidebar'\n    }, () => {\n      LookerEmbedSDK.init(`https://${this.props.lookerHost}.looker.com`, '/auth');\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log('componentDidUpdate')\n    let prevPermissionLevel = prevProps.lookerUser.user_attributes.permission_level;\n    let currPermissionLevel = this.props.lookerUser.user_attributes.permission_level;\n    let prevUserBrand = prevProps.lookerUser.user_attributes.brand;\n    let currUserBrand = this.props.lookerUser.user_attributes.brand;\n\n    if ((prevPermissionLevel !== currPermissionLevel) || (prevUserBrand !== currUserBrand)) {\n      // console.log('we are inside this iffff')\n      this.setState({\n        renderedDemoComponents: [this.state.selectedMenuItem]\n      })\n    }\n  }\n\n  render() {\n\n    //how to make this dynamic????\n    const demoComponentMap = {\n      \"splashpage19\": SplashPage,\n      \"simpledashboard5\": Dashboard,\n      \"simpledashboard9\": Dashboard,\n      \"customfilter1\": Dashboard,\n      \"customvis\": CustomVis,\n      \"querybuilderexplorelite\": QueryBuilder,\n      \"reportbuilder14\": ReportBuilder,\n    };\n\n    const demoComponentKeyMap = [\"splashpage19\",\n      \"simpledashboard5\",\n      \"simpledashboard9\",\n      \"customfilter1\",\n      \"customvis\",\n      \"querybuilderexplorelite\",\n      \"reportbuilder14\"\n    ]\n    // const demoComponentValueMap = [SplashPage,\n    //   Dashboard,\n    //   Dashboard,\n    //   Dashboard,\n    //   CustomVis,\n    //   QueryBuilder,\n    //   ReportBuilder\n    // ]\n\n    const themeMap = {\n      \"atom\": atomTheme,\n      \"vidly\": vidlyTheme\n    }\n\n    const { drawerTabValue, drawerOpen, activeTabValue, activeUsecase, selectedMenuItem, renderedDemoComponents } = this.state;\n    const { handleTabChange, handleMenuItemSelect } = this;\n    const { classes, activeCustomization, switchLookerUser, lookerUser, applySession, lookerUserAttributeBrandOptions, switchUserAttributeBrand, lookerHost, userProfile } = this.props\n\n    let orderedDemoComponentsForMenu = activeUsecase ? _.orderBy(UsecaseContent[activeUsecase].demoComponents, ['menuCategory'], ['asc']) : []; // Use Lodash to sort array by 'name'\n    let orderedDemoComponentsForMenuObj = {};\n    let expandedTreeItemsArr = [];\n    let cumulativePusher = 0;\n    orderedDemoComponentsForMenu.map((item, index) => {\n      if (orderedDemoComponentsForMenuObj.hasOwnProperty(item.menuCategory)) {\n        orderedDemoComponentsForMenuObj[item.menuCategory] = [...orderedDemoComponentsForMenuObj[item.menuCategory], item]\n      } else {\n        orderedDemoComponentsForMenuObj[item.menuCategory] = [item];\n        cumulativePusher += 1;\n        expandedTreeItemsArr.push(\"\" + (index + cumulativePusher));\n      }\n    })\n\n\n    if (activeUsecase && !selectedMenuItem.length) {\n      let selectedMenuItemVal =\n        UsecaseContent[activeUsecase].demoComponents[0].lookerContent[0].id ?\n          validIdHelper(UsecaseContent[activeUsecase].demoComponents[0].type + UsecaseContent[activeUsecase].demoComponents[0].lookerContent[0].id) :\n          validIdHelper(UsecaseContent[activeUsecase].demoComponents[0].type)\n      this.setState({\n        selectedMenuItem: selectedMenuItemVal,\n        renderedDemoComponents: [selectedMenuItemVal]\n      }, () => {\n      })\n\n      //couldn't figure this out...\n      // UsecaseContent[activeUsecase].demoComponents.map(item => {\n      //   demoComponentMap[item.lookerContent[0].id ?\n      //     validIdHelper(item.type + item.lookerContent[0].id) :\n      //     validIdHelper(item.type)] = item.type.split(\" \").map(item => _.capitalize(item)).join(\"\")\n      // })\n    }\n\n\n    /**\n     * what this does\n     * we want rendered demo components to render active one first\n     * renderedDemoComponents is always up to date\n     * so create array of unique demo components starting with rendered\n     * then iterate through usecase file and sort array according to order of unique\n     */\n\n    // const orderedDemoComponentsForRender = [...renderedDemoComponents, ...demoComponentKeyMap]\n    // const uniqueOrderedDemoComponentsForRender = [...new Set(orderedDemoComponentsForRender)];\n\n    // if (activeUsecase) {\n    //   UsecaseContent[activeUsecase].demoComponents.sort(function (a, b) {\n    //     let idToUseForA = validIdHelper(a.lookerContent[0].id ? a.type + a.lookerContent[0].id : a.type);\n    //     let idToUseForB = validIdHelper(b.lookerContent[0].id ? b.type + b.lookerContent[0].id : b.type);\n    //     return uniqueOrderedDemoComponentsForRender.indexOf(idToUseForA) - uniqueOrderedDemoComponentsForRender.indexOf(idToUseForB);\n    //   });\n    // }\n\n    // console.log('this.state.renderedDemoComponents', this.state.renderedDemoComponents)\n    // console.log('orderedDemoComponentsForRender', orderedDemoComponentsForRender)\n    // console.log('uniqueOrderedDemoComponentsForRender', uniqueOrderedDemoComponentsForRender)\n\n    return (\n      <div className={classes.root} >\n        <AppContext.Provider value={\n          {\n            show: this.state.highlightShow,\n            toggleShow: this.toggleHighlightShow,\n            payWallModal: this.state.payWallModal,\n            togglePayWallModal: this.togglePayWallModal,\n            lookerUser,\n            userProfile\n          }\n        } >\n          <ThemeProvider theme={activeUsecase ? themeMap[activeUsecase] : defaultTheme}>\n            <CssBaseline />\n            <AppBar\n              position=\"fixed\"\n              className={clsx(classes.appBar)}\n            >\n              <Toolbar>\n\n                {activeUsecase ?\n                  <Avatar alt=\"Icon\"\n                    src={require(`../images/${activeUsecase}_logo_white.svg`)}\n                    variant=\"square\"\n                  /> : ''}\n                <Typography align=\"center\" className={`${classes.mr12} ${classes.mlAuto} ${classes.mrAuto}`}>\n                  {lookerUser.user_attributes.brand}\n                </Typography>\n\n                <Badge badgeContent={3} color=\"error\" className={`${classes.mr12} `} >\n                  <AddAlert />\n                </Badge>\n                <UserMenu\n                  lookerUser={lookerUser}\n                  switchLookerUser={switchLookerUser}\n                  onLogoutSuccess={applySession}\n                  lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions}\n                  switchUserAttributeBrand={switchUserAttributeBrand}\n                />\n              </Toolbar>\n            </AppBar>\n            <Drawer\n              className={classes.drawer}\n              variant=\"persistent\"\n              anchor=\"left\"\n              open={drawerOpen}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <div className={classes.drawerHeader} />\n\n              {Object.keys(orderedDemoComponentsForMenuObj).length ?\n                <MenuList {...this.props}\n                  classes={classes}\n                  activeUsecase={activeUsecase}\n                  orderedDemoComponentsForMenuObj={orderedDemoComponentsForMenuObj}\n                  selectedMenuItem={selectedMenuItem}\n                  handleMenuItemSelect={handleMenuItemSelect} /> : ''}\n\n              <HighlightSourcesLegend className={classes.highlightLegend} />\n              <MonetizationModal\n                // {...{ classes }} \n                switchLookerUser={switchLookerUser}\n              />\n            </Drawer>\n            <main\n              className={clsx(classes.content, {\n                [classes.contentShift]: drawerOpen,\n              })}\n            >\n              <div className={classes.drawerHeader} />\n              {activeUsecase ?\n                UsecaseContent[activeUsecase].demoComponents.map((item, index) => {\n                  const key = item.lookerContent[0].id ? validIdHelper(item.type + item.lookerContent[0].id) : validIdHelper(item.type);\n                  const DemoComponent = demoComponentMap[key];\n                  return (\n                    <React.Fragment\n                      key={validIdHelper(`outerFragment-${item.type}-${index}`)}>\n                      {renderedDemoComponents.indexOf(key) > -1 ?\n                        <Box key={validIdHelper(`box-${item.type}-${index}`)}\n                          className={key === selectedMenuItem ? `` : `${classes.hide}`}\n                        >\n                          {/* {key === selectedMenuItem ? */}\n                          <DemoComponent\n                            key={validIdHelper(`demoComponent-${item.type}-${index}`)}\n                            staticContent={item}\n                            handleMenuItemSelect={handleMenuItemSelect}\n                            activeTabValue={activeTabValue}\n                            handleTabChange={handleTabChange}\n                            lookerUser={lookerUser}\n                            activeUsecase={activeUsecase}\n                            lookerHost={lookerHost}\n                            userProfile={userProfile}\n                          />\n                          {/* : ''} */}\n\n                        </Box> : ''}\n                    </React.Fragment>)\n                }) :\n                ''\n              }\n            </main >\n          </ThemeProvider>\n        </AppContext.Provider>\n      </div >\n    )\n  }\n}\nexport default withStyles(styles)(Home);\n\nfunction MenuList(props) {\n  // console.log('MenuList')\n  const { classes, activeUsecase, orderedDemoComponentsForMenuObj, selectedMenuItem, handleMenuItemSelect } = props\n  // console.log('orderedDemoComponentsForMenuObj', orderedDemoComponentsForMenuObj)\n  const demoComponentIconMap = {\n    \"splashpage19\": HomeIcon,\n    \"simpledashboard5\": TrendingUp,\n    \"simpledashboard9\": Speed,\n    \"customfilter1\": StoreMallDirectory,\n    \"customvis\": DateRange,\n    \"querybuilderexplorelite\": Search,\n    \"reportbuilder14\": FindInPage,\n  }\n\n  return (<List\n    component=\"nav\"\n    aria-labelledby=\"nested-list-subheader\"\n    className={classes.list}\n  >\n    {activeUsecase ? Object.keys(orderedDemoComponentsForMenuObj).map((outerItem, outerIndex) => {\n      return (\n        < React.Fragment\n          key={`${validIdHelper(outerItem + '-menuList-' + outerIndex)}`}>\n          <ListItem button\n            key={`${validIdHelper(outerItem + '-outerListItem-' + outerIndex)}`}\n          >\n            <ListItemText primary={_.capitalize(outerItem)} />\n          </ListItem>\n          < List component=\"div\" disablePadding\n            key={`${validIdHelper(outerItem + '-innerList-' + outerIndex)}`}>\n            {orderedDemoComponentsForMenuObj[outerItem].map((item, innerIndex) => {\n              const key = item.lookerContent[0].id ? validIdHelper(item.type + item.lookerContent[0].id) : validIdHelper(item.type);\n              const MatchingIconComponent = demoComponentIconMap[key]\n\n              return (\n                <ListItem button className={classes.nested}\n                  key={`${validIdHelper(outerItem + '-innerListItem-' + innerIndex)}`}\n                  onClick={\n                    () => handleMenuItemSelect(validIdHelper(item.lookerContent[0].id ? item.type + item.lookerContent[0].id : item.type))\n                  }\n                  selected={validIdHelper(item.lookerContent[0].id ? item.type + item.lookerContent[0].id : item.type) === selectedMenuItem}\n                >\n                  <ListItemIcon>\n                    <MatchingIconComponent />\n                  </ListItemIcon>\n                  <ListItemText primary={_.capitalize(item.label)} />\n                </ListItem>\n              )\n            })}\n          </List>\n        </React.Fragment>\n      )\n\n\n    }) : ''\n    }\n  </List >\n  )\n}",
    "import _ from 'lodash'\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, CardActions, CardContent, Typography } from '@material-ui/core'\nimport { grey, orange } from '@material-ui/core/colors';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport './Home.css';\nconst { validIdHelper } = require('../tools');\nconst lightGrey = grey[200];\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  card: {\n    minWidth: 350,\n    minHeight: 500,\n    left: '75%',\n    top: '50%',\n    transform: `translate(-75%, -50%)`,\n    position: 'absolute',\n    textAlign: 'center',\n    backgroundColor: lightGrey\n  },\n  h100: {\n    height: '100%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  actions: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  cardCopy: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: `translate(-50%, -50%)`,\n    margin: '0',\n    width: '80%',\n  }\n}));\n\n\nexport default function SignIn(props) {\n\n  // console.log('SignIn')\n  // console.log('props', props)\n\n  const { googleClientId, onSuccess, onFailure, } = props;\n  const classes = useStyles();\n  let usecaseFromUrl = window.location.pathname.replace(/^\\/([^\\/]*).*$/, '$1');\n  const backgroundImageInt = Math.floor(Math.random() * 4) + 1;\n  const backgroundImage = require(`../images/${usecaseFromUrl}_background${backgroundImageInt}.jpg`);\n  const logoImage = require(`../images/${usecaseFromUrl}_logo_black.svg`)\n\n  return (\n    <div className={`${classes.root} demoComponent ${classes.h100}`}>\n      <Grid container\n        key={validIdHelper('sign in page')}\n        className={`${classes.h100}`}>\n        <Grid item sm={12} className={'sign-in-background-img'}\n          style={{\n            backgroundImage: `url(${backgroundImage})`,\n            backgroundSize: 'cover'\n          }}\n        >\n          <Card className={classes.card}>\n            <div className={classes.cardCopy}>\n              <img\n                src={logoImage}\n              />\n              <CardContent >\n                <Typography variant=\"h5\" component=\"h2\">\n                  Welcome\n                            </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  Please sign in to access <br /> your merchant portal\n                            </Typography>\n              </CardContent>\n              <CardActions className={`${classes.actions}`} >\n                <GoogleLogin\n                  clientId={googleClientId}\n                  buttonText=\"Login\"\n                  onSuccess={onSuccess}\n                  onFailure={onSuccess}\n                  cookiePolicy={'single_host_origin'}\n                />\n              </CardActions>\n            </div>\n          </Card>\n        </Grid>\n      </Grid>\n    </div >\n  )\n}",
    "import React from 'react';\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\n\nclass Customizations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.editCustomization = this.editCustomization.bind(this);\n        this.applyCustomization = this.applyCustomization.bind(this);\n        this.state = {\n            customizations: this.props.customizations,\n            isOrdered: null\n        }\n    }\n\n    componentDidMount() {\n        // console.log('Customize componentDidMount')\n        // console.log('this.props', this.props)\n    }\n\n    editCustomization(customizationIndex) {\n        this.props.editCustomization(customizationIndex)\n        this.props.history.push('/customize/edit')\n    }\n\n    applyCustomization(customizationIndex) {\n        this.props.applyCustomization(customizationIndex)\n        this.props.history.push('/home') //customize\n    }\n\n    sortByCreatedDate() {\n        let { isOrdered } = this.state\n        let sortedCustomizations;\n        if (isOrdered === null || isOrdered === \"DESC\") {\n            sortedCustomizations = this.state.customizations.sort((a, b) => (a.date > b.date) ? 1 : -1)\n            this.setState({\n                isOrdered: \"ASC\"\n            })\n        } else if (isOrdered === \"ASC\") {\n            sortedCustomizations = this.state.customizations.sort((a, b) => (a.date > b.date) ? -1 : 1)\n            this.setState({\n                isOrdered: \"DESC\"\n            })\n\n        }\n        this.setState({\n            customizations: sortedCustomizations\n        })\n    }\n\n    render() {\n        const { activeCustomization } = this.props\n        const { customizations } = this.state\n        const { isOrdered } = this.state\n        return (\n            <div className=\"home container p-5 position-relative\">\n                <div className=\"row pt-5\">\n                    <div className=\"col-sm-12\">\n                        <h1>Customizations</h1>\n                        <table className=\"table pt-3 mt-3\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\" className=\"cursor\" onClick={() => this.sortByCreatedDate()}><a>Last Saved {isOrdered === null ? '' : isOrdered === \"ASC\" ? '∧' : '∨'}</a></th>\n                                    <th scope=\"col\">Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {customizations.map((customization, index) => {\n                                    return (\n                                        <tr key={customization.id} id={customization.id} index={index} >\n                                            <td >{customization.companyName}</td>\n                                            <td >{Moment(customization.date).format('LLL')}</td>\n                                            <td>\n                                                <span className=\"badge badge-info p-3 mr-2\">Active</span>\n                                                <button type=\"button\" className=\"btn btn-primary mr-2\" data-index={index} onClick={() => this.applyCustomization(index)}>Apply</button>\n                                                <button type=\"button\" className=\"btn btn-secondary mr-2\" data-index={index} onClick={() => this.editCustomization(index)}>Edit</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                        <Link to='/customize/edit'>\n                            <button type=\"button\" className=\"btn btn-primary\">New Customization</button>\n                        </Link>\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}\nexport default Customizations",
    "import React from 'react';\nimport { Link } from 'react-router-dom'\n\nlet emptyCustomizationObj = {\n    id: '',\n    date: '',\n    salesforceUrl: '',\n    companyName: '',\n    logoUrl: ''\n}\n\nfunction prettifyKey(key) {\n    switch (key) {\n        case 'salesforceUrl':\n            return 'Salesforce Url';\n            break;\n        case 'companyName':\n            return 'Company Name';\n            break;\n        case 'logoUrl':\n            return 'Logo Url';\n            break;\n        default:\n            return null;\n            break;\n    }\n}\n\nclass NewCustomization extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        const { indexOfCustomizationToEdit, customizations } = this.props\n        this.state = {\n            companyName: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].companyName : '',\n            logoUrl: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].logoUrl : '',\n            salesforceUrl: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].salesforceUrl : '',\n            validSalesforceUrl: indexOfCustomizationToEdit ? this.validateSalesforceUrl(customizations[indexOfCustomizationToEdit].salesforceUrl) : false,\n            industry: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].industry : '',\n        }\n    }\n\n    componentDidMount() {\n        this.salesforceUrlInput.focus();\n    }\n\n    componentWillUnmount() {\n        // console.log('NewCustomization componentWillUnmount')\n        this.props.cancelIndexOfCustomizationToEdit()\n    }\n\n    handleSubmit(event) {\n        // console.log('handleSubmit')\n        event.preventDefault();\n        const data = new FormData(event.target);\n        let objForBody = {}\n        for (var [key, value] of data.entries()) {\n            objForBody[key] = value\n        }\n        this.props.saveCustomization(objForBody)\n        setTimeout(() => {\n            this.props.history.push('/home') //causes error w/ out time out\n        }, 100)\n    }\n\n    updateInput(e) {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n\n        if (e.target.id === \"salesforceUrl\") {\n            this.setState({ validSalesforceUrl: this.validateSalesforceUrl(e.target.value) })\n        }\n    }\n\n    validateSalesforceUrl = (url) => {\n        let urlexp = new RegExp('^https:\\/\\/looker.my.salesforce.com(?:$|/)');\n        let res = url.match(urlexp)\n        let returnVal = false;\n        if (res !== null) {\n            returnVal = true;\n        }\n        return returnVal\n    }\n\n\n    dropdownSelect = (e) => {\n        const targetId = e.target.id\n        this.setState({\n            [targetId]: e.target.value\n        })\n    }\n\n    render() {\n        // console.log('EditCustomization render');\n        const { indexOfCustomizationToEdit, customizations, lookerHost } = this.props\n        const { validSalesforceUrl, industry } = this.state\n        // let lookerHostNameToUse = lookerHost.substr(0, lookerHost.indexOf('.'));\n        // console.log('lookerHost', lookerHost)\n\n\n        return (\n            <div className=\"home container p-5\" >\n                <div className=\"row pt-5\">\n                    <div className=\"col-sm-9\">\n                        <h1>Edit Customization</h1>\n                        <form className=\"border-top mt-3 pt-3\" onSubmit={this.handleSubmit}>\n                            <input type=\"hidden\" id=\"id\" name=\"id\" value={indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].id : ''} />\n                            <input type=\"hidden\" id=\"customizationIndex\" name=\"customizationIndex\" value={indexOfCustomizationToEdit ? indexOfCustomizationToEdit : ''} />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"salesforceUrl\">Salesforce Url</label>\n                                <input id=\"salesforceUrl\"\n                                    className=\"form-control\"\n                                    name=\"salesforceUrl\"\n                                    type=\"text\"\n                                    value={this.state.salesforceUrl}\n                                    onChange={e => this.updateInput(e)}\n                                    ref={input => {\n                                        this.salesforceUrlInput = input;\n                                    }} />\n                                {validSalesforceUrl ?\n                                    <small id=\"salesforceUrlHelp\" className=\"form-text text-success\">Valid Salesforce Url!</small>\n                                    : this.state.salesforceUrl.length ?\n                                        <small id=\"salesforceUrlHelp\" className=\"form-text text-danger\">Must be valid Looker Salesforce Opportunity Url</small>\n                                        : <small id=\"salesforceUrlHelp\" className=\"form-text text-muted\">This field is required</small>}\n                            </div>\n                            <div id=\"subForm\">\n                                {/* {DefaultLookerContent[lookerHost] ?\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"industry\">Choose industry</label>\n                                        <select\n                                            id=\"industry\"\n                                            className=\"form-control\"\n                                            onChange={(e) => this.dropdownSelect(e)}\n                                            name=\"industry\"\n                                            type=\"select-one\"\n                                            value={this.state.industry}\n                                            disabled={validSalesforceUrl ? false : true}>\n\n                                            <option\n                                                key=\"none\"\n                                                value=\"none\"\n                                            > None</option>\n                                            {Object.keys(DefaultLookerContent[lookerHost]).map(key => {\n                                                return (\n                                                    <option\n                                                        key={key}\n                                                        value={key}\n                                                    > {(key.charAt(0).toUpperCase() + key.substring(1)).replace('_', ' ')}</option>\n                                                )\n                                            })}</select>\n                                    </div>\n                                    : ''} */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"companyName\">Company name</label>\n                                    <input id=\"companyName\"\n                                        className=\"form-control\"\n                                        name=\"companyName\"\n                                        type=\"text\"\n                                        value={this.state.companyName}\n                                        onChange={e => this.updateInput(e)}\n                                        disabled={validSalesforceUrl ? false : true}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"logoUrl\">Logo URL</label>\n                                    <input id=\"logoUrl\"\n                                        className=\"form-control\"\n                                        name=\"logoUrl\"\n                                        type=\"text\"\n                                        value={this.state.logoUrl}\n                                        onChange={e => this.updateInput(e)}\n                                        disabled={validSalesforceUrl ? false : true}\n                                    />\n                                </div>\n                                <div className=\"form-group mt-3 pt-3\">\n                                    <button className=\"btn btn-primary mr-2\"\n                                        disabled={validSalesforceUrl ? false : true}>Save Customization</button>\n                                    <Link to='/customize'>\n                                        <button type=\"button\" className=\"btn btn-secondary \">Cancel</button>\n                                    </Link>\n                                </div></div>\n                        </form>\n\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}\nexport default NewCustomization",
    "import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter, useHistory } from 'react-router-dom'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n// import Config from './clientConfig.json';\nimport Home from './components/Home'\nimport SignIn from './components/SignIn'\n// import Header from './components/Header'\n// import Footer from './components/Footer'\nimport Customizations from './components/Customizations'\nimport EditCustomization from './components/EditCustomization'\n//make looker user dynamic\nimport LookerUserPermissions from './lookerUserPermissions.json';\nimport InitialLookerUser from './initialLookerUser.json';\nimport UsecaseContent from './usecaseContent.json';\nimport LookerUserAttributeBrandOptions from './lookerUserAttributeBrandOptions.json';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  responseGoogle = (response) => {\n    // debugger //from Jim\n    if (response.error) {\n      console.log('response.error', response.error)\n    } else {\n      this.props.applySession(response.profileObj)\n    }\n  }\n\n  render() {\n    // console.log(\"Login render\")\n    const { from } = this.props.location.state || { from: { pathname: '/home' } } //needs work?\n    const { pathname } = this.props.location\n    const { activeCustomization } = this.props\n    const { userProfile } = this.props\n\n    const googleClientId = `${process.env.REACT_APP_GOOGLE_CLIENT_ID}.apps.googleusercontent.com`\n    if (Object.keys(userProfile).length) {\n      return (\n        <div className=\"App\">\n          <Redirect to={from} />\n        </div>\n      )\n    } else {\n      return (\n        <SignIn\n          googleClientId={googleClientId}\n          onSuccess={this.responseGoogle}\n          onFailure={this.responseGoogle}\n        />\n      )\n    }\n  }\n}\n\nconst PrivateRoute = ({\n  component: Component,\n  customizations,\n  activeCustomization,\n  applyCustomization,\n  editCustomization,\n  indexOfCustomizationToEdit,\n  saveCustomization,\n  cancelIndexOfCustomizationToEdit,\n  lookerContent,\n  saveLookerContent,\n  userProfile,\n  lookerUser,\n  lookerHost,\n  switchLookerUser,\n  applySession,\n  lookerUserAttributeBrandOptions,\n  switchUserAttributeBrand,\n  ...rest }) => (\n    < Route {...rest} render={(props) => (\n      Object.keys(userProfile).length ?\n        <Component {...props}\n          customizations={customizations}\n          activeCustomization={activeCustomization}\n          applyCustomization={applyCustomization}\n          editCustomization={editCustomization}\n          indexOfCustomizationToEdit={indexOfCustomizationToEdit}\n          saveCustomization={saveCustomization}\n          cancelIndexOfCustomizationToEdit={cancelIndexOfCustomizationToEdit}\n          lookerContent={lookerContent}\n          saveLookerContent={saveLookerContent}\n          userProfile={userProfile}\n          lookerUser={lookerUser}\n          lookerHost={lookerHost}\n          switchLookerUser={switchLookerUser}\n          applySession={applySession}\n          lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions}\n          switchUserAttributeBrand={switchUserAttributeBrand}\n        />\n        : <Redirect to={{\n          pathname: '/',\n          state: { from: props.location }\n        }} />\n    )} />\n  )\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userProfile: {},\n      customizations: [],\n      activeCustomization: {},\n      indexOfCustomizationToEdit: null,\n      lookerContent: [],\n      lookerUser: {\n        ...InitialLookerUser\n      },\n      lookerHost: '',\n      activeUsecase: ''\n    }\n  }\n\n  componentDidMount() {\n    // console.log('App componentDidMount')\n    this.checkSession()\n  }\n\n  //called on componentDidMount\n  //get request so should only check info, never update\n  checkSession = async () => {\n    // console.log('checkSession')\n    let sessionResponse = await fetch('/readsession', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    const sessionResponseData = await sessionResponse.json();\n    // console.log('sessionResponseData', sessionResponseData)\n    const { userProfile } = sessionResponseData.session\n    const { customizations } = sessionResponseData.session\n    const activeCustomization = sessionResponseData.session.activeCustomization ? sessionResponseData.session.activeCustomization : 0;\n    const lookerUser = sessionResponseData.session.lookerUser ? sessionResponseData.session.lookerUser : this.state.lookerUser;\n    const lookerHost = sessionResponseData.session.lookerHost ? sessionResponseData.session.lookerHost : this.state.lookerHost;\n    // console.log('lookerUser', lookerUser)\n    //make sure defined and contains properties\n    if (userProfile && Object.keys(userProfile).length) {\n      this.setState((prevState) => ({\n        userProfile, //think we want this here?\n        customizations,\n        lookerUser: {\n          ...prevState.lookerUser,\n          external_user_id: userProfile.googleId,\n          first_name: userProfile.givenName,\n          last_name: userProfile.familyName,\n          permissions: LookerUserPermissions[lookerUser.user_attributes.permission_level] || LookerUserPermissions['basic'],\n          permission_level: lookerUser.user_attributes.permission_level || 'basic',\n          user_attributes: {\n            ...lookerUser.user_attributes || {\n              \"locale\": \"en_US\",\n              \"country\": \"USA\",\n              \"brand\": \"Calvin Klein\"\n            }\n          }\n        },\n        lookerHost\n      }), () => {\n        // console.log('checkSession callback 1111 this.state.lookerUser', this.state.lookerUser)\n        this.applyCustomization(activeCustomization)\n      })\n    }\n  }\n\n  // called by responseGoogle once it gets response\n  // since login can assume activeCustomization will be default..\n  applySession = async (userProfile) => {\n    // console.log('applySession')\n    // console.log('userProfile', userProfile)\n\n    if (Object.keys(userProfile).length === 0) {\n      // console.log('inside ifff')\n      let sessionData = await fetch('/endsession', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      this.setState({\n        userProfile: {},\n        lookerUser: { ...InitialLookerUser }\n      })\n    } else {\n      // console.log('inside else')\n      let sessionData = await fetch('/writesession', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ userProfile, lookerUser: this.state.lookerUser })\n      })\n      const sessionResponseData = await sessionData.json();\n      const { customizations } = sessionResponseData.session\n      const lookerUser = sessionResponseData.session.lookerUser ? sessionResponseData.session.lookerUser : this.state.lookerUser;\n      const lookerHost = sessionResponseData.session.lookerHost ? sessionResponseData.session.lookerHost : this.state.lookerHost;\n\n      this.setState(prevState => ({\n        userProfile,\n        customizations,\n        lookerUser: {\n          ...prevState.lookerUser,\n          external_user_id: userProfile.googleId,\n          first_name: userProfile.givenName,\n          last_name: userProfile.familyName,\n          permissions: LookerUserPermissions[lookerUser.user_attributes.permission_level] || LookerUserPermissions['basic'], //assume good initially,\n          permission_level: lookerUser.user_attributes.permission_level || 'basic',\n          user_attributes: {\n            ...lookerUser.user_attributes || {\n              \"locale\": \"en_US\",\n              \"country\": \"USA\",\n              \"brand\": \"Calvin Klein\",\n              \"time_horizon\": \"last 6 months\"\n            }\n          }\n        },\n        lookerHost\n      }), () => {\n        this.applyCustomization(0) //assume default customization, set lookerContent and activeCustomization in applyCustomization\n      });\n    }\n  }\n\n  //called by: checkSession, applySession, applyButton, saveCustomization\n  applyCustomization = async (customizationIndex) => {\n    // console.log('applyCustomization')\n    // console.log('customizationIndex', customizationIndex)\n\n    let customizationResponse = await fetch('/applyactivecustomziation', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ customizationIndex })\n    })\n\n    let customizationResponseData = await customizationResponse.json();\n\n    let lookerContentToUse = [];\n    //check industry first, insert to array\n    if (this.state.customizations[customizationIndex].industry) {\n      // lookerContentToUse = [...DefaultLookerContent[this.state.lookerHost][this.state.customizations[customizationIndex].industry]]\n    }\n    //then check custom content, insert to array\n    if (this.state.customizations[customizationIndex].lookerContent) {\n      // lookerContentToUse = [...lookerContentToUse, ...this.state.customizations[customizationIndex].lookerContent]\n    }\n\n    this.setState({\n      activeCustomization: this.state.customizations[customizationIndex],\n      lookerContent: lookerContentToUse\n    }, () => {\n      // console.log('applyCustomization callback this.state.lookerContent', this.state.lookerContent)\n      // console.log('applyCustomization callback this.state.activeCustomization', this.state.activeCustomization)\n      // this.props.history.push('/home') //not going to work here :P\n    });\n  }\n\n  editCustomization = (customizationIndex) => {\n    // console.log('editCustomization')\n    // console.log('customizationIndex', customizationIndex)\n    const validCustomizationIndex = typeof this.state.customizations[customizationIndex] === 'undefined' ? null : customizationIndex\n    this.setState({\n      indexOfCustomizationToEdit: validCustomizationIndex,\n    }, () => {\n      // console.log('editCustomization callback this.state.indexOfCustomizationToEdit', this.state.indexOfCustomizationToEdit)\n    });\n  }\n\n  saveCustomization = async (formData) => {\n    // console.log('saveCustomization')\n    // console.log('formData', formData)\n    let customizationResponse = await fetch('/savecustomization', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n\n    let customizationResponseData = await customizationResponse.json();\n\n    // console.log('customizationResponseData', customizationResponseData)\n\n    this.setState({\n      customizations: customizationResponseData.customizations,\n      // indexOfCustomizationToEdit: null\n    }, () => {\n      this.applyCustomization(formData.customizationIndex) //sessionActiveCustomization\n    })\n  }\n\n\n  cancelIndexOfCustomizationToEdit = () => {\n    // console.log(\"cancelIndexOfCustomizationToEdit\")\n    this.setState({\n      indexOfCustomizationToEdit: null\n    })\n  }\n\n  saveLookerContent = async (newLookerContent) => {\n    // console.log('saveLookerContent')\n    // console.log('newLookerContent', newLookerContent)\n\n    /*let customizationResponse = await fetch('/savelookercontent', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ activeCustomization: this.state.activeCustomization, newLookerContent: newLookerContent })\n    })\n    let customizationResponseData = await customizationResponse.json();\n\n    this.setState(prevState => ({\n      lookerContent: [...prevState.lookerContent, newLookerContent] //should I be using DB as source here?\n    }))*/\n\n  }\n\n  switchLookerUser = (newUser) => {\n    // console.log('switchLookerUser')\n    // console.log('newUser', newUser)\n    // console.log('LookerUserPermissions[newUser]', LookerUserPermissions[newUser])\n\n\n    let lookerUserTimeHorizonMap = {\n      'basic': 'last 6 months',\n      'advanced': 'last 12 months',\n      'premium': 'last 24 months' //before today\n    }\n    let userAttributeCopy = { ...this.state.lookerUser.user_attributes }\n    userAttributeCopy.time_horizon = lookerUserTimeHorizonMap[newUser];\n\n\n    this.setState(prevState => ({\n      lookerUser: {\n        ...prevState.lookerUser,\n        permissions: LookerUserPermissions[newUser],\n        permission_level: newUser,\n        user_attributes: userAttributeCopy\n      }\n    }), async () => {\n\n      let lookerUserResponse = await fetch('/updatelookeruser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.lookerUser)\n      })\n\n      let lookerUserResponseData = await lookerUserResponse.json();\n\n    });\n  }\n\n  switchUserAttributeBrand = (newAttribute) => {\n    // console.log('switchUserAttributeBrand')\n    // console.log('newAttribute', newAttribute)\n\n    let userAttributeCopy = { ...this.state.lookerUser.user_attributes }\n    userAttributeCopy.brand = newAttribute;\n\n    this.setState(prevState => ({\n      lookerUser: {\n        ...prevState.lookerUser,\n        user_attributes: userAttributeCopy\n      }\n    }), async () => {\n\n      let lookerUserResponse = await fetch('/updatelookeruser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.lookerUser)\n      })\n\n      let lookerUserResponseData = await lookerUserResponse.json();\n\n    });\n  }\n\n  render() {\n    // console.log('App render');\n    // console.log('this.props', this.props);\n    const { userProfile, customizations, activeCustomization, indexOfCustomizationToEdit, lookerContent, lookerUser, lookerHost } = this.state\n    // const { activeIndustry } = this.state;\n    // console.log('activeCustomization', activeCustomization);\n\n    let usecaseFromUrl = window.location.pathname.replace(/^\\/([^\\/]*).*$/, '$1');\n    console.log('usecaseFromUrl', usecaseFromUrl)\n    if (!usecaseFromUrl.length) {     //no usecase\n      window.location.href = window.location.href + 'atom'\n    } else if (!UsecaseContent.hasOwnProperty(usecaseFromUrl)) {     //usecase param isn't in JSON file\n      window.location.href = window.location.href.replace(usecaseFromUrl, 'atom')\n    }\n    return (\n      <Router basename={usecaseFromUrl}>\n        <div>\n          <Route path='' render={(props) => <Login\n            {...props}\n            applySession={this.applySession}\n            userProfile={userProfile}\n            activeCustomization={activeCustomization}\n            lookerUser={lookerUser}\n            switchLookerUser={this.switchLookerUser}\n            lookerHost={lookerHost}\n          />}\n          />\n          <PrivateRoute path='*/home' component={Home}\n            activeCustomization={activeCustomization}\n            lookerContent={lookerContent}\n            saveLookerContent={this.saveLookerContent}\n            userProfile={userProfile}\n            lookerUser={lookerUser}\n            applySession={this.applySession}\n            lookerHost={lookerHost}\n            switchLookerUser={this.switchLookerUser}\n            lookerUserAttributeBrandOptions={LookerUserAttributeBrandOptions}\n            switchUserAttributeBrand={this.switchUserAttributeBrand}\n          />\n        </div>\n      </Router>\n    )\n  }\n}\nexport default App\n\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
  ],
  "sourceRoot": ""
}