{"version":3,"sources":["images sync /^/.//.*/.svg$","images/atom.svg","images/atom_logo_white.svg","images sync /^/.//.*/.jpg$","images/atom_background1.jpg","images/atom_background2.jpg","images/atom_background3.jpg","images/atom_background4.jpg","images sync /^/.//.*_logo_black/.svg$","AppContext.js","components/Material/UserMenu.js","components/Demo/CodeFlyout.js","webpack:///./src/components/Demo/SplashPage/SplashPage.js?046c","components/Demo/SplashPage/styles.js","components/Highlights/Highlight.js","components/Demo/SplashPage/SingleValueVis.js","components/Demo/SplashPage/NaturalLanguage.js","components/Demo/SplashPage/Welcome.js","components/Demo/SplashPage/VectorThumbnail.js","components/Demo/SplashPage/PopularAnalysis.js","components/Demo/SplashPage/ContentCarousel.js","components/Material/BottomBar.js","components/Demo/SplashPage/EmbeddedQuery.js","components/Demo/SplashPage/SplashPage.js","components/Demo/Dashboard/styles.js","components/Accessories/NumberToColoredPercent.js","components/Demo/Dashboard/CheckboxSvgMapRegion.js","components/Demo/Dashboard/Dashboard.js","webpack:///./src/components/Demo/Dashboard/Dashboard.js?b45b","components/Material/ModalTable.js","components/Demo/CustomVis/styles.js","components/Demo/CustomVis/CustomVis.js","webpack:///./src/components/Demo/CustomVis/CustomVis.js?b545","components/Demo/ReportBuilder/styles.js","components/Demo/ReportBuilder/helpers.js","components/Demo/ReportBuilder/ReportBuilder.js","webpack:///./src/components/Demo/ReportBuilder/ReportBuilder.js?9721","components/Demo/QueryBuilder/styles.js","components/Demo/QueryBuilder/helpers.js","components/Demo/QueryBuilder/QueryBuilder.js","webpack:///./src/components/Demo/QueryBuilder/QueryBuilder.js?9efc","components/Demo/MonetizationModal.js","components/Home.js","components/SignIn.js","components/Customizations.js","components/EditCustomization.js","LookerHelpers/pblsession.js","App.js","serviceWorker.js","index.js","images/atom_splash_blog.jpg","images/atom_splash_inventory.jpg","images/atom_splash_trends.jpg","images/atom_logo_black.svg","tools.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","AppContext","React","createContext","useStyles","require","validIdHelper","makeStyles","theme","zIndex1500","zIndex","mr12","marginRight","UserMenu","props","lookerUser","onLogoutSuccess","lookerUserAttributeBrandOptions","handleUserMenuSwitch","classes","useContext","togglePayWallModal","userProfile","codeShow","toggleShow","useState","anchorEl","setAnchorEl","user_attributes","brand","selectedBrand","setSelectedBrand","handleClose","newValue","property","useEffect","className","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","color","Avatar","alt","name","src","imageUrl","Typography","permission_level","charAt","toUpperCase","substring","keepMounted","open","Boolean","onClose","MenuItem","autoFocus","Divider","divider","Autocomplete","options","getOptionLabel","option","label","style","width","onChange","target","innerText","renderInput","params","TextField","variant","loadingText","disableautofocus","onKeyDown","stopPropagation","CodeFlyout","toggleCodeShow","lookerContent","clientSideCode","serverSideCode","height","permissionNeededCode","Fade","in","length","Grid","container","spacing","padding20","codeFlyoutContainer","item","sm","mrAuto","textAlign","cursor","CodeSnippet","language","dracula","showLineNumbers","JSON","stringify","redPrimary","red","greenPrimary","green","redLight","greenLight","root","flexGrow","backgroundColor","palette","background","paper","overflow","borderRadius","flexCentered","display","justifyContent","alignItems","hidden","visibility","position","tabs","dNone","dBlock","tree","maxWidth","icon","fontSize","mt12","marginTop","w100","mlAuto","marginLeft","skeleton","minWidth","minHeight","card","maxHeight200","maxHeight","mt30","mb30","marginBottom","textCenter","cursorPointer","border","height800","maxHeight100","maxHeight400","minHeight200","redNeg","fontWeight","greenPos","padding30","padding","mb12","overflowScroll","overflowHidden","overflowVisible","maxHeight150","minHeight150","carouselLegend","opacity","carouselLegendTitle","carouselLegendBody","positionRelative","padding15","maxHeight75","overflowYScroll","overflowY","overflowX","drawerHeader","mixins","toolbar","positionFixedTopRight","top","right","bottom","margin","boxShadow","Highlight","children","show","ApiHighlight","Chip","size","align","left","EmbedHighlight","EmbedMethodHighlight","decodeHtml","SingleValueVis","undefined","apiContent","setApiContent","sdk","dataObjForSparkline","isSubscribed","runInlineQuery","then","response","a","inlineQuery","ok","run_inline_query","result_format","body","lookerResponseData","data","dataArrForDataObj","fields","thisDataItem","toString","change","y","push","upOrDownArrow","isNaN","toFixed","parseInt","labelText","chipFormat","replace","Card","lookerCardShadow","Fragment","xScale","type","format","precision","yScale","min","max","stacked","reverse","axisLeft","orient","tickSize","tickPadding","tickRotation","axisBottom","enablePoints","enableGridX","enableGridY","colors","visColor","animate","CircularProgress","circularProgress","NaturalLanguage","index","clientLookerResponse","inlineQueriesMap","Welcome","givenName","inlineQueries","key","VectorThumbnail","handleMenuItemSelect","svg","setSvg","getThumbnail","content_thumbnail","resourceType","resource_id","blob","Blob","url","URL","createObjectURL","maxHeight60","PopularAnalysis","vectors","ContentCarousel","blogImage","inventoryImage","trendsImage","infiniteLoop","autoPlay","showThumbs","BottomBar","mtAuto","mb10","Button","startIcon","HighlightOutlined","ml12","Code","EmbeddedQuery","iFrameExists","setIFrame","lookerHost","$","html","queryUrl","encodeURIComponent","document","location","origin","fetch","json","LookerEmbedSDK","createExploreWithUrl","appendTo","getElementById","withClassName","withTheme","build","connect","explore","init","catch","error","console","fetchData","maxHeight350","elevation","title","maxHeight80Percent","SplashPage","window","innerHeight","setHeight","staticContent","handleTabChange","demoComponentType","addEventListener","height100Percent","Box","noContainerScroll","innerIndex","gridWidth","minHeight680","padding10","verticalAlignTop","verticalAlign","w33","dot","borderRadius0","NumberToColoredPercent","val","positive_good","abs_val","up","down","val_formatted","Math","abs","toLocaleString","minimumFractionDigits","CheckboxSVGMap","prototype","toggleLocation","this","setState","prevState","selectedLocations","regionFromStateClicked","_","find","locations","statesWithinRegionClicked","filter","region","allUniqueRegions","i","indexOf","allUniqueRegionsFromSelectedLocations","j","regionsNotCurrentlySelected","differenceBy","allRegionsNotSelected","statesNotWithinRegionsClicked","attributes","value","componentDidMount","Dashboard","activeTabValue","dashboardObj","setDashboardObj","setClientSideCode","dashboardOptions","setDashboardOptions","regionValue","setRegionValue","tileToggleValue","setTileToggleValue","visColorToggleValue","setVisColorToggleValue","lightThemeToggleValue","setLightThemeToggleValue","fontThemeSelectValue","setFontThemeSelectValue","expansionPanelHeight","setExpansionPanelHeight","atomTheme","isThemeableDashboard","paletteToUse","default","useMemo","createMuiTheme","handleTileToggle","filteredLayout","layouts","dashboard_layout_components","row","dynamicFieldLookUp","elements","dashboard_element_id","newDashboardLayout","setOptions","handleVisColorToggle","newColorSeries","dynamicVisConfig","newDashboardElements","vis_config","series_colors","innerKey","custom_color","map_value_colors","series_cell_visualizations","hasOwnProperty","log","themeName","performLookerApiCalls","dynamicTheme","dashboardId","themeToUse","createDashboardWithId","withNext","withParams","on","changeHeight","dashboard","orderedArrayForApiContent","filters","jsonQuery","desiredFilterName","queryResultsForDropdown","desiredProperty","ThemeProvider","FilterBar","customFilterAction","filterName","newFilterValue","updateFilters","run","handleThemeChange","Skeleton","animation","mt","expanded","setExpanded","sliderValue","setSliderValue","lifetimeRevenueTierValue","setLifetimeRevenueTierValue","customUsa","Usa","handleSliderChange","lifetimeRevenueTierMap","lifetimeRevenueTierIconMap","SentimentDissatisfied","SentimentSatisfied","SentimentVerySatisfied","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore","FilterList","heading","ExpansionPanelDetails","filterComponents","Array","isArray","renderOption","justify","trend","allUniqueRegionsFromSelectedLocationsCommaSep","join","Slider","ToggleButtonGroup","exclusive","ageTier","Icon","ToggleButton","capitalize","dynamicThemeMode","Switch","checked","inputProps","dynamicThemeFont","FormControl","formControl","InputLabel","Select","labelId","prettifyString","shadows","table","getModalStyle","transform","ModalTable","modalContent","modalStyle","Modal","aria-labelledby","aria-describedby","TableContainer","component","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","lastIndexOf","TableBody","rendered","round","height500","height600","height700","textField","selectEmpty","positionTopRight","CustomVis","fromDate","setFromDate","toDate","setToDate","category","setCategory","desiredField","setDesiredField","setOpen","setModalContent","handleModalOpen","day","originalInlineQueryCopy","parse","total","limit","modalObj","filterData","uniqueDates","Set","filteredAndReducedForAll","uniqueDate","reduce","acc","thisObj","setTimeout","desiredFields","uniqueCategories","incrementDate","handleFromDate","Date","newValueAsDate","addDays","handleToDate","handleCategory","handleDesiredField","from","to","emptyColor","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","split","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","minDate","maxDate","dateInput","increment","dateFormatTotime","getTime","toISOString","ml24","parentHoverVisibility","childHoverVisibility","faSm","whiteSpaceNoWrap","whiteSpace","TabPanel","other","role","p","ReportBuilder","setExploreObj","setValue","qid","setQid","tabContent","handleChange","action","contentType","contentId","secondaryAction","exploreId","newReportEmbedContainer","iFrameArray","classList","contains","remove","add","indexOfDeletedContent","updatedIFrameArray","slice","splice","empty","delete_look","animateLoad","folder","sharedFolder","me","embedUser","h","looks","look","clientId","query","client_id","embeddedUserFolder","search_looks","user_id","embedUserLooks","embedUserFolderId","folder_id","looksToUse","dashboardsToUse","dashboards","objToUse","lookId","lookIsRendered","createLookWithId","dashboardIsRendered","createExploreWithId","AppBar","Tabs","Tab","a11yProps","tabContentItem","tabContentItemIndex","TreeSideBar","sharedFolderId","treeCounter","selected","setSelected","expandedArr","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","nodeIds","onNodeSelect","outerIndex","TreeItem","nodeId","disabled","treecounter","contentid","labelRoot","grey","orange","typography","pxToRem","fontWeightRegular","visuallyHidden","clip","bluePrimary","blueSecondary","orangePrimary","orangeSecondary","bottomBarSpacer","maxHeight600","m12","m6","descendingComparator","b","orderBy","QueryBuilder","innerWidth","setWidth","newQuery","resultFormat","apiContentCopy","status","timer","now","create_query","lookerCreateQueryResponseData","create_query_task","query_id","lookerCreateTaskResponseData","taskInterval","setInterval","query_task_results","method","headers","Accept","lookerCheckTaskResponseData","clearInterval","EnhancedTable","rows","gridTitle","measureCounter","dimensionCounter","initializeFieldChipDataHelper","queryBody","datalabel","fieldType","fieldsChipData","setFieldsChipData","queryModified","setQueryModified","queryShouldRun","setQueryShouldRun","filterType","filtersData","setFilterData","handleFieldChipClick","chip","updatedFieldsChipData","handleSelectChange","updatedFiltersData","handleQuerySubmit","newFields","currentFilters","newQueryObj","datePermissionMap","advanced","basic","premium","Search","measurecounter","Done","dimensioncounter","EnhancedTableHead","order","onSelectAllClick","onRequestSort","numSelected","rowCount","numeric","disablePadding","sortDirection","TableSortLabel","active","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","hover","colSpan","FormControlLabel","control","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","flexDirection","transition","font75","font875","MonetizationModal","switchLookerUser","payWallModal","modalListMap","modal","LookerUserPermissions","CardContent","Rating","readOnly","fontStyle","List","ListItem","ListItemIcon","ListItemText","primary","CardActions","disableSpacing","fullWidth","borderColor","defaultTheme","main","secondary","vidlyTheme","blue","Home","toggleHighlightShow","highlightShow","state","handleDrawerChange","drawerOpen","fromSplash","selectedMenuItemValue","UsecaseContent","activeUsecase","demoComponents","lookerContentItem","renderedDemoComponentsCopy","renderedDemoComponents","unshift","selectedMenuItem","newLookerUser","permissions","time_horizon","lookerUserTimeHorizonMap","switchUserAttributeBrand","drawerTabValue","appLayout","usecaseFromUrl","layout","prevProps","prevPermissionLevel","currPermissionLevel","prevUserBrand","currUserBrand","demoComponentMap","themeMap","activeCustomization","applySession","orderedDemoComponentsForMenu","orderedDemoComponentsForMenuObj","expandedTreeItemsArr","cumulativePusher","menuCategory","selectedMenuItemVal","Provider","CssBaseline","TopBar","Drawer","drawer","drawerPaper","ChevronLeft","MenuList","clsx","content","contentShift","DemoComponent","hide","Component","withStyles","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","flexShrink","borderRight","relative","absolute","right0","top0","right24","top24","highlightLegend","fontSize1em","mt5","mb5","list","nested","paddingLeft","appBarBottom","roundedTab","paddingBottom30","paddingBottom","Toolbar","edge","Menu","Badge","badgeContent","AddAlert","demoComponentIconMap","HomeIcon","VisibilityOutlined","ShowChart","TableChartOutlined","DateRangeOutlined","LibraryBooksOutlined","outerItem","MatchingIconComponent","button","lightGrey","h100","pos","actions","cardCopy","SignIn","googleClientId","onSuccess","onFailure","backgroundImageInt","floor","random","backgroundImage","logoImage","backgroundSize","buttonText","cookiePolicy","PblSessionEmbed","accessToken","isAuthenticated","activeToken","setToken","fetchToken","settings","transport","BrowserTransport","AuthToken","token","access_token","isActive","getToken","mode","credentials","Authorization","AuthSession","Login","responseGoogle","profileObj","pathname","process","usecaseHelper","PrivateRoute","customizations","applyCustomization","editCustomization","indexOfCustomizationToEdit","saveCustomization","cancelIndexOfCustomizationToEdit","saveLookerContent","rest","render","App","logoutTimer","clientInterval","currentTime","tokenLastRefreshed","checkSession","sessionResponse","sessionResponseData","session","mongoInfo","api_user_token","DefaultSettings","base_url","Looker40SDK","external_user_id","email","first_name","last_name","familyName","api_token_last_refreshed","InitialLookerUser","sessionData","customizationIndex","customizationResponse","lookerContentToUse","industry","validCustomizationIndex","formData","customizationResponseData","newLookerContent","newUser","userAttributeCopy","lookerUserResponse","newAttribute","group_ids","groupIds","path","LookerUserAttributeBrandOptions","keyArr","href","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","makeid","result","characters","charactersLength","str","frags","getUrlVars","hash","myJson","hashes","txt","createElement","innerHTML"],"mappings":"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","file":"static/js/main.9ca71704.chunk.js","sourcesContent":["var map = {\n\t\"./atom.svg\": 1169,\n\t\"./atom_logo_black.svg\": 503,\n\t\"./atom_logo_white.svg\": 1170\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1168;","module.exports = __webpack_public_path__ + \"static/media/atom.e208988c.svg\";","module.exports = __webpack_public_path__ + \"static/media/atom_logo_white.89cfe3df.svg\";","var map = {\n\t\"./atom_background1.jpg\": 1172,\n\t\"./atom_background2.jpg\": 1173,\n\t\"./atom_background3.jpg\": 1174,\n\t\"./atom_background4.jpg\": 1175,\n\t\"./atom_splash_blog.jpg\": 486,\n\t\"./atom_splash_inventory.jpg\": 487,\n\t\"./atom_splash_trends.jpg\": 488\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1171;","module.exports = __webpack_public_path__ + \"static/media/atom_background1.9ed7593f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_background2.7d29770e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_background3.b9aecb61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_background4.1acd6c1b.jpg\";","var map = {\n\t\"./atom_logo_black.svg\": 503\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1176;","import React from 'react';\n \nconst AppContext = React.createContext(null);\n \nexport default AppContext;","import React, { useContext, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Menu, MenuItem, Typography, Divider, TextField, Avatar } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport AppContext from '../../AppContext';\n\nconst { validIdHelper } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  zIndex1500: {\n    zIndex: 1500\n  },\n  mr12: {\n    marginRight: 12\n  }\n}))\n\nexport default function UserMenu(props) {\n\n  const { lookerUser, onLogoutSuccess, lookerUserAttributeBrandOptions, handleUserMenuSwitch } = props\n  const classes = useStyles();\n  const { togglePayWallModal, codeShow, toggleShow, userProfile } = useContext(AppContext)\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedBrand, setSelectedBrand] = React.useState(lookerUser.user_attributes.brand || '');\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (newValue, property) => {\n    setAnchorEl(null);\n    if (newValue == null) {\n      onLogoutSuccess({})\n    } else if (newValue === 'modal') {\n      togglePayWallModal({\n        'show': true,\n        'permissionNeeded': 'explore'\n      })\n    } else if (typeof newValue === 'string') {\n      handleUserMenuSwitch(newValue, property)\n    }\n  };\n  useEffect(() => {\n    // console.log('useEffect')\n    setSelectedBrand(lookerUser.user_attributes.brand || '')\n  }, [lookerUser]);\n\n  return (\n    <div className={`${classes.zIndex1500}`}>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        color=\"inherit\"\n      >\n        <Avatar alt={userProfile.name} src={userProfile.imageUrl} className={classes.mr12} />\n\n        <Typography>\n          {typeof lookerUser.user_attributes.permission_level === 'string' ?\n            lookerUser.user_attributes.permission_level.charAt(0).toUpperCase() + lookerUser.user_attributes.permission_level.substring(1) : ''}\n        </Typography>\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem autoFocus={false}>Select User Level</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('basic', 'permission')}>Basic</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('advanced', 'permission')}>Advanced</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('premium', 'permission')}>Premium</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem onClick={() => handleClose(null)}>Sign Out</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem onClick={() => handleClose('modal')}>Show Monetization Modal</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem>Current brand: {selectedBrand}</MenuItem>\n        <MenuItem>\n          <Autocomplete\n            id=\"combo-box-usermenu\"\n            options={lookerUserAttributeBrandOptions}\n            getOptionLabel={(option) => option.label}\n            style={{ width: 300 }}\n            onChange={(event) => handleClose((event.target.innerText || ''), 'brand')}\n            renderInput={(params) => <TextField {...params}\n              label=\"Change merchant brand\"\n              variant=\"outlined\"\n            />}\n            loadingText=\"Loading...\"\n            disableautofocus=\"true\"\n            onKeyDown={(event) => event.stopPropagation()}\n          />\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Typography, Grid, Fade, ClickAwayListener } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n// import { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/hljs'; //hehe\nimport AppContext from '../../AppContext'\n\n//helper function for rendering content in code tab\nexport default function CodeFlyout(props) {\n  const { toggleCodeShow } = useContext(AppContext);\n  const { codeShow } = useContext(AppContext);\n\n  const { classes, lookerContent, clientSideCode, serverSideCode, lookerUser, permissionNeededCode, height } = props\n  return (\n    // <ClickAwayListener onClickAway={toggleCodeShow} mouseEvent={!codeShow ? false : 'click'}>\n    <Fade in={codeShow || false}>\n      {Object.keys(lookerUser).length ?\n        <Grid container spacing={3}\n          className={`${classes.padding20} ${classes.codeFlyoutContainer}`}\n          style={{ height }}>\n          <Grid item sm={11}>\n            <Typography variant=\"h6\" className={` ${classes.mrAuto}`} style={{ color: 'white' }}>\n              Looker User Object\n            </Typography>\n          </Grid>\n          <Grid item sm={1}\n            style={{ textAlign: 'right' }}\n          >\n            <CloseIcon style={{ color: 'white', cursor: 'pointer' }} onClick={() => toggleCodeShow()} />\n          </Grid>\n\n          <Grid item sm={12}>\n            <CodeSnippet code={lookerUser} />\n          </Grid>\n        </Grid> : ''\n      }\n    </Fade >\n    // </ClickAwayListener >\n  )\n}\n\nfunction CodeSnippet(props) {\n  // console.log('CodeSnippet');\n  // console.log('props', props);\n  const { code } = props\n  return (\n    <SyntaxHighlighter language=\"json\" style={dracula} showLineNumbers={true} >\n      {typeof code === \"object\" ? JSON.stringify(code, true, 4) : code}\n    </SyntaxHighlighter>)\n}","export default \"//imports\\nimport $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, Divider } from '@material-ui/core'\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./SplashPage.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport { SingleValueVis } from './SingleValueVis';\\nimport { Welcome } from './Welcome';\\nimport { PopularAnalysis } from './PopularAnalysis';\\nimport { EmbeddedLook } from './EmbeddedLook';\\nimport { EmbeddedDashboard } from './EmbeddedDashboard';\\nimport { ContentCarousel } from './ContentCarousel';\\nimport BottomBar from '../../Material/BottomBar.js'\\nimport AppContext from '../../../AppContext';\\nimport { EmbeddedQuery } from './EmbeddedQuery';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of SplashPage Component\\nexport default function SplashPage(props) {\\n  // console.log('SplashPage')\\n  //intialize state using hooks\\n  const topBarBottomBarHeight = 112;\\n  const [value, setValue] = useState(0);\\n  const [iFrameExists, setIFrame] = useState(1);\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\\n\\n  const { toggleShow } = useContext(AppContext)\\n  const { show } = useContext(AppContext)\\n  const { codeShow } = useContext(AppContext)\\n\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, handleTabChange, handleMenuItemSelect, lookerUser, lookerHost } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * setSampleCode\\n  */\\n  useEffect(() => {\\n    window.addEventListener(\\\"resize\\\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\\n  }, [lookerContent]);\\n\\n  /**\\n   * What this return  does:\\n   * Rendering of actual html elements,\\n   * this section is necessary but less relevant to looker functionality itself\\n   */\\n  return (\\n    <div className={`${classes.root} demoComponent`}\\n      style={{ height }}>\\n      <Card elevation={1} className={`${classes.padding30} \\n      ${classes.height100Percent}\\n      ${classes.overflowScroll}`}\\n      >\\n        <Grid container\\n          key={validIdHelper(type)}>\\n          <div className={classes.root}>\\n            {iFrameExists ? '' :\\n              <Grid item sm={12} >\\n                <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                  <CircularProgress className={classes.circularProgress} />\\n                </Card>\\n              </Grid>\\n            }\\n            <Box className={iFrameExists ? `` : `${classes.hidden}`}>\\n              <Grid container\\n                spacing={3}\\n                key={`${validIdHelper(demoComponentType + '-outerFragment')}`}\\n                className={`${classes.noContainerScroll}`}\\n              >\\n                {\\n                  codeShow ? <Grid item sm={6}\\n                    className={`${classes.positionFixedTopRight}`}\\n                  >\\n                    <CodeFlyout {...props}\\n                      classes={classes}\\n                      lookerUser={lookerUser}\\n                      height={height}\\n                    />\\n                  </Grid> : ''}\\n                {lookerContent.map((lookerContent, innerIndex) => {\\n                  return (\\n                    <Grid\\n                      key={`${validIdHelper(demoComponentType + '-innerFragment-' + innerIndex)}`}\\n                      item\\n                      sm={parseInt(lookerContent.gridWidth)}\\n                    >\\n                      {(lookerContent.type === 'welcome') && <Welcome\\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\\n                      />}\\n                      {(lookerContent.type === 'carousel') && <ContentCarousel\\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\\n                      />}\\n                      {(lookerContent.type === 'single value') && <SingleValueVis\\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\\n                      />}\\n                      {/* {(lookerContent.type === 'dashboard') && <EmbeddedDashboard\\n                        {...{ lookerContent, classes, lookerHost }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\\n                      />} */}\\n                      {(lookerContent.type === 'dashboard') && <EmbeddedQuery\\n                        {...{ lookerContent, classes, lookerHost }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\\n                      />}\\n                      {(lookerContent.type === 'popular analysis') && <PopularAnalysis\\n                        {...{ lookerContent, classes, demoComponentType, handleMenuItemSelect, lookerHost }}\\n                      />}\\n                    </Grid>\\n                  )\\n                })}\\n              </Grid>\\n            </Box >\\n          </div >\\n        </Grid >\\n      </Card >\\n    </div >\\n  )\\n}\";","import { makeStyles } from '@material-ui/core/styles';\nimport { red, green } from '@material-ui/core/colors';\nconst redPrimary = red[500];\nconst greenPrimary = green[500];\nconst redDark = red[900];\nconst greenDark = green[900];\nconst redLight = red[100];\nconst greenLight = green[100];\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: 8\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n  },\n  maxHeight200: {\n    maxHeight: 200,\n    height: 200,\n    overflow: 'hidden'\n  },\n  mt30: {\n    marginTop: 30\n  },\n  mb30: {\n    marginBottom: 30\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  cursorPointer: {\n    cursor: 'pointer'\n  },\n  border: {\n    border: '1px solid black'\n  },\n  height800: {\n    height: 800\n  },\n  maxHeight100: {\n    maxHeight: 100,\n    height: 100,\n  },\n  maxHeight400: {\n    maxHeight: 400,\n    height: 400,\n  },\n  minHeight200: {\n    minHeight: 200,\n    overflow: 'scroll'\n  },\n  redNeg: {\n    backgroundColor: redLight,\n    color: redPrimary,\n    fontWeight: 800\n  },\n  greenPos: {\n    backgroundColor: greenLight,\n    color: greenPrimary,\n    fontWeight: 800\n  },\n  padding30: {\n    padding: 30\n  },\n  mb12: {\n    marginBottom: 12\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  overflowVisible: {\n    overflow: 'visible'\n  },\n  maxHeight150: {\n    maxHeight: 150,\n    height: 150,\n  },\n  minHeight150: {\n    minHeight: 150,\n    overflow: 'scroll'\n  },\n  carouselLegend: {\n    backgroundColor: 'rgb(192,192,192, .5)\t !important',\n    textAlign: 'center !important',\n    opacity: `100 !important`,\n    fontWeight: 800,\n    // width: `${25}% !important`,\n  },\n  carouselLegendTitle: {\n    fontSize: '24px !important',\n\n  },\n  carouselLegendBody: {\n    fontSize: '16px !important',\n\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  padding15: {\n    padding: 15\n  },\n  maxHeight75: {\n    maxHeight: 75,\n    height: 75,\n  },\n  overflowYScroll: {\n    overflowY: 'scroll',\n    overflowX: 'hidden'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  height100Percent: {\n    height: '100%'\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  },\n  lookerCardShadow: {\n    border: 'none',\n    borderRadius: '6px',\n    boxShadow: 'rgba(0, 0, 0, 0.11) 0px 2px 12px, rgba(0, 0, 0, 0.04) 0px 1px 4px'\n  },\n  maxHeight60: {\n    maxHeight: 60,\n    height: 60,\n  },\n  maxHeight350: {\n    maxHeight: 350,\n    height: 350,\n  },\n  maxHeight80Percent: {\n    maxHeight: '80%',\n    height: '80%'\n  }\n}));","import React, { useContext } from 'react';\nimport AppContext from '../../AppContext';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport { Chip, Fade } from '@material-ui/core';\n\n\n// maybe move this to config?\nexport const API_COLOR = '#A142F4'\nexport const API_BACKGROUND_COLOR = 'rgba(161, 66, 244, 0.1)'\nexport const EMBED_COLOR = '#12B5CB'\nexport const EMBED_BACKGROUND_COLOR = 'rgba(18, 181, 203, 0.1)'\nexport const EMBED_METHOD_COLOR = '#297AF4'\nexport const EMBED_METHOD_BACKGROUND_COLOR = 'rgba(41, 122, 244, 0.1)'\n\nfunction Highlight({ children, color, height, width, margin, id, backgroundColor, ...props }) {\n  // console.log('Highlight')\n  // console.log('props', props)\n  const { show } = useContext(AppContext)\n  var style = {};\n  if (show) {\n    style = {\n      ...style,\n      // boxShadow: `0 0 10px ${color}, \n      // inset 0 0 10px ${color}`,\n\n      border: `3px solid ${color}`,\n      backgroundColor: `${backgroundColor}`,\n      borderRadius: `4px`,\n      // zIndex: 10000000000000000,\n      position: 'relative',\n      // padding: '10px'\n    }\n  } else {\n    style = {\n      border: `3px solid transparent`,\n      backgroundColor: `transparent`,\n      // padding: '10px'\n    }\n  }\n\n  if (height) { style['height'] = height }\n  if (width) { style['width'] = width }\n  if (margin) { style['margin'] = margin }\n\n  // boxShadow: `0 4px 80px ${color}22`\n\n  return (\n    <div id={id} style={style}\n    // {...props}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport function ApiHighlight({ ...props }) {\n  const { show } = useContext(AppContext)\n  const { classes } = props\n  const { children } = props\n\n  return <Highlight {...props} color={API_COLOR} backgroundColor={API_BACKGROUND_COLOR}>\n\n    <Chip size=\"small\"\n      label={\"API\"}\n      className={show ? 'test' : `${classes.hidden}`}\n      display=\"inline\"\n      align=\"right\"\n      style={{ backgroundColor: \"#A142F4\", color: '#fff', top: '-10px', left: '-10px', position: 'absolute' }}\n    />\n    {children}\n\n  </Highlight>\n}\n\nexport function EmbedHighlight({ ...props }) {\n  const { show } = useContext(AppContext)\n  const { classes } = props\n  const { children } = props\n\n  return <Highlight {...props} color={EMBED_COLOR} backgroundColor={EMBED_BACKGROUND_COLOR}>\n\n    <Chip size=\"small\"\n      label={\"Embed\"}\n      className={show ? 'test' : `${classes.hidden}`}\n      display=\"inline\"\n      align=\"right\"\n      style={{\n        backgroundColor: \"#12B5CB\",\n        color: '#fff',\n        top: '-10px',\n        left: '-10px',\n        position: 'absolute',\n      }}\n    />\n    {children}\n\n  </Highlight>\n}\n\nexport function EmbedMethodHighlight({ ...props }) {\n  const { show } = useContext(AppContext)\n  const { classes } = props\n  const { children } = props\n\n  return <Highlight {...props} color={EMBED_METHOD_COLOR} backgroundColor={EMBED_METHOD_BACKGROUND_COLOR}>\n\n    <Chip size=\"small\"\n      label={\"Embed Method\"}\n      className={show ? 'test' : `${classes.hidden}`}\n      display=\"inline\"\n      align=\"right\"\n      style={{\n        backgroundColor: \"#297AF4\",\n        color: '#fff',\n        top: '-10px',\n        left: '-10px',\n        position: 'absolute'\n      }}\n    />\n    {children}\n\n  </Highlight>\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Chip } from '@material-ui/core';\nimport { ResponsiveLine } from '@nivo/line';\nconst { validIdHelper, decodeHtml } = require('../../../tools');\n\n\n\nexport function SingleValueVis({ lookerContent, classes }) {\n  // console.log('SingleValueVis')\n  // console.log('lookerContent', lookerContent)\n\n  const [apiContent, setApiContent] = useState(undefined);\n  const { userProfile, lookerUser, show, sdk } = useContext(AppContext);\n\n  let dataObjForSparkline = {}\n\n  useEffect(() => {\n    let isSubscribed = true\n    runInlineQuery().then(response => {\n      if (isSubscribed) {\n        setApiContent(response)\n      }\n    })\n    return () => isSubscribed = false\n  }, [lookerContent, lookerUser]);\n\n  const runInlineQuery = async () => {\n\n    setApiContent(undefined)\n    let { inlineQuery } = lookerContent;\n    let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: inlineQuery }));\n    dataObjForSparkline.id = validIdHelper(`singleVisValue-${lookerContent.id}`);\n    dataObjForSparkline.data = [];\n\n    let dataArrForDataObj = [];\n    lookerResponseData.map(item => {\n      if (item[lookerContent.inlineQuery.fields[0]]\n        // && item['order_items.count']['order_items.previous_period'][\"This Period\" ? \"This Period\" : \"Previous Period\"]\n      ) {\n        let thisDataItem = {\n          \"x\": item[lookerContent.inlineQuery.fields[0]].toString(),\n          \"y\": item[lookerContent.inlineQuery.fields[1]] || 0,\n          \"change\": item.change\n        }\n        if (thisDataItem && thisDataItem.y !== \"null\") dataArrForDataObj.push(thisDataItem)\n      }\n    })\n    dataObjForSparkline.data = [...dataArrForDataObj]\n    //setApiContent([dataObjForSparkline])\n    return [dataObjForSparkline]\n  }\n\n  const upOrDownArrow = apiContent && apiContent.length ? isNaN((apiContent[0].data[0].change * 100).toFixed(2)) ? '' : parseInt((apiContent[0].data[0].change * 100).toFixed(0)) >= 0 ? `&uarr;` : `&darr;` : '';\n  const labelText = !apiContent ? '' : lookerContent.chipFormat === \"revenue\" ?\n    `$${(apiContent[0].data && apiContent[0].data[0] ? apiContent[0].data[0].y.toFixed(2) : '').replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}` :\n    lookerContent.chipFormat === \"integer\" ? parseInt(apiContent[0].data && apiContent[0].data[0] ? apiContent[0].data[0].y.toFixed(2) : '') : lookerContent.chipFormat === 'percent' ?\n      `${((apiContent[0].data && apiContent[0].data[0] ? apiContent[0].data[0].y.toFixed(2) : '') * 100)\n      }% `\n      : '';\n  return (\n    <Card className={`${classes.padding15} \n    ${classes.overflowHidden} \n    ${classes.lookerCardShadow}\n    `}\n    >\n      <div\n        style={{\n          height: lookerContent.height,\n        }}\n      >\n        {apiContent ?\n          <React.Fragment>\n            <ApiHighlight height={130} classes={classes} >\n              <Grid container className={`${classes.textCenter} `}>\n                <Grid item sm={12}>\n                  <Typography variant=\"body2\" align=\"left\" color=\"secondary\">\n                    {lookerContent.label}\n                  </Typography>\n                </Grid>\n                <Grid item sm={6}>\n                  <Typography variant=\"subtitle1\" align=\"left\">\n                    <b>{labelText}</b>\n                  </Typography>\n                </Grid>\n                <Grid item sm={6}>\n                  <Chip size=\"small\"\n                    label={`${decodeHtml(upOrDownArrow)} ${parseInt(apiContent[0].data[0].change * 100).toFixed(0)}% `}\n                    className={isNaN((apiContent[0].data[0].change * 100).toFixed(2)) ? '' : parseInt((apiContent[0].data[0].change * 100).toFixed(0)) >= 0 ? classes.greenPos : classes.redNeg}\n                    display=\"inline\"\n                    align=\"right\"\n                  />\n                </Grid>\n              </Grid>\n              <ResponsiveLine\n                data={apiContent}\n                margin={{ top: 25, right: 25, bottom: 25, left: 25 }}\n                xScale={{\n                  type: 'time',\n                  format: '%Y-%m-%d',\n                  precision: 'day',\n                }}\n                yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                axisLeft={{\n                  orient: \"left\",\n                  tickSize: 0,\n                  tickPadding: 5,\n                  tickRotation: 0,\n                  format: () => null\n                }}\n                axisBottom={{\n                  orient: \"bottom\",\n                  tickSize: 0,\n                  tickPadding: 5,\n                  tickRotation: 0,\n                  format: () => null,\n                  // legend: lookerContent.label,\n                  // legendOffset: 15,\n                  // legendPosition: 'middle'\n                }}\n                enablePoints={false}\n                enableGridX={false}\n                enableGridY={false}\n                height={100}\n                colors={lookerContent.visColor}\n                animate={true}\n              />\n            </ApiHighlight>\n          </React.Fragment>\n          :\n          <Grid item sm={12} className={`${classes.flexCentered} `} style={{ height: lookerContent.height }}>\n            <CircularProgress className={classes.circularProgress}\n              style={{ color: `${lookerContent.visColor} ` }} />\n          </Grid>\n        }\n      </div >\n    </Card >\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Grid, CircularProgress, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst { validIdHelper, decodeHtml } = require('../../../tools');\n\n\nexport function NaturalLanguage({ lookerContent, inlineQuery, index, classes }) {\n  const [apiContent, setApiContent] = useState(undefined);\n  const { userProfile, lookerUser, show, sdk } = useContext(AppContext);\n\n  useEffect(() => {\n    let isSubscribed = true\n    runInlineQuery().then(response => {\n      if (isSubscribed) {\n        setApiContent(response)\n      }\n    })\n    return () => isSubscribed = false\n  }, [inlineQuery, lookerUser]);\n\n  const runInlineQuery = async () => {\n    setApiContent(undefined)\n    let clientLookerResponse = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: inlineQuery }));\n    return clientLookerResponse[0];\n  }\n\n  const upOrDownArrow = apiContent ? apiContent.change > 0 ? `&uarr;` : `&darr;` : '';\n\n  return (\n    <Grid item sm={12}>\n      {apiContent ?\n        <React.Fragment >\n          <ApiHighlight classes={classes} >\n            <Typography variant=\"subtitle1\" display=\"inline\">\n              Your {lookerContent.inlineQueriesMap[index]} category, <b>{apiContent['products.category']}</b>, is {apiContent.change > 0 ? 'up ' : 'down '}\n            </Typography>\n            <Chip size=\"small\"\n              label={`${decodeHtml(upOrDownArrow)} ${parseInt(apiContent.change * 100).toFixed(0)}% `}\n              className={apiContent.change > 0 ? classes.greenPos : classes.redNeg}\n              display=\"inline\"\n            />\n            <Typography variant=\"subtitle1\" display=\"inline\">\n              &nbsp;over the past week.\n        </Typography>\n          </ApiHighlight>\n        </React.Fragment>\n        : <div style={{ height: '56px' }}></div>\n\n        // <Grid item sm={12} >\n        //   <Card className={`${classes.card} ${classes.flexCentered}`}>\n        //     <CircularProgress className={classes.circularProgress}\n        //       style={{ color: `${lookerContent.visColor} ` }} />\n        //   </Card>\n        // </Grid>\n      }\n    </Grid >\n  );\n}\n\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { NaturalLanguage } from './NaturalLanguage';\nconst { validIdHelper } = require('../../../tools');\n\nexport function Welcome({ lookerContent, classes }) {\n  // console.log('Welcome')\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    // setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  return (\n    <div\n      className={`${classes.overflowScroll} ${classes.padding15}`}\n      style={{ maxHeight: lookerContent.height }}\n    >\n      <Typography variant=\"h4\">Welcome back, {userProfile.givenName}!</Typography>\n      <br />\n      <>\n        {lookerContent.inlineQueries.map((inlineQuery, index) => (\n          <NaturalLanguage\n            key={`${validIdHelper('naturalLanguage-splashPage-' + index)}`}\n            {...{ lookerContent, inlineQuery, index, classes }}\n          />\n        )\n        )}\n      </>\n    </div >\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Grid, CircularProgress, Divider, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport function VectorThumbnail({ lookerContent, classes, item, handleMenuItemSelect, index }) {\n  const [svg, setSvg] = useState(undefined)\n  const { userProfile, lookerUser, show, sdk } = useContext(AppContext);\n\n\n  useEffect(() => {\n    let isSubscribed = true\n    getThumbnail().then(response => {\n      if (isSubscribed) {\n        setSvg(response)\n      }\n    })\n    return () => isSubscribed = false\n  }, [item, lookerUser]);\n\n  const getThumbnail = async () => {\n    let clientLookerResponse = await sdk.ok(sdk.content_thumbnail({ type: item.resourceType, resource_id: item.id }));\n    const blob = new Blob([clientLookerResponse], { type: 'image/svg+xml' });\n    let url = URL.createObjectURL(blob);\n    return url;\n  }\n\n  return (\n    <Grid container\n      onClick={() => handleMenuItemSelect(item.id, 1)}\n      className={`${classes.cursorPointer}`}\n      spacing={3}\n    >\n      {svg ?\n        <>\n          <Grid item sm={1} />\n          <Grid item sm={6}>\n            <ApiHighlight classes={classes}>\n              <div\n                className={` ${classes.maxHeight60} ${classes.textCenter} ${classes.cursorPointer} ${classes.overflowHidden}`}\n              >\n                <img\n                  onClick={() => handleMenuItemSelect(item.id, 1)}\n                  src={svg}\n                  style={{ width: '100%' }}\n                />\n\n              </div>\n            </ApiHighlight>\n          </Grid>\n          <Grid item sm={4}>\n            <Typography variant=\"subtitle1\"  >{item.label}</Typography>\n          </Grid>\n          {index < 2 ?\n            <Grid item sm={12}>\n              <Divider className={`${classes.divider} ${classes.mb12} ${classes.mt12}`} />\n            </Grid> : ''}\n        </>\n        :\n        ''\n      }\n    </Grid >\n\n  );\n}","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ResponsiveLine } from '@nivo/line';\nimport { VectorThumbnail } from './VectorThumbnail';\nimport { NaturalLanguage } from './NaturalLanguage';\nconst { validIdHelper } = require('../../../tools');\n\n\n\nexport function PopularAnalysis({ lookerContent, classes, handleMenuItemSelect }) {\n  const [apiContent, setApiContent] = useState([]);\n\n  return (\n\n    <Card className={`${classes.padding15} \n    ${classes.overflowHidden} \n    ${classes.lookerCardShadow}\n    `}\n    // variant=\"outlined\"\n    >\n      <div\n        className={`${classes.overflowYScroll}`}\n        style={{ height: lookerContent.height }}\n      >\n        <Grid container\n          spacing={3}>\n          <Grid item sm={12}>\n            <Typography variant=\"h6\" align=\"center\" color=\"secondary\">\n              Helpful Dashboards\n          </Typography></Grid>\n          {lookerContent.vectors.map((item, index) => {\n            return (\n              <VectorThumbnail\n                key={`${validIdHelper('vectorThumbnail-splashPage-' + index)}`}\n                {...{ lookerContent, item, classes, handleMenuItemSelect, index }}\n              />\n            )\n          }\n          )}\n        </Grid>\n\n      </div >\n    </Card>\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider, Hidden } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nconst { validIdHelper } = require('../../../tools');\n\n\n\nexport function ContentCarousel({ lookerContent, classes }) {\n  // console.log('Welcome')\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    // setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  const blogImage = require(`../../../images/atom_splash_blog.jpg`)\n  const blogTitle = 'Blog'\n  const blogBody = 'Read our latest thoughts on the ecommerce landscape'\n  const inventoryImage = require(`../../../images/atom_splash_inventory.jpg`)\n  const inventoryTitle = 'Inventory Best Practices'\n  const inventoryBody = 'McKinsey & Co found in a recent study that retailers who implement JIT inventory and fulfillment practices can result in 5 - 15% longer run operating margin vs similar competitors that don’t while maintaining similar CSAT scores'\n  const trendsImage = require(`../../../images/atom_splash_trends.jpg`)\n  const trendsTitle = 'Macro Trends'\n  const trendsBody = 'Online and brick and mortar retailers are rapidly converging on Omni Channel where the traditional walls of retail vs online are blurred. Amazon partners with Kohls to create in person returns and Walmart acquires Jet.com to boost its reach and  ability to execute an online strategy. As a brand partner how do you capitalize on these trends?'\n\n  return (\n    <div\n      className={`${classes.overflowHidden}  MuiPaper-rounded`}\n      style={{\n        maxHeight: lookerContent.height,\n        borderRadius: '4px'\n      }}\n    >\n\n      <Carousel infiniteLoop={true} autoPlay={true} showThumbs={false}>\n        <div\n          style={{\n            maxHeight: lookerContent.height,\n            // backgroundImage: `url(${backgroundImage1})`,\n            // backgroundSize: 'cover'\n          }}\n        >\n          <img src={blogImage} />\n          <p className={`legend ${classes.carouselLegend}`}>\n            <span className={`${classes.carouselLegendTitle}`}>{blogTitle}</span>\n            <br />\n            <span className={`${classes.carouselLegendBody}`}>{`${blogBody.substring(0, 50)}...`}</span>\n          </p>\n        </div>\n        <div\n          style={{\n            maxHeight: lookerContent.height,\n            // backgroundImage: `url(${backgroundImage2})`,\n            // backgroundSize: 'cover'\n          }}\n        >\n          <img src={inventoryImage} />\n          <p className={`legend ${classes.carouselLegend}`}>\n            <span className={`${classes.carouselLegendTitle}`}>{inventoryTitle}</span>\n            <br />\n            <span className={`${classes.carouselLegendBody}`}>{`${inventoryBody.substring(0, 50)}...`}</span>\n          </p>\n        </div>\n        <div\n          style={{\n            maxHeight: lookerContent.height,\n            // backgroundImage: `url(${backgroundImage3})`,\n            // backgroundSize: 'cover'\n          }}\n        >\n          <img src={trendsImage} />\n          <p className={`legend ${classes.carouselLegend}`}>\n            <span className={`${classes.carouselLegendTitle}`}>{trendsTitle}</span>\n            <br />\n            <span className={`${classes.carouselLegendBody}`}>{`${trendsBody.substring(0, 50)}...`}</span>\n          </p>\n        </div>\n      </Carousel>\n    </div >\n  );\n}\n\n// export function createMarkup() {\n//   return { __html: 'First &middot; Second' };\n// }\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\nimport { Code, HighlightOutlined } from '@material-ui/icons';\nimport clsx from 'clsx';\n\nimport AppContext from '../../AppContext';\n\n\nexport default function BottomBar(props) {\n  // console.log('BottomBar')\n  // console.log('props', props)\n\n  const { classes } = props\n  const { toggleShow } = useContext(AppContext)\n  const { toggleCodeShow } = useContext(AppContext)\n\n  return (\n    <Grid container\n      className={`${classes.mtAuto} ${classes.mb10}`}>\n      <Grid item sm={6}>\n        <Button\n          display=\"inline\"\n          startIcon={<HighlightOutlined />}\n          onClick={toggleShow}>Source\n      </Button>\n      </Grid>\n      <Grid item sm={6}>\n        <Button\n          className={`${classes.ml12}`}\n          display=\"inline\"\n          startIcon={<Code />}\n          onClick={toggleCodeShow}>Code\n      </Button>\n      </Grid>\n    </Grid >\n  );\n}\n","import $ from 'jquery';\nimport React, { useEffect, useRef, useCallback, useState, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport { Typography, Grid, Card, CircularProgress, Box, Chip } from '@material-ui/core';\nimport { urlencoded } from 'body-parser';\n\nexport function EmbeddedQuery({ lookerContent, classes, id }) {\n\n  const [iFrameExists, setIFrame] = useState(0);\n  const { userProfile, lookerUser, show, lookerHost } = useContext(AppContext)\n\n  useEffect(() => {\n    $(`#${id}`).html('')\n    setIFrame(0)\n\n    // let queryUrl = encodeURIComponent(`embed/query/atom_fashion/order_items?fields=order_items.created_time,users.name,order_items.total_sale_price,users.approx_location,users.city&f[users.country]=USA&sorts=order_items.created_time+desc&limit=100&query_timezone=America%2FLos_Angeles&vis=%7B%22map_plot_mode%22%3A%22points%22%2C%22heatmap_gridlines%22%3Afalse%2C%22heatmap_gridlines_empty%22%3Afalse%2C%22heatmap_opacity%22%3A0.5%2C%22show_region_field%22%3Atrue%2C%22draw_map_labels_above_data%22%3Atrue%2C%22map_tile_provider%22%3A%22traffic_day%22%2C%22map_position%22%3A%22custom%22%2C%22map_scale_indicator%22%3A%22off%22%2C%22map_pannable%22%3Atrue%2C%22map_zoomable%22%3Atrue%2C%22map_marker_type%22%3A%22circle%22%2C%22map_marker_icon_name%22%3A%22shopping_cart%22%2C%22map_marker_radius_mode%22%3A%22proportional_value%22%2C%22map_marker_units%22%3A%22pixels%22%2C%22map_marker_proportional_scale_type%22%3A%22linear%22%2C%22map_marker_color_mode%22%3A%22fixed%22%2C%22show_view_names%22%3Afalse%2C%22show_legend%22%3Atrue%2C%22quantize_map_value_colors%22%3Afalse%2C%22reverse_map_value_colors%22%3Afalse%2C%22map_latitude%22%3A30.893092092422695%2C%22map_longitude%22%3A-94.54010009765625%2C%22map_zoom%22%3A4%2C%22map_marker_color%22%3A%5B%22%234595EC%22%5D%2C%22series_types%22%3A%7B%7D%2C%22type%22%3A%22looker_map%22%2C%22defaults_version%22%3A1%2C%22hidden_fields%22%3A%5B%22users.name%22%2C%22order_items.created_time%22%5D%7D&filter_config={}&origin=share-expanded&sdk=2&embed_domain=${document.location.origin}`)\n    //https://pbldev.looker.com/explore/atom_fashion/order_items?fields=order_items.created_time,users.name,order_items.total_sale_price,users.approx_location,users.city&f[users.country]=USA&sorts=order_items.created_time+desc&limit=100&query_timezone=America%2FLos_Angeles&vis=%7B%22map_plot_mode%22%3A%22points%22%2C%22heatmap_gridlines%22%3Afalse%2C%22heatmap_gridlines_empty%22%3Afalse%2C%22heatmap_opacity%22%3A0.5%2C%22show_region_field%22%3Atrue%2C%22draw_map_labels_above_data%22%3Atrue%2C%22map_tile_provider%22%3A%22traffic_day%22%2C%22map_position%22%3A%22custom%22%2C%22map_scale_indicator%22%3A%22off%22%2C%22map_pannable%22%3Atrue%2C%22map_zoomable%22%3Atrue%2C%22map_marker_type%22%3A%22circle%22%2C%22map_marker_icon_name%22%3A%22shopping_cart%22%2C%22map_marker_radius_mode%22%3A%22proportional_value%22%2C%22map_marker_units%22%3A%22pixels%22%2C%22map_marker_proportional_scale_type%22%3A%22linear%22%2C%22map_marker_color_mode%22%3A%22fixed%22%2C%22show_view_names%22%3Afalse%2C%22show_legend%22%3Atrue%2C%22quantize_map_value_colors%22%3Afalse%2C%22reverse_map_value_colors%22%3Afalse%2C%22map_latitude%22%3A40.267214274019075%2C%22map_longitude%22%3A-94.70352172851564%2C%22map_zoom%22%3A4%2C%22map_marker_color%22%3A%5B%22%234595EC%22%5D%2C%22series_types%22%3A%7B%7D%2C%22type%22%3A%22looker_map%22%2C%22defaults_version%22%3A1%2C%22hidden_fields%22%3A%5B%22users.name%22%2C%22order_items.created_time%22%5D%7D&filter_config=%7B%22users.country%22%3A%5B%7B%22type%22%3A%22%3D%22%2C%22values%22%3A%5B%7B%22constant%22%3A%22USA%22%7D%2C%7B%7D%5D%2C%22id%22%3A0%2C%22error%22%3Afalse%7D%5D%7D&origin=share-expanded\n    let queryUrl = encodeURIComponent(`embed/query/atom_fashion/order_items?fields=order_items.created_time,users.name,order_items.total_sale_price,users.approx_location,users.city&f[users.country]=USA&sorts=order_items.created_time+desc&limit=100&query_timezone=America%2FLos_Angeles&vis=%7B%22map_plot_mode%22%3A%22points%22%2C%22heatmap_gridlines%22%3Afalse%2C%22heatmap_gridlines_empty%22%3Afalse%2C%22heatmap_opacity%22%3A0.5%2C%22show_region_field%22%3Atrue%2C%22draw_map_labels_above_data%22%3Atrue%2C%22map_tile_provider%22%3A%22traffic_day%22%2C%22map_position%22%3A%22custom%22%2C%22map_scale_indicator%22%3A%22off%22%2C%22map_pannable%22%3Atrue%2C%22map_zoomable%22%3Atrue%2C%22map_marker_type%22%3A%22circle%22%2C%22map_marker_icon_name%22%3A%22shopping_cart%22%2C%22map_marker_radius_mode%22%3A%22proportional_value%22%2C%22map_marker_units%22%3A%22pixels%22%2C%22map_marker_proportional_scale_type%22%3A%22linear%22%2C%22map_marker_color_mode%22%3A%22fixed%22%2C%22show_view_names%22%3Afalse%2C%22show_legend%22%3Atrue%2C%22quantize_map_value_colors%22%3Afalse%2C%22reverse_map_value_colors%22%3Afalse%2C%22map_latitude%22%3A40.267214274019075%2C%22map_longitude%22%3A-94.70352172851564%2C%22map_zoom%22%3A4%2C%22map_marker_color%22%3A%5B%22%234595EC%22%5D%2C%22series_types%22%3A%7B%7D%2C%22type%22%3A%22looker_map%22%2C%22defaults_version%22%3A1%2C%22hidden_fields%22%3A%5B%22users.name%22%2C%22order_items.created_time%22%5D%7D&filter_config={}&origin=share-expanded&sdk=2&embed_domain=${document.location.origin}`)\n    async function fetchData() {\n      // You can await here\n      await fetch(`/auth?src=${queryUrl}`)\n        .then(response => response.json())\n        .then(data => {\n          LookerEmbedSDK.createExploreWithUrl(data.url)\n            .appendTo(document.getElementById(id))\n            .withClassName('explore')\n            .withClassName('splashPage')\n            .withClassName(lookerContent.id)\n            .withTheme('atom_fashion')\n            .build()\n            .connect()\n            .then((explore) => {\n              // console.log('then explore', explore)\n              setIFrame(1)\n              LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n            })\n            .catch((error) => {\n              // console.log('catch', error)\n              console.error('Connection error', error)\n            })\n        });\n      // ...\n\n    }\n    fetchData();\n\n    // console.log('signedUrl', signedUrl)\n\n\n  }, [lookerUser])\n\n  return (\n\n    <Card className={`${classes.padding15} \n    // ${classes.overflowHidden} \n    ${classes.lookerCardShadow}\n    `}\n    // variant=\"outlined\"\n    >\n      <div\n        // className={`${classes.overflowHidden}`}\n        style={{ height: lookerContent.height }}\n      >\n        {\n          iFrameExists ? '' :\n\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered} ${classes.maxHeight350} ${classes.overflowHidden}`} elevation={0}>\n                <CircularProgress className={classes.circularProgress}\n                />\n              </Card>\n            </Grid>\n        }\n        <Grid container spacing={3}>\n          <Grid item sm={12}>\n            <EmbedHighlight classes={classes}\n              height={iFrameExists ? 350 : 0}\n            >\n              <Typography variant=\"h6\" align=\"center\" color=\"secondary\">\n                {lookerContent.title}\n              </Typography>\n              <div\n                className={`embedContainer embedContainerNoHeader splashPage ${classes.overflowHidden} ${classes.maxHeight80Percent}`}\n                id={id}\n                key={id}\n              >\n              </div>\n            </EmbedHighlight>\n          </Grid></Grid>\n      </div >\n    </Card >\n  );\n}","//imports\nimport $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, Divider } from '@material-ui/core'\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./SplashPage.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport { SingleValueVis } from './SingleValueVis';\nimport { Welcome } from './Welcome';\nimport { PopularAnalysis } from './PopularAnalysis';\nimport { EmbeddedLook } from './EmbeddedLook';\nimport { EmbeddedDashboard } from './EmbeddedDashboard';\nimport { ContentCarousel } from './ContentCarousel';\nimport BottomBar from '../../Material/BottomBar.js'\nimport AppContext from '../../../AppContext';\nimport { EmbeddedQuery } from './EmbeddedQuery';\nconst { validIdHelper } = require('../../../tools');\n\n//start of SplashPage Component\nexport default function SplashPage(props) {\n  // console.log('SplashPage')\n  //intialize state using hooks\n  const topBarBottomBarHeight = 112;\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(1);\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n\n  const { toggleShow } = useContext(AppContext)\n  const { show } = useContext(AppContext)\n  const { codeShow } = useContext(AppContext)\n\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, handleTabChange, handleMenuItemSelect, lookerUser, lookerHost } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  const demoComponentType = type || 'code flyout';\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  /**\n   * listen for lookerContent and call \n   * setSampleCode\n  */\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n  }, [lookerContent]);\n\n  /**\n   * What this return  does:\n   * Rendering of actual html elements,\n   * this section is necessary but less relevant to looker functionality itself\n   */\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowScroll}`}\n      >\n        <Grid container\n          key={validIdHelper(type)}>\n          <div className={classes.root}>\n            {iFrameExists ? '' :\n              <Grid item sm={12} >\n                <Card className={`${classes.card} ${classes.flexCentered}`}>\n                  <CircularProgress className={classes.circularProgress} />\n                </Card>\n              </Grid>\n            }\n            <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n              <Grid container\n                spacing={3}\n                key={`${validIdHelper(demoComponentType + '-outerFragment')}`}\n                className={`${classes.noContainerScroll}`}\n              >\n                {\n                  codeShow ? <Grid item sm={6}\n                    className={`${classes.positionFixedTopRight}`}\n                  >\n                    <CodeFlyout {...props}\n                      classes={classes}\n                      lookerUser={lookerUser}\n                      height={height}\n                    />\n                  </Grid> : ''}\n                {lookerContent.map((lookerContent, innerIndex) => {\n                  return (\n                    <Grid\n                      key={`${validIdHelper(demoComponentType + '-innerFragment-' + innerIndex)}`}\n                      item\n                      sm={parseInt(lookerContent.gridWidth)}\n                    >\n                      {(lookerContent.type === 'welcome') && <Welcome\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\n                      />}\n                      {(lookerContent.type === 'carousel') && <ContentCarousel\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\n                      />}\n                      {(lookerContent.type === 'single value') && <SingleValueVis\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\n                      />}\n                      {/* {(lookerContent.type === 'dashboard') && <EmbeddedDashboard\n                        {...{ lookerContent, classes, lookerHost }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\n                      />} */}\n                      {(lookerContent.type === 'dashboard') && <EmbeddedQuery\n                        {...{ lookerContent, classes, lookerHost }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\n                      />}\n                      {(lookerContent.type === 'popular analysis') && <PopularAnalysis\n                        {...{ lookerContent, classes, demoComponentType, handleMenuItemSelect, lookerHost }}\n                      />}\n                    </Grid>\n                  )\n                })}\n              </Grid>\n            </Box >\n          </div >\n        </Grid >\n      </Card >\n    </div >\n  )\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    // backgroundColor: theme.palette.background.paper ? theme.palette.background.paper : '',\n    overflow: 'scroll',\n    borderRadius: '8px'\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    // position: 'absolute', //hack for obscuring other elements within Box\n    // zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  mrAuto: {\n    marginRight: 'auto'\n  },\n  card: {\n    minWidth: 275,\n    // minHeight: 400,\n  },\n  padding30: {\n    padding: 30\n  },\n  minHeight680: {\n    minHeight: 680,\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  skeleton: {\n    height: 160,\n    width: '100%'\n  },\n  height100Percent: {\n    height: '100%'\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  padding10: {\n    padding: 10\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  },\n  verticalAlignTop: {\n    verticalAlign: 'top'\n  },\n  w33: {\n    width: \"33%\"\n  },\n  mr12: {\n    marginRight: 12\n  },\n  dot: {\n    height: \"25px\",\n    width: \"25px\",\n    borderRadius: \"50%\",\n    display: \"inline-block\"\n  },\n  borderRadius0: { borderRadius: 0 }\n}));\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport function NumberToColoredPercent( {val, positive_good, abs_val}) {\n  const colors = {\n    up: (positive_good) ? 'green' : 'red',\n    down: (positive_good) ? 'red' : 'green'\n  }\n  const color = (val<0) ? colors.down : (val>0) ? colors.up : 'black'\n  const val_formatted = Math.abs(val).toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 2 })\n  const icon = (val<0) ? '▼' : (val>0) ? '▲' : '—'\n  \n  return (<>\n      <font\n        color={color}\n      >\n        {`${icon} ${val_formatted}`}\n      </font>\n  </>\n  )\n}","import { CheckboxSVGMap } from \"react-svg-map\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport _ from 'lodash'\n\nCheckboxSVGMap.prototype.toggleLocation = function toggleLocation(event) {\n  const location = event.target;\n  // console.log('location', location)\n  // console.log('this.props.map', this.props.map)\n\n  this.setState(prevState => {\n\n    // Copy old state\n    let selectedLocations = [...prevState.selectedLocations];\n    // console.log('selectedLocations', selectedLocations)\n    // console.log('selectedLocations.length', selectedLocations.length)\n\n    //get region associated with states\n    let regionFromStateClicked = _.find(this.props.map.locations, { id: location.id })\n    //all states belonging to region clicked\n    let statesWithinRegionClicked = _.filter(this.props.map.locations, { region: regionFromStateClicked.region })\n\n    //get all unique regions\n    let allUniqueRegions = [];\n    for (let i = 0; i < this.props.map.locations.length; i++) {\n      if (allUniqueRegions.indexOf(this.props.map.locations[i].region) == -1) {\n        allUniqueRegions.push(this.props.map.locations[i].region)\n      }\n    }\n    //get unique regions only from selected locations\n    let allUniqueRegionsFromSelectedLocations = [];\n    for (let j = 0; j < selectedLocations.length; j++) {\n      if (allUniqueRegionsFromSelectedLocations.indexOf(selectedLocations[j].region) == -1) {\n        allUniqueRegionsFromSelectedLocations.push(selectedLocations[j].region)\n      }\n    }\n    //determine which regions are not currently selected\n    let regionsNotCurrentlySelected = _.differenceBy(allUniqueRegions, allUniqueRegionsFromSelectedLocations);\n    let allRegionsNotSelected = [...regionsNotCurrentlySelected, regionFromStateClicked.region];\n    //filter all locations, for all the regions that have not been selected :D\n    let statesNotWithinRegionsClicked = _.filter(this.props.map.locations, (location) => {\n      return allRegionsNotSelected.indexOf(location.region) == -1\n    });\n\n    if (location.attributes['aria-checked'].value === 'true') {\n      // Delete location\n      selectedLocations = statesNotWithinRegionsClicked;\n    } else {\n      // Add location\n      selectedLocations.push(...statesWithinRegionClicked);\n    }\n\n    // Call onChange event handler\n    if (this.props.onChange) {\n      this.props.onChange(selectedLocations);\n    }\n\n    // Return new state\n    return { selectedLocations };\n  });\n}\n\nCheckboxSVGMap.prototype.componentDidMount = function componentDidMount() {\n  //override components for all states to be selected initially\n  this.setState({ selectedLocations: this.props.map.locations });\n}\n\nexport { CheckboxSVGMap as CheckboxSVGMap } \n","import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField, FormControlLabel, Chip,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Slider, FormControl, InputLabel, Select, MenuItem, Switch\n} from '@material-ui/core'\nimport { Autocomplete, ToggleButton, ToggleButtonGroup, Skeleton } from '@material-ui/lab'\nimport {\n  ExpandMore, FilterList, SentimentDissatisfied, SentimentSatisfied, SentimentVerySatisfied,\n} from '@material-ui/icons';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./Dashboard.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport BottomBar from '../../Material/BottomBar.js'\nimport { ApiHighlight, EmbedHighlight, EmbedMethodHighlight } from '../../Highlights/Highlight';\nimport { NumberToColoredPercent } from '../../Accessories/NumberToColoredPercent';\nimport AppContext from '../../../AppContext';\n//new\nimport Usa from \"@svg-maps/usa\";\nimport { CheckboxSVGMap } from \"./CheckboxSvgMapRegion\";\n\nconst { validIdHelper } = require('../../../tools');\n\nexport default function Dashboard(props) {\n  // console.log('Dashboard')\n  // console.log('props', props)\n\n  const { staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\n  const demoComponentType = type || 'code flyout';\n  const topBarBottomBarHeight = 112;\n\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState(undefined);\n  const [dashboardObj, setDashboardObj] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [dashboardOptions, setDashboardOptions] = useState({});\n  const [regionValue, setRegionValue] = useState('Pacific,South,Mountain,Midwest,Northeast');\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const [tileToggleValue, setTileToggleValue] = useState('');\n  const [visColorToggleValue, setVisColorToggleValue] = useState('#326ad4');\n  const [lightThemeToggleValue, setLightThemeToggleValue] = useState(true);\n  const [fontThemeSelectValue, setFontThemeSelectValue] = useState(\"arial\");\n  const [expansionPanelHeight, setExpansionPanelHeight] = useState(0);\n  const { togglePayWallModal, show, codeShow, sdk, atomTheme } = useContext(AppContext)\n\n  const isThemeableDashboard = validIdHelper(`${demoComponentType}${lookerContent[0].id}`) === 'customfilter1';\n  const darkThemeBackgroundColor = \"#343D4E\";\n\n  const classes = useStyles();\n\n  //condtional theming for dark mode :D\n  let paletteToUse = !lightThemeToggleValue ?\n    {\n      palette: {\n        type: 'dark',\n        background: { paper: darkThemeBackgroundColor, default: darkThemeBackgroundColor },\n      }\n    }\n    :\n    { palette: { ...atomTheme.palette } }\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme(\n        paletteToUse\n      ),\n    [lightThemeToggleValue],\n  );\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  const handleTileToggle = (event, newValue) => {\n    setTileToggleValue(newValue)\n    const filteredLayout = _.filter(dashboardOptions.layouts[0].dashboard_layout_components, (row) => {\n      return (lookerContent[0].dynamicFieldLookUp[newValue].indexOf(dashboardOptions.elements[row.dashboard_element_id].title) > -1)\n    })\n\n    const newDashboardLayout = {\n      ...dashboardOptions.layouts[0],\n      dashboard_layout_components: filteredLayout\n    }\n    dashboardObj.setOptions({ \"layouts\": [newDashboardLayout] })\n  };\n\n  const handleVisColorToggle = (event, newValue) => {\n    let newColorSeries = lookerContent[0].dynamicVisConfig.colors[newValue];\n    // console.log('newColorSeries', newColorSeries)\n    let newDashboardElements = { ...dashboardOptions.elements };\n    Object.keys(newDashboardElements).map(key => {\n      if (newDashboardElements[key].vis_config.series_colors) {\n        Object.keys(newDashboardElements[key].vis_config.series_colors).map((innerKey, index) => {\n          newDashboardElements[key].vis_config.series_colors[innerKey] = newColorSeries[index] || newColorSeries[0];\n        })\n      }\n\n      if (newDashboardElements[key].vis_config.custom_color) {\n        newDashboardElements[key].vis_config.custom_color = newColorSeries[0]\n      }\n\n      if (newDashboardElements[key].vis_config.map_value_colors) {\n        newDashboardElements[key].vis_config.map_value_colors.map((item, index) => {\n          newDashboardElements[key].vis_config.map_value_colors[index] = newColorSeries[index] || newColorSeries[0];\n        })\n      }\n\n      // loss some fidelity here\n      if (newDashboardElements[key].vis_config.series_cell_visualizations) {\n        Object.keys(newDashboardElements[key].vis_config.series_cell_visualizations).map((innerKey, index) => {\n          if (newDashboardElements[key].vis_config.series_cell_visualizations[innerKey].hasOwnProperty(\"palette\")) {\n            newDashboardElements[key].vis_config.series_cell_visualizations[innerKey][\"palette\"][\"custom_colors\"].map((item, innerIndex) => {\n\n              console.log('newColorSeries[innerIndex]', newColorSeries[innerIndex])\n              newDashboardElements[key].vis_config.series_cell_visualizations[innerKey][\"palette\"][\"custom_colors\"][innerIndex] = newColorSeries[innerIndex] || newColorSeries[0];\n            })\n          }\n        })\n      }\n    })\n\n    // console.log('newDashboardElements', newDashboardElements)\n\n    setVisColorToggleValue(newValue)\n    dashboardObj.setOptions({ \"elements\": { ...newDashboardElements } })\n  };\n\n  const handleThemeChange = (event, newValue) => {\n    let themeName = '';\n    if (typeof newValue === \"boolean\") {//handleModeToggle\n      setLightThemeToggleValue(newValue)\n      themeName = newValue ? `light_${fontThemeSelectValue}` : `dark_${fontThemeSelectValue}`\n    } else { //handleFontToggle\n      themeName = lightThemeToggleValue ? `light_${newValue}` : `dark_${newValue}`\n      setFontThemeSelectValue(newValue)\n    }\n    performLookerApiCalls(lookerContent, themeName)\n  }\n\n  useEffect(() => {\n    let themeName = lightThemeToggleValue ? 'light' : 'dark';\n    themeName += `_${fontThemeSelectValue}`;\n    performLookerApiCalls([...lookerContent], themeName)\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n\n  useEffect(() => {\n    if (Object.keys(dashboardOptions).length && Object.keys(dashboardObj).length && lookerContent[0].dynamicFieldLookUp) {\n      handleTileToggle(null, tileToggleValue ? tileToggleValue : Object.keys(lookerContent[0].dynamicFieldLookUp)[0])\n      handleVisColorToggle(null, visColorToggleValue ? visColorToggleValue : '#326ad4')\n    }\n  }, [dashboardOptions]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n    setExpansionPanelHeight($('.MuiExpansionPanel-root:visible').innerHeight() || 0)\n  })\n\n  const performLookerApiCalls = function (lookerContent, dynamicTheme) {\n\n    // console.log('performLookerApiCalls')\n    // console.log('lookerContent', lookerContent)\n    // console.log('dynamicTheme', dynamicTheme)\n\n    setIFrame(0)\n    $(`.embedContainer.${validIdHelper(demoComponentType)}:visible`).html('')\n    lookerContent.map(async lookerContent => {\n      //dashboard creation\n      let dashboardId = lookerContent.id;\n      let themeToUse = dynamicTheme && isThemeableDashboard ?\n        dynamicTheme :\n        lookerContent.theme ?\n          lookerContent.theme :\n          'atom_fashion';\n      // console.log('themeToUse', themeToUse)\n\n      LookerEmbedSDK.createDashboardWithId(dashboardId) //dashboardSlug\n        .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${dashboardId}`))\n        .withClassName('iframe')\n        .withNext()\n        // .withNext(lookerContent.isNext || false) //how can I make this dynamic based on prop??\n        .withTheme(themeToUse)\n        .withParams({ 'schedule_modal': 'true' })\n        .on('page:property:change', (event) => {\n          // console.log('page property is changing!!!!')\n          changeHeight(event)\n        }) // dashboards-next\n        .on('dashboard:loaded', (event) => {\n          setDashboardOptions(event.dashboard.options)\n        })\n        // .on('drillmenu:click', (event) => {\n        //   drillMenuClick(event)\n        // })\n        .build()\n        .connect()\n        .then((dashboard) => {\n          setIFrame(1)\n          setDashboardObj(dashboard)\n          LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n\n        })\n        .catch((error) => {\n          // console.error('Connection error', error)\n        })\n      //additional api calls\n      //only want to perform when there's not apiContent\n      if (lookerContent.hasOwnProperty('filters') && !apiContent) {\n        // setApiContent(undefined)\n        //get inline query from usecase file & set user attribute dynamically\n        //iterating over filters\n        let orderedArrayForApiContent = []\n        lookerContent.filters.map(async (item, index) => {\n          let jsonQuery = lookerContent.inlineQueries[index];\n          jsonQuery.filters = {\n            ...jsonQuery.filters,\n            [item.desiredFilterName]: lookerUser.user_attributes.brand\n          };\n\n          let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: jsonQuery }));\n          let queryResultsForDropdown = [];\n          let desiredProperty = Object.keys(lookerResponseData[0])[0];\n\n          for (let i = 0; i < lookerResponseData.length; i++) {\n            queryResultsForDropdown.push({\n              'label': lookerResponseData[i][desiredProperty],\n              'trend': (lookerResponseData[i]['trend']) ? lookerResponseData[i]['trend'] : undefined\n            })\n          }\n\n          orderedArrayForApiContent[index] = queryResultsForDropdown\n          setApiContent([...orderedArrayForApiContent])\n        })\n      }\n\n    })\n  }\n\n  const customFilterAction = (dashboardId, filterName, newFilterValue) => {\n    if (Object.keys(dashboardObj).length) {\n      dashboardObj.updateFilters({ [filterName]: newFilterValue })\n      dashboardObj.run()\n    }\n  }\n\n  // const drillMenuClick = (event) => {\n  //   const basicLookerUser = lookerUser.user_attributes.permission_level === 'basic' ? true : false;\n  //   if (basicLookerUser) {\n  //     togglePayWallModal()\n  //     return { cancel: (basicLookerUser) ? true : false }\n  //   }\n  // }\n\n  const changeHeight = (event) => {\n    // console.log('changeHeight')\n    // console.log('event', event)\n  }\n\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}\n    >\n      <ThemeProvider theme={theme}>\n        <Card elevation={1} className={`${classes.padding30} ${classes.height100Percent}`}>\n          <Grid container>\n            <div\n              className={`${classes.root}`}\n            >\n              {lookerContent[0].hasOwnProperty(\"filters\") &&\n                apiContent &&\n                apiContent.length === lookerContent[0].filters.length ?\n                <Grid item\n                  sm={12}\n                  key={validIdHelper(`${demoComponentType}-FilterBar-${lookerContent[0].id}`)}>\n                  <FilterBar {...props}\n                    classes={classes}\n                    apiContent={apiContent}\n                    customFilterAction={customFilterAction}\n                    regionValue={regionValue}\n                    setRegionValue={setRegionValue}\n                    tileToggleValue={tileToggleValue}\n                    handleTileToggle={handleTileToggle}\n                    visColorToggleValue={visColorToggleValue}\n                    handleVisColorToggle={handleVisColorToggle}\n                    lightThemeToggleValue={lightThemeToggleValue}\n                    fontThemeSelectValue={fontThemeSelectValue}\n                    handleThemeChange={handleThemeChange}\n                    isThemeableDashboard={isThemeableDashboard}\n                  />\n                </Grid> :\n                lookerContent[0].hasOwnProperty(\"filters\") ?\n                  <Skeleton variant=\"rect\" animation=\"wave\" className={classes.skeleton} /> :\n                  ''}\n              {\n                iFrameExists\n                  ? ''\n                  :\n                  <Grid item sm={12} style={{ height: height - 30 - expansionPanelHeight }}>\n                    <Card className={`${classes.card} ${classes.flexCentered}`}\n                      elevation={0}\n                      mt={2}\n                      style={{ height: height - 30 - expansionPanelHeight }}>\n                      <CircularProgress className={classes.circularProgress} />\n                    </Card>\n                  </Grid>\n              }\n              <Box\n                className={iFrameExists ? ` ` : `${classes.hidden} `}\n                style={{ height: height - 30 - expansionPanelHeight }}>\n                <Grid container\n                  spacing={3}\n                  className={`${classes.noContainerScroll}`}>\n                  {codeShow ?\n                    <Grid item sm={6}\n                      className={`${classes.positionFixedTopRight}`}\n                    >\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerUser={lookerUser}\n                        height={height}\n                      />\n                    </Grid>\n                    : ''}\n                  <Grid item sm={12}>\n                    <Box className={`${classes.w100} ${classes.padding10}`} mt={lookerContent[0].filter || lookerContent[0].dynamicFieldLookUp ? 2 : 0}>\n                      <EmbedHighlight classes={classes}>\n                        <div\n                          className={`embedContainer ${validIdHelper(demoComponentType)}`}\n                          id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent[0].id}`)}\n                          key={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent[0].id}`)}\n                        >\n                        </div>\n                      </EmbedHighlight>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Box>\n            </div>\n          </Grid>\n        </Card>\n      </ThemeProvider>\n    </ div>\n  )\n}\n\n\nfunction FilterBar(props) {\n  // console.log('FilterBar')\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\n    apiContent, customFilterAction, regionValue, setRegionValue, tileToggleValue, handleTileToggle, //changeTheme,\n    visColorToggleValue, handleVisColorToggle, lightThemeToggleValue, fontThemeSelectValue, handleThemeChange, isThemeableDashboard\n  } = props;\n\n  const [expanded, setExpanded] = useState(true);\n  const [sliderValue, setSliderValue] = React.useState([]);\n  const [lifetimeRevenueTierValue, setLifetimeRevenueTierValue] = useState('0-24');\n  // const [speedDialOpen, setSpeedDialOpen] = React.useState(false);\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  const customUsa = {\n    ...Usa,\n    label: \"Custom map label\",\n    locations: Usa.locations.map(location => {\n      // Modify each location\n      switch (location.name) {\n        //9\n        case \"Connecticut\":\n        case \"Maine\":\n        case \"Massachusetts\":\n        case \"New Hampshire\":\n        case \"Rhode Island\":\n        case \"Vermont\":\n        case \"New Jersey\":\n        case \"New York\":\n        case \"Pennsylvania\":\n        case \"Delaware\":\n          return { ...location, region: \"Northeast\" }\n        //12\n        case \"Illinois\":\n        case \"Indiana\":\n        case \"Michigan\":\n        case \"Ohio\":\n        case \"Wisconsin\":\n        case \"Iowa\":\n        case \"Kansas\":\n        case \"Minnesota\":\n        case \"Missouri\":\n        case \"Nebraska\":\n        case \"North Dakota\":\n        case \"South Dakota\":\n          return { ...location, region: \"Midwest\" }\n        //16\n        case \"Florida\":\n        case \"Georgia\":\n        case \"Maryland\":\n        case \"North Carolina\":\n        case \"South Carolina\":\n        case \"Virginia\":\n        case \"District of Columbia\":\n        case \"Washington, DC\":\n        case \"West Virginia\":\n        case \"Alabama\":\n        case \"Kentucky\":\n        case \"Mississippi\":\n        case \"Tennessee\":\n        case \"Arkansas\":\n        case \"Louisiana\":\n        case \"Oklahoma\":\n        case \"Texas\":\n          return { ...location, region: \"South\" }\n        //8\n        case \"Arizona\":\n        case \"Colorado\":\n        case \"Idaho\":\n        case \"Montana\":\n        case \"Nevada\":\n        case \"New Mexico\":\n        case \"Utah\":\n        case \"Wyoming\":\n          return { ...location, region: \"Mountain\" }\n        //5\n        case \"Alaska\":\n        case \"California\":\n        case \"Hawaii\":\n        case \"Oregon\":\n        case \"Washington\":\n          return { ...location, region: \"Pacific\" }\n        // default:\n        //   return location\n      }\n    })\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    setSliderValue(newValue);\n  };\n\n  const lifetimeRevenueTierMap = {\n    \"0 to 99\": \"low\",\n    \"100 to 499\": \"medium\",\n    \"500 or Above\": \"high\",\n  }\n  const lifetimeRevenueTierIconMap = {\n    \"0 to 99\": SentimentDissatisfied,\n    \"100 to 499\": SentimentSatisfied,\n    \"500 or Above\": SentimentVerySatisfied,\n  }\n\n  return (\n\n    <ExpansionPanel\n      expanded={expanded}\n      onChange={handleExpansionPanel}\n      // className={classes.w100}\n      className={`${classes.w100} MuiExpansionPanel-root`}\n      elevation={0}\n    >\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMore />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <FilterList /><Typography className={`${classes.heading} ${classes.ml12}`}>Filter:</Typography>\n\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid\n          container spacing={3}>\n          {\n            lookerContent[0].filters || lookerContent[0].dynamicFieldLookUp ?\n              <>\n                {apiContent.map((item, index) => {\n                  return (\n                    lookerContent[0].filterComponents[index] === 'autocomplete' ?\n                      <Grid item sm={3}>\n\n                        <ApiHighlight classes={classes}\n                          key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\n\n                          <Typography\n                          >Filter By Product:</Typography>\n                          <Autocomplete\n                            id={`combo-box-dashboard-${lookerContent.id}`}\n                            options={Array.isArray(apiContent[index]) ?\n                              apiContent[index] :\n                              []}\n                            renderOption={(option) => (\n                              <Grid container justify=\"space-between\">\n                                <Grid item >\n                                  {option.label}\n                                </Grid>\n                                {option.trend && <Grid item>\n                                  <NumberToColoredPercent\n                                    val={option.trend}\n                                    positive_good={true}\n                                    abs_val={Math.abs(option.trend)}\n                                  />\n                                </Grid>}\n                              </Grid>\n                            )}\n                            getOptionLabel={(option) => option.label}\n                            onChange={(event, newValue) => {\n                              customFilterAction(lookerContent[0].id,\n                                lookerContent[0].filters[index].filterName,\n                                (newValue) ? newValue.label : '')\n                            }}\n                            renderInput={(params) => <TextField {...params}\n                              label={lookerContent[0].filters[index].filterName}\n                              variant=\"outlined\"\n                            />}\n                            loadingText=\"Loading...\"\n                          />\n                        </ApiHighlight>\n                      </Grid>\n                      : lookerContent[0].filterComponents[index] === 'mapfilter' ?\n                        <>\n                          <Grid item sm={4} >\n                            <EmbedMethodHighlight classes={classes}\n                              key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\n                              <Typography className={`${classes.heading} ${classes.ml12}  ${classes.verticalAlignTop}`}\n                              >Region(s): <b>{regionValue ? regionValue : \"Outside US\"}</b></Typography>\n\n                              <CheckboxSVGMap map={customUsa}\n                                onChange={(locations) => {\n\n                                  let allUniqueRegionsFromSelectedLocations = [];\n                                  for (let j = 0; j < locations.length; j++) {\n                                    if (allUniqueRegionsFromSelectedLocations.indexOf(locations[j].region) == -1) {\n                                      allUniqueRegionsFromSelectedLocations.push(locations[j].region)\n                                    }\n                                  }\n                                  let allUniqueRegionsFromSelectedLocationsCommaSep = allUniqueRegionsFromSelectedLocations.join(\",\")\n                                  setRegionValue(allUniqueRegionsFromSelectedLocationsCommaSep)\n                                  customFilterAction(lookerContent[0].id,\n                                    lookerContent[0].filters[index].filterName,\n                                    (regionValue) ? regionValue : '')\n                                }}\n                              />\n                            </EmbedMethodHighlight>\n                          </Grid>\n                        </>\n                        : lookerContent[0].filterComponents[index] === \"rangeslider\"\n                          ?\n\n                          <Grid container item sm={4} >\n                            <Grid item sm={12}>\n                              <EmbedMethodHighlight classes={classes}\n                                key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\n                                <Typography className={`${classes.heading} ${classes.ml12}  ${classes.verticalAlignTop}`}\n                                >Age Range:</Typography>\n                                <Slider\n                                  value={sliderValue.length ? sliderValue : Array.isArray(apiContent[index]) ? [apiContent[index][0].label, apiContent[index][apiContent[index].length - 1].label] : []}\n                                  onChange={handleSliderChange}\n                                  onChange={(event, newValue) => {\n                                    setSliderValue(newValue);\n                                  }}\n                                  valueLabelDisplay=\"auto\"\n                                  aria-labelledby=\"range-slider\"\n                                  onChangeCommitted={(event, newValue) => {\n                                    customFilterAction(lookerContent[0].id,\n                                      lookerContent[0].filters[index].filterName,\n                                      (newValue) ? `[${newValue}]` : '[]')\n                                  }}\n                                  min={Array.isArray(apiContent[index]) ? apiContent[index][0].label : ''}\n                                  max={Array.isArray(apiContent[index]) ? apiContent[index][apiContent[index].length - 1].label : ''}\n                                  name=\"Age Range\"\n                                  marks={Array.isArray(apiContent[index]) ? [{ value: apiContent[index][0].label, label: apiContent[index][0].label }, { value: apiContent[index][apiContent[index].length - 1].label, label: apiContent[index][apiContent[index].length - 1].label }] : ''}\n                                  disabled={Array.isArray(apiContent[index]) ? false : true}\n                                />\n                              </EmbedMethodHighlight>\n                            </Grid>\n                            <Grid item sm={12}>\n                              <EmbedMethodHighlight classes={classes}\n                                key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\n                                <Typography className={`${classes.heading} ${classes.ml12}  ${classes.verticalAlignTop}`}\n                                >Lifetime Revenue Tier:</Typography>\n                                <ToggleButtonGroup\n                                  value={lifetimeRevenueTierValue}\n                                  exclusive //for now\n                                  onChange={(event, newValue) => {\n                                    setLifetimeRevenueTierValue(newValue)\n                                    customFilterAction(lookerContent[0].id,\n                                      lookerContent[0].filters[index + 1].filterName,\n                                      (newValue) ? newValue : '')\n                                  }}\n                                  aria-label=\"ageTier\"\n                                  className={classes.w100}>\n                                  >\n                                {apiContent[index + 1].map((ageTier, index) => {\n                                    if (ageTier.label !== \"Undefined\") {\n                                      const Icon = lifetimeRevenueTierIconMap[ageTier.label];\n                                      return (\n                                        <ToggleButton\n                                          key={validIdHelper(`${type}-FilterBar-ToggleButton-${lookerContent[0].id}-${index}`)}\n                                          value={ageTier.label}\n                                          aria-label={ageTier.label}\n                                          className={classes.w33}>\n                                          <Icon className={classes.mr12} />\n                                          {_.capitalize(lifetimeRevenueTierMap[ageTier.label]) || ageTier.label}\n                                        </ToggleButton>\n                                      )\n                                    }\n                                  })}\n                                </ToggleButtonGroup>\n\n                              </EmbedMethodHighlight>\n                            </Grid>\n                          </Grid>\n                          :\n                          '')\n                })}\n                {lookerContent[0].dynamicFieldLookUp ?\n                  <>\n                    <Grid item sm={3}>\n                      <EmbedMethodHighlight classes={classes} >\n                        <Typography\n                        >Dynamic Tiles:</Typography>\n                        <ToggleButtonGroup\n                          value={tileToggleValue}\n                          exclusive\n                          onChange={handleTileToggle}\n                          aria-label=\"text alignment\"\n                        >\n                          {Object.keys(lookerContent[0].dynamicFieldLookUp).map(key => {\n                            return (\n                              <ToggleButton\n                                key={validIdHelper(`dynamicDashTileToggle-${key}`)}\n                                value={key} aria-label=\"left aligned\">\n                                {key}\n                              </ToggleButton>\n                            )\n                          })}\n                        </ToggleButtonGroup>\n                      </EmbedMethodHighlight>\n                    </Grid>\n                  </>\n                  : ''\n                }\n                {lookerContent[0].dynamicVisConfig ?\n                  <>\n                    <Grid item sm={2}>\n                      <EmbedMethodHighlight classes={classes} >\n                        <Typography\n                        >Dynamic Vis Color:</Typography>\n                        <ToggleButtonGroup\n                          value={visColorToggleValue}\n                          exclusive\n                          onChange={handleVisColorToggle}\n                          aria-label=\"text alignment\"\n                        >\n                          {Object.keys(lookerContent[0].dynamicVisConfig.colors).map(key => {\n                            return (\n                              <ToggleButton\n                                key={validIdHelper(`dynamicDashVisConfigToggle-${key}`)}\n                                value={key} aria-label=\"left aligned\">\n                                <span className={`${classes.dot}`} style={{ backgroundColor: key }}></span>\n                              </ToggleButton>\n                            )\n                          })}\n                        </ToggleButtonGroup>\n\n                      </EmbedMethodHighlight>\n                    </Grid>\n                  </>\n                  : ''\n                }\n                {lookerContent[0].dynamicThemeMode ?\n                  <>\n                    <Grid item sm={1}>\n                      <EmbedHighlight classes={classes} >\n                        <Typography\n                        >{lightThemeToggleValue ? \"Light mode\" : \"Dark mode\"}</Typography>\n\n                        <Switch\n                          checked={!lightThemeToggleValue}\n                          onChange={() => handleThemeChange(null, !lightThemeToggleValue)}\n                          color=\"primary\"\n                          name=\"light theme toggle\"\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        />\n\n                      </EmbedHighlight>\n                    </Grid>\n                  </>\n                  : ''\n                }\n                {lookerContent[0].dynamicThemeFont ?\n                  <>\n                    <Grid item sm={2}>\n                      <EmbedHighlight classes={classes} >\n\n                        <FormControl className={classes.formControl}>\n                          <InputLabel id=\"demo-simple-select-label\"\n                          >Change font</InputLabel>\n                          <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={fontThemeSelectValue}\n                            onChange={(event) => {\n                              handleThemeChange(null, event.target.value)\n                            }}\n                          >\n                            <MenuItem value=\"arial\">Arial</MenuItem>\n                            <MenuItem value=\"roboto\">Roboto</MenuItem>\n                            <MenuItem value=\"vollkorn\">Vollkorn</MenuItem>\n                          </Select>\n                        </FormControl>\n\n                      </EmbedHighlight>\n                    </Grid>\n                  </>\n                  : ''\n                }\n              </>\n              : ''\n          }\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel >\n  )\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField, FormControlLabel, Chip,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Slider, FormControl, InputLabel, Select, MenuItem, Switch\\n} from '@material-ui/core'\\nimport { Autocomplete, ToggleButton, ToggleButtonGroup, Skeleton } from '@material-ui/lab'\\nimport {\\n  ExpandMore, FilterList, SentimentDissatisfied, SentimentSatisfied, SentimentVerySatisfied,\\n} from '@material-ui/icons';\\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\\n\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./Dashboard.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport BottomBar from '../../Material/BottomBar.js'\\nimport { ApiHighlight, EmbedHighlight, EmbedMethodHighlight } from '../../Highlights/Highlight';\\nimport { NumberToColoredPercent } from '../../Accessories/NumberToColoredPercent';\\nimport AppContext from '../../../AppContext';\\n//new\\nimport Usa from \\\"@svg-maps/usa\\\";\\nimport { CheckboxSVGMap } from \\\"./CheckboxSvgMapRegion\\\";\\n\\nconst { validIdHelper } = require('../../../tools');\\n\\nexport default function Dashboard(props) {\\n  // console.log('Dashboard')\\n  // console.log('props', props)\\n\\n  const { staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\\n  const demoComponentType = type || 'code flyout';\\n  const topBarBottomBarHeight = 112;\\n\\n  const [value, setValue] = useState(0);\\n  const [iFrameExists, setIFrame] = useState(0);\\n  const [apiContent, setApiContent] = useState(undefined);\\n  const [dashboardObj, setDashboardObj] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [dashboardOptions, setDashboardOptions] = useState({});\\n  const [regionValue, setRegionValue] = useState('Pacific,South,Mountain,Midwest,Northeast');\\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\\n  const [tileToggleValue, setTileToggleValue] = useState('');\\n  const [visColorToggleValue, setVisColorToggleValue] = useState('#326ad4');\\n  const [lightThemeToggleValue, setLightThemeToggleValue] = useState(true);\\n  const [fontThemeSelectValue, setFontThemeSelectValue] = useState(\\\"arial\\\");\\n  const [expansionPanelHeight, setExpansionPanelHeight] = useState(0);\\n  const { togglePayWallModal, show, codeShow, sdk, atomTheme } = useContext(AppContext)\\n\\n  const isThemeableDashboard = validIdHelper(`${demoComponentType}${lookerContent[0].id}`) === 'customfilter1';\\n  const darkThemeBackgroundColor = \\\"#343D4E\\\";\\n\\n  const classes = useStyles();\\n\\n  //condtional theming for dark mode :D\\n  let paletteToUse = !lightThemeToggleValue ?\\n    {\\n      palette: {\\n        type: 'dark',\\n        background: { paper: darkThemeBackgroundColor, default: darkThemeBackgroundColor },\\n      }\\n    }\\n    :\\n    { palette: { ...atomTheme.palette } }\\n\\n  const theme = React.useMemo(\\n    () =>\\n      createMuiTheme(\\n        paletteToUse\\n      ),\\n    [lightThemeToggleValue],\\n  );\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  const handleTileToggle = (event, newValue) => {\\n    setTileToggleValue(newValue)\\n    const filteredLayout = _.filter(dashboardOptions.layouts[0].dashboard_layout_components, (row) => {\\n      return (lookerContent[0].dynamicFieldLookUp[newValue].indexOf(dashboardOptions.elements[row.dashboard_element_id].title) > -1)\\n    })\\n\\n    const newDashboardLayout = {\\n      ...dashboardOptions.layouts[0],\\n      dashboard_layout_components: filteredLayout\\n    }\\n    dashboardObj.setOptions({ \\\"layouts\\\": [newDashboardLayout] })\\n  };\\n\\n  const handleVisColorToggle = (event, newValue) => {\\n    let newColorSeries = lookerContent[0].dynamicVisConfig.colors[newValue];\\n    // console.log('newColorSeries', newColorSeries)\\n    let newDashboardElements = { ...dashboardOptions.elements };\\n    Object.keys(newDashboardElements).map(key => {\\n      if (newDashboardElements[key].vis_config.series_colors) {\\n        Object.keys(newDashboardElements[key].vis_config.series_colors).map((innerKey, index) => {\\n          newDashboardElements[key].vis_config.series_colors[innerKey] = newColorSeries[index] || newColorSeries[0];\\n        })\\n      }\\n\\n      if (newDashboardElements[key].vis_config.custom_color) {\\n        newDashboardElements[key].vis_config.custom_color = newColorSeries[0]\\n      }\\n\\n      if (newDashboardElements[key].vis_config.map_value_colors) {\\n        newDashboardElements[key].vis_config.map_value_colors.map((item, index) => {\\n          newDashboardElements[key].vis_config.map_value_colors[index] = newColorSeries[index] || newColorSeries[0];\\n        })\\n      }\\n\\n      // loss some fidelity here\\n      if (newDashboardElements[key].vis_config.series_cell_visualizations) {\\n        Object.keys(newDashboardElements[key].vis_config.series_cell_visualizations).map((innerKey, index) => {\\n          if (newDashboardElements[key].vis_config.series_cell_visualizations[innerKey].hasOwnProperty(\\\"palette\\\")) {\\n            newDashboardElements[key].vis_config.series_cell_visualizations[innerKey][\\\"palette\\\"][\\\"custom_colors\\\"].map((item, innerIndex) => {\\n\\n              console.log('newColorSeries[innerIndex]', newColorSeries[innerIndex])\\n              newDashboardElements[key].vis_config.series_cell_visualizations[innerKey][\\\"palette\\\"][\\\"custom_colors\\\"][innerIndex] = newColorSeries[innerIndex] || newColorSeries[0];\\n            })\\n          }\\n        })\\n      }\\n    })\\n\\n    // console.log('newDashboardElements', newDashboardElements)\\n\\n    setVisColorToggleValue(newValue)\\n    dashboardObj.setOptions({ \\\"elements\\\": { ...newDashboardElements } })\\n  };\\n\\n  const handleThemeChange = (event, newValue) => {\\n    let themeName = '';\\n    if (typeof newValue === \\\"boolean\\\") {//handleModeToggle\\n      setLightThemeToggleValue(newValue)\\n      themeName = newValue ? `light_${fontThemeSelectValue}` : `dark_${fontThemeSelectValue}`\\n    } else { //handleFontToggle\\n      themeName = lightThemeToggleValue ? `light_${newValue}` : `dark_${newValue}`\\n      setFontThemeSelectValue(newValue)\\n    }\\n    performLookerApiCalls(lookerContent, themeName)\\n  }\\n\\n  useEffect(() => {\\n    let themeName = lightThemeToggleValue ? 'light' : 'dark';\\n    themeName += `_${fontThemeSelectValue}`;\\n    performLookerApiCalls([...lookerContent], themeName)\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent, lookerUser]);\\n\\n\\n  useEffect(() => {\\n    if (Object.keys(dashboardOptions).length && Object.keys(dashboardObj).length && lookerContent[0].dynamicFieldLookUp) {\\n      handleTileToggle(null, tileToggleValue ? tileToggleValue : Object.keys(lookerContent[0].dynamicFieldLookUp)[0])\\n      handleVisColorToggle(null, visColorToggleValue ? visColorToggleValue : '#326ad4')\\n    }\\n  }, [dashboardOptions]);\\n\\n  useEffect(() => {\\n    window.addEventListener(\\\"resize\\\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\\n    setExpansionPanelHeight($('.MuiExpansionPanel-root:visible').innerHeight() || 0)\\n  })\\n\\n  const performLookerApiCalls = function (lookerContent, dynamicTheme) {\\n\\n    // console.log('performLookerApiCalls')\\n    // console.log('lookerContent', lookerContent)\\n    // console.log('dynamicTheme', dynamicTheme)\\n\\n    setIFrame(0)\\n    $(`.embedContainer.${validIdHelper(demoComponentType)}:visible`).html('')\\n    lookerContent.map(async lookerContent => {\\n      //dashboard creation\\n      let dashboardId = lookerContent.id;\\n      let themeToUse = dynamicTheme && isThemeableDashboard ?\\n        dynamicTheme :\\n        lookerContent.theme ?\\n          lookerContent.theme :\\n          'atom_fashion';\\n      // console.log('themeToUse', themeToUse)\\n\\n      LookerEmbedSDK.createDashboardWithId(dashboardId) //dashboardSlug\\n        .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${dashboardId}`))\\n        .withClassName('iframe')\\n        .withNext()\\n        // .withNext(lookerContent.isNext || false) //how can I make this dynamic based on prop??\\n        .withTheme(themeToUse)\\n        .withParams({ 'schedule_modal': 'true' })\\n        .on('page:property:change', (event) => {\\n          // console.log('page property is changing!!!!')\\n          changeHeight(event)\\n        }) // dashboards-next\\n        .on('dashboard:loaded', (event) => {\\n          setDashboardOptions(event.dashboard.options)\\n        })\\n        // .on('drillmenu:click', (event) => {\\n        //   drillMenuClick(event)\\n        // })\\n        .build()\\n        .connect()\\n        .then((dashboard) => {\\n          setIFrame(1)\\n          setDashboardObj(dashboard)\\n          LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n\\n        })\\n        .catch((error) => {\\n          // console.error('Connection error', error)\\n        })\\n      //additional api calls\\n      //only want to perform when there's not apiContent\\n      if (lookerContent.hasOwnProperty('filters') && !apiContent) {\\n        // setApiContent(undefined)\\n        //get inline query from usecase file & set user attribute dynamically\\n        //iterating over filters\\n        let orderedArrayForApiContent = []\\n        lookerContent.filters.map(async (item, index) => {\\n          let jsonQuery = lookerContent.inlineQueries[index];\\n          jsonQuery.filters = {\\n            ...jsonQuery.filters,\\n            [item.desiredFilterName]: lookerUser.user_attributes.brand\\n          };\\n\\n          let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: jsonQuery }));\\n          let queryResultsForDropdown = [];\\n          let desiredProperty = Object.keys(lookerResponseData[0])[0];\\n\\n          for (let i = 0; i < lookerResponseData.length; i++) {\\n            queryResultsForDropdown.push({\\n              'label': lookerResponseData[i][desiredProperty],\\n              'trend': (lookerResponseData[i]['trend']) ? lookerResponseData[i]['trend'] : undefined\\n            })\\n          }\\n\\n          orderedArrayForApiContent[index] = queryResultsForDropdown\\n          setApiContent([...orderedArrayForApiContent])\\n        })\\n      }\\n\\n    })\\n  }\\n\\n  const customFilterAction = (dashboardId, filterName, newFilterValue) => {\\n    if (Object.keys(dashboardObj).length) {\\n      dashboardObj.updateFilters({ [filterName]: newFilterValue })\\n      dashboardObj.run()\\n    }\\n  }\\n\\n  // const drillMenuClick = (event) => {\\n  //   const basicLookerUser = lookerUser.user_attributes.permission_level === 'basic' ? true : false;\\n  //   if (basicLookerUser) {\\n  //     togglePayWallModal()\\n  //     return { cancel: (basicLookerUser) ? true : false }\\n  //   }\\n  // }\\n\\n  const changeHeight = (event) => {\\n    // console.log('changeHeight')\\n    // console.log('event', event)\\n  }\\n\\n\\n  return (\\n    <div className={`${classes.root} demoComponent`}\\n      style={{ height }}\\n    >\\n      <ThemeProvider theme={theme}>\\n        <Card elevation={1} className={`${classes.padding30} ${classes.height100Percent}`}>\\n          <Grid container>\\n            <div\\n              className={`${classes.root}`}\\n            >\\n              {lookerContent[0].hasOwnProperty(\\\"filters\\\") &&\\n                apiContent &&\\n                apiContent.length === lookerContent[0].filters.length ?\\n                <Grid item\\n                  sm={12}\\n                  key={validIdHelper(`${demoComponentType}-FilterBar-${lookerContent[0].id}`)}>\\n                  <FilterBar {...props}\\n                    classes={classes}\\n                    apiContent={apiContent}\\n                    customFilterAction={customFilterAction}\\n                    regionValue={regionValue}\\n                    setRegionValue={setRegionValue}\\n                    tileToggleValue={tileToggleValue}\\n                    handleTileToggle={handleTileToggle}\\n                    visColorToggleValue={visColorToggleValue}\\n                    handleVisColorToggle={handleVisColorToggle}\\n                    lightThemeToggleValue={lightThemeToggleValue}\\n                    fontThemeSelectValue={fontThemeSelectValue}\\n                    handleThemeChange={handleThemeChange}\\n                    isThemeableDashboard={isThemeableDashboard}\\n                  />\\n                </Grid> :\\n                lookerContent[0].hasOwnProperty(\\\"filters\\\") ?\\n                  <Skeleton variant=\\\"rect\\\" animation=\\\"wave\\\" className={classes.skeleton} /> :\\n                  ''}\\n              {\\n                iFrameExists\\n                  ? ''\\n                  :\\n                  <Grid item sm={12} style={{ height: height - 30 - expansionPanelHeight }}>\\n                    <Card className={`${classes.card} ${classes.flexCentered}`}\\n                      elevation={0}\\n                      mt={2}\\n                      style={{ height: height - 30 - expansionPanelHeight }}>\\n                      <CircularProgress className={classes.circularProgress} />\\n                    </Card>\\n                  </Grid>\\n              }\\n              <Box\\n                className={iFrameExists ? ` ` : `${classes.hidden} `}\\n                style={{ height: height - 30 - expansionPanelHeight }}>\\n                <Grid container\\n                  spacing={3}\\n                  className={`${classes.noContainerScroll}`}>\\n                  {codeShow ?\\n                    <Grid item sm={6}\\n                      className={`${classes.positionFixedTopRight}`}\\n                    >\\n                      <CodeFlyout {...props}\\n                        classes={classes}\\n                        lookerUser={lookerUser}\\n                        height={height}\\n                      />\\n                    </Grid>\\n                    : ''}\\n                  <Grid item sm={12}>\\n                    <Box className={`${classes.w100} ${classes.padding10}`} mt={lookerContent[0].filter || lookerContent[0].dynamicFieldLookUp ? 2 : 0}>\\n                      <EmbedHighlight classes={classes}>\\n                        <div\\n                          className={`embedContainer ${validIdHelper(demoComponentType)}`}\\n                          id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent[0].id}`)}\\n                          key={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent[0].id}`)}\\n                        >\\n                        </div>\\n                      </EmbedHighlight>\\n                    </Box>\\n                  </Grid>\\n                </Grid>\\n              </Box>\\n            </div>\\n          </Grid>\\n        </Card>\\n      </ThemeProvider>\\n    </ div>\\n  )\\n}\\n\\n\\nfunction FilterBar(props) {\\n  // console.log('FilterBar')\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\\n    apiContent, customFilterAction, regionValue, setRegionValue, tileToggleValue, handleTileToggle, //changeTheme,\\n    visColorToggleValue, handleVisColorToggle, lightThemeToggleValue, fontThemeSelectValue, handleThemeChange, isThemeableDashboard\\n  } = props;\\n\\n  const [expanded, setExpanded] = useState(true);\\n  const [sliderValue, setSliderValue] = React.useState([]);\\n  const [lifetimeRevenueTierValue, setLifetimeRevenueTierValue] = useState('0-24');\\n  // const [speedDialOpen, setSpeedDialOpen] = React.useState(false);\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n\\n  const customUsa = {\\n    ...Usa,\\n    label: \\\"Custom map label\\\",\\n    locations: Usa.locations.map(location => {\\n      // Modify each location\\n      switch (location.name) {\\n        //9\\n        case \\\"Connecticut\\\":\\n        case \\\"Maine\\\":\\n        case \\\"Massachusetts\\\":\\n        case \\\"New Hampshire\\\":\\n        case \\\"Rhode Island\\\":\\n        case \\\"Vermont\\\":\\n        case \\\"New Jersey\\\":\\n        case \\\"New York\\\":\\n        case \\\"Pennsylvania\\\":\\n        case \\\"Delaware\\\":\\n          return { ...location, region: \\\"Northeast\\\" }\\n        //12\\n        case \\\"Illinois\\\":\\n        case \\\"Indiana\\\":\\n        case \\\"Michigan\\\":\\n        case \\\"Ohio\\\":\\n        case \\\"Wisconsin\\\":\\n        case \\\"Iowa\\\":\\n        case \\\"Kansas\\\":\\n        case \\\"Minnesota\\\":\\n        case \\\"Missouri\\\":\\n        case \\\"Nebraska\\\":\\n        case \\\"North Dakota\\\":\\n        case \\\"South Dakota\\\":\\n          return { ...location, region: \\\"Midwest\\\" }\\n        //16\\n        case \\\"Florida\\\":\\n        case \\\"Georgia\\\":\\n        case \\\"Maryland\\\":\\n        case \\\"North Carolina\\\":\\n        case \\\"South Carolina\\\":\\n        case \\\"Virginia\\\":\\n        case \\\"District of Columbia\\\":\\n        case \\\"Washington, DC\\\":\\n        case \\\"West Virginia\\\":\\n        case \\\"Alabama\\\":\\n        case \\\"Kentucky\\\":\\n        case \\\"Mississippi\\\":\\n        case \\\"Tennessee\\\":\\n        case \\\"Arkansas\\\":\\n        case \\\"Louisiana\\\":\\n        case \\\"Oklahoma\\\":\\n        case \\\"Texas\\\":\\n          return { ...location, region: \\\"South\\\" }\\n        //8\\n        case \\\"Arizona\\\":\\n        case \\\"Colorado\\\":\\n        case \\\"Idaho\\\":\\n        case \\\"Montana\\\":\\n        case \\\"Nevada\\\":\\n        case \\\"New Mexico\\\":\\n        case \\\"Utah\\\":\\n        case \\\"Wyoming\\\":\\n          return { ...location, region: \\\"Mountain\\\" }\\n        //5\\n        case \\\"Alaska\\\":\\n        case \\\"California\\\":\\n        case \\\"Hawaii\\\":\\n        case \\\"Oregon\\\":\\n        case \\\"Washington\\\":\\n          return { ...location, region: \\\"Pacific\\\" }\\n        // default:\\n        //   return location\\n      }\\n    })\\n  };\\n\\n  const handleSliderChange = (event, newValue) => {\\n    setSliderValue(newValue);\\n  };\\n\\n  const lifetimeRevenueTierMap = {\\n    \\\"0 to 99\\\": \\\"low\\\",\\n    \\\"100 to 499\\\": \\\"medium\\\",\\n    \\\"500 or Above\\\": \\\"high\\\",\\n  }\\n  const lifetimeRevenueTierIconMap = {\\n    \\\"0 to 99\\\": SentimentDissatisfied,\\n    \\\"100 to 499\\\": SentimentSatisfied,\\n    \\\"500 or Above\\\": SentimentVerySatisfied,\\n  }\\n\\n  return (\\n\\n    <ExpansionPanel\\n      expanded={expanded}\\n      onChange={handleExpansionPanel}\\n      // className={classes.w100}\\n      className={`${classes.w100} MuiExpansionPanel-root`}\\n      elevation={0}\\n    >\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMore />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <FilterList /><Typography className={`${classes.heading} ${classes.ml12}`}>Filter:</Typography>\\n\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        <Grid\\n          container spacing={3}>\\n          {\\n            lookerContent[0].filters || lookerContent[0].dynamicFieldLookUp ?\\n              <>\\n                {apiContent.map((item, index) => {\\n                  return (\\n                    lookerContent[0].filterComponents[index] === 'autocomplete' ?\\n                      <Grid item sm={3}>\\n\\n                        <ApiHighlight classes={classes}\\n                          key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\\n\\n                          <Typography\\n                          >Filter By Product:</Typography>\\n                          <Autocomplete\\n                            id={`combo-box-dashboard-${lookerContent.id}`}\\n                            options={Array.isArray(apiContent[index]) ?\\n                              apiContent[index] :\\n                              []}\\n                            renderOption={(option) => (\\n                              <Grid container justify=\\\"space-between\\\">\\n                                <Grid item >\\n                                  {option.label}\\n                                </Grid>\\n                                {option.trend && <Grid item>\\n                                  <NumberToColoredPercent\\n                                    val={option.trend}\\n                                    positive_good={true}\\n                                    abs_val={Math.abs(option.trend)}\\n                                  />\\n                                </Grid>}\\n                              </Grid>\\n                            )}\\n                            getOptionLabel={(option) => option.label}\\n                            onChange={(event, newValue) => {\\n                              customFilterAction(lookerContent[0].id,\\n                                lookerContent[0].filters[index].filterName,\\n                                (newValue) ? newValue.label : '')\\n                            }}\\n                            renderInput={(params) => <TextField {...params}\\n                              label={lookerContent[0].filters[index].filterName}\\n                              variant=\\\"outlined\\\"\\n                            />}\\n                            loadingText=\\\"Loading...\\\"\\n                          />\\n                        </ApiHighlight>\\n                      </Grid>\\n                      : lookerContent[0].filterComponents[index] === 'mapfilter' ?\\n                        <>\\n                          <Grid item sm={4} >\\n                            <EmbedMethodHighlight classes={classes}\\n                              key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\\n                              <Typography className={`${classes.heading} ${classes.ml12}  ${classes.verticalAlignTop}`}\\n                              >Region(s): <b>{regionValue ? regionValue : \\\"Outside US\\\"}</b></Typography>\\n\\n                              <CheckboxSVGMap map={customUsa}\\n                                onChange={(locations) => {\\n\\n                                  let allUniqueRegionsFromSelectedLocations = [];\\n                                  for (let j = 0; j < locations.length; j++) {\\n                                    if (allUniqueRegionsFromSelectedLocations.indexOf(locations[j].region) == -1) {\\n                                      allUniqueRegionsFromSelectedLocations.push(locations[j].region)\\n                                    }\\n                                  }\\n                                  let allUniqueRegionsFromSelectedLocationsCommaSep = allUniqueRegionsFromSelectedLocations.join(\\\",\\\")\\n                                  setRegionValue(allUniqueRegionsFromSelectedLocationsCommaSep)\\n                                  customFilterAction(lookerContent[0].id,\\n                                    lookerContent[0].filters[index].filterName,\\n                                    (regionValue) ? regionValue : '')\\n                                }}\\n                              />\\n                            </EmbedMethodHighlight>\\n                          </Grid>\\n                        </>\\n                        : lookerContent[0].filterComponents[index] === \\\"rangeslider\\\"\\n                          ?\\n\\n                          <Grid container item sm={4} >\\n                            <Grid item sm={12}>\\n                              <EmbedMethodHighlight classes={classes}\\n                                key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\\n                                <Typography className={`${classes.heading} ${classes.ml12}  ${classes.verticalAlignTop}`}\\n                                >Age Range:</Typography>\\n                                <Slider\\n                                  value={sliderValue.length ? sliderValue : Array.isArray(apiContent[index]) ? [apiContent[index][0].label, apiContent[index][apiContent[index].length - 1].label] : []}\\n                                  onChange={handleSliderChange}\\n                                  onChange={(event, newValue) => {\\n                                    setSliderValue(newValue);\\n                                  }}\\n                                  valueLabelDisplay=\\\"auto\\\"\\n                                  aria-labelledby=\\\"range-slider\\\"\\n                                  onChangeCommitted={(event, newValue) => {\\n                                    customFilterAction(lookerContent[0].id,\\n                                      lookerContent[0].filters[index].filterName,\\n                                      (newValue) ? `[${newValue}]` : '[]')\\n                                  }}\\n                                  min={Array.isArray(apiContent[index]) ? apiContent[index][0].label : ''}\\n                                  max={Array.isArray(apiContent[index]) ? apiContent[index][apiContent[index].length - 1].label : ''}\\n                                  name=\\\"Age Range\\\"\\n                                  marks={Array.isArray(apiContent[index]) ? [{ value: apiContent[index][0].label, label: apiContent[index][0].label }, { value: apiContent[index][apiContent[index].length - 1].label, label: apiContent[index][apiContent[index].length - 1].label }] : ''}\\n                                  disabled={Array.isArray(apiContent[index]) ? false : true}\\n                                />\\n                              </EmbedMethodHighlight>\\n                            </Grid>\\n                            <Grid item sm={12}>\\n                              <EmbedMethodHighlight classes={classes}\\n                                key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\\n                                <Typography className={`${classes.heading} ${classes.ml12}  ${classes.verticalAlignTop}`}\\n                                >Lifetime Revenue Tier:</Typography>\\n                                <ToggleButtonGroup\\n                                  value={lifetimeRevenueTierValue}\\n                                  exclusive //for now\\n                                  onChange={(event, newValue) => {\\n                                    setLifetimeRevenueTierValue(newValue)\\n                                    customFilterAction(lookerContent[0].id,\\n                                      lookerContent[0].filters[index + 1].filterName,\\n                                      (newValue) ? newValue : '')\\n                                  }}\\n                                  aria-label=\\\"ageTier\\\"\\n                                  className={classes.w100}>\\n                                  >\\n                                {apiContent[index + 1].map((ageTier, index) => {\\n                                    if (ageTier.label !== \\\"Undefined\\\") {\\n                                      const Icon = lifetimeRevenueTierIconMap[ageTier.label];\\n                                      return (\\n                                        <ToggleButton\\n                                          key={validIdHelper(`${type}-FilterBar-ToggleButton-${lookerContent[0].id}-${index}`)}\\n                                          value={ageTier.label}\\n                                          aria-label={ageTier.label}\\n                                          className={classes.w33}>\\n                                          <Icon className={classes.mr12} />\\n                                          {_.capitalize(lifetimeRevenueTierMap[ageTier.label]) || ageTier.label}\\n                                        </ToggleButton>\\n                                      )\\n                                    }\\n                                  })}\\n                                </ToggleButtonGroup>\\n\\n                              </EmbedMethodHighlight>\\n                            </Grid>\\n                          </Grid>\\n                          :\\n                          '')\\n                })}\\n                {lookerContent[0].dynamicFieldLookUp ?\\n                  <>\\n                    <Grid item sm={3}>\\n                      <EmbedMethodHighlight classes={classes} >\\n                        <Typography\\n                        >Dynamic Tiles:</Typography>\\n                        <ToggleButtonGroup\\n                          value={tileToggleValue}\\n                          exclusive\\n                          onChange={handleTileToggle}\\n                          aria-label=\\\"text alignment\\\"\\n                        >\\n                          {Object.keys(lookerContent[0].dynamicFieldLookUp).map(key => {\\n                            return (\\n                              <ToggleButton\\n                                key={validIdHelper(`dynamicDashTileToggle-${key}`)}\\n                                value={key} aria-label=\\\"left aligned\\\">\\n                                {key}\\n                              </ToggleButton>\\n                            )\\n                          })}\\n                        </ToggleButtonGroup>\\n                      </EmbedMethodHighlight>\\n                    </Grid>\\n                  </>\\n                  : ''\\n                }\\n                {lookerContent[0].dynamicVisConfig ?\\n                  <>\\n                    <Grid item sm={2}>\\n                      <EmbedMethodHighlight classes={classes} >\\n                        <Typography\\n                        >Dynamic Vis Color:</Typography>\\n                        <ToggleButtonGroup\\n                          value={visColorToggleValue}\\n                          exclusive\\n                          onChange={handleVisColorToggle}\\n                          aria-label=\\\"text alignment\\\"\\n                        >\\n                          {Object.keys(lookerContent[0].dynamicVisConfig.colors).map(key => {\\n                            return (\\n                              <ToggleButton\\n                                key={validIdHelper(`dynamicDashVisConfigToggle-${key}`)}\\n                                value={key} aria-label=\\\"left aligned\\\">\\n                                <span className={`${classes.dot}`} style={{ backgroundColor: key }}></span>\\n                              </ToggleButton>\\n                            )\\n                          })}\\n                        </ToggleButtonGroup>\\n\\n                      </EmbedMethodHighlight>\\n                    </Grid>\\n                  </>\\n                  : ''\\n                }\\n                {lookerContent[0].dynamicThemeMode ?\\n                  <>\\n                    <Grid item sm={1}>\\n                      <EmbedHighlight classes={classes} >\\n                        <Typography\\n                        >{lightThemeToggleValue ? \\\"Light mode\\\" : \\\"Dark mode\\\"}</Typography>\\n\\n                        <Switch\\n                          checked={!lightThemeToggleValue}\\n                          onChange={() => handleThemeChange(null, !lightThemeToggleValue)}\\n                          color=\\\"primary\\\"\\n                          name=\\\"light theme toggle\\\"\\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\\n                        />\\n\\n                      </EmbedHighlight>\\n                    </Grid>\\n                  </>\\n                  : ''\\n                }\\n                {lookerContent[0].dynamicThemeFont ?\\n                  <>\\n                    <Grid item sm={2}>\\n                      <EmbedHighlight classes={classes} >\\n\\n                        <FormControl className={classes.formControl}>\\n                          <InputLabel id=\\\"demo-simple-select-label\\\"\\n                          >Change font</InputLabel>\\n                          <Select\\n                            labelId=\\\"demo-simple-select-label\\\"\\n                            id=\\\"demo-simple-select\\\"\\n                            value={fontThemeSelectValue}\\n                            onChange={(event) => {\\n                              handleThemeChange(null, event.target.value)\\n                            }}\\n                          >\\n                            <MenuItem value=\\\"arial\\\">Arial</MenuItem>\\n                            <MenuItem value=\\\"roboto\\\">Roboto</MenuItem>\\n                            <MenuItem value=\\\"vollkorn\\\">Vollkorn</MenuItem>\\n                          </Select>\\n                        </FormControl>\\n\\n                      </EmbedHighlight>\\n                    </Grid>\\n                  </>\\n                  : ''\\n                }\\n              </>\\n              : ''\\n          }\\n        </Grid>\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel >\\n  )\\n}\";","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst { validIdHelper, prettifyString } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 800,\n    maxHeight: 450,\n    overflow: 'scroll',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  table: {\n    maxHeight: 310\n  },\n  card: {\n    minWidth: 275,\n    minHeight: '10rem',\n    boxShadow: 'none'\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\nfunction getModalStyle() {\n  const top = 10 //+ rand();\n  const left = 50 //+ rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${left}%, -${top}%)`,\n  };\n}\n\nexport default function ModalTable(props) {\n  // console.log('ModalTable')\n  // console.log('props', props)\n\n  const classes = useStyles();\n  const { open, onClose, modalContent } = props;\n  const [modalStyle] = React.useState(getModalStyle);\n\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n\n      <div style={modalStyle} className={classes.paper}>\n        <h2 id=\"simple-modal-title\">{modalContent.title}</h2>\n        {modalContent.body ?\n          <TableContainer component={Paper} className={classes.table}>\n            <Table stickyHeader className={classes.table} size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  {Object.keys(modalContent.body[0]).map((key, index) => (\n                    <TableCell align=\"right\"\n                      key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n                      id={validIdHelper(key + '-TableHead-TableCell-' + index)}>\n                      {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}</TableCell>\n\n\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {modalContent.body.map((item, index) => (\n\n                  <TableRow\n                    key={validIdHelper('TableRow-' + index)}\n                    id={validIdHelper('TableRow-' + index)} >\n                    {\n                      Object.keys(item).map(key => (\n                        <TableCell align=\"right\"\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}>\n                          {\n                            modalContent.body[index][key] ?\n                              modalContent.body[index][key].rendered ?\n                                modalContent.body[index][key].rendered :\n                                modalContent.body[index][key].value ?\n                                  modalContent.body[index][key].value :\n                                  typeof modalContent.body[index][key] === 'number' ?\n                                    (Math.round(modalContent.body[index][key] * 100) / 100)//.toLocaleString()\n                                    :\n                                    modalContent.body[index][key] //.toLocaleString() \n                              :\n                              ''\n                          }\n                        </TableCell>\n                      ))\n                    }\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer >\n          :\n\n          <Card className={`${classes.card} ${classes.flexCentered}`}>\n            <CircularProgress className={classes.circularProgress} />\n          </Card>}\n\n      </div >\n    </Modal >\n  )\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: '8px'\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    // position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 400\n  },\n  height500: {\n    height: 500\n  },\n  height600: {\n    height: 600\n  },\n  height700: {\n    height: 700\n  },\n  height800: {\n    height: 800\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  skeleton: {\n    height: 160,\n    width: '100%'\n  },\n  padding30: {\n    padding: 30\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  height100Percent: {\n    height: '100%'\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  padding10: {\n    padding: 10\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  }\n}));","import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, InputLabel, MenuItem,\n  FormControl, Select, Modal\n} from '@material-ui/core'\nimport { Skeleton } from '@material-ui/lab';\nimport { ExpandMore, FilterList } from '@material-ui/icons';\nimport ModalTable from '../../Material/ModalTable';\nimport { ResponsiveCalendar } from '@nivo/calendar'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./CustomVis.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n//new date pickers\nimport { format, endOfDay, addDays } from 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\nexport default function CustomVis(props) {\n  // console.log('CustomVis')\n  const topBarBottomBarHeight = 112;\n  const [value, setValue] = useState(0);\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [category, setCategory] = useState('All')\n  const [desiredField, setDesiredField] = useState('')\n  const [apiContent, setApiContent] = useState(undefined);\n  const [open, setOpen] = React.useState(false);\n  const [modalContent, setModalContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  // const [serverSideCode, setServerSideCode] = useState('');\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const { togglePayWallModal, show, codeShow, sdk } = useContext(AppContext)\n\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\n\n  //handle opening of modal for advanced and premium users\n  const handleModalOpen = async ({ day }) => {\n    let originalInlineQueryCopy = JSON.parse(JSON.stringify(lookerContent[0].inlineQuery));\n    originalInlineQueryCopy.filters = {\n      ...originalInlineQueryCopy.filters,\n      [originalInlineQueryCopy.fields[0]]: day,\n      [originalInlineQueryCopy.fields[1]]: category === \"All\" ? '' : category\n    }\n    originalInlineQueryCopy.total = true;\n    originalInlineQueryCopy.limit = \"25\";\n\n    setOpen(true);\n    let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: originalInlineQueryCopy }));\n    let modalObj = {\n      \"title\": `Detail View for ${day}`,\n      \"body\": lookerResponseData\n    }\n    setModalContent(modalObj);\n  };\n\n  //handle modal close\n  const handleModalClose = () => {\n    setModalContent({})\n    setOpen(false);\n  };\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  const handleFromDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setFromDate(newValueAsDate);\n    }\n  }\n  const handleToDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setToDate(newValueAsDate);\n    }\n  }\n\n  const handleCategory = newValue => {\n    setCategory(newValue)\n  }\n\n  const handleDesiredField = newValue => {\n    setDesiredField(newValue)\n  }\n\n  //format response from initial api call based on LookerContent array\n  //to match format required by Nivo Calendar component\n  let filterData = [];\n  if (apiContent) {\n    //filtering for fromDate, toDate and category\n    filterData = _.filter(apiContent, (row) => {\n      return (row[apiContent.inlineQuery.fields[0]] >= fromDate\n        && row[apiContent.inlineQuery.fields[0]] < toDate\n        && (category === 'All' ? true : row[apiContent.inlineQuery.fields[1]] === category)\n      )\n    })\n    //converting filterDAta to desired format for vis\n    filterData = filterData.map(item => {\n      return {\n        'day': item[apiContent.inlineQuery.fields[0]],\n        'category': item[apiContent.inlineQuery.fields[1]],\n        'value': item[desiredField]\n      }\n    })\n\n    //special exception for category all\n    //need to reduce array by day across categories\n    //destructuing in reduce of value would not work for dynamic var\n    if (category === 'All') {\n      //create array of all unique dates\n      const uniqueDates = [...new Set(filterData.map(item => item.day))];\n      let filteredAndReducedForAll = []\n      //iterate over unique date\n      uniqueDates.map(uniqueDate => {\n        //filter filterData for current unique date\n        let value = _.filter(filterData, row => {\n          return row.day === uniqueDate\n        }).reduce((acc, { value }) => acc + value, 0)\n        let thisObj = {\n          day: uniqueDate,\n          value: value,\n          category: 'All'\n        }\n        filteredAndReducedForAll.push(thisObj)\n\n      })\n      filterData = filteredAndReducedForAll;\n    }\n  }\n\n  useEffect(() => {\n    if (lookerContent.length) {\n      setTimeout(() => performLookerApiCalls(lookerContent), 100);\n      setDesiredField(lookerContent[0].desiredFields[0])\n      setClientSideCode(rawSampleCode)\n    }\n  }, [lookerContent, lookerUser])\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n  })\n\n  const performLookerApiCalls = function (lookerContent) {\n    setApiContent(undefined); //set to empty array to show progress bar and skeleton\n    lookerContent.map(async lookerContent => {\n      let { inlineQuery } = lookerContent;\n      inlineQuery.filters = {\n        [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\n      };\n      let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: inlineQuery }));\n\n      // console.log('lookerResponseData', lookerResponseData)\n      lookerResponseData = lookerResponseData.filter(item => {\n        return item[inlineQuery.fields[0]]\n      })\n      let uniqueCategories = ['All'];\n      for (let i = 0; i < lookerResponseData.length; i++) {\n        if (uniqueCategories.indexOf(lookerResponseData[i][inlineQuery.fields[1]]) === -1) {\n          uniqueCategories.push(lookerResponseData[i][inlineQuery.fields[1]])\n        }\n      }\n      lookerResponseData.inlineQuery = inlineQuery;\n      lookerResponseData.uniqueCategories = uniqueCategories;\n      setFromDate(lookerResponseData[lookerResponseData.length - 1][lookerResponseData.inlineQuery.fields[0]]);\n      setToDate(incrementDate(lookerResponseData[0][lookerResponseData.inlineQuery.fields[0]], 1));\n      setApiContent(lookerResponseData)\n    })\n  }\n\n  let nivoColorScale = ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']\n  let googleColorScale = ['#4595EC', '#F3A759', '#E24E3A', '#65AB5A'];\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`\n      ${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowScroll}`\n      }\n      >\n        <Grid container\n          key={validIdHelper(type)} >\n          <div className={`${classes.root} `}>\n\n            {!apiContent ?\n              <Skeleton variant=\"rect\" animation=\"wave\" className={classes.skeleton} />\n              :\n              <FilterBar {...props}\n                classes={classes}\n                apiContent={apiContent}\n                fromDate={fromDate}\n                toDate={toDate}\n                category={category}\n                desiredField={desiredField}\n                handleFromDate={handleFromDate}\n                handleToDate={handleToDate}\n                handleCategory={handleCategory}\n                handleDesiredField={handleDesiredField}\n              />\n            }\n\n\n            {!apiContent ?\n              <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                <Card className={`${classes.card} ${classes.flexCentered}`}\n                  elevation={0}\n                  mt={2}\n                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                  <CircularProgress className={classes.circularProgress} />\n                </Card>\n              </Grid>\n\n              : apiContent && apiContent.length ?\n                <Box>\n                  <Grid container\n                    spacing={3}\n                    className={`${classes.noContainerScroll}`}>\n                    {codeShow ?\n                      <Grid item sm={6}\n                        className={`${classes.positionFixedTopRight}`}\n                      >\n                        <CodeFlyout {...props}\n                          classes={classes}\n                          lookerUser={lookerUser}\n                          height={height}\n                        />\n                      </Grid> : ''}\n                    <Divider className={classes.divider} />\n                    <Grid item sm={12} >\n\n                      <Box className={`${classes.w100} ${classes.padding10}`} mt={2}>\n\n                        <ApiHighlight height={400} classes={classes}>\n                          <ResponsiveCalendar\n                            data={filterData}\n                            align=\"top\"\n                            from={incrementDate(fromDate, 1)}\n                            to={incrementDate(toDate, 1)}\n                            emptyColor=\"#eeeeee\"\n                            colors={desiredField === lookerContent[0].desiredFields[0] ? googleColorScale : nivoColorScale}\n                            yearSpacing={40}\n                            monthBorderColor=\"#ffffff\"\n                            dayBorderWidth={2}\n                            dayBorderColor=\"#ffffff\"\n                            margin={{ bottom: 40, left: 40 }}\n                            legends={[\n                              {\n                                anchor: 'bottom-right',\n                                direction: 'row',\n                                translateY: 36,\n                                itemCount: 4,\n                                itemWidth: 42,\n                                itemHeight: 36,\n                                itemsSpacing: 14,\n                                itemDirection: 'right-to-left'\n                              }\n                            ]}\n                            onClick={(day, event) => {\n                              if (!day.value) {\n                              } else if (lookerUser.user_attributes.permission_level === 'basic') {\n                                togglePayWallModal({\n                                  'show': true,\n                                  'permissionNeeded': 'see_drill_overlay'\n                                });\n                              } else {\n                                handleModalOpen(day)\n                                event.stopPropagation();\n                              }\n                            }}\n                          />\n                        </ApiHighlight>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Box> :\n                ''\n            }\n          </div>\n        </Grid >\n        {\n          open ?\n            <ModalTable\n              {...props}\n              open={open}\n              onClose={handleModalClose}\n              classes={classes}\n              modalContent={modalContent}\n            />\n\n            : ''\n        }\n      </Card>\n    </div >\n  )\n}\n//Filter Bar code\nfunction FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\n    apiContent, fromDate, toDate, category, desiredField, handleFromDate, handleToDate, handleCategory, handleDesiredField } = props;\n\n  const [expanded, setExpanded] = useState(true);\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  // console.log('FilterBar')\n  // console.log('fromDate', fromDate)\n  // console.log('toDate', toDate)\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100} elevation={0}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMore />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <FilterList /><Typography className={`${classes.heading} ${classes.ml12}`}>Filter:</Typography>\n\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          {apiContent ?\n            <>\n              <Grid item sm={3}>\n\n                <ApiHighlight classes={classes}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                    >\n                      Metric</InputLabel>\n                    <Select\n                      labelId={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-Select')}`}\n                      value={desiredField}\n                      onChange={(event) => handleDesiredField(event.target.value)}\n                    >\n                      {lookerContent[0].desiredFields.map((item, index) => (\n\n                        <MenuItem\n                          id={validIdHelper(`${item}-${index}`)}\n                          key={validIdHelper(`${item}-${index}`)}\n                          value={item}\n                        >{item.substring(item.lastIndexOf(\".\") + 1, item.length).split(\"_\").map(item => item.charAt(0).toUpperCase() + item.substring(1)).join(\" \")}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </ApiHighlight>\n              </Grid>\n              <Grid item sm={3}>\n                <ApiHighlight classes={classes}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel\n                      id={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                    >\n                      Category</InputLabel>\n                    <Select\n                      labelId={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                      id={`${validIdHelper(type + '-FilterBar-Category-Select')}`}\n                      value={category}\n                      onChange={(event) => handleCategory(event.target.value)}\n                    >\n                      {apiContent.uniqueCategories.map((item, index) => (\n\n                        <MenuItem\n                          id={validIdHelper(`${item}-${index}`)}\n                          key={validIdHelper(`${item}-${index}`)}\n                          value={item}>{item}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </ApiHighlight>\n              </Grid>\n\n              <Grid item sm={3}>\n\n                <ApiHighlight classes={classes}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant=\"inline\"\n                      format=\"MM/dd/yyyy\"\n                      margin=\"normal\"\n                      id=\"fromDate\"\n                      label=\"From date\"\n                      value={fromDate}\n                      onChange={handleFromDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      minDate={apiContent[apiContent.length - 1][apiContent.inlineQuery.fields[0]]}\n                      maxDate={apiContent[0][apiContent.inlineQuery.fields[0]]}\n                    />\n                  </MuiPickersUtilsProvider>\n                </ApiHighlight>\n              </Grid>\n              <Grid item sm={3}>\n                <ApiHighlight classes={classes}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant=\"inline\"\n                      format=\"MM/dd/yyyy\"\n                      margin=\"normal\"\n                      id=\"toDate\"\n                      label=\"To date\"\n                      value={toDate}\n                      onChange={handleToDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      minDate={fromDate}\n                      maxDate={toDate}\n                    />\n                  </MuiPickersUtilsProvider>\n                </ApiHighlight>\n              </Grid>\n            </>\n            : ''}\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel >\n  )\n}\n\nfunction incrementDate(dateInput, increment) {\n  var dateFormatTotime = new Date(dateInput);\n  var increasedDate = new Date(dateFormatTotime.getTime() + (increment * 86400000));\n  return increasedDate.toISOString().split('T')[0];\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, InputLabel, MenuItem,\\n  FormControl, Select, Modal\\n} from '@material-ui/core'\\nimport { Skeleton } from '@material-ui/lab';\\nimport { ExpandMore, FilterList } from '@material-ui/icons';\\nimport ModalTable from '../../Material/ModalTable';\\nimport { ResponsiveCalendar } from '@nivo/calendar'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./CustomVis.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { ApiHighlight } from '../../Highlights/Highlight';\\n//new date pickers\\nimport { format, endOfDay, addDays } from 'date-fns';\\nimport DateFnsUtils from '@date-io/date-fns';\\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\nexport default function CustomVis(props) {\\n  // console.log('CustomVis')\\n  const topBarBottomBarHeight = 112;\\n  const [value, setValue] = useState(0);\\n  const [fromDate, setFromDate] = useState('');\\n  const [toDate, setToDate] = useState('');\\n  const [category, setCategory] = useState('All')\\n  const [desiredField, setDesiredField] = useState('')\\n  const [apiContent, setApiContent] = useState(undefined);\\n  const [open, setOpen] = React.useState(false);\\n  const [modalContent, setModalContent] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  // const [serverSideCode, setServerSideCode] = useState('');\\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\\n  const { togglePayWallModal, show, codeShow, sdk } = useContext(AppContext)\\n\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\\n\\n  //handle opening of modal for advanced and premium users\\n  const handleModalOpen = async ({ day }) => {\\n    let originalInlineQueryCopy = JSON.parse(JSON.stringify(lookerContent[0].inlineQuery));\\n    originalInlineQueryCopy.filters = {\\n      ...originalInlineQueryCopy.filters,\\n      [originalInlineQueryCopy.fields[0]]: day,\\n      [originalInlineQueryCopy.fields[1]]: category === \\\"All\\\" ? '' : category\\n    }\\n    originalInlineQueryCopy.total = true;\\n    originalInlineQueryCopy.limit = \\\"25\\\";\\n\\n    setOpen(true);\\n    let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: originalInlineQueryCopy }));\\n    let modalObj = {\\n      \\\"title\\\": `Detail View for ${day}`,\\n      \\\"body\\\": lookerResponseData\\n    }\\n    setModalContent(modalObj);\\n  };\\n\\n  //handle modal close\\n  const handleModalClose = () => {\\n    setModalContent({})\\n    setOpen(false);\\n  };\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  const handleFromDate = newValue => {\\n    let validDate = Date.parse(newValue);\\n    if (validDate > 0) {\\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\\n      setFromDate(newValueAsDate);\\n    }\\n  }\\n  const handleToDate = newValue => {\\n    let validDate = Date.parse(newValue);\\n    if (validDate > 0) {\\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\\n      setToDate(newValueAsDate);\\n    }\\n  }\\n\\n  const handleCategory = newValue => {\\n    setCategory(newValue)\\n  }\\n\\n  const handleDesiredField = newValue => {\\n    setDesiredField(newValue)\\n  }\\n\\n  //format response from initial api call based on LookerContent array\\n  //to match format required by Nivo Calendar component\\n  let filterData = [];\\n  if (apiContent) {\\n    //filtering for fromDate, toDate and category\\n    filterData = _.filter(apiContent, (row) => {\\n      return (row[apiContent.inlineQuery.fields[0]] >= fromDate\\n        && row[apiContent.inlineQuery.fields[0]] < toDate\\n        && (category === 'All' ? true : row[apiContent.inlineQuery.fields[1]] === category)\\n      )\\n    })\\n    //converting filterDAta to desired format for vis\\n    filterData = filterData.map(item => {\\n      return {\\n        'day': item[apiContent.inlineQuery.fields[0]],\\n        'category': item[apiContent.inlineQuery.fields[1]],\\n        'value': item[desiredField]\\n      }\\n    })\\n\\n    //special exception for category all\\n    //need to reduce array by day across categories\\n    //destructuing in reduce of value would not work for dynamic var\\n    if (category === 'All') {\\n      //create array of all unique dates\\n      const uniqueDates = [...new Set(filterData.map(item => item.day))];\\n      let filteredAndReducedForAll = []\\n      //iterate over unique date\\n      uniqueDates.map(uniqueDate => {\\n        //filter filterData for current unique date\\n        let value = _.filter(filterData, row => {\\n          return row.day === uniqueDate\\n        }).reduce((acc, { value }) => acc + value, 0)\\n        let thisObj = {\\n          day: uniqueDate,\\n          value: value,\\n          category: 'All'\\n        }\\n        filteredAndReducedForAll.push(thisObj)\\n\\n      })\\n      filterData = filteredAndReducedForAll;\\n    }\\n  }\\n\\n  useEffect(() => {\\n    if (lookerContent.length) {\\n      setTimeout(() => performLookerApiCalls(lookerContent), 100);\\n      setDesiredField(lookerContent[0].desiredFields[0])\\n      setClientSideCode(rawSampleCode)\\n    }\\n  }, [lookerContent, lookerUser])\\n\\n  useEffect(() => {\\n    window.addEventListener(\\\"resize\\\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\\n  })\\n\\n  const performLookerApiCalls = function (lookerContent) {\\n    setApiContent(undefined); //set to empty array to show progress bar and skeleton\\n    lookerContent.map(async lookerContent => {\\n      let { inlineQuery } = lookerContent;\\n      inlineQuery.filters = {\\n        [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\\n      };\\n      let lookerResponseData = await sdk.ok(sdk.run_inline_query({ result_format: lookerContent.result_format || 'json', body: inlineQuery }));\\n\\n      // console.log('lookerResponseData', lookerResponseData)\\n      lookerResponseData = lookerResponseData.filter(item => {\\n        return item[inlineQuery.fields[0]]\\n      })\\n      let uniqueCategories = ['All'];\\n      for (let i = 0; i < lookerResponseData.length; i++) {\\n        if (uniqueCategories.indexOf(lookerResponseData[i][inlineQuery.fields[1]]) === -1) {\\n          uniqueCategories.push(lookerResponseData[i][inlineQuery.fields[1]])\\n        }\\n      }\\n      lookerResponseData.inlineQuery = inlineQuery;\\n      lookerResponseData.uniqueCategories = uniqueCategories;\\n      setFromDate(lookerResponseData[lookerResponseData.length - 1][lookerResponseData.inlineQuery.fields[0]]);\\n      setToDate(incrementDate(lookerResponseData[0][lookerResponseData.inlineQuery.fields[0]], 1));\\n      setApiContent(lookerResponseData)\\n    })\\n  }\\n\\n  let nivoColorScale = ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']\\n  let googleColorScale = ['#4595EC', '#F3A759', '#E24E3A', '#65AB5A'];\\n\\n  return (\\n    <div className={`${classes.root} demoComponent`}\\n      style={{ height }}>\\n      <Card elevation={1} className={`\\n      ${classes.padding30} \\n      ${classes.height100Percent}\\n      ${classes.overflowScroll}`\\n      }\\n      >\\n        <Grid container\\n          key={validIdHelper(type)} >\\n          <div className={`${classes.root} `}>\\n\\n            {!apiContent ?\\n              <Skeleton variant=\\\"rect\\\" animation=\\\"wave\\\" className={classes.skeleton} />\\n              :\\n              <FilterBar {...props}\\n                classes={classes}\\n                apiContent={apiContent}\\n                fromDate={fromDate}\\n                toDate={toDate}\\n                category={category}\\n                desiredField={desiredField}\\n                handleFromDate={handleFromDate}\\n                handleToDate={handleToDate}\\n                handleCategory={handleCategory}\\n                handleDesiredField={handleDesiredField}\\n              />\\n            }\\n\\n\\n            {!apiContent ?\\n              <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                <Card className={`${classes.card} ${classes.flexCentered}`}\\n                  elevation={0}\\n                  mt={2}\\n                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                  <CircularProgress className={classes.circularProgress} />\\n                </Card>\\n              </Grid>\\n\\n              : apiContent && apiContent.length ?\\n                <Box>\\n                  <Grid container\\n                    spacing={3}\\n                    className={`${classes.noContainerScroll}`}>\\n                    {codeShow ?\\n                      <Grid item sm={6}\\n                        className={`${classes.positionFixedTopRight}`}\\n                      >\\n                        <CodeFlyout {...props}\\n                          classes={classes}\\n                          lookerUser={lookerUser}\\n                          height={height}\\n                        />\\n                      </Grid> : ''}\\n                    <Divider className={classes.divider} />\\n                    <Grid item sm={12} >\\n\\n                      <Box className={`${classes.w100} ${classes.padding10}`} mt={2}>\\n\\n                        <ApiHighlight height={400} classes={classes}>\\n                          <ResponsiveCalendar\\n                            data={filterData}\\n                            align=\\\"top\\\"\\n                            from={incrementDate(fromDate, 1)}\\n                            to={incrementDate(toDate, 1)}\\n                            emptyColor=\\\"#eeeeee\\\"\\n                            colors={desiredField === lookerContent[0].desiredFields[0] ? googleColorScale : nivoColorScale}\\n                            yearSpacing={40}\\n                            monthBorderColor=\\\"#ffffff\\\"\\n                            dayBorderWidth={2}\\n                            dayBorderColor=\\\"#ffffff\\\"\\n                            margin={{ bottom: 40, left: 40 }}\\n                            legends={[\\n                              {\\n                                anchor: 'bottom-right',\\n                                direction: 'row',\\n                                translateY: 36,\\n                                itemCount: 4,\\n                                itemWidth: 42,\\n                                itemHeight: 36,\\n                                itemsSpacing: 14,\\n                                itemDirection: 'right-to-left'\\n                              }\\n                            ]}\\n                            onClick={(day, event) => {\\n                              if (!day.value) {\\n                              } else if (lookerUser.user_attributes.permission_level === 'basic') {\\n                                togglePayWallModal({\\n                                  'show': true,\\n                                  'permissionNeeded': 'see_drill_overlay'\\n                                });\\n                              } else {\\n                                handleModalOpen(day)\\n                                event.stopPropagation();\\n                              }\\n                            }}\\n                          />\\n                        </ApiHighlight>\\n                      </Box>\\n                    </Grid>\\n                  </Grid>\\n                </Box> :\\n                ''\\n            }\\n          </div>\\n        </Grid >\\n        {\\n          open ?\\n            <ModalTable\\n              {...props}\\n              open={open}\\n              onClose={handleModalClose}\\n              classes={classes}\\n              modalContent={modalContent}\\n            />\\n\\n            : ''\\n        }\\n      </Card>\\n    </div >\\n  )\\n}\\n//Filter Bar code\\nfunction FilterBar(props) {\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\\n    apiContent, fromDate, toDate, category, desiredField, handleFromDate, handleToDate, handleCategory, handleDesiredField } = props;\\n\\n  const [expanded, setExpanded] = useState(true);\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n\\n  // console.log('FilterBar')\\n  // console.log('fromDate', fromDate)\\n  // console.log('toDate', toDate)\\n\\n  return (\\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100} elevation={0}>\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMore />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <FilterList /><Typography className={`${classes.heading} ${classes.ml12}`}>Filter:</Typography>\\n\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        <Grid container spacing={3}>\\n          {apiContent ?\\n            <>\\n              <Grid item sm={3}>\\n\\n                <ApiHighlight classes={classes}>\\n                  <FormControl className={classes.formControl}>\\n                    <InputLabel\\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\\n                    >\\n                      Metric</InputLabel>\\n                    <Select\\n                      labelId={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-Select')}`}\\n                      value={desiredField}\\n                      onChange={(event) => handleDesiredField(event.target.value)}\\n                    >\\n                      {lookerContent[0].desiredFields.map((item, index) => (\\n\\n                        <MenuItem\\n                          id={validIdHelper(`${item}-${index}`)}\\n                          key={validIdHelper(`${item}-${index}`)}\\n                          value={item}\\n                        >{item.substring(item.lastIndexOf(\\\".\\\") + 1, item.length).split(\\\"_\\\").map(item => item.charAt(0).toUpperCase() + item.substring(1)).join(\\\" \\\")}</MenuItem>\\n                      ))}\\n                    </Select>\\n                  </FormControl>\\n                </ApiHighlight>\\n              </Grid>\\n              <Grid item sm={3}>\\n                <ApiHighlight classes={classes}>\\n                  <FormControl className={classes.formControl}>\\n                    <InputLabel\\n                      id={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\\n                    >\\n                      Category</InputLabel>\\n                    <Select\\n                      labelId={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\\n                      id={`${validIdHelper(type + '-FilterBar-Category-Select')}`}\\n                      value={category}\\n                      onChange={(event) => handleCategory(event.target.value)}\\n                    >\\n                      {apiContent.uniqueCategories.map((item, index) => (\\n\\n                        <MenuItem\\n                          id={validIdHelper(`${item}-${index}`)}\\n                          key={validIdHelper(`${item}-${index}`)}\\n                          value={item}>{item}</MenuItem>\\n                      ))}\\n                    </Select>\\n                  </FormControl>\\n                </ApiHighlight>\\n              </Grid>\\n\\n              <Grid item sm={3}>\\n\\n                <ApiHighlight classes={classes}>\\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\\n                    <KeyboardDatePicker\\n                      disableToolbar\\n                      variant=\\\"inline\\\"\\n                      format=\\\"MM/dd/yyyy\\\"\\n                      margin=\\\"normal\\\"\\n                      id=\\\"fromDate\\\"\\n                      label=\\\"From date\\\"\\n                      value={fromDate}\\n                      onChange={handleFromDate}\\n                      KeyboardButtonProps={{\\n                        'aria-label': 'change date',\\n                      }}\\n                      minDate={apiContent[apiContent.length - 1][apiContent.inlineQuery.fields[0]]}\\n                      maxDate={apiContent[0][apiContent.inlineQuery.fields[0]]}\\n                    />\\n                  </MuiPickersUtilsProvider>\\n                </ApiHighlight>\\n              </Grid>\\n              <Grid item sm={3}>\\n                <ApiHighlight classes={classes}>\\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\\n                    <KeyboardDatePicker\\n                      disableToolbar\\n                      variant=\\\"inline\\\"\\n                      format=\\\"MM/dd/yyyy\\\"\\n                      margin=\\\"normal\\\"\\n                      id=\\\"toDate\\\"\\n                      label=\\\"To date\\\"\\n                      value={toDate}\\n                      onChange={handleToDate}\\n                      KeyboardButtonProps={{\\n                        'aria-label': 'change date',\\n                      }}\\n                      minDate={fromDate}\\n                      maxDate={toDate}\\n                    />\\n                  </MuiPickersUtilsProvider>\\n                </ApiHighlight>\\n              </Grid>\\n            </>\\n            : ''}\\n        </Grid>\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel >\\n  )\\n}\\n\\nfunction incrementDate(dateInput, increment) {\\n  var dateFormatTotime = new Date(dateInput);\\n  var increasedDate = new Date(dateFormatTotime.getTime() + (increment * 86400000));\\n  return increasedDate.toISOString().split('T')[0];\\n}\";","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: '8px'\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 400,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  ml24: {\n    marginLeft: 24\n  },\n  parentHoverVisibility: {\n    '&:hover $childHoverVisibility': {\n      visibility: 'visible'\n    }\n\n  },\n  childHoverVisibility: {\n    visibility: 'hidden'\n  },\n  faSm: {\n    fontSize: '.75em'\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  padding30: {\n    padding: 30\n  },\n  mr12: {\n    marginRight: 12\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  height100Percent: {\n    height: '100%'\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  whiteSpaceNoWrap: {\n    whiteSpace: 'nowrap'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowYScroll: {\n    overflowY: 'scroll',\n    overflowX: 'hidden'\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  }\n}));","import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\n","import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button } from '@material-ui/core'\nimport { TreeView, TreeItem } from '@material-ui/lab';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./ReportBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport '../../Home.css';\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport AppContext from '../../../AppContext';\nimport { SwapVerticalCircleOutlined } from '@material-ui/icons';\nconst { validIdHelper } = require('../../../tools');\n\n//start of ReportBuilder Component\nexport default function ReportBuilder(props) {\n  const topBarBottomBarHeight = 112;\n  const [iFrameExists, setIFrame] = useState(0);\n  // const [exploreIFrameExists, setExploreIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState([]);\n  const [exploreObj, setExploreObj] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  // const { togglePayWallModal, codeShow } = useContext(AppContext)\n  const { togglePayWallModal, show, codeShow, sdk } = useContext(AppContext)\n\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [qid, setQid] = useState(null);\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\n\n  const demoComponentType = type;\n  const tabContent = [...lookerContent]\n\n  const handleChange = (event, newValue) => {\n    if (newValue == 1 && lookerUser.user_attributes.permission_level != 'premium') {\n      // handleChange(0)\n      togglePayWallModal({\n        'show': true,\n        'permissionNeeded': 'explore'\n      });\n    } else {\n      setValue(newValue)\n    }\n  };\n\n  useEffect(() => {\n    if (activeTabValue > value) {\n      setValue(activeTabValue)\n    } else {\n      //setTimeout(() => \n      performLookerApiCalls(lookerContent, 1)//, 100)\n    }\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n  })\n\n\n  // useEffect(() => {\n  //   console.log('exploreObj useEffect')\n  //   console.log('Object.keys(exploreObj).length', Object.keys(exploreObj).length)\n  // }, [exploreObj])\n\n\n  useEffect(() => {\n    // console.log('value useEffect')\n    performLookerApiCalls(lookerContent, 0);\n  }, [value])\n\n\n  const action = async (contentType, contentId, secondaryAction, qid, exploreId, newReportEmbedContainer) => {\n\n    let iFrameArray = $(\".embedContainer:visible > iframe\")\n\n    let matchingIndex = 0;\n    for (let i = 0; i < iFrameArray.length; i++) {\n      if (iFrameArray[i].classList.contains(contentType) && iFrameArray[i].classList.contains(contentId)) {\n        iFrameArray[i].classList.remove('dNone')\n        matchingIndex = i;\n      } else {\n        iFrameArray[i].classList.add('dNone')\n      }\n    }\n\n    if (secondaryAction === 'edit' || secondaryAction === 'explore') {\n      //save qid to state and use in perform looker api calls\n      setQid(qid);\n      handleChange('edit', 1)\n    } else if (secondaryAction === 'delete') {\n      //remove iframe associated with content that was deleted\n      let indexOfDeletedContent;\n      for (let i = 0; i < iFrameArray.length; i++) {\n        if (iFrameArray[i].classList.contains(contentId)) {\n          indexOfDeletedContent = i;\n        }\n      }\n      let updatedIFrameArray = iFrameArray.slice()\n      updatedIFrameArray.splice(indexOfDeletedContent, 1)\n      for (let i = 0; i < updatedIFrameArray.length; i++) {\n        if (i === 0) {\n          updatedIFrameArray[i].classList.remove('dNone')\n          matchingIndex = i;\n        } else {\n          updatedIFrameArray[i].classList.add('dNone')\n        }\n      }\n      //append updated array\n      $(`#embedContainer-reportbuilder-14`).empty();\n      $(`#embedContainer-reportbuilder-14`).html(updatedIFrameArray);\n\n      // let lookerResponse = await fetch('/deletelook/' + contentId, {\n      //   method: 'GET',\n      //   headers: {\n      //     Accept: 'application/json',\n      //     'Content-Type': 'application/json'\n      //   }\n      // });\n      let lookerResponse = await sdk.ok(sdk.delete_look(contentId));\n      // console.log('lookerResponse', lookerResponse)\n      // if (lookerResponse.status === 200) {\n      performLookerApiCalls(lookerContent, 1)\n      // }\n    }\n  }\n\n  const performLookerApiCalls = function (lookerContent, animateLoad) {\n    // console.log('performLookerApiCalls')\n    // console.log('lookerContent', lookerContent)\n    if (animateLoad) {\n      handleChange('refresh', 0)\n      setIFrame(0)\n      setApiContent([])\n    }\n\n    lookerContent.map(async lookerContent => {\n      if (value === 0 &&\n        lookerContent.type === 'folder') {\n\n        const sharedFolder = await sdk.ok(sdk.folder(lookerContent.id));\n        const embedUser = await sdk.ok(sdk.me())\n\n        for (let h = 0; h < sharedFolder.looks.length; h++) {\n          let look = await sdk.ok(sdk.look(sharedFolder.looks[h].id))\n          let clientId = look.query.client_id;\n          sharedFolder.looks[h].client_id = clientId;\n        }\n\n        let embeddedUserFolder = {}\n        if (lookerUser.user_attributes.permission_level === 'premium') {\n          let embedUserLooks = await sdk.ok(sdk.search_looks({ user_id: embedUser.id }))\n          if (embedUserLooks && embedUserLooks.length) {\n            let embedUserFolderId = embedUserLooks[0].folder_id || null;\n            embeddedUserFolder = await sdk.ok(sdk.folder(embedUserFolderId));\n            for (let i = 0; i < embeddedUserFolder.looks.length; i++) {\n              let look = await sdk.ok(sdk.look(embeddedUserFolder.looks[i].id));\n              let clientId = look.query.client_id;\n              embeddedUserFolder.looks[i].client_id = clientId;\n            }\n          }\n        }\n\n        let lookerResponseData = {\n          sharedFolder,\n          embeddedUserFolder\n        }\n\n        // console.log('lookerResponseData', lookerResponseData)\n\n        let looksToUse = [...lookerResponseData.sharedFolder.looks];\n        if (lookerUser.user_attributes.permission_level === 'premium' &&\n          Object.keys(lookerResponseData.embeddedUserFolder).length) {\n          looksToUse = [\n            ...looksToUse, ...lookerResponseData.embeddedUserFolder.looks\n          ]\n\n        }\n        let dashboardsToUse = [...lookerResponseData.sharedFolder.dashboards]\n        let objToUse = {\n          looks: looksToUse,\n          dashboards: dashboardsToUse\n        }\n        // console.log('objToUse', objToUse)\n        let iFrameArray = $(`.embedContainer.${validIdHelper(demoComponentType)} > iframe`);\n        if (objToUse.looks.length) {\n          objToUse.looks.map((item, index) => {\n\n            let lookId = item.id;\n            let lookIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('look') && iFrameArray[i].classList.contains(lookId)) {\n                lookIsRendered = true;\n              }\n            }\n\n            if (!lookIsRendered) {\n              LookerEmbedSDK.createLookWithId(lookId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('look')\n                .withClassName(lookerResponseData.sharedFolder.looks.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName(index > 0 ? 'dNone' : 'oops')\n                .withClassName(lookId)\n                .build()\n                .connect()\n                .then((look) => {\n                  // setIFrame(1)\n                  LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n            if (index === objToUse.looks.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n\n        if (objToUse.dashboards.length) {\n          objToUse.dashboards.map((item, index) => {\n            let dashboardId = item.id\n            let dashboardIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('dashboard') && iFrameArray[i].classList.contains(dashboardId)) {\n                dashboardIsRendered = true;\n              }\n            }\n            if (!dashboardIsRendered) {\n              LookerEmbedSDK.createDashboardWithId(dashboardId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('dashboard')\n                .withClassName(lookerResponseData.sharedFolder.dashboards.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName('dNone')\n                .withClassName(dashboardId)\n                .build()\n                .connect()\n                .then((dashboard) => {\n                  setTimeout(() => {\n                    // setIFrame(1)\n                  }, 1000)\n                  LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n\n            if (index === objToUse.dashboards.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n        setApiContent(objToUse)\n      } else if (lookerContent.type === 'explore' &&\n        lookerUser.user_attributes.permission_level === 'premium' &&\n        value === 1) {\n        // console.log('inside else ifff')\n        let exploreId = lookerContent.id;\n        // console.log('exploreId', exploreId)\n        $(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`)).html('');\n        //separate logic for embedding explore with qid vs. no qid\n        if (qid) {\n          // console.log('qid ifff')\n          LookerEmbedSDK.createExploreWithId(exploreId)\n            .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n            .withClassName('exploreIframe')\n            .withParams({\n              qid: qid\n            })\n            .on('explore:state:changed', (event) => {\n            })\n            .build()\n            .connect()\n            .then((explore) => {\n              console.log('explore', explore)\n              // setTimeout(() => {\n              setIFrame(1)\n              setExploreObj(explore)\n              // }, 1000)\n              LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n              setQid(null)\n            })\n            .catch((error) => {\n              console.error('Connection error', error)\n            })\n        } else {\n          // console.log('qid else')\n          LookerEmbedSDK.createExploreWithId(exploreId)\n            .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n            .withClassName('exploreIframe')\n            .on('explore:state:changed', (event) => {\n            })\n            .build()\n            .connect()\n            .then((explore) => {\n              // console.log('explore', explore)\n              // setTimeout(() => {\n              setIFrame(1)\n              setExploreObj(explore)\n              // }, 1000)\n              LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n              // setQid(null)\n            })\n            .catch((error) => {\n              console.error('Connection error', error)\n            })\n        }\n      }\n      // else console.log('ellse')\n    })\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`\n      ${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowYScroll}`\n      }\n      >\n        <Grid container\n          key={validIdHelper(type)} >\n          <div className={classes.root}>\n            {iFrameExists ? '' :\n              <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                <Card className={`${classes.card} ${classes.flexCentered}`}\n                  elevation={0}\n                  mt={2}\n                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                  <CircularProgress className={classes.circularProgress} />\n                </Card>\n              </Grid>\n            }\n\n            {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\n            <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n              <AppBar position=\"static\" elevation={0}>\n                <Tabs\n                  className={classes.tabs}\n                  value={value}\n                  onChange={handleChange}\n                  aria-label=\"simple tabs example\">\n                  {tabContent.map((item, index) => (\n                    <Tab\n                      key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                      label={index == 1 ?\n                        <div>\n\n                          {lookerUser.user_attributes.permission_level != 'premium' ?\n                            <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} /> : <Icon className={`fa fa-plus ${classes.faSm} ${classes.mr12}`} />}\n                          {item.label}\n                        </div> :\n                        item.label}\n                      className={value === 1 && index === 1 ? `${classes.hidden}` : index == 1 ? `${classes.mlAuto}` : ``}\n                      style={index === 1 ? {\n                        backgroundColor: '#5896E6',\n                        borderRadius: '4px',\n                        color: '#fff',\n                        opacity: '1.0'\n                      } : {}}\n                      {...a11yProps(index)} />\n                  ))}\n                </Tabs>\n              </AppBar>\n              <Box className=\"tabPanelContainer\">\n                <Grid container\n                  spacing={3}\n                  className={`${classes.noContainerScroll}`}>\n                  {codeShow ?\n                    <Grid item sm={6}\n                      className={`${classes.positionFixedTopRight}`}\n                    >\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerUser={lookerUser}\n                        height={height}\n                      />\n                    </Grid> : ''}\n                  {tabContent.map((tabContentItem, tabContentItemIndex) => (\n                    <TabPanel\n                      key={`${validIdHelper(demoComponentType + '-tabPanel-' + tabContentItemIndex)}`}\n                      value={value}\n                      index={tabContentItemIndex}\n                      style={{ width: '100%' }} //weird\n                    >\n                      <Grid container>\n                        {\n                          tabContentItemIndex === 0\n                            ?\n                            <React.Fragment\n                              key={`${validIdHelper(demoComponentType + '-outerFragment-' + tabContentItemIndex)}`}>\n                              <Grid item sm={4} >\n                                <ApiHighlight height={500} classes={classes}>\n                                  <TreeSideBar {...{\n                                    togglePayWallModal,\n                                    classes,\n                                    demoComponentType,\n                                    tabContent,\n                                    tabContentItemIndex,\n                                    action,\n                                    apiContent,\n                                    ...props\n                                  }}\n                                  />\n                                </ApiHighlight>\n                              </Grid>\n                              <Grid item sm={8} >\n                                <EmbedHighlight classes={classes}>\n                                  <div\n                                    className={`embedContainer ${validIdHelper(demoComponentType)}`}\n                                    id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                    key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                  >\n                                  </div>\n                                </EmbedHighlight>\n                              </Grid>\n                            </React.Fragment>\n                            :\n                            <Grid item sm={12} >\n                              {/* couldn't get this to work */}\n                              {/* {Object.keys(exploreObj).length ?\n                                <EmbedHighlight classes={classes}>\n                                  <div\n                                    className=\"embedContainer\"\n                                    id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                    key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                  >\n                                  </div>\n                                </EmbedHighlight> :\n                                <Card className={`${classes.card} ${classes.flexCentered}`}\n                                  elevation={0}\n                                  mt={2}\n                                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                                  <CircularProgress className={classes.circularProgress} />\n                                </Card>} */}\n                              <EmbedHighlight classes={classes}>\n                                <div\n                                  className=\"embedContainer\"\n                                  id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                  key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                >\n                                </div>\n                              </EmbedHighlight>\n                            </Grid>\n                        }\n                      </Grid>\n                    </TabPanel>\n                  ))}</Grid>\n              </Box>\n            </Box >\n          </div>\n        </Grid >\n      </Card>\n    </div >\n  )\n}\n\n\nfunction TreeSideBar(props) {\n  const { staticContent, staticContent: { lookerContent }, classes, demoComponentType, tabContent, tabContentItemIndex, action, apiContent, lookerUser, togglePayWallModal } = props\n  const sharedFolderId = lookerContent[0].type === 'folder' ? lookerContent[0].id : '';\n  let treeCounter = 0;\n  const [selected, setSelected] = useState(2);\n  const expandedArr = Object.keys(apiContent).length ? [\"1\", \"\" + (2 + apiContent[Object.keys(apiContent)[0]].length)] : [];\n  const [expanded, setExpanded] = useState(expandedArr);\n\n  const handleToggle = (event, nodeIds) => {\n    setExpanded(nodeIds);\n  }\n\n  const handleSelect = (event, nodeIds) => {\n    setSelected(nodeIds);\n  };\n\n\n  useEffect(() => {\n    setExpanded(expandedArr);\n    if (selected !== 2) setSelected(2)\n    // let innerTreeItemArray = $(\".innerTreeItem\");\n    // console.log('innerTreeItemArray', innerTreeItemArray)\n    // for (let i = 0; i < innerTreeItemArray.length; i++) {\n    //   console.log('inside forrr', i)\n    //   if (innerTreeItemArray[i].classList.contains('Mui-selected')) {\n    //     console.log('inside iffff')\n    //     innerTreeItemArray[i].classList.remove('Mui-selected')\n    //   } else console.log('elllse')\n    // }\n  }, [apiContent]);\n\n\n  return (\n    <TreeView\n      className={classes.tree}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n      expanded={expanded}\n      onNodeToggle={handleToggle}\n      onNodeSelect={handleSelect}\n    // multiSelect={false}\n    >\n      {apiContent ? Object.keys(apiContent).map((key, outerIndex) => (\n        <React.Fragment\n          key={`${validIdHelper(demoComponentType + '-innerFragment-' + outerIndex)}`}>\n          <TreeItem\n            key={`${validIdHelper(demoComponentType + '-outerTreeItem-' + outerIndex)}`}\n            nodeId={\"\" + (treeCounter += 1)}\n            // treecounter={treeCounter}\n            label={_.capitalize(key)}\n            icon={<Icon className={`fa fa-folder ${classes.icon}`} />}\n            disabled={apiContent[key].length ? false : true}\n          >\n            {\n              apiContent[key].length ?\n                apiContent[key].map((item, index) => (\n                  <TreeItem\n                    key={`${validIdHelper(demoComponentType + '-innerTreeItem-' + treeCounter)}`}\n                    nodeId={\"\" + (treeCounter += 1)}\n                    treecounter={treeCounter}\n                    selected={selected === treeCounter}\n                    className={selected === treeCounter ? `Mui-selected innerTreeItem ${classes.whiteSpaceNoWrap}` : `innerTreeItem ${classes.whiteSpaceNoWrap}`}\n                    contentid={item.id}\n                    label={item.folder_id === sharedFolderId &&\n                      key === 'looks' ?\n                      <div\n                        id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}\n                      >\n                        {/* {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title} */}\n                        <Grid container>\n                          <Grid item sm={8} className={`${classes.overflowHidden}`}>\n                            {item.title}</Grid>\n                          <Grid item sm={4}>\n                            <Button\n                              id={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                              key={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                              size=\"small\"\n                              className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                              onClick={(event) => {\n                                if (lookerUser.user_attributes.permission_level === 'premium') {\n                                  action(\n                                    key.substring(0, key.length - 1),\n                                    item.id,\n                                    'explore',\n                                    item.client_id,\n                                    tabContent[tabContentItemIndex + 1].id,\n                                    validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                  );\n                                  event.stopPropagation();\n                                } else {\n                                  // togglePayWallModal();\n\n                                  togglePayWallModal({\n                                    'show': true,\n                                    'permissionNeeded': 'explore'\n                                  });\n                                }\n                              }\n                              }\n                              color=\"default\"\n                            >\n                              {lookerUser.user_attributes.permission_level === 'premium' ? 'Explore' : <div> <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} />Explore</div>}\n                            </Button>\n                          </Grid>\n                        </Grid>\n\n\n                      </div>\n                      : key === 'looks' ?\n                        <div\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\n                          <Grid container>\n                            <Grid item sm={6} className={`${classes.overflowHidden}`}>\n                              {/* {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title} */}\n                              {item.title}\n                            </Grid>\n                            <Grid item sm={6}>\n                              <Button\n                                id={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                                key={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                                size=\"small\"\n                                className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                                onClick={(event) => {\n                                  if (lookerUser.user_attributes.permission_level === 'premium') {\n                                    // setSelected(treeCounter);\n                                    action(\n                                      key.substring(0, key.length - 1),\n                                      item.id,\n                                      'edit',\n                                      item.client_id,\n                                      tabContent[tabContentItemIndex + 1].id,\n                                      validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                    );\n                                    event.stopPropagation();\n                                  } else {\n                                    // togglePayWallModal();\n\n                                    togglePayWallModal({\n                                      'show': true,\n                                      'permissionNeeded': 'explore'\n                                    });\n                                  }\n                                }\n                                }\n                                color=\"primary\"\n                              >\n                                Edit\n                                                                                            </Button>\n                              <Button\n                                id={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                                key={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                                size=\"small\"\n                                className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                                onClick={(event) => {\n                                  if (lookerUser.user_attributes.permission_level === 'premium') {\n                                    // setSelected(treeCounter);\n                                    action(\n                                      key.substring(0, key.length - 1),\n                                      item.id,\n                                      'delete',\n                                      item.client_id,\n                                      tabContent[tabContentItemIndex + 1].id,\n                                      validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                    );\n                                    event.stopPropagation();\n                                  } else {\n                                    // togglePayWallModal();\n\n                                    togglePayWallModal({\n                                      'show': true,\n                                      'permissionNeeded': 'explore'\n                                    });\n                                  }\n                                }\n                                }\n                                color=\"secondary\"\n                              >\n                                Delete\n                                                                                            </Button>\n                            </Grid>\n                          </Grid>\n\n                        </div>\n                        : <Grid container><Grid item sm={12}>{item.title}</Grid></Grid>\n                    }\n                    onClick={() => {\n                      // setSelected(treeCounter)\n                      action(\n                        key.substring(0, key.length - 1), item.id)\n                    }} />\n\n                ))\n                :\n                ''\n            }\n          </TreeItem>\n\n        </React.Fragment>\n      )) : ''}\n    </TreeView>\n  )\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button } from '@material-ui/core'\\nimport { TreeView, TreeItem } from '@material-ui/lab';\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./ReportBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport '../../Home.css';\\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\\nimport AppContext from '../../../AppContext';\\nimport { SwapVerticalCircleOutlined } from '@material-ui/icons';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of ReportBuilder Component\\nexport default function ReportBuilder(props) {\\n  const topBarBottomBarHeight = 112;\\n  const [iFrameExists, setIFrame] = useState(0);\\n  // const [exploreIFrameExists, setExploreIFrame] = useState(0);\\n  const [apiContent, setApiContent] = useState([]);\\n  const [exploreObj, setExploreObj] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\\n  // const { togglePayWallModal, codeShow } = useContext(AppContext)\\n  const { togglePayWallModal, show, codeShow, sdk } = useContext(AppContext)\\n\\n  const classes = useStyles();\\n  const [value, setValue] = useState(0);\\n  const [qid, setQid] = useState(null);\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\\n\\n  const demoComponentType = type;\\n  const tabContent = [...lookerContent]\\n\\n  const handleChange = (event, newValue) => {\\n    if (newValue == 1 && lookerUser.user_attributes.permission_level != 'premium') {\\n      // handleChange(0)\\n      togglePayWallModal({\\n        'show': true,\\n        'permissionNeeded': 'explore'\\n      });\\n    } else {\\n      setValue(newValue)\\n    }\\n  };\\n\\n  useEffect(() => {\\n    if (activeTabValue > value) {\\n      setValue(activeTabValue)\\n    } else {\\n      //setTimeout(() => \\n      performLookerApiCalls(lookerContent, 1)//, 100)\\n    }\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent, lookerUser]);\\n\\n  useEffect(() => {\\n    window.addEventListener(\\\"resize\\\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\\n  })\\n\\n\\n  // useEffect(() => {\\n  //   console.log('exploreObj useEffect')\\n  //   console.log('Object.keys(exploreObj).length', Object.keys(exploreObj).length)\\n  // }, [exploreObj])\\n\\n\\n  useEffect(() => {\\n    // console.log('value useEffect')\\n    performLookerApiCalls(lookerContent, 0);\\n  }, [value])\\n\\n\\n  const action = async (contentType, contentId, secondaryAction, qid, exploreId, newReportEmbedContainer) => {\\n\\n    let iFrameArray = $(\\\".embedContainer:visible > iframe\\\")\\n\\n    let matchingIndex = 0;\\n    for (let i = 0; i < iFrameArray.length; i++) {\\n      if (iFrameArray[i].classList.contains(contentType) && iFrameArray[i].classList.contains(contentId)) {\\n        iFrameArray[i].classList.remove('dNone')\\n        matchingIndex = i;\\n      } else {\\n        iFrameArray[i].classList.add('dNone')\\n      }\\n    }\\n\\n    if (secondaryAction === 'edit' || secondaryAction === 'explore') {\\n      //save qid to state and use in perform looker api calls\\n      setQid(qid);\\n      handleChange('edit', 1)\\n    } else if (secondaryAction === 'delete') {\\n      //remove iframe associated with content that was deleted\\n      let indexOfDeletedContent;\\n      for (let i = 0; i < iFrameArray.length; i++) {\\n        if (iFrameArray[i].classList.contains(contentId)) {\\n          indexOfDeletedContent = i;\\n        }\\n      }\\n      let updatedIFrameArray = iFrameArray.slice()\\n      updatedIFrameArray.splice(indexOfDeletedContent, 1)\\n      for (let i = 0; i < updatedIFrameArray.length; i++) {\\n        if (i === 0) {\\n          updatedIFrameArray[i].classList.remove('dNone')\\n          matchingIndex = i;\\n        } else {\\n          updatedIFrameArray[i].classList.add('dNone')\\n        }\\n      }\\n      //append updated array\\n      $(`#embedContainer-reportbuilder-14`).empty();\\n      $(`#embedContainer-reportbuilder-14`).html(updatedIFrameArray);\\n\\n      // let lookerResponse = await fetch('/deletelook/' + contentId, {\\n      //   method: 'GET',\\n      //   headers: {\\n      //     Accept: 'application/json',\\n      //     'Content-Type': 'application/json'\\n      //   }\\n      // });\\n      let lookerResponse = await sdk.ok(sdk.delete_look(contentId));\\n      // console.log('lookerResponse', lookerResponse)\\n      // if (lookerResponse.status === 200) {\\n      performLookerApiCalls(lookerContent, 1)\\n      // }\\n    }\\n  }\\n\\n  const performLookerApiCalls = function (lookerContent, animateLoad) {\\n    // console.log('performLookerApiCalls')\\n    // console.log('lookerContent', lookerContent)\\n    if (animateLoad) {\\n      handleChange('refresh', 0)\\n      setIFrame(0)\\n      setApiContent([])\\n    }\\n\\n    lookerContent.map(async lookerContent => {\\n      if (value === 0 &&\\n        lookerContent.type === 'folder') {\\n\\n        const sharedFolder = await sdk.ok(sdk.folder(lookerContent.id));\\n        const embedUser = await sdk.ok(sdk.me())\\n\\n        for (let h = 0; h < sharedFolder.looks.length; h++) {\\n          let look = await sdk.ok(sdk.look(sharedFolder.looks[h].id))\\n          let clientId = look.query.client_id;\\n          sharedFolder.looks[h].client_id = clientId;\\n        }\\n\\n        let embeddedUserFolder = {}\\n        if (lookerUser.user_attributes.permission_level === 'premium') {\\n          let embedUserLooks = await sdk.ok(sdk.search_looks({ user_id: embedUser.id }))\\n          if (embedUserLooks && embedUserLooks.length) {\\n            let embedUserFolderId = embedUserLooks[0].folder_id || null;\\n            embeddedUserFolder = await sdk.ok(sdk.folder(embedUserFolderId));\\n            for (let i = 0; i < embeddedUserFolder.looks.length; i++) {\\n              let look = await sdk.ok(sdk.look(embeddedUserFolder.looks[i].id));\\n              let clientId = look.query.client_id;\\n              embeddedUserFolder.looks[i].client_id = clientId;\\n            }\\n          }\\n        }\\n\\n        let lookerResponseData = {\\n          sharedFolder,\\n          embeddedUserFolder\\n        }\\n\\n        // console.log('lookerResponseData', lookerResponseData)\\n\\n        let looksToUse = [...lookerResponseData.sharedFolder.looks];\\n        if (lookerUser.user_attributes.permission_level === 'premium' &&\\n          Object.keys(lookerResponseData.embeddedUserFolder).length) {\\n          looksToUse = [\\n            ...looksToUse, ...lookerResponseData.embeddedUserFolder.looks\\n          ]\\n\\n        }\\n        let dashboardsToUse = [...lookerResponseData.sharedFolder.dashboards]\\n        let objToUse = {\\n          looks: looksToUse,\\n          dashboards: dashboardsToUse\\n        }\\n        // console.log('objToUse', objToUse)\\n        let iFrameArray = $(`.embedContainer.${validIdHelper(demoComponentType)} > iframe`);\\n        if (objToUse.looks.length) {\\n          objToUse.looks.map((item, index) => {\\n\\n            let lookId = item.id;\\n            let lookIsRendered = false;\\n            for (let i = 0; i < iFrameArray.length; i++) {\\n              if (iFrameArray[i].classList.contains('look') && iFrameArray[i].classList.contains(lookId)) {\\n                lookIsRendered = true;\\n              }\\n            }\\n\\n            if (!lookIsRendered) {\\n              LookerEmbedSDK.createLookWithId(lookId)\\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n                .withClassName('iframe')\\n                .withClassName('look')\\n                .withClassName(lookerResponseData.sharedFolder.looks.indexOf(item) > -1 ? \\\"shared\\\" : \\\"personal\\\")\\n                .withClassName(index > 0 ? 'dNone' : 'oops')\\n                .withClassName(lookId)\\n                .build()\\n                .connect()\\n                .then((look) => {\\n                  // setIFrame(1)\\n                  LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n                })\\n                .catch((error) => {\\n                  console.error('Connection error', error)\\n                })\\n            }\\n\\n            if (index === objToUse.looks.length - 1) {\\n              setTimeout(() => setIFrame(1), 1000)\\n            }\\n          })\\n        }\\n\\n        if (objToUse.dashboards.length) {\\n          objToUse.dashboards.map((item, index) => {\\n            let dashboardId = item.id\\n            let dashboardIsRendered = false;\\n            for (let i = 0; i < iFrameArray.length; i++) {\\n              if (iFrameArray[i].classList.contains('dashboard') && iFrameArray[i].classList.contains(dashboardId)) {\\n                dashboardIsRendered = true;\\n              }\\n            }\\n            if (!dashboardIsRendered) {\\n              LookerEmbedSDK.createDashboardWithId(dashboardId)\\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n                .withClassName('iframe')\\n                .withClassName('dashboard')\\n                .withClassName(lookerResponseData.sharedFolder.dashboards.indexOf(item) > -1 ? \\\"shared\\\" : \\\"personal\\\")\\n                .withClassName('dNone')\\n                .withClassName(dashboardId)\\n                .build()\\n                .connect()\\n                .then((dashboard) => {\\n                  setTimeout(() => {\\n                    // setIFrame(1)\\n                  }, 1000)\\n                  LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n                })\\n                .catch((error) => {\\n                  console.error('Connection error', error)\\n                })\\n            }\\n\\n\\n            if (index === objToUse.dashboards.length - 1) {\\n              setTimeout(() => setIFrame(1), 1000)\\n            }\\n          })\\n        }\\n        setApiContent(objToUse)\\n      } else if (lookerContent.type === 'explore' &&\\n        lookerUser.user_attributes.permission_level === 'premium' &&\\n        value === 1) {\\n        // console.log('inside else ifff')\\n        let exploreId = lookerContent.id;\\n        // console.log('exploreId', exploreId)\\n        $(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`)).html('');\\n        //separate logic for embedding explore with qid vs. no qid\\n        if (qid) {\\n          // console.log('qid ifff')\\n          LookerEmbedSDK.createExploreWithId(exploreId)\\n            .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n            .withClassName('exploreIframe')\\n            .withParams({\\n              qid: qid\\n            })\\n            .on('explore:state:changed', (event) => {\\n            })\\n            .build()\\n            .connect()\\n            .then((explore) => {\\n              console.log('explore', explore)\\n              // setTimeout(() => {\\n              setIFrame(1)\\n              setExploreObj(explore)\\n              // }, 1000)\\n              LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n              setQid(null)\\n            })\\n            .catch((error) => {\\n              console.error('Connection error', error)\\n            })\\n        } else {\\n          // console.log('qid else')\\n          LookerEmbedSDK.createExploreWithId(exploreId)\\n            .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n            .withClassName('exploreIframe')\\n            .on('explore:state:changed', (event) => {\\n            })\\n            .build()\\n            .connect()\\n            .then((explore) => {\\n              // console.log('explore', explore)\\n              // setTimeout(() => {\\n              setIFrame(1)\\n              setExploreObj(explore)\\n              // }, 1000)\\n              LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n              // setQid(null)\\n            })\\n            .catch((error) => {\\n              console.error('Connection error', error)\\n            })\\n        }\\n      }\\n      // else console.log('ellse')\\n    })\\n  }\\n\\n  return (\\n    <div className={`${classes.root} demoComponent`}\\n      style={{ height }}>\\n      <Card elevation={1} className={`\\n      ${classes.padding30} \\n      ${classes.height100Percent}\\n      ${classes.overflowYScroll}`\\n      }\\n      >\\n        <Grid container\\n          key={validIdHelper(type)} >\\n          <div className={classes.root}>\\n            {iFrameExists ? '' :\\n              <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                <Card className={`${classes.card} ${classes.flexCentered}`}\\n                  elevation={0}\\n                  mt={2}\\n                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                  <CircularProgress className={classes.circularProgress} />\\n                </Card>\\n              </Grid>\\n            }\\n\\n            {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\\n            <Box className={iFrameExists ? `` : `${classes.hidden}`}>\\n              <AppBar position=\\\"static\\\" elevation={0}>\\n                <Tabs\\n                  className={classes.tabs}\\n                  value={value}\\n                  onChange={handleChange}\\n                  aria-label=\\\"simple tabs example\\\">\\n                  {tabContent.map((item, index) => (\\n                    <Tab\\n                      key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\\n                      label={index == 1 ?\\n                        <div>\\n\\n                          {lookerUser.user_attributes.permission_level != 'premium' ?\\n                            <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} /> : <Icon className={`fa fa-plus ${classes.faSm} ${classes.mr12}`} />}\\n                          {item.label}\\n                        </div> :\\n                        item.label}\\n                      className={value === 1 && index === 1 ? `${classes.hidden}` : index == 1 ? `${classes.mlAuto}` : ``}\\n                      style={index === 1 ? {\\n                        backgroundColor: '#5896E6',\\n                        borderRadius: '4px',\\n                        color: '#fff',\\n                        opacity: '1.0'\\n                      } : {}}\\n                      {...a11yProps(index)} />\\n                  ))}\\n                </Tabs>\\n              </AppBar>\\n              <Box className=\\\"tabPanelContainer\\\">\\n                <Grid container\\n                  spacing={3}\\n                  className={`${classes.noContainerScroll}`}>\\n                  {codeShow ?\\n                    <Grid item sm={6}\\n                      className={`${classes.positionFixedTopRight}`}\\n                    >\\n                      <CodeFlyout {...props}\\n                        classes={classes}\\n                        lookerUser={lookerUser}\\n                        height={height}\\n                      />\\n                    </Grid> : ''}\\n                  {tabContent.map((tabContentItem, tabContentItemIndex) => (\\n                    <TabPanel\\n                      key={`${validIdHelper(demoComponentType + '-tabPanel-' + tabContentItemIndex)}`}\\n                      value={value}\\n                      index={tabContentItemIndex}\\n                      style={{ width: '100%' }} //weird\\n                    >\\n                      <Grid container>\\n                        {\\n                          tabContentItemIndex === 0\\n                            ?\\n                            <React.Fragment\\n                              key={`${validIdHelper(demoComponentType + '-outerFragment-' + tabContentItemIndex)}`}>\\n                              <Grid item sm={4} >\\n                                <ApiHighlight height={500} classes={classes}>\\n                                  <TreeSideBar {...{\\n                                    togglePayWallModal,\\n                                    classes,\\n                                    demoComponentType,\\n                                    tabContent,\\n                                    tabContentItemIndex,\\n                                    action,\\n                                    apiContent,\\n                                    ...props\\n                                  }}\\n                                  />\\n                                </ApiHighlight>\\n                              </Grid>\\n                              <Grid item sm={8} >\\n                                <EmbedHighlight classes={classes}>\\n                                  <div\\n                                    className={`embedContainer ${validIdHelper(demoComponentType)}`}\\n                                    id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                    key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                  >\\n                                  </div>\\n                                </EmbedHighlight>\\n                              </Grid>\\n                            </React.Fragment>\\n                            :\\n                            <Grid item sm={12} >\\n                              {/* couldn't get this to work */}\\n                              {/* {Object.keys(exploreObj).length ?\\n                                <EmbedHighlight classes={classes}>\\n                                  <div\\n                                    className=\\\"embedContainer\\\"\\n                                    id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                    key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                  >\\n                                  </div>\\n                                </EmbedHighlight> :\\n                                <Card className={`${classes.card} ${classes.flexCentered}`}\\n                                  elevation={0}\\n                                  mt={2}\\n                                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                                  <CircularProgress className={classes.circularProgress} />\\n                                </Card>} */}\\n                              <EmbedHighlight classes={classes}>\\n                                <div\\n                                  className=\\\"embedContainer\\\"\\n                                  id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                  key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                >\\n                                </div>\\n                              </EmbedHighlight>\\n                            </Grid>\\n                        }\\n                      </Grid>\\n                    </TabPanel>\\n                  ))}</Grid>\\n              </Box>\\n            </Box >\\n          </div>\\n        </Grid >\\n      </Card>\\n    </div >\\n  )\\n}\\n\\n\\nfunction TreeSideBar(props) {\\n  const { staticContent, staticContent: { lookerContent }, classes, demoComponentType, tabContent, tabContentItemIndex, action, apiContent, lookerUser, togglePayWallModal } = props\\n  const sharedFolderId = lookerContent[0].type === 'folder' ? lookerContent[0].id : '';\\n  let treeCounter = 0;\\n  const [selected, setSelected] = useState(2);\\n  const expandedArr = Object.keys(apiContent).length ? [\\\"1\\\", \\\"\\\" + (2 + apiContent[Object.keys(apiContent)[0]].length)] : [];\\n  const [expanded, setExpanded] = useState(expandedArr);\\n\\n  const handleToggle = (event, nodeIds) => {\\n    setExpanded(nodeIds);\\n  }\\n\\n  const handleSelect = (event, nodeIds) => {\\n    setSelected(nodeIds);\\n  };\\n\\n\\n  useEffect(() => {\\n    setExpanded(expandedArr);\\n    if (selected !== 2) setSelected(2)\\n    // let innerTreeItemArray = $(\\\".innerTreeItem\\\");\\n    // console.log('innerTreeItemArray', innerTreeItemArray)\\n    // for (let i = 0; i < innerTreeItemArray.length; i++) {\\n    //   console.log('inside forrr', i)\\n    //   if (innerTreeItemArray[i].classList.contains('Mui-selected')) {\\n    //     console.log('inside iffff')\\n    //     innerTreeItemArray[i].classList.remove('Mui-selected')\\n    //   } else console.log('elllse')\\n    // }\\n  }, [apiContent]);\\n\\n\\n  return (\\n    <TreeView\\n      className={classes.tree}\\n      defaultCollapseIcon={<ExpandMoreIcon />}\\n      defaultExpandIcon={<ChevronRightIcon />}\\n      expanded={expanded}\\n      onNodeToggle={handleToggle}\\n      onNodeSelect={handleSelect}\\n    // multiSelect={false}\\n    >\\n      {apiContent ? Object.keys(apiContent).map((key, outerIndex) => (\\n        <React.Fragment\\n          key={`${validIdHelper(demoComponentType + '-innerFragment-' + outerIndex)}`}>\\n          <TreeItem\\n            key={`${validIdHelper(demoComponentType + '-outerTreeItem-' + outerIndex)}`}\\n            nodeId={\\\"\\\" + (treeCounter += 1)}\\n            // treecounter={treeCounter}\\n            label={_.capitalize(key)}\\n            icon={<Icon className={`fa fa-folder ${classes.icon}`} />}\\n            disabled={apiContent[key].length ? false : true}\\n          >\\n            {\\n              apiContent[key].length ?\\n                apiContent[key].map((item, index) => (\\n                  <TreeItem\\n                    key={`${validIdHelper(demoComponentType + '-innerTreeItem-' + treeCounter)}`}\\n                    nodeId={\\\"\\\" + (treeCounter += 1)}\\n                    treecounter={treeCounter}\\n                    selected={selected === treeCounter}\\n                    className={selected === treeCounter ? `Mui-selected innerTreeItem ${classes.whiteSpaceNoWrap}` : `innerTreeItem ${classes.whiteSpaceNoWrap}`}\\n                    contentid={item.id}\\n                    label={item.folder_id === sharedFolderId &&\\n                      key === 'looks' ?\\n                      <div\\n                        id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                        key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                        className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}\\n                      >\\n                        {/* {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title} */}\\n                        <Grid container>\\n                          <Grid item sm={8} className={`${classes.overflowHidden}`}>\\n                            {item.title}</Grid>\\n                          <Grid item sm={4}>\\n                            <Button\\n                              id={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\\n                              key={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\\n                              size=\\\"small\\\"\\n                              className={`${classes.ml12} ${classes.childHoverVisibility}`}\\n                              onClick={(event) => {\\n                                if (lookerUser.user_attributes.permission_level === 'premium') {\\n                                  action(\\n                                    key.substring(0, key.length - 1),\\n                                    item.id,\\n                                    'explore',\\n                                    item.client_id,\\n                                    tabContent[tabContentItemIndex + 1].id,\\n                                    validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                                  );\\n                                  event.stopPropagation();\\n                                } else {\\n                                  // togglePayWallModal();\\n\\n                                  togglePayWallModal({\\n                                    'show': true,\\n                                    'permissionNeeded': 'explore'\\n                                  });\\n                                }\\n                              }\\n                              }\\n                              color=\\\"default\\\"\\n                            >\\n                              {lookerUser.user_attributes.permission_level === 'premium' ? 'Explore' : <div> <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} />Explore</div>}\\n                            </Button>\\n                          </Grid>\\n                        </Grid>\\n\\n\\n                      </div>\\n                      : key === 'looks' ?\\n                        <div\\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                          className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\\n                          <Grid container>\\n                            <Grid item sm={6} className={`${classes.overflowHidden}`}>\\n                              {/* {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title} */}\\n                              {item.title}\\n                            </Grid>\\n                            <Grid item sm={6}>\\n                              <Button\\n                                id={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\\n                                key={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\\n                                size=\\\"small\\\"\\n                                className={`${classes.ml12} ${classes.childHoverVisibility}`}\\n                                onClick={(event) => {\\n                                  if (lookerUser.user_attributes.permission_level === 'premium') {\\n                                    // setSelected(treeCounter);\\n                                    action(\\n                                      key.substring(0, key.length - 1),\\n                                      item.id,\\n                                      'edit',\\n                                      item.client_id,\\n                                      tabContent[tabContentItemIndex + 1].id,\\n                                      validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                                    );\\n                                    event.stopPropagation();\\n                                  } else {\\n                                    // togglePayWallModal();\\n\\n                                    togglePayWallModal({\\n                                      'show': true,\\n                                      'permissionNeeded': 'explore'\\n                                    });\\n                                  }\\n                                }\\n                                }\\n                                color=\\\"primary\\\"\\n                              >\\n                                Edit\\n                                                                                            </Button>\\n                              <Button\\n                                id={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\\n                                key={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\\n                                size=\\\"small\\\"\\n                                className={`${classes.ml12} ${classes.childHoverVisibility}`}\\n                                onClick={(event) => {\\n                                  if (lookerUser.user_attributes.permission_level === 'premium') {\\n                                    // setSelected(treeCounter);\\n                                    action(\\n                                      key.substring(0, key.length - 1),\\n                                      item.id,\\n                                      'delete',\\n                                      item.client_id,\\n                                      tabContent[tabContentItemIndex + 1].id,\\n                                      validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                                    );\\n                                    event.stopPropagation();\\n                                  } else {\\n                                    // togglePayWallModal();\\n\\n                                    togglePayWallModal({\\n                                      'show': true,\\n                                      'permissionNeeded': 'explore'\\n                                    });\\n                                  }\\n                                }\\n                                }\\n                                color=\\\"secondary\\\"\\n                              >\\n                                Delete\\n                                                                                            </Button>\\n                            </Grid>\\n                          </Grid>\\n\\n                        </div>\\n                        : <Grid container><Grid item sm={12}>{item.title}</Grid></Grid>\\n                    }\\n                    onClick={() => {\\n                      // setSelected(treeCounter)\\n                      action(\\n                        key.substring(0, key.length - 1), item.id)\\n                    }} />\\n\\n                ))\\n                :\\n                ''\\n            }\\n          </TreeItem>\\n\\n        </React.Fragment>\\n      )) : ''}\\n    </TreeView>\\n  )\\n}\";","import { makeStyles } from '@material-ui/core/styles';\nimport { grey, orange } from '@material-ui/core/colors';\n\nconst greyPrimary = grey[400];\nconst greySecondary = grey[100];\nconst orangePrimary = orange[400];\nconst orangeSecondary = orange[100];\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: '8px'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  // table: {\n  //   minWidth: 650,\n  // },\n  // tableContainer: {\n  //   maxHeight: 650,\n  // },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 400\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  bluePrimary: {\n    backgroundColor: 'rgba(69, 149, 236, 1)'\n  },\n  blueSecondary: {\n    backgroundColor: 'rgba(69, 149, 236, .5)',\n  },\n  orangePrimary: {\n    backgroundColor: 'rgba(243, 167, 89, 1)'\n  },\n  orangeSecondary: {\n    backgroundColor: 'rgba(243, 167, 89, .5)'\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  bottomBarSpacer: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  maxHeight600: {\n    maxHeight: 600,\n    overflow: 'scroll'\n  },\n  padding30: {\n    padding: 30\n  },\n  m12: {\n    margin: 12\n  },\n  m6: {\n    margin: 6\n  },\n  height100Percent: {\n    height: '100%',\n    overflow: 'scroll'\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  padding10: {\n    padding: 10\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowYScroll: {\n    overflowY: 'scroll',\n    overflowX: 'hidden'\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  }\n}));","import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport function descendingComparator(a, b, orderBy) {\n    if (a[orderBy] && b[orderBy] && b[orderBy].value < a[orderBy].value) {\n        return -1;\n    }\n    if (a[orderBy] && b[orderBy] && b[orderBy].value > a[orderBy].value) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}","import $ from 'jquery';\nimport _ from 'lodash';\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputLabel, MenuItem, FormControl,\n  Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,\n  TableSortLabel, FormControlLabel, Switch, Chip, Divider\n} from '@material-ui/core'\nimport { ExpandMore, Search, Done } from '@material-ui/icons';\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./QueryBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { TabPanel, a11yProps, descendingComparator, getComparator, stableSort } from './helpers.js';\nimport AppContext from '../../../AppContext';\nconst { validIdHelper, prettifyString } = require('../../../tools');\n\nexport default function QueryBuilder(props) {\n  // console.log('QueryBuilder')\n\n  const topBarBottomBarHeight = 112;\n  const sideBarWidth = 240 + 152; //24 + 24 + 30 + 30 + 12 + 12 + 10 + 10\n  const [value, setValue] = useState(0);\n  const [apiContent, setApiContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const [width, setWidth] = useState((window.innerWidth - sideBarWidth));\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\n  const { togglePayWallModal, show, codeShow, sdk } = useContext(AppContext)\n\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    // call this is filterBar instead to make field chip dynamic\n    // lookerContent.map(lookerContent => {\n    //   setTimeout(() => performLookerApiCalls(lookerContent.queryBody, lookerContent.resultFormat), 100);\n    // })\n    setClientSideCode(rawSampleCode);\n    // setApiContent([])\n  }, [lookerContent, lookerUser])\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setHeight((window.innerHeight - topBarBottomBarHeight))\n      setWidth((window.innerWidth - sideBarWidth))\n    });\n  })\n\n\n  const performLookerApiCalls = async (newQuery, resultFormat) => {\n    // console.log('performLookerApiCalls')\n    // console.log('newQuery', newQuery)\n    // console.log('resultFormat', resultFormat)\n    // console.log('lookerContent', lookerContent)\n    let apiContentCopy = { ...apiContent }\n    apiContentCopy.status = 'running';\n    setApiContent(apiContentCopy)\n\n    let timer = Date.now();\n\n    let lookerCreateQueryResponseData = await sdk.ok(sdk.create_query(newQuery))\n    let lookerCreateTaskResponseData = await sdk.ok(sdk.create_query_task({\n      body: {\n        query_id: lookerCreateQueryResponseData.id,\n        result_format: resultFormat || 'json_detail'//lookerContent[0].resultFormat || 'json'\n      }\n    }))\n\n    let taskInterval = setInterval(async () => {\n      let lookerCheckTaskResponseData = await sdk.ok(sdk.query_task_results(lookerCreateTaskResponseData.id, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }));\n\n      if (lookerCheckTaskResponseData.status === 'complete') {\n        clearInterval(taskInterval);\n        setApiContent(lookerCheckTaskResponseData)\n        // setServerSideCode(lookerCreateTaskResponseData.code)\n      }\n\n      //time out after 30 seconds\n      if ((timer + (30 * 1000)) < Date.now()) {\n        clearInterval()\n        setApiContent([])\n      }\n    }, 1000)\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`\n      ${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowYScroll}`\n      }\n      >\n        <Grid container\n          key={validIdHelper(type)} >\n          <div className={`${classes.root}`}>\n            <Grid item sm={12}>\n              <FilterBar {...props}\n                classes={classes}\n                action={performLookerApiCalls}\n              />\n            </Grid>\n            {apiContent.status === 'running' ?\n              <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                <Card className={`${classes.card} ${classes.flexCentered}`}\n                  elevation={0}\n                  mt={2}\n                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                  <CircularProgress className={classes.circularProgress} />\n                </Card>\n              </Grid>\n              : apiContent.data && apiContent.data.length ?\n                <Box>\n                  <Grid container\n                    spacing={3}\n                    className={`${classes.noContainerScroll}`}>\n                    {codeShow ?\n                      <Grid item sm={6}\n                        className={`${classes.positionFixedTopRight}`}\n                      >\n                        <CodeFlyout {...props}\n                          classes={classes}\n                          lookerUser={lookerUser}\n                          height={height}\n                        />\n                      </Grid> : ''}\n                    <Divider className={classes.divider} />\n                    <Grid item sm={12}>\n                      <Box className={`${classes.w100}`} mt={2}>\n                        < EnhancedTable\n                          {...props}\n                          classes={classes}\n                          rows={apiContent.data}\n                          lookerContent={lookerContent}\n                          width={width}\n                        />\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Box>\n                :\n                <Grid item sm={12} >\n                  <Typography variant=\"h6\" component=\"h6\" className={`${classes.gridTitle} ${classes.textCenter}`}>\n                    No results found, try a new query<br />\n                  </Typography>\n                </Grid>\n            }\n          </div >\n        </Grid >\n      </Card>\n    </div >\n  )\n}\n\n\nfunction FilterBar(props) {\n  // console.log('FilterBar');\n  const { staticContent, staticContent: { lookerContent }, classes, action, lookerUser } = props;\n  let measureCounter = 0;\n  let dimensionCounter = 0;\n\n\n  const initializeFieldChipDataHelper = () => {\n    let initializedFields = lookerContent[0].queryBody.fields.map((item, index) => {\n      return {\n        key: 'fieldChipData' + index,\n        label: prettifyString(item.substring(item.lastIndexOf('.') + 1, item.length)),\n        datalabel: item,\n        selected: item === 'users.state' || item === 'users.country' || item === 'order_items.total_sale_price' ? true : false,\n        fieldType: lookerContent[0].fieldType[item]\n      }\n    })\n    return initializedFields;\n  }\n\n  const [expanded, setExpanded] = useState(true);\n  const [fieldsChipData, setFieldsChipData] = useState(lookerContent[0].queryBody ? initializeFieldChipDataHelper() : '');\n  const [queryModified, setQueryModified] = useState(true); //set to true initially\n  const [queryShouldRun, setQueryShouldRun] = useState(false); //for lookerUser useEffect\n  const [filtersData, setFilterData] = useState(lookerContent[0].queryBody ? Object.keys(lookerContent[0].queryBody.filters).map((key, index) => {\n    return {\n      key: 'filter' + index,\n      label: key,\n      value: lookerContent[0].queryBody.filters[key],\n      type: lookerContent[0].filterType[key]\n    }\n  }) : '')\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  const handleFieldChipClick = (chip, index) => {\n    let updatedFieldsChipData = [...fieldsChipData]\n    updatedFieldsChipData[index].selected = updatedFieldsChipData[index].selected === false ? true : false\n    setFieldsChipData(updatedFieldsChipData)\n    setQueryModified(true)\n  }\n\n  const handleSelectChange = (index, newValue) => {\n    let updatedFiltersData = [...filtersData]\n    updatedFiltersData[index].value = newValue;\n    setFilterData(updatedFiltersData)\n    setQueryModified(true)\n  }\n\n  const handleQuerySubmit = (event) => {\n    if (queryModified || queryShouldRun) {\n      let newFields = fieldsChipData.filter(chip => chip.selected).map(item => item.datalabel);\n      let currentFilters = {}; //needs to be object\n      filtersData.map((item, index) => {\n        currentFilters[item.label] = item.value\n      })\n      let newQueryObj = { ...lookerContent[0].queryBody };\n      newQueryObj.fields = newFields;\n      newQueryObj.filters = currentFilters;\n\n      action(newQueryObj, lookerContent[0].resultFormat);\n\n      setQueryModified(false)\n      setQueryShouldRun(false)\n    } //else console.log('elllse')\n  }\n\n\n\n  useEffect(() => {\n    // console.log('useEffect lookerUser')\n    const lookerUserTimeHorizonMap = {\n      'basic': 'last 182 days',\n      'advanced': 'last 365 days',\n      'premium': 'last 730 days' //before today\n    }\n    let updatedFiltersData = [...filtersData]\n    updatedFiltersData[3].value = lookerUserTimeHorizonMap[lookerUser.user_attributes.permission_level] || \"182 days\";\n    setFilterData(updatedFiltersData);\n    setFieldsChipData(initializeFieldChipDataHelper())\n\n    setQueryShouldRun(true);\n  }, [lookerUser]);\n\n  useEffect(() => {\n    // console.log('useEffect queryShouldRun')\n    if (queryShouldRun) {\n      handleQuerySubmit();\n      setQueryModified(false);\n      setQueryShouldRun(false);\n    }\n  }, [queryShouldRun])\n\n\n  const datePermissionMap = {\n    'basic': [\"1 week\", \"1 month\", \"3 months\", \"last 182 days\"]\n  }\n  datePermissionMap.advanced = [...datePermissionMap.basic, \"last 365 days\"]\n  datePermissionMap.premium = [...datePermissionMap.advanced, \"last 730 days\"]\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} elevation={0}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMore />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Search /><Typography className={`${classes.heading} ${classes.ml12}`}>Build Query:</Typography>\n        {/* <Typography className={classes.heading}>Build Query:</Typography> */}\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Select Metrics:\n      {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'measure' ?\n                      <Chip\n                        key={item.label}\n                        // key={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        measurecounter={measureCounter += 1}\n                        className={item.selected ? `${classes.orangePrimary} ${classes.m6}` : `${classes.m6}`}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <Done className={classes.dBlock} /> : <Done className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Group By:\n                          {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'dimension' ?\n                      <Chip\n                        key={item.label}\n                        dimensioncounter={dimensionCounter += 1}\n                        className={item.selected ? `${classes.bluePrimary} ${classes.m6}` : `${classes.m6}`}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <Done className={classes.dBlock} /> : <Done className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n\n          <Grid item sm={3}>\n            <Typography variant=\"subtitle1\">\n              Filter By:\n                      </Typography>\n            {filtersData.length ? filtersData.map((item, index) => {\n              return (\n                <FormControl className={item.value.length ? classes.formControl : classes.hidden} key={validIdHelper(`${item.label}FormControl`)}>\n                  {\n                    item.type === 'yesno' ?\n                      <>\n                        <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n                        <Select\n                          labelId={validIdHelper(`${item.label}FilterLabel`)}\n                          id={validIdHelper(`${item.label}FilterSelect`)}\n                          value={item.value}\n                          onChange={(event) => handleSelectChange(index, event.target.value)}\n                        >\n                          <MenuItem value=\"Yes\">Yes</MenuItem>\n                          <MenuItem value=\"No\">No</MenuItem>\n                          <MenuItem value=\"All\">All</MenuItem>\n                        </Select>\n                      </>\n                      : item.type === 'date' ?\n                        <>\n                          <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n\n                          <Select\n                            labelId={validIdHelper(`${item.label}FilterLabel`)}\n                            id={validIdHelper(`${item.label}FilterSelect`)}\n                            value={item.value || '6 months'}\n                            onChange={(event) => handleSelectChange(index, event.target.value)}\n                          >\n                            {lookerUser.user_attributes.permission_level ? datePermissionMap[lookerUser.user_attributes.permission_level].map(item => (\n                              <MenuItem key={validIdHelper(item)} value={item}>{_.capitalize(item)}</MenuItem>\n                            )) : ''}\n                          </Select>\n                        </>\n                        : ''\n                  }\n                </FormControl>\n              )\n            }) : ''}\n          </Grid>\n          <Grid item sm={9}>\n            <br />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"large\"\n              onClick={handleQuerySubmit}\n              disabled={queryModified ? false : true}\n            >Run Query</Button></Grid>\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, rows } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {Object.keys(rows[0]).map((key, index) => (\n          <TableCell\n            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            id={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            align={key.numeric ? 'right' : 'left'}\n            padding={key.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === key ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === key}\n              direction={orderBy === key ? order : 'asc'}\n              onClick={createSortHandler(key)}\n            >\n              {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}\n              {orderBy === key ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  // onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nfunction EnhancedTable(props) {\n  const { rows, classes, lookerContent, width } = props;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(Object.keys(rows[0])[0]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return (\n    <div className={`${classes.root} ${classes.padding10}`}>\n      <ApiHighlight classes={classes} >\n        <TableContainer style={{ maxWidth: width }}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              {...props}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      key={validIdHelper('TableRow-' + index)}\n                      id={validIdHelper('TableRow-' + index)}>\n                      {Object.keys(row).map((key, index) => (\n                        <TableCell\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          className={lookerContent[0].fieldType[key] === 'dimension' ? classes.blueSecondary : classes.orangeSecondary}\n                          align=\"right\">\n                          {row[key].rendered ? row[key].rendered : row[key].value}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </ApiHighlight>\n      <Grid container>\n        <Grid item sm={6}>\n          <FormControlLabel\n            control={<Switch checked={dense} onChange={handleChangeDense} />}\n            label=\"Compact\"\n          /></Grid>\n        <Grid item sm={6}>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          /></Grid>\n      </Grid>\n      <div className={classes.bottomBarSpacer} />\n    </div>\n  );\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash';\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport PropTypes from 'prop-types';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputLabel, MenuItem, FormControl,\\n  Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,\\n  TableSortLabel, FormControlLabel, Switch, Chip, Divider\\n} from '@material-ui/core'\\nimport { ExpandMore, Search, Done } from '@material-ui/icons';\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./QueryBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { ApiHighlight } from '../../Highlights/Highlight';\\nimport { TabPanel, a11yProps, descendingComparator, getComparator, stableSort } from './helpers.js';\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper, prettifyString } = require('../../../tools');\\n\\nexport default function QueryBuilder(props) {\\n  // console.log('QueryBuilder')\\n\\n  const topBarBottomBarHeight = 112;\\n  const sideBarWidth = 240 + 152; //24 + 24 + 30 + 30 + 12 + 12 + 10 + 10\\n  const [value, setValue] = useState(0);\\n  const [apiContent, setApiContent] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\\n  const [width, setWidth] = useState((window.innerWidth - sideBarWidth));\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\\n  const { togglePayWallModal, show, codeShow, sdk } = useContext(AppContext)\\n\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  useEffect(() => {\\n    // call this is filterBar instead to make field chip dynamic\\n    // lookerContent.map(lookerContent => {\\n    //   setTimeout(() => performLookerApiCalls(lookerContent.queryBody, lookerContent.resultFormat), 100);\\n    // })\\n    setClientSideCode(rawSampleCode);\\n    // setApiContent([])\\n  }, [lookerContent, lookerUser])\\n\\n  useEffect(() => {\\n    window.addEventListener(\\\"resize\\\", () => {\\n      setHeight((window.innerHeight - topBarBottomBarHeight))\\n      setWidth((window.innerWidth - sideBarWidth))\\n    });\\n  })\\n\\n\\n  const performLookerApiCalls = async (newQuery, resultFormat) => {\\n    // console.log('performLookerApiCalls')\\n    // console.log('newQuery', newQuery)\\n    // console.log('resultFormat', resultFormat)\\n    // console.log('lookerContent', lookerContent)\\n    let apiContentCopy = { ...apiContent }\\n    apiContentCopy.status = 'running';\\n    setApiContent(apiContentCopy)\\n\\n    let timer = Date.now();\\n\\n    let lookerCreateQueryResponseData = await sdk.ok(sdk.create_query(newQuery))\\n    let lookerCreateTaskResponseData = await sdk.ok(sdk.create_query_task({\\n      body: {\\n        query_id: lookerCreateQueryResponseData.id,\\n        result_format: resultFormat || 'json_detail'//lookerContent[0].resultFormat || 'json'\\n      }\\n    }))\\n\\n    let taskInterval = setInterval(async () => {\\n      let lookerCheckTaskResponseData = await sdk.ok(sdk.query_task_results(lookerCreateTaskResponseData.id, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      }));\\n\\n      if (lookerCheckTaskResponseData.status === 'complete') {\\n        clearInterval(taskInterval);\\n        setApiContent(lookerCheckTaskResponseData)\\n        // setServerSideCode(lookerCreateTaskResponseData.code)\\n      }\\n\\n      //time out after 30 seconds\\n      if ((timer + (30 * 1000)) < Date.now()) {\\n        clearInterval()\\n        setApiContent([])\\n      }\\n    }, 1000)\\n  }\\n\\n  return (\\n    <div className={`${classes.root} demoComponent`}\\n      style={{ height }}>\\n      <Card elevation={1} className={`\\n      ${classes.padding30} \\n      ${classes.height100Percent}\\n      ${classes.overflowYScroll}`\\n      }\\n      >\\n        <Grid container\\n          key={validIdHelper(type)} >\\n          <div className={`${classes.root}`}>\\n            <Grid item sm={12}>\\n              <FilterBar {...props}\\n                classes={classes}\\n                action={performLookerApiCalls}\\n              />\\n            </Grid>\\n            {apiContent.status === 'running' ?\\n              <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                <Card className={`${classes.card} ${classes.flexCentered}`}\\n                  elevation={0}\\n                  mt={2}\\n                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                  <CircularProgress className={classes.circularProgress} />\\n                </Card>\\n              </Grid>\\n              : apiContent.data && apiContent.data.length ?\\n                <Box>\\n                  <Grid container\\n                    spacing={3}\\n                    className={`${classes.noContainerScroll}`}>\\n                    {codeShow ?\\n                      <Grid item sm={6}\\n                        className={`${classes.positionFixedTopRight}`}\\n                      >\\n                        <CodeFlyout {...props}\\n                          classes={classes}\\n                          lookerUser={lookerUser}\\n                          height={height}\\n                        />\\n                      </Grid> : ''}\\n                    <Divider className={classes.divider} />\\n                    <Grid item sm={12}>\\n                      <Box className={`${classes.w100}`} mt={2}>\\n                        < EnhancedTable\\n                          {...props}\\n                          classes={classes}\\n                          rows={apiContent.data}\\n                          lookerContent={lookerContent}\\n                          width={width}\\n                        />\\n                      </Box>\\n                    </Grid>\\n                  </Grid>\\n                </Box>\\n                :\\n                <Grid item sm={12} >\\n                  <Typography variant=\\\"h6\\\" component=\\\"h6\\\" className={`${classes.gridTitle} ${classes.textCenter}`}>\\n                    No results found, try a new query<br />\\n                  </Typography>\\n                </Grid>\\n            }\\n          </div >\\n        </Grid >\\n      </Card>\\n    </div >\\n  )\\n}\\n\\n\\nfunction FilterBar(props) {\\n  // console.log('FilterBar');\\n  const { staticContent, staticContent: { lookerContent }, classes, action, lookerUser } = props;\\n  let measureCounter = 0;\\n  let dimensionCounter = 0;\\n\\n\\n  const initializeFieldChipDataHelper = () => {\\n    let initializedFields = lookerContent[0].queryBody.fields.map((item, index) => {\\n      return {\\n        key: 'fieldChipData' + index,\\n        label: prettifyString(item.substring(item.lastIndexOf('.') + 1, item.length)),\\n        datalabel: item,\\n        selected: item === 'users.state' || item === 'users.country' || item === 'order_items.total_sale_price' ? true : false,\\n        fieldType: lookerContent[0].fieldType[item]\\n      }\\n    })\\n    return initializedFields;\\n  }\\n\\n  const [expanded, setExpanded] = useState(true);\\n  const [fieldsChipData, setFieldsChipData] = useState(lookerContent[0].queryBody ? initializeFieldChipDataHelper() : '');\\n  const [queryModified, setQueryModified] = useState(true); //set to true initially\\n  const [queryShouldRun, setQueryShouldRun] = useState(false); //for lookerUser useEffect\\n  const [filtersData, setFilterData] = useState(lookerContent[0].queryBody ? Object.keys(lookerContent[0].queryBody.filters).map((key, index) => {\\n    return {\\n      key: 'filter' + index,\\n      label: key,\\n      value: lookerContent[0].queryBody.filters[key],\\n      type: lookerContent[0].filterType[key]\\n    }\\n  }) : '')\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n\\n  const handleFieldChipClick = (chip, index) => {\\n    let updatedFieldsChipData = [...fieldsChipData]\\n    updatedFieldsChipData[index].selected = updatedFieldsChipData[index].selected === false ? true : false\\n    setFieldsChipData(updatedFieldsChipData)\\n    setQueryModified(true)\\n  }\\n\\n  const handleSelectChange = (index, newValue) => {\\n    let updatedFiltersData = [...filtersData]\\n    updatedFiltersData[index].value = newValue;\\n    setFilterData(updatedFiltersData)\\n    setQueryModified(true)\\n  }\\n\\n  const handleQuerySubmit = (event) => {\\n    if (queryModified || queryShouldRun) {\\n      let newFields = fieldsChipData.filter(chip => chip.selected).map(item => item.datalabel);\\n      let currentFilters = {}; //needs to be object\\n      filtersData.map((item, index) => {\\n        currentFilters[item.label] = item.value\\n      })\\n      let newQueryObj = { ...lookerContent[0].queryBody };\\n      newQueryObj.fields = newFields;\\n      newQueryObj.filters = currentFilters;\\n\\n      action(newQueryObj, lookerContent[0].resultFormat);\\n\\n      setQueryModified(false)\\n      setQueryShouldRun(false)\\n    } //else console.log('elllse')\\n  }\\n\\n\\n\\n  useEffect(() => {\\n    // console.log('useEffect lookerUser')\\n    const lookerUserTimeHorizonMap = {\\n      'basic': 'last 182 days',\\n      'advanced': 'last 365 days',\\n      'premium': 'last 730 days' //before today\\n    }\\n    let updatedFiltersData = [...filtersData]\\n    updatedFiltersData[3].value = lookerUserTimeHorizonMap[lookerUser.user_attributes.permission_level] || \\\"182 days\\\";\\n    setFilterData(updatedFiltersData);\\n    setFieldsChipData(initializeFieldChipDataHelper())\\n\\n    setQueryShouldRun(true);\\n  }, [lookerUser]);\\n\\n  useEffect(() => {\\n    // console.log('useEffect queryShouldRun')\\n    if (queryShouldRun) {\\n      handleQuerySubmit();\\n      setQueryModified(false);\\n      setQueryShouldRun(false);\\n    }\\n  }, [queryShouldRun])\\n\\n\\n  const datePermissionMap = {\\n    'basic': [\\\"1 week\\\", \\\"1 month\\\", \\\"3 months\\\", \\\"last 182 days\\\"]\\n  }\\n  datePermissionMap.advanced = [...datePermissionMap.basic, \\\"last 365 days\\\"]\\n  datePermissionMap.premium = [...datePermissionMap.advanced, \\\"last 730 days\\\"]\\n\\n  return (\\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} elevation={0}>\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMore />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <Search /><Typography className={`${classes.heading} ${classes.ml12}`}>Build Query:</Typography>\\n        {/* <Typography className={classes.heading}>Build Query:</Typography> */}\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        <Grid container spacing={3}>\\n          <Grid item sm={12}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Select Metrics:\\n      {fieldsChipData.length ?\\n                fieldsChipData.map((item, index) => {\\n                  return (\\n                    item.fieldType === 'measure' ?\\n                      <Chip\\n                        key={item.label}\\n                        // key={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        measurecounter={measureCounter += 1}\\n                        className={item.selected ? `${classes.orangePrimary} ${classes.m6}` : `${classes.m6}`}\\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        datalabel={item.label}\\n                        onClick={() => handleFieldChipClick(item, index)}\\n                        icon={item.selected ? <Done className={classes.dBlock} /> : <Done className={classes.dNone} />}\\n                      /> : ''\\n                  )\\n                }) : ''\\n              }<br />\\n            </Typography>\\n          </Grid>\\n          <Grid item sm={12}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Group By:\\n                          {fieldsChipData.length ?\\n                fieldsChipData.map((item, index) => {\\n                  return (\\n                    item.fieldType === 'dimension' ?\\n                      <Chip\\n                        key={item.label}\\n                        dimensioncounter={dimensionCounter += 1}\\n                        className={item.selected ? `${classes.bluePrimary} ${classes.m6}` : `${classes.m6}`}\\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        datalabel={item.label}\\n                        onClick={() => handleFieldChipClick(item, index)}\\n                        icon={item.selected ? <Done className={classes.dBlock} /> : <Done className={classes.dNone} />}\\n                      /> : ''\\n                  )\\n                }) : ''\\n              }<br />\\n            </Typography>\\n          </Grid>\\n\\n          <Grid item sm={3}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Filter By:\\n                      </Typography>\\n            {filtersData.length ? filtersData.map((item, index) => {\\n              return (\\n                <FormControl className={item.value.length ? classes.formControl : classes.hidden} key={validIdHelper(`${item.label}FormControl`)}>\\n                  {\\n                    item.type === 'yesno' ?\\n                      <>\\n                        <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\\n                        <Select\\n                          labelId={validIdHelper(`${item.label}FilterLabel`)}\\n                          id={validIdHelper(`${item.label}FilterSelect`)}\\n                          value={item.value}\\n                          onChange={(event) => handleSelectChange(index, event.target.value)}\\n                        >\\n                          <MenuItem value=\\\"Yes\\\">Yes</MenuItem>\\n                          <MenuItem value=\\\"No\\\">No</MenuItem>\\n                          <MenuItem value=\\\"All\\\">All</MenuItem>\\n                        </Select>\\n                      </>\\n                      : item.type === 'date' ?\\n                        <>\\n                          <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\\n\\n                          <Select\\n                            labelId={validIdHelper(`${item.label}FilterLabel`)}\\n                            id={validIdHelper(`${item.label}FilterSelect`)}\\n                            value={item.value || '6 months'}\\n                            onChange={(event) => handleSelectChange(index, event.target.value)}\\n                          >\\n                            {lookerUser.user_attributes.permission_level ? datePermissionMap[lookerUser.user_attributes.permission_level].map(item => (\\n                              <MenuItem key={validIdHelper(item)} value={item}>{_.capitalize(item)}</MenuItem>\\n                            )) : ''}\\n                          </Select>\\n                        </>\\n                        : ''\\n                  }\\n                </FormControl>\\n              )\\n            }) : ''}\\n          </Grid>\\n          <Grid item sm={9}>\\n            <br />\\n            <Button\\n              color=\\\"primary\\\"\\n              variant=\\\"contained\\\"\\n              size=\\\"large\\\"\\n              onClick={handleQuerySubmit}\\n              disabled={queryModified ? false : true}\\n            >Run Query</Button></Grid>\\n        </Grid>\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel>\\n  )\\n}\\n\\nfunction EnhancedTableHead(props) {\\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, rows } = props;\\n  const createSortHandler = (property) => (event) => {\\n    onRequestSort(event, property);\\n  };\\n\\n  return (\\n    <TableHead>\\n      <TableRow>\\n        {Object.keys(rows[0]).map((key, index) => (\\n          <TableCell\\n            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\\n            id={validIdHelper(key + '-TableHead-TableCell-' + index)}\\n            align={key.numeric ? 'right' : 'left'}\\n            padding={key.disablePadding ? 'none' : 'default'}\\n            sortDirection={orderBy === key ? order : false}\\n          >\\n            <TableSortLabel\\n              active={orderBy === key}\\n              direction={orderBy === key ? order : 'asc'}\\n              onClick={createSortHandler(key)}\\n            >\\n              {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}\\n              {orderBy === key ? (\\n                <span className={classes.visuallyHidden}>\\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\\n                </span>\\n              ) : null}\\n            </TableSortLabel>\\n          </TableCell>\\n        ))}\\n      </TableRow>\\n    </TableHead>\\n  );\\n}\\n\\nEnhancedTableHead.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n  // numSelected: PropTypes.number.isRequired,\\n  onRequestSort: PropTypes.func.isRequired,\\n  // onSelectAllClick: PropTypes.func.isRequired,\\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\\n  orderBy: PropTypes.string.isRequired,\\n  rowCount: PropTypes.number.isRequired,\\n};\\n\\nfunction EnhancedTable(props) {\\n  const { rows, classes, lookerContent, width } = props;\\n  const [order, setOrder] = React.useState('asc');\\n  const [orderBy, setOrderBy] = React.useState(Object.keys(rows[0])[0]);\\n  const [page, setPage] = React.useState(0);\\n  const [dense, setDense] = React.useState(true);\\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\\n\\n  const handleRequestSort = (event, property) => {\\n    const isAsc = orderBy === property && order === 'asc';\\n    setOrder(isAsc ? 'desc' : 'asc');\\n    setOrderBy(property);\\n  };\\n\\n  const handleChangePage = (event, newPage) => {\\n    setPage(newPage);\\n  };\\n\\n  const handleChangeRowsPerPage = (event) => {\\n    setRowsPerPage(parseInt(event.target.value, 10));\\n    setPage(0);\\n  };\\n\\n  const handleChangeDense = (event) => {\\n    setDense(event.target.checked);\\n  };\\n\\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\\n  return (\\n    <div className={`${classes.root} ${classes.padding10}`}>\\n      <ApiHighlight classes={classes} >\\n        <TableContainer style={{ maxWidth: width }}>\\n          <Table\\n            className={classes.table}\\n            aria-labelledby=\\\"tableTitle\\\"\\n            size={dense ? 'small' : 'medium'}\\n            aria-label=\\\"enhanced table\\\"\\n          >\\n            <EnhancedTableHead\\n              {...props}\\n              classes={classes}\\n              order={order}\\n              orderBy={orderBy}\\n              onRequestSort={handleRequestSort}\\n              rowCount={rows.length}\\n            />\\n            <TableBody>\\n              {stableSort(rows, getComparator(order, orderBy))\\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\\n                .map((row, index) => {\\n                  return (\\n                    <TableRow\\n                      hover\\n                      key={validIdHelper('TableRow-' + index)}\\n                      id={validIdHelper('TableRow-' + index)}>\\n                      {Object.keys(row).map((key, index) => (\\n                        <TableCell\\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}\\n                          className={lookerContent[0].fieldType[key] === 'dimension' ? classes.blueSecondary : classes.orangeSecondary}\\n                          align=\\\"right\\\">\\n                          {row[key].rendered ? row[key].rendered : row[key].value}\\n                        </TableCell>\\n                      ))}\\n                    </TableRow>\\n                  );\\n                })}\\n              {emptyRows > 0 && (\\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\\n                  <TableCell colSpan={6} />\\n                </TableRow>\\n              )}\\n            </TableBody>\\n          </Table>\\n        </TableContainer>\\n      </ApiHighlight>\\n      <Grid container>\\n        <Grid item sm={6}>\\n          <FormControlLabel\\n            control={<Switch checked={dense} onChange={handleChangeDense} />}\\n            label=\\\"Compact\\\"\\n          /></Grid>\\n        <Grid item sm={6}>\\n          <TablePagination\\n            rowsPerPageOptions={[5, 10, 25, 50]}\\n            component=\\\"div\\\"\\n            count={rows.length}\\n            rowsPerPage={rowsPerPage}\\n            page={page}\\n            onChangePage={handleChangePage}\\n            onChangeRowsPerPage={handleChangeRowsPerPage}\\n          /></Grid>\\n      </Grid>\\n      <div className={classes.bottomBarSpacer} />\\n    </div>\\n  );\\n}\";","import _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppContext from '../../AppContext';\nimport {\n  Modal, Fade, Grid, Paper, Card, CardContent, CardActions, Button, Typography, Chip, Divider, List, ListItem, ListItemAvatar, Avatar, ImageIcon, ListItemText\n\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab'\n\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport CheckIcon from '@material-ui/icons/Check';\nimport LookerUserPermissions from '../../lookerUserPermissions.json';\nconst { validIdHelper } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 1000,\n    height: 604,\n    overflow: 'scroll',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    // height: 520,\n    overflow: 'scroll',\n    cursor: 'pointer',\n    '&:hover': {\n      transform: 'scale(1.05)',\n      transition: 'transform .2s'\n    }\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  padding15: {\n    padding: 15\n  },\n  divider: {\n    marginTop: 15,\n    marginBottom: 15,\n    color: '#fff'\n  },\n  basic: {\n\n  },\n  advanced: {\n\n  },\n  premium: {\n    // backgroundColor: '#5F6BD8',\n    // color: '#ffffff'\n  },\n  font75: {\n    fontSize: '.75em'\n  },\n  font875: {\n    // fontSize: '.875em'\n  },\n  padding30: {\n    padding: 30\n  }\n}));\n\nfunction getModalStyle() {\n  const top = 10 //+ rand();\n  const left = 50 //+ rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${left}%, -${top}%)`,\n  };\n}\n\n\nexport function MonetizationModal({ props, switchLookerUser }) {\n  const { payWallModal, togglePayWallModal, lookerUser } = useContext(AppContext);\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n\n  const modalListMap = {\n    'basic': [\n      '6 months of order data history',\n      'Atom Merchant Dashboards',\n      'Download PDFs, CSVs'\n    ],\n    'advanced': [\n      'Full year of order data history',\n      'Drill to row level information',\n      'Download row level information',\n      'Schedule dashboards for delivery (to you or others)',\n      'Set alerts and key threshold notifications'],\n    'premium': [\n      '2 Full years of order data history',\n      'Analyze your own data and save custom reports',\n      'View premium level, productivity enhancing reports',\n      'Share your reports with colleagues in Atom',\n      'Text message alerts',\n      // 'Notify active shoppers on Atom',\n      // 'Apply Atom’s advanced AI insights to stay ahead of trends'\n    ]\n  }\n\n\n  return (\n    < Modal\n      className={`${classes.modal} `}\n      open={payWallModal.show || false}\n      onClose={togglePayWallModal}\n    >\n      <Fade in={payWallModal.show || false}>\n        <div\n          style={modalStyle}\n          className={`${classes.paper} ${classes.padding30}`}>\n          <Grid container\n            spacing={3}>\n            {Object.keys(LookerUserPermissions).map(key => {\n              return (\n                <Grid item sm={4}\n                  key={validIdHelper(`monetizationModal-gridItem-${key}`)}\n                >\n                  <Card className={`${classes.card} ${classes[key]}`}\n                    elevation={1}\n                    style={key === lookerUser.user_attributes.permission_level ? {\n                      // transform: 'scale(1.05)',\n                      // transition: 'transform .2s',\n                      backgroundColor: '#5F6BD8',\n                      color: '#ffffff',\n                      height: 519\n                    } : {\n                        height: 519\n                      }}\n                    onClick={() => {\n                      switchLookerUser(key, 'permission')\n                      togglePayWallModal()\n                    }}>\n                    <CardContent>\n                      <Typography variant=\"h6\" display=\"justify\">\n                        {_.capitalize(key)}\n                      </Typography>\n                      <Typography\n                        display=\"justify\">\n                        <Rating\n                          name=\"read-only\"\n                          value={key === 'basic' ? \"3\" : key === \"advanced\" ? \"4\" : \"5\"}\n                          readOnly /></Typography>\n                      <Typography variant=\"subtitle1\" style={{ fontStyle: 'italic' }}>\n                        {key === 'basic' ?\n                          'Drive your business with clear KPIs' :\n                          key === 'advanced' ?\n                            'Deeper insights, operations' :\n                            'Drive your business with Atom'\n                        }\n                      </Typography>\n\n                      <Divider className={`${classes.divider} `} />\n\n                      <List className={classes.root}>\n                        {\n                          modalListMap[key].map((item, index) => (\n                            <ListItem dense={true}\n                              className={classes.font875}\n                              key={`monetizationModal-ListItem-${key}-${index}`}\n                            >\n                              <ListItemIcon\n                              >\n                                <CheckIcon fontSize=\"small\" />\n                              </ListItemIcon>\n                              <ListItemText primary={item} />\n                            </ListItem>\n                          ))\n                        }\n                      </List>\n                    </CardContent>\n                    <CardActions disableSpacing={false}>\n                      <Button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        // disabled={key === lookerUser.user_attributes.permission_level ? true : false}\n                        fullWidth\n                        onClick={() => {\n                          switchLookerUser(key, 'permission')\n                          togglePayWallModal()\n                        }}\n                        style={key === lookerUser.user_attributes.permission_level ? { color: '#ffffff', borderColor: \"#ffffff\" } : {}}>\n                        {key === lookerUser.user_attributes.permission_level ? \"Active\" :\n                          Object.keys(modalListMap).indexOf(lookerUser.user_attributes.permission_level) < Object.keys(modalListMap).indexOf(key) ?\n                            'Upgrade' :\n                            'Switch'}\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              )\n            })}\n          </Grid>\n        </div >\n      </Fade >\n    </Modal >\n  );\n}\n","import _ from 'lodash'\n// import $ from 'jquery';\nimport React, { Component } from 'react'\nimport clsx from 'clsx';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Drawer, CssBaseline, AppBar, Toolbar, Typography,\n  Divider, IconButton, Tabs, Tab, Icon, Box, Avatar,\n  ListSubheader, List, ListItem, ListItemIcon, ListItemText,\n  Badge, FormControlLabel, Switch, Button\n} from '@material-ui/core/';\n\nimport { AddAlert, ShowChart, VisibilityOutlined, DateRangeOutlined, Search, FindInPage, Code, TableChartOutlined, LibraryBooksOutlined, Menu, ChevronLeft } from '@material-ui/icons';\nimport HomeIcon from '@material-ui/icons/Home'; //can't reuse home name\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, grey } from '@material-ui/core/colors';\nimport UserMenu from './Material/UserMenu';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport UsecaseContent from '../usecaseContent.json';\nimport SplashPage from './Demo/SplashPage/SplashPage';\nimport Dashboard from './Demo/Dashboard/Dashboard';\nimport CustomVis from './Demo/CustomVis/CustomVis';\nimport ReportBuilder from './Demo/ReportBuilder/ReportBuilder';\nimport QueryBuilder from './Demo/QueryBuilder/QueryBuilder';\nimport AppContext from '../AppContext';\n// import { HighlightSourcesLegend } from './HighlightSourcesLegend';\nimport style from 'react-syntax-highlighter/dist/esm/styles/hljs/agate';\nimport './Home.css'; //needed for iframe height\nimport { MonetizationModal } from './Demo/MonetizationModal';\nimport BottomBar from './Material/BottomBar';\nimport LookerUserPermissions from '../lookerUserPermissions.json';\nimport { lookerUserTimeHorizonMap } from '../App';\n\n\n\n\nconst drawerWidth = 240;\nconst { validIdHelper } = require('../tools');\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: 'rgb(229, 229, 229)'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    zIndex: 1201,\n    backgroundColor: \"#343D4E\"\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    borderRight: 'none',\n    backgroundColor: 'transparent'\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    borderRight: 'none',\n    backgroundColor: 'transparent'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n    // backgroundColor: '#343D4E',\n    // color: '#ffff'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  relative: {\n    position: 'relative'\n  },\n  absolute: {\n    position: 'absolute'\n  },\n  right0: {\n    right: 0\n  },\n  top0: {\n    top: 0\n  },\n  right24: {\n    right: 24\n  },\n  top24: {\n    top: 24\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  mr12: {\n    marginRight: 12\n  },\n  mt12: {\n    marginTop: 12\n  },\n  highlightLegend: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2),\n    zIndex: 1200\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400\n  },\n  parentHoverVisibility: {\n    '&:hover $childHoverVisibility': {\n      visibility: 'visible'\n    }\n\n  },\n  childHoverVisibility: {\n    visibility: 'hidden'\n  },\n  fontSize1em: {\n    fontSize: '1em'\n  },\n  padding10: {\n    padding: 10\n  },\n  mt5: {\n    marginTop: 5\n  },\n  mb5: {\n    marginBottom: 5\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  list: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: 'transparent'\n    // theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  mrAuto: {\n    marginRight: 'auto'\n  },\n  appBarBottom: {\n    top: 'auto',\n    bottom: 0,\n    // backgroundColor: 'transparent'\n  },\n  hidden: {\n    visibility: 'hidden'\n  },\n  roundedTab: {\n    borderRadius: '0 100px 100px 0'\n  },\n  paddingBottom30: {\n    paddingBottom: 30\n  },\n  mtAuto: {\n    marginTop: 'auto'\n  },\n  mb10: {\n    marginBottom: 10\n  }\n});\n\nconst defaultTheme = createMuiTheme({})\nconst atomTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[900],\n    },\n    secondary: {\n      main: grey[400],\n    },\n  },\n})\n\nconst vidlyTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500],\n    },\n  },\n})\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawerOpen: window.innerWidth > 768 ? true : false, //true,\n      drawerTabValue: 0,\n      activeTabValue: 0,\n      activeUsecase: '',\n      appLayout: '',\n      highlightShow: false,\n      payWallModal: {},\n      selectedMenuItem: '',\n      renderedDemoComponents: [],\n      codeShow: false,\n    }\n  }\n\n  togglePayWallModal = (modalContent) => {\n    this.setState({ payWallModal: { ...modalContent } })\n  }\n\n  toggleHighlightShow = () => {\n    // if (this.state.codeShow) this.toggleCodeShow()\n    this.setState({ highlightShow: !this.state.highlightShow })\n  }\n\n  toggleCodeShow = () => {\n    // console.log('toggleCodeShow')\n    // console.log('000 toggleCodeShthis.state.codeShow', this.state.codeShow)\n\n    this.setState({ codeShow: !this.state.codeShow })\n    // console.log('1111 toggleCodeShthis.state.codeShow', this.state.codeShow)\n  }\n\n  handleTabChange = newValue => {\n    this.setState({\n      activeTabValue: newValue\n    })\n  }\n\n\n\n  handleDrawerChange = (open) => {\n    this.setState({\n      drawerOpen: open\n    })\n  }\n\n  handleMenuItemSelect = (newValue, fromSplash) => {\n    // console.log('handleMenuItemSelect')\n    this.handleTabChange(0)\n\n    if (this.state.highlightShow) this.toggleHighlightShow()\n    if (this.state.codeShow) this.toggleCodeShow()\n\n    let selectedMenuItemValue = ''\n    if (fromSplash) {\n      UsecaseContent[this.state.activeUsecase].demoComponents.map(item => {\n        if (item.type !== \"splash page\") {\n          item.lookerContent.map(lookerContentItem => {\n            if (lookerContentItem.id === newValue) {\n              selectedMenuItemValue = validIdHelper(item.type + lookerContentItem.id)\n            }\n          })\n        }\n      })\n    } else selectedMenuItemValue = newValue;\n\n    let renderedDemoComponentsCopy = [...this.state.renderedDemoComponents]\n    if (renderedDemoComponentsCopy.indexOf(selectedMenuItemValue) == -1) renderedDemoComponentsCopy.unshift(selectedMenuItemValue)\n\n    this.setState((prevState) => ({\n      selectedMenuItem: selectedMenuItemValue,\n      renderedDemoComponents: [...renderedDemoComponentsCopy]\n    }))\n  };\n\n  componentDidMount(props) {\n\n    // console.log('Home componentDidMount')\n    // console.log('this.props', this.props)\n\n    let { usecaseFromUrl } = this.props || 'atom';\n\n    this.setState({\n      activeUsecase: usecaseFromUrl,\n      appLayout: UsecaseContent[usecaseFromUrl].layout || 'left-sidebar'\n    }, () => {\n      LookerEmbedSDK.init(`https://${this.props.lookerHost}.looker.com`, '/auth');\n    })\n\n    window.addEventListener(\"resize\", () => {\n      // console.log('resize event')\n      this.setState({ drawerOpen: window.innerWidth > 768 ? true : false })\n    });\n\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log('componentDidUpdate')\n    let prevPermissionLevel = prevProps.lookerUser.user_attributes.permission_level;\n    let currPermissionLevel = this.props.lookerUser.user_attributes.permission_level;\n    let prevUserBrand = prevProps.lookerUser.user_attributes.brand;\n    let currUserBrand = this.props.lookerUser.user_attributes.brand;\n\n    if ((prevPermissionLevel !== currPermissionLevel) || (prevUserBrand !== currUserBrand)) {\n      // console.log('we are inside this iffff')\n      LookerEmbedSDK.init(`https://${this.props.lookerHost}.looker.com`, '/auth');\n      this.setState({\n        renderedDemoComponents: [this.state.selectedMenuItem]\n      })\n    }\n  }\n\n  handleUserMenuSwitch = async (newValue, property) => {\n    // console.log('handleUserMenuSwitch')\n    // console.log('newValue', newValue)\n    // console.log('property', property)\n    //eg to review this 9/8\n    let newLookerUser = { ...this.props.lookerUser }\n    // console.log('new looker user',newLookerUser)\n    if (property === 'brand') {\n      newLookerUser.user_attributes.brand = newValue\n    } else if (property === 'permission') {\n      // console.log('permission',newValue)\n      newLookerUser.permissions = LookerUserPermissions[newValue] || LookerUserPermissions['basic']\n      newLookerUser.user_attributes.permission_level = newValue\n      newLookerUser.user_attributes.time_horizon = lookerUserTimeHorizonMap[newValue]\n    }\n    const x = await fetch('/updatelookeruser', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newLookerUser)\n    })\n    // console.log(x)\n\n    this.setState({\n      renderedDemoComponents: [this.state.selectedMenuItem]\n    }, () => {\n      if (property === 'brand') {\n        this.props.switchUserAttributeBrand(newValue);\n      } else if (property === 'permission') {\n        this.props.switchLookerUser(newValue);\n      }\n    })\n\n  }\n\n\n\n\n  render() {\n\n    //how to make this dynamic????\n    const demoComponentMap = {\n      \"splashpage19\": SplashPage,\n      \"customfilter5\": Dashboard,\n      \"simpledashboard9\": Dashboard,\n      \"customfilter1\": Dashboard,\n      \"customvis\": CustomVis,\n      \"querybuilderexplorelite\": QueryBuilder,\n      \"reportbuilder14\": ReportBuilder,\n    };\n\n    const demoComponentKeyMap = [\"splashpage19\",\n      \"customfilter5\",\n      \"simpledashboard9\",\n      \"customfilter1\",\n      \"customvis\",\n      \"querybuilderexplorelite\",\n      \"reportbuilder14\"\n    ]\n\n    const themeMap = {\n      \"atom\": atomTheme,\n      \"vidly\": vidlyTheme\n    }\n\n    const { drawerTabValue, drawerOpen, activeTabValue, activeUsecase, selectedMenuItem, renderedDemoComponents } = this.state;\n    const { handleTabChange, handleMenuItemSelect, handleDrawerChange } = this;\n    const { classes, activeCustomization, lookerUser, applySession, lookerUserAttributeBrandOptions, lookerHost, userProfile, sdk } = this.props\n\n    // console.log('accessToken', accessToken)\n\n\n    // Use Lodash to sort array by 'name'\n    let orderedDemoComponentsForMenu = activeUsecase ? _.orderBy(UsecaseContent[activeUsecase].demoComponents, ['menuCategory'], ['asc']) : [];\n    let orderedDemoComponentsForMenuObj = {};\n    let expandedTreeItemsArr = [];\n    let cumulativePusher = 0;\n    orderedDemoComponentsForMenu.map((item, index) => {\n      if (orderedDemoComponentsForMenuObj.hasOwnProperty(item.menuCategory)) {\n        orderedDemoComponentsForMenuObj[item.menuCategory] = [...orderedDemoComponentsForMenuObj[item.menuCategory], item]\n      } else {\n        orderedDemoComponentsForMenuObj[item.menuCategory] = [item];\n        cumulativePusher += 1;\n        expandedTreeItemsArr.push(\"\" + (index + cumulativePusher));\n      }\n    })\n\n\n    if (activeUsecase && !selectedMenuItem.length) {\n      let selectedMenuItemVal =\n        UsecaseContent[activeUsecase].demoComponents[0].lookerContent[0].id ?\n          validIdHelper(UsecaseContent[activeUsecase].demoComponents[0].type + UsecaseContent[activeUsecase].demoComponents[0].lookerContent[0].id) :\n          validIdHelper(UsecaseContent[activeUsecase].demoComponents[0].type)\n      this.setState({\n        selectedMenuItem: selectedMenuItemVal,\n        renderedDemoComponents: [selectedMenuItemVal]\n      }, () => {\n      })\n    }\n\n    return (\n      <div className={classes.root} >\n        <AppContext.Provider value={\n          {\n            show: this.state.highlightShow,\n            toggleShow: this.toggleHighlightShow,\n            payWallModal: this.state.payWallModal,\n            togglePayWallModal: this.togglePayWallModal,\n            lookerUser,\n            userProfile,\n            codeShow: this.state.codeShow,\n            toggleCodeShow: this.toggleCodeShow,\n            lookerHost,\n            sdk,\n            atomTheme: atomTheme\n          }\n        } >\n          <ThemeProvider theme={activeUsecase ? themeMap[activeUsecase] : defaultTheme}>\n            <CssBaseline />\n            <TopBar {...this.props}\n              classes={classes}\n              activeUsecase={activeUsecase}\n              lookerUser={lookerUser}\n              applySession={applySession}\n              lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions}\n              handleUserMenuSwitch={this.handleUserMenuSwitch}\n              handleDrawerChange={this.handleDrawerChange}\n              drawerOpen={drawerOpen} />\n            <Drawer\n              className={classes.drawer}\n              variant=\"persistent\"\n              anchor=\"left\"\n              open={drawerOpen}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <div className={classes.drawerHeader}>\n                <IconButton onClick={() => handleDrawerChange(false)}>\n                  <ChevronLeft />\n                </IconButton>\n              </div>\n\n              {Object.keys(orderedDemoComponentsForMenuObj).length ?\n                <MenuList {...this.props}\n                  classes={classes}\n                  activeUsecase={activeUsecase}\n                  orderedDemoComponentsForMenuObj={orderedDemoComponentsForMenuObj}\n                  selectedMenuItem={selectedMenuItem}\n                  handleMenuItemSelect={handleMenuItemSelect}\n                /> : ''}\n\n              <MonetizationModal\n                switchLookerUser={this.handleUserMenuSwitch}\n              />\n              <BottomBar classes={classes} lookerUser={lookerUser} />\n            </Drawer>\n            <main\n              className={clsx(classes.content, {\n                [classes.contentShift]: drawerOpen,\n              })}\n            >\n              <div className={classes.drawerHeader} />\n              {activeUsecase ?\n                UsecaseContent[activeUsecase].demoComponents.map((item, index) => {\n                  const key = item.lookerContent[0].id ? validIdHelper(item.type + item.lookerContent[0].id) : validIdHelper(item.type);\n                  const DemoComponent = demoComponentMap[key];\n                  return (\n                    <React.Fragment\n                      key={validIdHelper(`outerFragment-${item.type}-${index}`)}>\n                      {renderedDemoComponents.indexOf(key) > -1 ?\n                        <Box key={validIdHelper(`box-${item.type}-${index}`)}\n                          className={key === selectedMenuItem ? `` : `${classes.hide}`}\n                        >\n                          {/* {key === selectedMenuItem ? */}\n                          <DemoComponent\n                            key={validIdHelper(`demoComponent-${item.type}-${index}`)}\n                            staticContent={item}\n                            handleMenuItemSelect={handleMenuItemSelect}\n                            activeTabValue={activeTabValue}\n                            handleTabChange={handleTabChange}\n                            lookerUser={lookerUser}\n                            activeUsecase={activeUsecase}\n                            lookerHost={lookerHost}\n                            userProfile={userProfile}\n                          />\n                          {/* : ''} */}\n\n                        </Box> : ''}\n                    </React.Fragment>)\n                }) :\n                ''\n              }\n            </main >\n            {/* <BottomBar classes={classes} lookerUser={lookerUser} /> */}\n          </ThemeProvider>\n        </AppContext.Provider>\n      </div >\n    )\n  }\n}\nexport default withStyles(styles)(Home);\n\nfunction TopBar(props) {\n  const { classes, activeUsecase, lookerUser, applySession, lookerUserAttributeBrandOptions, handleUserMenuSwitch, drawerOpen, handleDrawerChange } = props\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar)}\n    // className={clsx(classes.appBar, {\n    //   [classes.appBarShift]: drawerOpen,\n    // })}\n    >\n      <Toolbar>\n\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={() => handleDrawerChange(!drawerOpen)}\n          edge=\"start\"\n        // className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n        >\n          {drawerOpen ? <ChevronLeft /> : <Menu />}\n          {/* <Menu /> */}\n        </IconButton>\n\n        {activeUsecase ?\n          <Avatar alt=\"Icon\"\n            src={require(`../images/${activeUsecase}.svg`)}\n            variant=\"square\"\n          /> : ''}\n\n        <Badge badgeContent={3} color=\"error\" className={`${classes.mlAuto} ${classes.mr12} `} >\n          <AddAlert />\n        </Badge>\n        <UserMenu\n          lookerUser={lookerUser}\n          onLogoutSuccess={applySession}\n          lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions}\n          handleUserMenuSwitch={handleUserMenuSwitch}\n        />\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nfunction MenuList(props) {\n  // const { toggleShow } = useContext(AppContext)\n  // const { show } = useContext(AppContext)\n  // const { codeShow } = useContext(AppContext)\n  const { classes, activeUsecase, orderedDemoComponentsForMenuObj, selectedMenuItem, handleMenuItemSelect } = props\n  const demoComponentIconMap = {\n    \"splashpage19\": HomeIcon,\n    \"customfilter5\": VisibilityOutlined,\n    \"simpledashboard9\": ShowChart,\n    \"customfilter1\": TableChartOutlined,\n    \"customvis\": DateRangeOutlined,\n    \"querybuilderexplorelite\": Search,\n    \"reportbuilder14\": LibraryBooksOutlined,\n  }\n\n  return (<List\n    component=\"nav\"\n    aria-labelledby=\"nested-list-subheader\"\n    className={classes.list}\n  >\n    {activeUsecase ? Object.keys(orderedDemoComponentsForMenuObj).map((outerItem, outerIndex) => {\n      return (\n        < React.Fragment\n          key={`${validIdHelper(outerItem + '-menuList-' + outerIndex)}`}>\n          <ListItem\n            key={`${validIdHelper(outerItem + '-outerListItem-' + outerIndex)}`}\n          // className={'roundedTab'}\n          >\n            <ListItemText primary={outerItem === 'home' ? '' : _.capitalize(outerItem)} />\n          </ListItem>\n          < List component=\"div\" disablePadding\n            key={`${validIdHelper(outerItem + '-innerList-' + outerIndex)}`}>\n            {orderedDemoComponentsForMenuObj[outerItem].map((item, innerIndex) => {\n              const key = item.lookerContent[0].id ? validIdHelper(item.type + item.lookerContent[0].id) : validIdHelper(item.type);\n              const MatchingIconComponent = demoComponentIconMap[key]\n\n              return (\n                <ListItem\n                  button\n                  className={`${classes.nested} ${classes.roundedTab}`}\n                  key={`${validIdHelper(outerItem + '-innerListItem-' + innerIndex)}`}\n                  onClick={\n                    () => handleMenuItemSelect(validIdHelper(item.lookerContent[0].id ? item.type + item.lookerContent[0].id : item.type))\n                  }\n                  selected={validIdHelper(item.lookerContent[0].id ? item.type + item.lookerContent[0].id : item.type) === selectedMenuItem}\n                >\n                  <ListItemIcon>\n                    <MatchingIconComponent />\n                  </ListItemIcon>\n                  <ListItemText primary={_.capitalize(item.label)} />\n                </ListItem>\n              )\n            })}\n          </List>\n        </React.Fragment>\n      )\n    }) : ''\n    }\n  </List >\n  )\n}","import _ from 'lodash'\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, CardActions, CardContent, Typography } from '@material-ui/core'\nimport { grey, orange } from '@material-ui/core/colors';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport './Home.css';\nconst { validIdHelper } = require('../tools');\nconst lightGrey = grey[200];\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  card: {\n    minWidth: 350,\n    minHeight: 500,\n    left: '75%',\n    top: '50%',\n    transform: `translate(-75%, -50%)`,\n    position: 'absolute',\n    textAlign: 'center',\n    backgroundColor: lightGrey\n  },\n  h100: {\n    height: '100%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  actions: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  cardCopy: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: `translate(-50%, -50%)`,\n    margin: '0',\n    width: '80%',\n  }\n}));\n\n\nexport default function SignIn(props) {\n\n  // console.log('SignIn')\n  // console.log('props', props)\n\n  const { googleClientId, onSuccess, onFailure, usecaseFromUrl } = props;\n  // console.log('usecaseFromUrl', usecaseFromUrl)\n  const classes = useStyles();\n  const backgroundImageInt = Math.floor(Math.random() * 4) + 1;\n  const backgroundImage = require(`../images/${usecaseFromUrl}_background${backgroundImageInt}.jpg`);\n  const logoImage = require(`../images/${usecaseFromUrl}_logo_black.svg`)\n\n  return (\n    <div className={`${classes.root} demoComponent ${classes.h100}`}>\n      <Grid container\n        key={validIdHelper('sign in page')}\n        className={`${classes.h100}`}>\n        <Grid item sm={12} className={'sign-in-background-img'}\n          style={{\n            backgroundImage: `url(${backgroundImage})`,\n            backgroundSize: 'cover'\n          }}\n        >\n          <Card className={classes.card}>\n            <div className={classes.cardCopy}>\n              <img\n                src={logoImage}\n              />\n              <CardContent >\n                <Typography variant=\"h5\" component=\"h2\">\n                  Welcome\n                            </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  Please sign in to access <br /> your merchant portal\n                            </Typography>\n              </CardContent>\n              <CardActions className={`${classes.actions}`} >\n                <GoogleLogin\n                  clientId={googleClientId}\n                  buttonText=\"Login\"\n                  onSuccess={onSuccess}\n                  onFailure={onSuccess}\n                  cookiePolicy={'single_host_origin'}\n                />\n              </CardActions>\n            </div>\n          </Card>\n        </Grid>\n      </Grid>\n    </div >\n  )\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\n\nclass Customizations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.editCustomization = this.editCustomization.bind(this);\n        this.applyCustomization = this.applyCustomization.bind(this);\n        this.state = {\n            customizations: this.props.customizations,\n            isOrdered: null\n        }\n    }\n\n    componentDidMount() {\n        // console.log('Customize componentDidMount')\n        // console.log('this.props', this.props)\n    }\n\n    editCustomization(customizationIndex) {\n        this.props.editCustomization(customizationIndex)\n        this.props.history.push('/customize/edit')\n    }\n\n    applyCustomization(customizationIndex) {\n        this.props.applyCustomization(customizationIndex)\n        this.props.history.push('/home') //customize\n    }\n\n    sortByCreatedDate() {\n        let { isOrdered } = this.state\n        let sortedCustomizations;\n        if (isOrdered === null || isOrdered === \"DESC\") {\n            sortedCustomizations = this.state.customizations.sort((a, b) => (a.date > b.date) ? 1 : -1)\n            this.setState({\n                isOrdered: \"ASC\"\n            })\n        } else if (isOrdered === \"ASC\") {\n            sortedCustomizations = this.state.customizations.sort((a, b) => (a.date > b.date) ? -1 : 1)\n            this.setState({\n                isOrdered: \"DESC\"\n            })\n\n        }\n        this.setState({\n            customizations: sortedCustomizations\n        })\n    }\n\n    render() {\n        const { activeCustomization } = this.props\n        const { customizations } = this.state\n        const { isOrdered } = this.state\n        return (\n            <div className=\"home container p-5 position-relative\">\n                <div className=\"row pt-5\">\n                    <div className=\"col-sm-12\">\n                        <h1>Customizations</h1>\n                        <table className=\"table pt-3 mt-3\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\" className=\"cursor\" onClick={() => this.sortByCreatedDate()}><a>Last Saved {isOrdered === null ? '' : isOrdered === \"ASC\" ? '∧' : '∨'}</a></th>\n                                    <th scope=\"col\">Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {customizations.map((customization, index) => {\n                                    return (\n                                        <tr key={customization.id} id={customization.id} index={index} >\n                                            <td >{customization.companyName}</td>\n                                            <td >{Moment(customization.date).format('LLL')}</td>\n                                            <td>\n                                                <span className=\"badge badge-info p-3 mr-2\">Active</span>\n                                                <button type=\"button\" className=\"btn btn-primary mr-2\" data-index={index} onClick={() => this.applyCustomization(index)}>Apply</button>\n                                                <button type=\"button\" className=\"btn btn-secondary mr-2\" data-index={index} onClick={() => this.editCustomization(index)}>Edit</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                        <Link to='/customize/edit'>\n                            <button type=\"button\" className=\"btn btn-primary\">New Customization</button>\n                        </Link>\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}\nexport default Customizations","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nlet emptyCustomizationObj = {\n    id: '',\n    date: '',\n    salesforceUrl: '',\n    companyName: '',\n    logoUrl: ''\n}\n\nfunction prettifyKey(key) {\n    switch (key) {\n        case 'salesforceUrl':\n            return 'Salesforce Url';\n            break;\n        case 'companyName':\n            return 'Company Name';\n            break;\n        case 'logoUrl':\n            return 'Logo Url';\n            break;\n        default:\n            return null;\n            break;\n    }\n}\n\nclass NewCustomization extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        const { indexOfCustomizationToEdit, customizations } = this.props\n        this.state = {\n            companyName: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].companyName : '',\n            logoUrl: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].logoUrl : '',\n            salesforceUrl: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].salesforceUrl : '',\n            validSalesforceUrl: indexOfCustomizationToEdit ? this.validateSalesforceUrl(customizations[indexOfCustomizationToEdit].salesforceUrl) : false,\n            industry: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].industry : '',\n        }\n    }\n\n    componentDidMount() {\n        this.salesforceUrlInput.focus();\n    }\n\n    componentWillUnmount() {\n        // console.log('NewCustomization componentWillUnmount')\n        this.props.cancelIndexOfCustomizationToEdit()\n    }\n\n    handleSubmit(event) {\n        // console.log('handleSubmit')\n        event.preventDefault();\n        const data = new FormData(event.target);\n        let objForBody = {}\n        for (var [key, value] of data.entries()) {\n            objForBody[key] = value\n        }\n        this.props.saveCustomization(objForBody)\n        setTimeout(() => {\n            this.props.history.push('/home') //causes error w/ out time out\n        }, 100)\n    }\n\n    updateInput(e) {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n\n        if (e.target.id === \"salesforceUrl\") {\n            this.setState({ validSalesforceUrl: this.validateSalesforceUrl(e.target.value) })\n        }\n    }\n\n    validateSalesforceUrl = (url) => {\n        let urlexp = new RegExp('^https:\\/\\/looker.my.salesforce.com(?:$|/)');\n        let res = url.match(urlexp)\n        let returnVal = false;\n        if (res !== null) {\n            returnVal = true;\n        }\n        return returnVal\n    }\n\n\n    dropdownSelect = (e) => {\n        const targetId = e.target.id\n        this.setState({\n            [targetId]: e.target.value\n        })\n    }\n\n    render() {\n        // console.log('EditCustomization render');\n        const { indexOfCustomizationToEdit, customizations, lookerHost } = this.props\n        const { validSalesforceUrl, industry } = this.state\n        // let lookerHostNameToUse = lookerHost.substr(0, lookerHost.indexOf('.'));\n        // console.log('lookerHost', lookerHost)\n\n\n        return (\n            <div className=\"home container p-5\" >\n                <div className=\"row pt-5\">\n                    <div className=\"col-sm-9\">\n                        <h1>Edit Customization</h1>\n                        <form className=\"border-top mt-3 pt-3\" onSubmit={this.handleSubmit}>\n                            <input type=\"hidden\" id=\"id\" name=\"id\" value={indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].id : ''} />\n                            <input type=\"hidden\" id=\"customizationIndex\" name=\"customizationIndex\" value={indexOfCustomizationToEdit ? indexOfCustomizationToEdit : ''} />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"salesforceUrl\">Salesforce Url</label>\n                                <input id=\"salesforceUrl\"\n                                    className=\"form-control\"\n                                    name=\"salesforceUrl\"\n                                    type=\"text\"\n                                    value={this.state.salesforceUrl}\n                                    onChange={e => this.updateInput(e)}\n                                    ref={input => {\n                                        this.salesforceUrlInput = input;\n                                    }} />\n                                {validSalesforceUrl ?\n                                    <small id=\"salesforceUrlHelp\" className=\"form-text text-success\">Valid Salesforce Url!</small>\n                                    : this.state.salesforceUrl.length ?\n                                        <small id=\"salesforceUrlHelp\" className=\"form-text text-danger\">Must be valid Looker Salesforce Opportunity Url</small>\n                                        : <small id=\"salesforceUrlHelp\" className=\"form-text text-muted\">This field is required</small>}\n                            </div>\n                            <div id=\"subForm\">\n                                {/* {DefaultLookerContent[lookerHost] ?\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"industry\">Choose industry</label>\n                                        <select\n                                            id=\"industry\"\n                                            className=\"form-control\"\n                                            onChange={(e) => this.dropdownSelect(e)}\n                                            name=\"industry\"\n                                            type=\"select-one\"\n                                            value={this.state.industry}\n                                            disabled={validSalesforceUrl ? false : true}>\n\n                                            <option\n                                                key=\"none\"\n                                                value=\"none\"\n                                            > None</option>\n                                            {Object.keys(DefaultLookerContent[lookerHost]).map(key => {\n                                                return (\n                                                    <option\n                                                        key={key}\n                                                        value={key}\n                                                    > {(key.charAt(0).toUpperCase() + key.substring(1)).replace('_', ' ')}</option>\n                                                )\n                                            })}</select>\n                                    </div>\n                                    : ''} */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"companyName\">Company name</label>\n                                    <input id=\"companyName\"\n                                        className=\"form-control\"\n                                        name=\"companyName\"\n                                        type=\"text\"\n                                        value={this.state.companyName}\n                                        onChange={e => this.updateInput(e)}\n                                        disabled={validSalesforceUrl ? false : true}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"logoUrl\">Logo URL</label>\n                                    <input id=\"logoUrl\"\n                                        className=\"form-control\"\n                                        name=\"logoUrl\"\n                                        type=\"text\"\n                                        value={this.state.logoUrl}\n                                        onChange={e => this.updateInput(e)}\n                                        disabled={validSalesforceUrl ? false : true}\n                                    />\n                                </div>\n                                <div className=\"form-group mt-3 pt-3\">\n                                    <button className=\"btn btn-primary mr-2\"\n                                        disabled={validSalesforceUrl ? false : true}>Save Customization</button>\n                                    <Link to='/customize'>\n                                        <button type=\"button\" className=\"btn btn-secondary \">Cancel</button>\n                                    </Link>\n                                </div></div>\n                        </form>\n\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}\nexport default NewCustomization","// https://www.npmjs.com/package/@looker/sdk#using-a-proxy-for-authentication\n\nimport { AuthToken, AuthSession, BrowserTransport } from \"@looker/sdk\";\n\nexport class PblSession extends AuthSession {\n  fetchToken() {\n    return fetch(\"\");\n  }\n  activeToken = new AuthToken();\n  constructor(settings, transport) {\n    super(settings, transport || new BrowserTransport(settings));\n  }\n  isAuthenticated() {\n    const token = this.activeToken;\n    if (!(token && token.access_token)) return false;\n    return token.isActive();\n  }\n  async getToken() {\n    if (!this.isAuthenticated()) {\n      const token = await this.fetchToken();\n      this.activeToken.setToken(await token.json());\n    }\n    return this.activeToken;\n  }\n  async authenticate(props) {\n    const token = await this.getToken();\n    if (token && token.access_token) {\n      props.mode = \"cors\";\n      delete props.credentials;\n      props.headers = {\n        ...props.headers,\n        Authorization: `Bearer ${this.activeToken.access_token}`\n      };\n    }\n    return props;\n  }\n}\n\nexport class PblSessionEmbed extends PblSession {\n\n  accessToken;\n\n  constructor(options) {\n    super(options);\n    this.accessToken = options.accessToken;\n  }\n\n  fetchToken() {\n    return this.accessToken;\n  }\n\n  async getToken() {\n    if (!this.isAuthenticated()) {\n      this.activeToken.setToken(this.fetchToken());\n    }\n    return this.activeToken;\n  }\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter, useHistory } from 'react-router-dom'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n// import Config from './clientConfig.json';\nimport Home from './components/Home'\nimport SignIn from './components/SignIn'\n// import Header from './components/Header'\n// import Footer from './components/Footer'\nimport Customizations from './components/Customizations'\nimport EditCustomization from './components/EditCustomization'\n//make looker user dynamic\nimport LookerUserPermissions from './lookerUserPermissions.json';\nimport InitialLookerUser from './initialLookerUser.json';\nimport UsecaseContent from './usecaseContent.json';\nimport LookerUserAttributeBrandOptions from './lookerUserAttributeBrandOptions.json';\n\nimport { Looker40SDK, DefaultSettings } from \"@looker/sdk\";\nimport { PblSessionEmbed } from './LookerHelpers/pblsession'\n\nexport const lookerUserTimeHorizonMap = {\n  'basic': 'last 182 days',\n  'advanced': 'last 365 days',\n  'premium': 'last 730 days' //before today\n}\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  responseGoogle = (response) => {\n    // debugger //from Jim\n    if (response.error) {\n      console.log('response.error', response.error)\n    } else {\n      this.props.applySession(response.profileObj)\n    }\n  }\n\n  render() {\n\n    const { from } = this.props.location.state || { from: { pathname: '/analytics' } } //needs work?\n    const { pathname } = this.props.location\n    const { activeCustomization } = this.props\n    const { userProfile } = this.props\n\n    const googleClientId = `${process.env.REACT_APP_GOOGLE_CLIENT_ID}.apps.googleusercontent.com`\n    if (Object.keys(userProfile).length) {\n      return (\n        <div className=\"App\">\n          <Redirect to={from} />\n        </div>\n      )\n    } else {\n      return (\n        <SignIn\n          googleClientId={googleClientId}\n          onSuccess={this.responseGoogle}\n          onFailure={this.responseGoogle}\n          usecaseFromUrl={usecaseHelper()}\n        />\n      )\n    }\n  }\n}\n\nconst PrivateRoute = ({\n  component: Component,\n  customizations,\n  activeCustomization,\n  applyCustomization,\n  editCustomization,\n  indexOfCustomizationToEdit,\n  saveCustomization,\n  cancelIndexOfCustomizationToEdit,\n  lookerContent,\n  saveLookerContent,\n  userProfile,\n  lookerUser,\n  lookerHost,\n  switchLookerUser,\n  applySession,\n  lookerUserAttributeBrandOptions,\n  switchUserAttributeBrand,\n  usecaseFromUrl,\n  sdk,\n  ...rest }) => (\n    < Route {...rest} render={(props) => (\n      Object.keys(userProfile).length ?\n        <Component {...props}\n          customizations={customizations}\n          activeCustomization={activeCustomization}\n          applyCustomization={applyCustomization}\n          editCustomization={editCustomization}\n          indexOfCustomizationToEdit={indexOfCustomizationToEdit}\n          saveCustomization={saveCustomization}\n          cancelIndexOfCustomizationToEdit={cancelIndexOfCustomizationToEdit}\n          lookerContent={lookerContent}\n          saveLookerContent={saveLookerContent}\n          userProfile={userProfile}\n          lookerUser={lookerUser}\n          lookerHost={lookerHost}\n          switchLookerUser={switchLookerUser}\n          applySession={applySession}\n          lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions}\n          switchUserAttributeBrand={switchUserAttributeBrand}\n          usecaseFromUrl={usecaseFromUrl}\n          sdk={sdk}\n        />\n        : <Redirect to={{\n          pathname: '/',\n          state: { from: props.location }\n        }} />\n    )} />\n  )\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userProfile: {},\n      customizations: [],\n      activeCustomization: {},\n      indexOfCustomizationToEdit: null,\n      // lookerContent: [UsecaseContent[activeUsecase]],\n      lookerUser: {\n        ...InitialLookerUser\n      },\n      lookerHost: '',\n      activeUsecase: '',\n      tokenLastRefreshed: '',\n      sdk: ''\n    }\n  }\n\n  // keep track of when user logs in\n  // keep track of current time \n  // if current time > initial log in time plus buffer, logout\n  logoutTimer = () => {\n    let clientInterval = setInterval(async () => {\n      let currentTime = Date.now();\n      let expiresInBuffer = 58 * 60 * 1000; //3480000; //58 minutes\n      if (currentTime > (this.state.tokenLastRefreshed + expiresInBuffer)) {\n        //force logout\n        this.applySession({})\n        clearInterval(clientInterval);\n      }\n    }, 1000)\n  }\n\n  componentDidMount() {\n    // console.log('App componentDidMount')\n    this.checkSession()\n  }\n\n  //called on componentDidMount\n  //get request so should only check info, never update\n  checkSession = async () => {\n    // console.log('checkSession')\n    let sessionResponse = await fetch('/readsession', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    const sessionResponseData = await sessionResponse.json();\n    // console.log('sessionResponseData', sessionResponseData)\n    const { userProfile } = sessionResponseData.session\n    const { customizations } = sessionResponseData.session\n    const activeCustomization = sessionResponseData.session.activeCustomization ? sessionResponseData.session.activeCustomization : 0;\n    const lookerUser = sessionResponseData.session.lookerUser ? sessionResponseData.session.lookerUser : this.state.lookerUser;\n    const lookerHost = sessionResponseData.session.lookerHost ? sessionResponseData.session.lookerHost : this.state.lookerHost;\n    const accessToken = sessionResponseData.session.mongoInfo ? sessionResponseData.session.mongoInfo.api_user_token : '';\n    //make sure defined and contains properties\n    if (userProfile && Object.keys(userProfile).length) {\n\n      const session = new PblSessionEmbed({\n        ...DefaultSettings(),\n        base_url: `https://${lookerHost}.looker.com:19999`,\n        accessToken\n      });\n\n\n      let sdk = new Looker40SDK(session);\n\n\n\n      this.setState((prevState) => ({\n        userProfile, //think we want this here?\n        customizations,\n        lookerUser: {\n          ...prevState.lookerUser,\n          external_user_id: userProfile.email, //googleId\n          first_name: userProfile.givenName,\n          last_name: userProfile.familyName,\n          permissions: LookerUserPermissions[lookerUser.user_attributes.permission_level] || LookerUserPermissions['basic'],\n          user_attributes: {\n            ...lookerUser.user_attributes || {\n              \"locale\": \"en_US\",\n              \"country\": \"USA\",\n              \"brand\": \"Calvin Klein\",\n              \"permission_level\": \"basic\"\n            }\n          }\n        },\n        lookerHost,\n        tokenLastRefreshed: sessionResponseData.session.mongoInfo.api_token_last_refreshed || Date.now(),\n        sdk\n      }), () => {\n        // console.log('checkSession callback 1111 this.state.lookerUser', this.state.lookerUser)\n        this.applyCustomization(activeCustomization)\n        this.logoutTimer();\n      })\n    }\n  }\n\n  // called by responseGoogle once it gets response\n  // since login can assume activeCustomization will be default..\n  applySession = async (userProfile) => {\n    // console.log('applySession')\n    // console.log('userProfile', userProfile)\n\n    if (Object.keys(userProfile).length === 0) {\n      // console.log('inside ifff')\n      let sessionData = await fetch('/endsession', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      this.setState({\n        userProfile: {},\n        lookerUser: { ...InitialLookerUser }\n      })\n    } else {\n      // console.log('inside else')\n      let sessionData = await fetch('/writesession', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ userProfile, lookerUser: this.state.lookerUser })\n      })\n      const sessionResponseData = await sessionData.json();\n      const { customizations } = sessionResponseData.session\n      const lookerUser = sessionResponseData.session.lookerUser ? sessionResponseData.session.lookerUser : this.state.lookerUser;\n      const lookerHost = sessionResponseData.session.lookerHost ? sessionResponseData.session.lookerHost : this.state.lookerHost;\n      const accessToken = sessionResponseData.session.mongoInfo ? sessionResponseData.session.mongoInfo.api_user_token : '';\n\n\n      const session = new PblSessionEmbed({\n        ...DefaultSettings(),\n        base_url: `https://${lookerHost}.looker.com:19999`,\n        accessToken\n      });\n\n\n      let sdk = new Looker40SDK(session);\n\n      this.setState(prevState => ({\n        userProfile,\n        customizations,\n        lookerUser: {\n          ...prevState.lookerUser,\n          external_user_id: userProfile.email, //googleId\n          first_name: userProfile.givenName,\n          last_name: userProfile.familyName,\n          permissions: LookerUserPermissions[lookerUser.user_attributes.permission_level] || LookerUserPermissions['basic'], //assume good initially,\n          user_attributes: {\n            ...lookerUser.user_attributes || {\n              \"locale\": \"en_US\",\n              \"country\": \"USA\",\n              \"brand\": \"Calvin Klein\",\n              \"time_horizon\": \"last 6 months\",\n              \"permission_level\": \"basic\",\n            }\n          }\n        },\n        lookerHost,\n        tokenLastRefreshed: sessionResponseData.session.mongoInfo.api_token_last_refreshed || Date.now(),\n        sdk\n      }), () => {\n        this.applyCustomization(0) //assume default customization, set lookerContent and activeCustomization in applyCustomization\n        this.logoutTimer()\n      });\n    }\n  }\n\n  //called by: checkSession, applySession, applyButton, saveCustomization\n  applyCustomization = async (customizationIndex) => {\n    // console.log('applyCustomization')\n    // console.log('customizationIndex', customizationIndex)\n\n    let customizationResponse = await fetch('/applyactivecustomziation', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ customizationIndex })\n    })\n\n    let customizationResponseData = await customizationResponse.json();\n\n    let lookerContentToUse = [];\n    //check industry first, insert to array\n    if (this.state.customizations[customizationIndex].industry) {\n      // lookerContentToUse = [...DefaultLookerContent[this.state.lookerHost][this.state.customizations[customizationIndex].industry]]\n    }\n    //then check custom content, insert to array\n    if (this.state.customizations[customizationIndex].lookerContent) {\n      // lookerContentToUse = [...lookerContentToUse, ...this.state.customizations[customizationIndex].lookerContent]\n    }\n\n    this.setState({\n      activeCustomization: this.state.customizations[customizationIndex],\n      lookerContent: lookerContentToUse\n    }, () => {\n      // console.log('applyCustomization callback this.state.lookerContent', this.state.lookerContent)\n      // console.log('applyCustomization callback this.state.activeCustomization', this.state.activeCustomization)\n      // this.props.history.push('/home') //not going to work here :P\n    });\n  }\n\n  editCustomization = (customizationIndex) => {\n    // console.log('editCustomization')\n    // console.log('customizationIndex', customizationIndex)\n    const validCustomizationIndex = typeof this.state.customizations[customizationIndex] === 'undefined' ? null : customizationIndex\n    this.setState({\n      indexOfCustomizationToEdit: validCustomizationIndex,\n    }, () => {\n      // console.log('editCustomization callback this.state.indexOfCustomizationToEdit', this.state.indexOfCustomizationToEdit)\n    });\n  }\n\n  saveCustomization = async (formData) => {\n    // console.log('saveCustomization')\n    // console.log('formData', formData)\n    let customizationResponse = await fetch('/savecustomization', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n\n    let customizationResponseData = await customizationResponse.json();\n\n    // console.log('customizationResponseData', customizationResponseData)\n\n    this.setState({\n      customizations: customizationResponseData.customizations,\n      // indexOfCustomizationToEdit: null\n    }, () => {\n      this.applyCustomization(formData.customizationIndex) //sessionActiveCustomization\n    })\n  }\n\n\n  cancelIndexOfCustomizationToEdit = () => {\n    // console.log(\"cancelIndexOfCustomizationToEdit\")\n    this.setState({\n      indexOfCustomizationToEdit: null\n    })\n  }\n\n  saveLookerContent = async (newLookerContent) => {\n    // console.log('saveLookerContent')\n    // console.log('newLookerContent', newLookerContent)\n\n    /*let customizationResponse = await fetch('/savelookercontent', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ activeCustomization: this.state.activeCustomization, newLookerContent: newLookerContent })\n    })\n    let customizationResponseData = await customizationResponse.json();\n\n    this.setState(prevState => ({\n      lookerContent: [...prevState.lookerContent, newLookerContent] //should I be using DB as source here?\n    }))*/\n\n  }\n\n  switchLookerUser = (newUser) => {\n    // console.log('switchLookerUser')\n    // console.log('newUser', newUser)\n    // console.log('LookerUserPermissions[newUser]', LookerUserPermissions[newUser])\n\n\n    let userAttributeCopy = { ...this.state.lookerUser.user_attributes, \"permission_level\": newUser }\n    userAttributeCopy.time_horizon = lookerUserTimeHorizonMap[newUser];\n\n\n    this.setState(prevState => ({\n      lookerUser: {\n        ...prevState.lookerUser,\n        permissions: LookerUserPermissions[newUser],\n        user_attributes: userAttributeCopy\n      }\n    }), async () => {\n\n      let lookerUserResponse = await fetch('/updatelookeruser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.lookerUser)\n      })\n\n      let lookerUserResponseData = await lookerUserResponse.json();\n\n    });\n  }\n\n  switchUserAttributeBrand = (newAttribute) => {\n    // console.log('switchUserAttributeBrand')\n    // console.log('newAttribute', newAttribute)\n\n    let userAttributeCopy = { ...this.state.lookerUser.user_attributes }\n    userAttributeCopy.brand = newAttribute;\n\n    let usecaseFromUrl = usecaseHelper();\n\n    this.setState(prevState => ({\n      lookerUser: {\n        ...prevState.lookerUser,\n        user_attributes: userAttributeCopy,\n        group_ids: [UsecaseContent[usecaseFromUrl].groupIds[newAttribute.replace(\"'\", \"\")]] //needed to replace apostrophe\n      }\n    }), async () => {\n      let lookerUserResponse = await fetch('/updatelookeruser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.lookerUser)\n      })\n\n      let lookerUserResponseData = await lookerUserResponse.json();\n\n    });\n  }\n\n  render() {\n    // console.log('App render');\n    // console.log('this.props', this.props);\n    const { userProfile, customizations, activeCustomization, indexOfCustomizationToEdit, lookerContent, lookerUser, lookerHost, accessToken, sdk } = this.state;\n\n\n    let usecaseFromUrl = usecaseHelper();\n\n    return (\n      <Router>\n        <div>\n          <Route path='' render={(props) => <Login\n            {...props}\n            applySession={this.applySession}\n            userProfile={userProfile}\n            activeCustomization={activeCustomization}\n            lookerUser={lookerUser}\n            switchLookerUser={this.switchLookerUser}\n            lookerHost={lookerHost}\n          />}\n          />\n          <PrivateRoute path='/analytics' component={Home}\n            activeCustomization={activeCustomization}\n            lookerContent={lookerContent}\n            saveLookerContent={this.saveLookerContent}\n            userProfile={userProfile}\n            lookerUser={lookerUser}\n            applySession={this.applySession}\n            lookerHost={lookerHost}\n            switchLookerUser={this.switchLookerUser}\n            lookerUserAttributeBrandOptions={LookerUserAttributeBrandOptions}\n            switchUserAttributeBrand={this.switchUserAttributeBrand}\n            usecaseFromUrl={usecaseFromUrl}\n            sdk={sdk}\n          />\n        </div>\n      </Router>\n    )\n  }\n}\nexport default App\n\nexport function usecaseHelper() {\n  let keyArr = Object.keys(UsecaseContent);\n  let url = window.location.href;\n  for (let i = 0; i < keyArr.length; i++) {\n    if (url.indexOf(keyArr[i]) > -1) {\n      return keyArr[i];\n    }\n  }\n  return 'atom';\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/atom_splash_blog.57457a86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_splash_inventory.6bbb655e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_splash_trends.dbd4fdc6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_logo_black.a213ea2a.svg\";","module.exports = {\n  makeid: (length) => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  },\n\n\n  validIdHelper: (str) => {\n    // console.log('validIdHelper')\n    // console.log('str', str)\n    //need to replace special characters that may be associated with id...\n    return str.replace(/[^a-zA-Z0-9-.#]/g, \"\")\n  },\n\n  prettifyString: (str) => {\n    var i, frags = str.split('_');\n    for (i = 0; i < frags.length; i++) {\n      frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\n    }\n    return frags.join(' ');\n  },\n\n  getUrlVars: (url) => {\n    var hash;\n    var myJson = {};\n    var hashes = url.slice(url.indexOf('?') + 1).split('&');\n    for (var i = 0; i < hashes.length; i++) {\n      hash = hashes[i].split('=');\n      myJson[hash[0]] = hash[1];\n      // If you want to get in native datatypes\n      // myJson[hash[0]] = JSON.parse(hash[1]); \n    }\n    return myJson;\n  },\n\n\n  decodeHtml: (html) => {\n    var txt = document.createElement(\"textarea\");\n    txt.innerHTML = html;\n    return txt.value;\n  }\n}"],"sourceRoot":""}