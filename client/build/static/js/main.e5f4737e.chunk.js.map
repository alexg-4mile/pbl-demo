{"version":3,"sources":["images/atom_splash_blog.jpg","images/atom_splash_inventory.jpg","images/atom_splash_trends.jpg","images/atom_logo_black.svg","tools.js","images sync /^/.//.*/.svg$","images/atom.svg","images/atom_logo_white.svg","images sync /^/.//.*/.jpg$","images/atom_background1.jpg","images/atom_background2.jpg","images/atom_background3.jpg","images/atom_background4.jpg","images sync /^/.//.*_logo_black/.svg$","AppContext.js","components/Material/UserMenu.js","components/Demo/CodeFlyout.js","webpack:///./src/components/Demo/SplashPage/SplashPage.js?046c","components/Demo/SplashPage/styles.js","components/Highlights/Highlight.js","components/Demo/SplashPage/SingleValueVis.js","components/Demo/SplashPage/NaturalLanguage.js","components/Demo/SplashPage/Welcome.js","components/Demo/SplashPage/VectorThumbnail.js","components/Demo/SplashPage/PopularAnalysis.js","components/Demo/SplashPage/EmbeddedDashboard.js","components/Demo/SplashPage/ContentCarousel.js","components/Material/BottomBar.js","components/Demo/SplashPage/SplashPage.js","components/Demo/Dashboard/styles.js","components/Accessories/NumberToColoredPercent.js","components/Demo/Dashboard/Dashboard.js","webpack:///./src/components/Demo/Dashboard/Dashboard.js?b45b","components/Material/ModalTable.js","components/Demo/CustomVis/styles.js","components/Demo/CustomVis/CustomVis.js","webpack:///./src/components/Demo/CustomVis/CustomVis.js?b545","components/Demo/ReportBuilder/styles.js","components/Demo/ReportBuilder/helpers.js","components/Demo/ReportBuilder/ReportBuilder.js","webpack:///./src/components/Demo/ReportBuilder/ReportBuilder.js?9721","components/Demo/QueryBuilder/styles.js","components/Demo/QueryBuilder/helpers.js","components/Demo/QueryBuilder/QueryBuilder.js","webpack:///./src/components/Demo/QueryBuilder/QueryBuilder.js?9efc","components/Demo/MonetizationModal.js","components/Home.js","components/SignIn.js","components/Customizations.js","components/EditCustomization.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","validIdHelper","str","replace","prettifyString","frags","split","toUpperCase","slice","join","getUrlVars","url","hash","myJson","hashes","indexOf","decodeHtml","html","txt","document","createElement","innerHTML","value","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","AppContext","React","createContext","useStyles","require","makeStyles","theme","zIndex1500","zIndex","mr12","marginRight","UserMenu","props","lookerUser","onLogoutSuccess","lookerUserAttributeBrandOptions","handleUserMenuSwitch","classes","useContext","togglePayWallModal","userProfile","codeShow","toggleShow","useState","anchorEl","setAnchorEl","user_attributes","brand","selectedBrand","setSelectedBrand","handleClose","newValue","property","useEffect","className","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","color","Avatar","alt","name","src","imageUrl","Typography","permission_level","substring","keepMounted","open","Boolean","onClose","MenuItem","autoFocus","Divider","divider","Autocomplete","options","getOptionLabel","option","label","style","width","onChange","target","innerText","renderInput","params","TextField","variant","loadingText","disableautofocus","onKeyDown","stopPropagation","CodeFlyout","toggleCodeShow","lookerContent","clientSideCode","serverSideCode","height","permissionNeededCode","ClickAwayListener","onClickAway","Fade","in","Grid","container","spacing","padding20","codeFlyoutContainer","item","sm","mrAuto","textAlign","cursor","CodeSnippet","language","dracula","showLineNumbers","JSON","stringify","redPrimary","red","greenPrimary","green","redLight","greenLight","root","flexGrow","backgroundColor","palette","background","paper","overflow","borderRadius","flexCentered","display","justifyContent","alignItems","hidden","visibility","position","tabs","dNone","dBlock","tree","maxWidth","icon","fontSize","mt12","marginTop","w100","mlAuto","marginLeft","skeleton","minWidth","minHeight","card","maxHeight200","maxHeight","mt30","mb30","marginBottom","textCenter","cursorPointer","border","height800","maxHeight100","maxHeight400","minHeight200","redNeg","fontWeight","greenPos","padding30","padding","mb12","overflowScroll","overflowHidden","overflowVisible","maxHeight150","minHeight150","carouselLegend","opacity","carouselLegendTitle","carouselLegendBody","positionRelative","padding15","maxHeight75","overflowYScroll","overflowY","overflowX","drawerHeader","mixins","toolbar","positionFixedTopRight","top","right","bottom","margin","Highlight","children","show","ApiHighlight","Chip","size","align","left","EmbedHighlight","SingleValueVis","apiContent","setApiContent","dataObjForSparkline","isSubscribed","runInlineQuery","then","response","a","stringifiedQuery","encodeURIComponent","inlineQuery","fetch","resultFormat","method","headers","Accept","lookerResponse","json","lookerResponseData","data","dataArrForDataObj","queryResults","fields","thisDataItem","toString","change","y","push","upOrDownArrow","isNaN","toFixed","parseInt","labelText","chipFormat","Card","Fragment","xScale","type","format","precision","yScale","min","max","stacked","reverse","axisLeft","orient","tickSize","tickPadding","tickRotation","axisBottom","enablePoints","enableGridX","enableGridY","colors","visColor","animate","CircularProgress","circularProgress","NaturalLanguage","index","undefined","inlineQueriesMap","Welcome","givenName","inlineQueries","key","VectorThumbnail","handleMenuItemSelect","svg","setSvg","getThumbnail","resourceType","blob","Blob","URL","createObjectURL","PopularAnalysis","vectors","EmbeddedDashboard","lookerHost","iFrameExists","setIFrame","$","LookerEmbedSDK","createDashboardWithId","slug","appendTo","getElementById","withClassName","withTheme","build","connect","look","init","catch","error","console","elevation","ContentCarousel","blogImage","inventoryImage","trendsImage","infiniteLoop","autoPlay","showThumbs","BottomBar","mtAuto","mb10","Button","startIcon","HighlightOutlined","ml12","Code","SplashPage","window","innerHeight","setHeight","staticContent","handleTabChange","demoComponentType","addEventListener","height100Percent","Box","noContainerScroll","innerIndex","gridWidth","minHeight680","padding10","NumberToColoredPercent","val","positive_good","abs_val","up","down","val_formatted","abs","toLocaleString","minimumFractionDigits","Dashboard","dashboardObj","setDashboardObj","setClientSideCode","setServerSideCode","toggleValue","setToggleValue","dashboardLayout","setDashboardLayout","regionValue","setRegionValue","activeTabValue","handleToggle","filteredLayout","_","filter","dashboard_layout_components","row","dynamicFieldLookUp","dashboard_element_id","newDashboardLayout","setOptions","setTimeout","performLookerApiCalls","dashboardId","withNext","withParams","on","changeHeight","dashboard","layouts","hasOwnProperty","orderedArrayForApiContent","filters","jsonQuery","desiredFilterName","queryResultsForDropdown","desiredProperty","FilterBar","customFilterAction","filterName","newFilterValue","updateFilters","run","Skeleton","animation","mt","expanded","setExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore","FilterList","heading","ExpansionPanelDetails","filterComponents","Array","isArray","renderOption","justify","trend","ToggleButtonGroup","exclusive","region","ToggleButton","boxShadow","shadows","table","getModalStyle","transform","ModalTable","modalContent","modalStyle","Modal","aria-labelledby","aria-describedby","title","body","TableContainer","component","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","lastIndexOf","TableBody","rendered","round","height500","height600","height700","textField","formControl","selectEmpty","positionTopRight","CustomVis","fromDate","setFromDate","toDate","setToDate","category","setCategory","desiredField","setDesiredField","setOpen","setModalContent","handleModalOpen","day","originalInlineQueryCopy","parse","total","limit","modalObj","filterData","uniqueDates","Set","filteredAndReducedForAll","uniqueDate","reduce","acc","thisObj","desiredFields","uniqueCategories","incrementDate","handleFromDate","Date","newValueAsDate","addDays","handleToDate","handleCategory","handleDesiredField","from","to","emptyColor","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","FormControl","InputLabel","Select","labelId","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","minDate","maxDate","dateInput","increment","dateFormatTotime","getTime","toISOString","ml24","parentHoverVisibility","childHoverVisibility","faSm","whiteSpaceNoWrap","whiteSpace","TabPanel","other","role","p","ReportBuilder","exploreObj","setExploreObj","setValue","qid","setQid","tabContent","handleChange","action","contentType","contentId","secondaryAction","exploreId","newReportEmbedContainer","iFrameArray","classList","contains","remove","add","indexOfDeletedContent","updatedIFrameArray","splice","empty","status","animateLoad","looksToUse","sharedFolder","looks","embeddedUserFolder","dashboardsToUse","dashboards","objToUse","lookId","lookIsRendered","createLookWithId","dashboardIsRendered","createExploreWithId","explore","AppBar","Tabs","Tab","Icon","a11yProps","tabContentItem","tabContentItemIndex","TreeSideBar","sharedFolderId","treeCounter","selected","setSelected","expandedArr","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","nodeIds","onNodeSelect","outerIndex","TreeItem","nodeId","capitalize","disabled","treecounter","contentid","folder_id","labelRoot","client_id","grey","orange","typography","pxToRem","fontWeightRegular","visuallyHidden","clip","bluePrimary","blueSecondary","orangePrimary","orangeSecondary","bottomBarSpacer","maxHeight600","m12","m6","descendingComparator","b","orderBy","QueryBuilder","innerWidth","setWidth","newQuery","apiContentCopy","timer","now","log","lookerCreateTaskResposnse","lookerCreateTaskResponseData","taskInterval","setInterval","queryTaskId","lookerCheckTaskResposnse","lookerCheckTaskResponseData","clearInterval","EnhancedTable","rows","gridTitle","measureCounter","dimensionCounter","initializeFieldChipDataHelper","queryBody","datalabel","fieldType","fieldsChipData","setFieldsChipData","queryModified","setQueryModified","queryShouldRun","setQueryShouldRun","filterType","filtersData","setFilterData","handleFieldChipClick","chip","updatedFieldsChipData","handleSelectChange","updatedFiltersData","handleQuerySubmit","newFields","currentFilters","newQueryObj","datePermissionMap","advanced","basic","premium","Search","measurecounter","Done","dimensioncounter","EnhancedTableHead","order","onSelectAllClick","onRequestSort","numSelected","rowCount","numeric","disablePadding","sortDirection","TableSortLabel","active","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","hover","colSpan","FormControlLabel","control","Switch","checked","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","flexDirection","transition","font75","font875","MonetizationModal","switchLookerUser","payWallModal","modalListMap","modal","LookerUserPermissions","CardContent","fontStyle","List","ListItem","ListItemIcon","ListItemText","primary","CardActions","disableSpacing","fullWidth","defaultTheme","createMuiTheme","atomTheme","main","secondary","vidlyTheme","blue","Home","setState","toggleHighlightShow","state","highlightShow","handleDrawerChange","drawerOpen","fromSplash","selectedMenuItemValue","UsecaseContent","activeUsecase","demoComponents","lookerContentItem","renderedDemoComponentsCopy","renderedDemoComponents","unshift","prevState","selectedMenuItem","newLookerUser","permissions","time_horizon","lookerUserTimeHorizonMap","switchUserAttributeBrand","drawerTabValue","appLayout","usecaseFromUrl","this","layout","prevProps","prevPermissionLevel","currPermissionLevel","prevUserBrand","currUserBrand","demoComponentMap","themeMap","activeCustomization","applySession","orderedDemoComponentsForMenu","orderedDemoComponentsForMenuObj","expandedTreeItemsArr","cumulativePusher","menuCategory","selectedMenuItemVal","Provider","ThemeProvider","CssBaseline","TopBar","Drawer","drawer","drawerPaper","ChevronLeft","MenuList","clsx","content","contentShift","DemoComponent","hide","Component","withStyles","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","flexShrink","borderRight","relative","absolute","right0","top0","right24","top24","highlightLegend","fontSize1em","mt5","mb5","list","nested","paddingLeft","appBarBottom","roundedTab","paddingBottom30","paddingBottom","Toolbar","edge","Menu","Badge","badgeContent","AddAlert","demoComponentIconMap","HomeIcon","VisibilityOutlined","ShowChart","TableChartOutlined","DateRangeOutlined","LibraryBooksOutlined","outerItem","MatchingIconComponent","button","lightGrey","h100","pos","actions","cardCopy","SignIn","googleClientId","onSuccess","onFailure","backgroundImageInt","backgroundImage","logoImage","backgroundSize","clientId","buttonText","cookiePolicy","Login","responseGoogle","profileObj","location","pathname","process","usecaseHelper","PrivateRoute","customizations","applyCustomization","editCustomization","indexOfCustomizationToEdit","saveCustomization","cancelIndexOfCustomizationToEdit","saveLookerContent","rest","render","App","logoutTimer","clientInterval","currentTime","tokenLastRefreshed","checkSession","sessionResponse","sessionResponseData","session","external_user_id","email","first_name","last_name","familyName","mongoInfo","api_token_last_refreshed","InitialLookerUser","sessionData","customizationIndex","customizationResponse","lookerContentToUse","industry","validCustomizationIndex","formData","customizationResponseData","newLookerContent","newUser","userAttributeCopy","lookerUserResponse","newAttribute","group_ids","groupIds","path","LookerUserAttributeBrandOptions","keyArr","href","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5f4737e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/atom_splash_blog.57457a86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_splash_inventory.6bbb655e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_splash_trends.dbd4fdc6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_logo_black.a213ea2a.svg\";","module.exports = {\n  makeid: (length) => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  },\n\n\n  validIdHelper: (str) => {\n    // console.log('validIdHelper')\n    // console.log('str', str)\n    //need to replace special characters that may be associated with id...\n    return str.replace(/[^a-zA-Z0-9-.#]/g, \"\")\n  },\n\n  prettifyString: (str) => {\n    var i, frags = str.split('_');\n    for (i = 0; i < frags.length; i++) {\n      frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\n    }\n    return frags.join(' ');\n  },\n\n  getUrlVars: (url) => {\n    var hash;\n    var myJson = {};\n    var hashes = url.slice(url.indexOf('?') + 1).split('&');\n    for (var i = 0; i < hashes.length; i++) {\n      hash = hashes[i].split('=');\n      myJson[hash[0]] = hash[1];\n      // If you want to get in native datatypes\n      // myJson[hash[0]] = JSON.parse(hash[1]); \n    }\n    return myJson;\n  },\n\n\n  decodeHtml: (html) => {\n    var txt = document.createElement(\"textarea\");\n    txt.innerHTML = html;\n    return txt.value;\n  }\n}","var map = {\n\t\"./atom.svg\": 881,\n\t\"./atom_logo_black.svg\": 365,\n\t\"./atom_logo_white.svg\": 882\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 880;","module.exports = __webpack_public_path__ + \"static/media/atom.e208988c.svg\";","module.exports = __webpack_public_path__ + \"static/media/atom_logo_white.89cfe3df.svg\";","var map = {\n\t\"./atom_background1.jpg\": 884,\n\t\"./atom_background2.jpg\": 885,\n\t\"./atom_background3.jpg\": 886,\n\t\"./atom_background4.jpg\": 887,\n\t\"./atom_splash_blog.jpg\": 361,\n\t\"./atom_splash_inventory.jpg\": 362,\n\t\"./atom_splash_trends.jpg\": 363\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 883;","module.exports = __webpack_public_path__ + \"static/media/atom_background1.9ed7593f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_background2.c5efc290.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_background3.b9aecb61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_background4.1acd6c1b.jpg\";","var map = {\n\t\"./atom_logo_black.svg\": 365\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 888;","import React from 'react';\n \nconst AppContext = React.createContext(null);\n \nexport default AppContext;","import React, { useContext, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Menu, MenuItem, Typography, Divider, TextField, Avatar } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport AppContext from '../../AppContext';\n\nconst { validIdHelper } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  zIndex1500: {\n    zIndex: 1500\n  },\n  mr12: {\n    marginRight: 12\n  }\n}))\n\nexport default function UserMenu(props) {\n\n  const { lookerUser, onLogoutSuccess, lookerUserAttributeBrandOptions, handleUserMenuSwitch } = props\n  const classes = useStyles();\n  const { togglePayWallModal, codeShow, toggleShow, userProfile } = useContext(AppContext)\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedBrand, setSelectedBrand] = React.useState(lookerUser.user_attributes.brand || '');\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (newValue, property) => {\n    setAnchorEl(null);\n    if (newValue == null) {\n      onLogoutSuccess({})\n    } else if (newValue === 'modal') {\n      togglePayWallModal({\n        'show': true,\n        'permissionNeeded': 'explore'\n      })\n    } else if (typeof newValue === 'string') {\n      handleUserMenuSwitch(newValue, property)\n    }\n  };\n  useEffect(() => {\n    // console.log('useEffect')\n    setSelectedBrand(lookerUser.user_attributes.brand || '')\n  }, [lookerUser]);\n\n  return (\n    <div className={`${classes.zIndex1500}`}>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        color=\"inherit\"\n      >\n        <Avatar alt={userProfile.name} src={userProfile.imageUrl} className={classes.mr12} />\n\n        <Typography>\n          {typeof lookerUser.user_attributes.permission_level === 'string' ?\n            lookerUser.user_attributes.permission_level.charAt(0).toUpperCase() + lookerUser.user_attributes.permission_level.substring(1) : ''}\n        </Typography>\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem autoFocus={false}>Select User Level</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('basic', 'permission')}>Basic</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('advanced', 'permission')}>Advanced</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('premium', 'permission')}>Premium</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem onClick={() => handleClose(null)}>Sign Out</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem onClick={() => handleClose('modal')}>Show Modal</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem>Current brand: {selectedBrand}</MenuItem>\n        <MenuItem>\n          <Autocomplete\n            id=\"combo-box-usermenu\"\n            options={lookerUserAttributeBrandOptions}\n            getOptionLabel={(option) => option.label}\n            style={{ width: 300 }}\n            onChange={(event) => handleClose((event.target.innerText || ''), 'brand')}\n            renderInput={(params) => <TextField {...params}\n              label=\"Change merchant brand\"\n              variant=\"outlined\"\n            />}\n            loadingText=\"Loading...\"\n            disableautofocus=\"true\"\n            onKeyDown={(event) => event.stopPropagation()}\n          />\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Typography, Grid, Fade, ClickAwayListener } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n// import { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/hljs'; //hehe\nimport AppContext from '../../AppContext'\n\n//helper function for rendering content in code tab\nexport default function CodeFlyout(props) {\n  const { toggleCodeShow } = useContext(AppContext);\n  const { codeShow } = useContext(AppContext);\n\n  const { classes, lookerContent, clientSideCode, serverSideCode, lookerUser, permissionNeededCode, height } = props\n  return (\n    <ClickAwayListener onClickAway={() => {\n      toggleCodeShow()\n    }}>\n      <Fade in={codeShow || false}>\n        {Object.keys(lookerUser).length ?\n          <Grid container spacing={3}\n            className={`${classes.padding20} ${classes.codeFlyoutContainer}`}\n            style={{ height }}>\n            <Grid item sm={11}>\n              <Typography variant=\"h6\" className={` ${classes.mrAuto}`} style={{ color: 'white' }}>\n                Looker User Object\n            </Typography>\n            </Grid>\n            <Grid item sm={1}\n              style={{ textAlign: 'right' }}\n            >\n              <CloseIcon style={{ color: 'white', cursor: 'pointer' }} onClick={() => toggleCodeShow()} />\n            </Grid>\n            {/* <Grid item sm={1}></Grid> */}\n\n            <Grid item sm={12}>\n              <CodeSnippet code={lookerUser} />\n            </Grid>\n          </Grid> : ''\n        }\n      </Fade >\n    </ClickAwayListener >\n  )\n}\n\nfunction CodeSnippet(props) {\n  // console.log('CodeSnippet');\n  // console.log('props', props);\n  const { code } = props\n  return (\n    <SyntaxHighlighter language=\"json\" style={dracula} showLineNumbers={true} >\n      {typeof code === \"object\" ? JSON.stringify(code, true, 4) : code}\n    </SyntaxHighlighter>)\n}","export default \"//imports\\nimport $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, Divider } from '@material-ui/core'\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./SplashPage.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport { SingleValueVis } from './SingleValueVis';\\nimport { Welcome } from './Welcome';\\nimport { PopularAnalysis } from './PopularAnalysis';\\nimport { EmbeddedLook } from './EmbeddedLook';\\nimport { EmbeddedDashboard } from './EmbeddedDashboard';\\nimport { ContentCarousel } from './ContentCarousel';\\nimport BottomBar from '../../Material/BottomBar.js'\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of SplashPage Component\\nexport default function SplashPage(props) {\\n  // console.log('SplashPage')\\n  //intialize state using hooks\\n  const topBarBottomBarHeight = 112;\\n  const [value, setValue] = useState(0);\\n  const [iFrameExists, setIFrame] = useState(1);\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\\n\\n  const { toggleShow } = useContext(AppContext)\\n  const { show } = useContext(AppContext)\\n  const { codeShow } = useContext(AppContext)\\n\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, handleTabChange, handleMenuItemSelect, lookerUser, lookerHost } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * setSampleCode\\n  */\\n  useEffect(() => {\\n    window.addEventListener(\\\"resize\\\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\\n  }, [lookerContent]);\\n\\n  /**\\n   * What this return  does:\\n   * Rendering of actual html elements,\\n   * this section is necessary but less relevant to looker functionality itself\\n   */\\n  return (\\n    <div className={`${classes.root} demoComponent`}\\n      style={{ height }}>\\n      <Card elevation={1} className={`${classes.padding30} \\n      ${classes.height100Percent}\\n      ${classes.overflowScroll}`}\\n      >\\n        <Grid container\\n          key={validIdHelper(type)}>\\n          <div className={classes.root}>\\n            {iFrameExists ? '' :\\n              <Grid item sm={12} >\\n                <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                  <CircularProgress className={classes.circularProgress} />\\n                </Card>\\n              </Grid>\\n            }\\n            <Box className={iFrameExists ? `` : `${classes.hidden}`}>\\n              <Grid container\\n                spacing={3}\\n                key={`${validIdHelper(demoComponentType + '-outerFragment')}`}\\n                className={`${classes.noContainerScroll}`}\\n              >\\n                {\\n                  codeShow ? <Grid item sm={6}\\n                    className={`${classes.positionFixedTopRight}`}\\n                  >\\n                    <CodeFlyout {...props}\\n                      classes={classes}\\n                      lookerUser={lookerUser}\\n                      height={height}\\n                    />\\n                  </Grid> : ''}\\n                {lookerContent.map((lookerContent, innerIndex) => {\\n                  return (\\n                    <Grid\\n                      key={`${validIdHelper(demoComponentType + '-innerFragment-' + innerIndex)}`}\\n                      item\\n                      sm={parseInt(lookerContent.gridWidth)}\\n                    >\\n                      {(lookerContent.type === 'welcome') && <Welcome\\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\\n                      />}\\n                      {(lookerContent.type === 'carousel') && <ContentCarousel\\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\\n                      />}\\n                      {(lookerContent.type === 'single value') && <SingleValueVis\\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\\n                      />}\\n                      {(lookerContent.type === 'dashboard') && <EmbeddedDashboard\\n                        {...{ lookerContent, classes, lookerHost }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\\n                      />}\\n                      {(lookerContent.type === 'popular analysis') && <PopularAnalysis\\n                        {...{ lookerContent, classes, demoComponentType, handleMenuItemSelect, lookerHost }}\\n                      />}\\n                    </Grid>\\n                  )\\n                })}\\n              </Grid>\\n            </Box >\\n          </div >\\n        </Grid >\\n      </Card >\\n    </div >\\n  )\\n}\";","import { makeStyles } from '@material-ui/core/styles';\nimport { red, green } from '@material-ui/core/colors';\nconst redPrimary = red[500];\nconst greenPrimary = green[500];\nconst redDark = red[900];\nconst greenDark = green[900];\nconst redLight = red[100];\nconst greenLight = green[100];\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: 8\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n  },\n  maxHeight200: {\n    maxHeight: 200,\n    height: 200,\n    overflow: 'hidden'\n  },\n  mt30: {\n    marginTop: 30\n  },\n  mb30: {\n    marginBottom: 30\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  cursorPointer: {\n    cursor: 'pointer'\n  },\n  border: {\n    border: '1px solid black'\n  },\n  height800: {\n    height: 800\n  },\n  maxHeight100: {\n    maxHeight: 100,\n    height: 100,\n  },\n  maxHeight400: {\n    maxHeight: 400,\n    height: 400,\n  },\n  minHeight200: {\n    minHeight: 200,\n    overflow: 'scroll'\n  },\n  redNeg: {\n    backgroundColor: redLight,\n    color: redPrimary,\n    fontWeight: 800\n  },\n  greenPos: {\n    backgroundColor: greenLight,\n    color: greenPrimary,\n    fontWeight: 800\n  },\n  padding30: {\n    padding: 30\n  },\n  mb12: {\n    marginBottom: 12\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  overflowVisible: {\n    overflow: 'visible'\n  },\n  maxHeight150: {\n    maxHeight: 150,\n    height: 150,\n  },\n  minHeight150: {\n    minHeight: 150,\n    overflow: 'scroll'\n  },\n  carouselLegend: {\n    backgroundColor: 'rgb(192,192,192, .5)\t !important',\n    textAlign: 'center !important',\n    opacity: `100 !important`,\n    fontWeight: 800,\n    // width: `${25}% !important`,\n  },\n  carouselLegendTitle: {\n    fontSize: '24px !important',\n\n  },\n  carouselLegendBody: {\n    fontSize: '16px !important',\n\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  padding15: {\n    padding: 15\n  },\n  maxHeight75: {\n    maxHeight: 75,\n    height: 75,\n  },\n  overflowYScroll: {\n    overflowY: 'scroll',\n    overflowX: 'hidden'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  height100Percent: {\n    height: '100%'\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  }\n}));","import React, { useContext } from 'react';\nimport AppContext from '../../AppContext';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport { Chip, Fade } from '@material-ui/core';\n\n\n// maybe move this to config?\nexport const API_COLOR = '#A142F4'\nexport const API_BACKGROUND_COLOR = 'rgba(161, 66, 244, 0.1)'\nexport const EMBED_COLOR = '#12B5CB'\nexport const EMBED_BACKGROUND_COLOR = 'rgba(18, 181, 203, 0.1)'\n\nfunction Highlight({ children, color, height, width, margin, id, backgroundColor, ...props }) {\n  const { show } = useContext(AppContext)\n  var style = {};\n  if (show) {\n    style = {\n      ...style,\n      // boxShadow: `0 0 10px ${color}, \n      // inset 0 0 10px ${color}`,\n\n      border: `3px solid ${color}`,\n      backgroundColor: `${backgroundColor}`,\n      borderRadius: `4px`,\n      // zIndex: 10000000000000000,\n      position: 'relative',\n      // padding: '10px'\n    }\n  } else {\n    style = {\n      border: `3px solid transparent`,\n      backgroundColor: `transparent`,\n      // padding: '10px'\n    }\n  }\n\n  if (height) { style['height'] = height }\n  if (width) { style['width'] = width }\n  if (margin) { style['margin'] = margin }\n\n  // boxShadow: `0 4px 80px ${color}22`\n\n  return (\n    <div id={id} style={style} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport function ApiHighlight({ ...props }) {\n  const { show } = useContext(AppContext)\n  const { classes } = props\n  const { children } = props\n\n  return <Highlight {...props} color={API_COLOR} backgroundColor={API_BACKGROUND_COLOR}>\n\n    <Chip size=\"small\"\n      label={\"API\"}\n      className={show ? 'test' : `${classes.hidden}`}\n      display=\"inline\"\n      align=\"right\"\n      style={{ backgroundColor: \"#A142F4\", color: '#fff', top: '-10px', left: '-10px', position: 'absolute' }}\n    />\n    {children}\n\n  </Highlight>\n}\n\nexport function EmbedHighlight({ ...props }) {\n  const { show } = useContext(AppContext)\n  const { classes } = props\n  const { children } = props\n\n  return <Highlight {...props} color={EMBED_COLOR} backgroundColor={EMBED_BACKGROUND_COLOR}>\n\n    <Chip size=\"small\"\n      label={\"Embed\"}\n      className={show ? 'test' : `${classes.hidden}`}\n      display=\"inline\"\n      align=\"right\"\n      style={{\n        backgroundColor: \"#12B5CB\",\n        color: '#fff',\n        top: '-10px',\n        left: '-10px',\n        position: 'absolute'\n      }}\n    />\n    {children}\n\n  </Highlight>\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Chip } from '@material-ui/core';\nimport { ResponsiveLine } from '@nivo/line';\nconst { validIdHelper, decodeHtml } = require('../../../tools');\n\n\n\nexport function SingleValueVis({ lookerContent, classes }) {\n  // console.log('SingleValueVis')\n  // console.log('lookerContent', lookerContent)\n  // const [svg, setSvg] = useState(undefined)\n  const [apiContent, setApiContent] = useState([]);\n  const { userProfile, lookerUser, show } = useContext(AppContext)\n\n  let dataObjForSparkline = {}\n\n  useEffect(() => {\n    let isSubscribed = true\n    runInlineQuery().then(response => {\n      if (isSubscribed) {\n        setApiContent(response)\n      }\n    })\n    return () => isSubscribed = false\n  }, [lookerContent, lookerUser]);\n\n  const runInlineQuery = async () => {\n    setApiContent([])\n    let stringifiedQuery = encodeURIComponent(JSON.stringify(lookerContent.inlineQuery))\n    let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    dataObjForSparkline.id = validIdHelper(`singleVisValue-${lookerContent.id}`);\n    dataObjForSparkline.data = [];\n\n    let dataArrForDataObj = [];\n    lookerResponseData.queryResults.map(item => {\n      if (item[lookerContent.inlineQuery.fields[0]]\n        // && item['order_items.count']['order_items.previous_period'][\"This Period\" ? \"This Period\" : \"Previous Period\"]\n      ) {\n        let thisDataItem = {\n          \"x\": item[lookerContent.inlineQuery.fields[0]].toString(),\n          \"y\": item[lookerContent.inlineQuery.fields[1]] || 0,\n          \"change\": item.change\n        }\n        if (thisDataItem && thisDataItem.y !== \"null\") dataArrForDataObj.push(thisDataItem)\n      }\n    })\n    dataObjForSparkline.data = [...dataArrForDataObj]\n    //setApiContent([dataObjForSparkline])\n    return [dataObjForSparkline]\n  }\n\n  const upOrDownArrow = apiContent.length ? isNaN((apiContent[0].data[0].change * 100).toFixed(2)) ? '' : parseInt((apiContent[0].data[0].change * 100).toFixed(0)) >= 0 ? `&uarr;` : `&darr;` : '';\n  const labelText = !apiContent.length ? '' : lookerContent.chipFormat === \"revenue\" ?\n    `$${(apiContent[0].data && apiContent[0].data[0] ? apiContent[0].data[0].y.toFixed(2) : '').replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}` :\n    lookerContent.chipFormat === \"integer\" ? parseInt(apiContent[0].data && apiContent[0].data[0] ? apiContent[0].data[0].y.toFixed(2) : '') : lookerContent.chipFormat === 'percent' ?\n      `${((apiContent[0].data && apiContent[0].data[0] ? apiContent[0].data[0].y.toFixed(2) : '') * 100)\n      }% `\n      : '';\n  return (\n    <Card className={`${classes.padding15} ${classes.overflowHidden} `}\n      variant=\"outlined\"\n    >\n      <div\n        style={{\n          height: lookerContent.height,\n        }}\n      >\n        {apiContent.length ?\n          <React.Fragment>\n            <ApiHighlight height={140} classes={classes} >\n              <Grid container className={`${classes.textCenter} `}>\n                <Grid item sm={12}>\n                  <Typography variant=\"body2\" align=\"left\" color=\"secondary\">\n                    {lookerContent.label}\n                  </Typography>\n                </Grid>\n                <Grid item sm={6}>\n                  <Typography variant=\"subtitle1\" align=\"left\">\n                    <b>{labelText}</b>\n                  </Typography>\n                </Grid>\n                <Grid item sm={6}>\n                  <Chip size=\"small\"\n                    label={`${decodeHtml(upOrDownArrow)} ${parseInt(apiContent[0].data[0].change * 100).toFixed(0)}% `}\n                    className={isNaN((apiContent[0].data[0].change * 100).toFixed(2)) ? '' : parseInt((apiContent[0].data[0].change * 100).toFixed(0)) >= 0 ? classes.greenPos : classes.redNeg}\n                    display=\"inline\"\n                    align=\"right\"\n                  />\n                </Grid>\n              </Grid>\n              <ResponsiveLine\n                data={apiContent}\n                margin={{ top: 25, right: 25, bottom: 25, left: 25 }}\n                xScale={{\n                  type: 'time',\n                  format: '%Y-%m-%d',\n                  precision: 'day',\n                }}\n                yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                axisLeft={{\n                  orient: \"left\",\n                  tickSize: 0,\n                  tickPadding: 5,\n                  tickRotation: 0,\n                  format: () => null\n                }}\n                axisBottom={{\n                  orient: \"bottom\",\n                  tickSize: 0,\n                  tickPadding: 5,\n                  tickRotation: 0,\n                  format: () => null,\n                  // legend: lookerContent.label,\n                  // legendOffset: 15,\n                  // legendPosition: 'middle'\n                }}\n                enablePoints={false}\n                enableGridX={false}\n                enableGridY={false}\n                height={100}\n                colors={lookerContent.visColor}\n                animate={true}\n              />\n            </ApiHighlight>\n          </React.Fragment>\n          :\n          <Grid item sm={12} className={`${classes.flexCentered} `} style={{ height: lookerContent.height }}>\n            <CircularProgress className={classes.circularProgress}\n              style={{ color: `${lookerContent.visColor} ` }} />\n          </Grid>\n        }\n      </div >\n    </Card>\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Grid, CircularProgress, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst { validIdHelper, decodeHtml } = require('../../../tools');\n\nexport function NaturalLanguage({ lookerContent, item, index, classes }) {\n  const [apiContent, setApiContent] = useState(undefined);\n  const { userProfile, lookerUser, show } = useContext(AppContext)\n\n  useEffect(() => {\n    let isSubscribed = true\n    runInlineQuery().then(response => {\n      if (isSubscribed) {\n        setApiContent(response)\n      }\n    })\n    return () => isSubscribed = false\n  }, [item, lookerUser]);\n\n  const runInlineQuery = async () => {\n    setApiContent(undefined)\n    let inlineQuery = item;\n    let stringifiedQuery = encodeURIComponent(JSON.stringify(inlineQuery))\n    let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    // setApiContent(lookerResponseData.queryResults[0])\n    return lookerResponseData.queryResults[0];\n  }\n\n  const upOrDownArrow = apiContent ? apiContent.change > 0 ? `&uarr;` : `&darr;` : '';\n\n  return (\n    <Grid item sm={12}>\n      {apiContent ?\n        <React.Fragment >\n          <ApiHighlight classes={classes} >\n            <Typography variant=\"subtitle1\" display=\"inline\">\n              Your {lookerContent.inlineQueriesMap[index]} category, <b>{apiContent['products.category']}</b>, is {apiContent.change > 0 ? 'up ' : 'down '}\n            </Typography>\n            <Chip size=\"small\"\n              label={`${decodeHtml(upOrDownArrow)} ${parseInt(apiContent.change * 100).toFixed(0)}% `}\n              className={apiContent.change > 0 ? classes.greenPos : classes.redNeg}\n              display=\"inline\"\n            />\n            <Typography variant=\"subtitle1\" display=\"inline\">\n              &nbsp;over the past week.\n        </Typography>\n          </ApiHighlight>\n        </React.Fragment>\n        : <div style={{ height: '56px' }}></div>\n\n        // <Grid item sm={12} >\n        //   <Card className={`${classes.card} ${classes.flexCentered}`}>\n        //     <CircularProgress className={classes.circularProgress}\n        //       style={{ color: `${lookerContent.visColor} ` }} />\n        //   </Card>\n        // </Grid>\n      }\n    </Grid >\n  );\n}\n\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { NaturalLanguage } from './NaturalLanguage';\nconst { validIdHelper } = require('../../../tools');\n\nexport function Welcome({ lookerContent, classes }) {\n  // console.log('Welcome')\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    // setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  return (\n    <div\n      className={`${classes.overflowScroll} ${classes.padding15}`}\n      style={{ maxHeight: lookerContent.height }}\n    >\n      <Typography variant=\"h4\">Welcome back</Typography>\n      <br />\n      <Typography variant=\"subtitle1\" display=\"inline\">\n        Hi <b>{userProfile.givenName}</b>, hope you're having a good day. Here are a few things you might want to know.\n      </Typography>\n      <br />\n      <>\n        {lookerContent.inlineQueries.map((item, index) => (\n          <NaturalLanguage\n            key={`${validIdHelper('naturalLanguage-splashPage-' + index)}`}\n            {...{ lookerContent, item, index, classes }}\n          />\n        )\n        )}\n      </>\n    </div >\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Grid, CircularProgress, Divider, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport function VectorThumbnail({ lookerContent, classes, item, handleMenuItemSelect, index }) {\n  const [svg, setSvg] = useState(undefined)\n  const { userProfile, lookerUser, show } = useContext(AppContext)\n\n  useEffect(() => {\n    let isSubscribed = true\n    getThumbnail().then(response => {\n      if (isSubscribed) {\n        setSvg(response)\n      }\n    })\n    return () => isSubscribed = false\n  }, [item, lookerUser]);\n\n  const getThumbnail = async () => {\n    let lookerResponse = await fetch(`/getthumbnail/${item.resourceType}/${item.id}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    const blob = new Blob([lookerResponseData.svg], { type: 'image/svg+xml' });\n    let url = URL.createObjectURL(blob);\n    // setSvg(url)\n    return url;\n  }\n\n  return (\n    <Grid container\n      onClick={() => handleMenuItemSelect(item.id, 1)}\n      className={`${classes.cursorPointer}`}\n      spacing={3}\n    >\n      {svg ?\n        <>\n          <Grid item sm={1} />\n          <Grid item sm={6}>\n            <ApiHighlight classes={classes}>\n              <div\n                className={` ${classes.maxHeight75} ${classes.textCenter} ${classes.cursorPointer} ${classes.overflowHidden}`}\n              >\n                <img\n                  onClick={() => handleMenuItemSelect(item.id, 1)}\n                  src={svg}\n                  style={{ width: '100%' }}\n                />\n\n              </div>\n            </ApiHighlight>\n          </Grid>\n          <Grid item sm={4}>\n            <Typography variant=\"subtitle1\"  >{item.label}</Typography>\n          </Grid>\n          {index < 2 ?\n            <Grid item sm={12}>\n              <Divider className={`${classes.divider} ${classes.mb12} ${classes.mt12}`} />\n            </Grid> : ''}\n        </>\n        :\n        ''\n      }\n    </Grid >\n\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ResponsiveLine } from '@nivo/line';\nimport { VectorThumbnail } from './VectorThumbnail';\nimport { NaturalLanguage } from './NaturalLanguage';\nconst { validIdHelper } = require('../../../tools');\n\n\n\nexport function PopularAnalysis({ lookerContent, classes, handleMenuItemSelect }) {\n  const [apiContent, setApiContent] = useState([]);\n\n  return (\n\n    <Card className={classes.padding15}\n      variant=\"outlined\"\n    >\n      <div\n        className={`${classes.overflowYScroll}`}\n        style={{ height: lookerContent.height }}\n      >\n        <Grid container\n          spacing={3}>\n          <Grid item sm={12}>\n            <Typography variant=\"h6\" align=\"center\" color=\"secondary\">\n              Helpful Dashboards\n          </Typography></Grid>\n          {lookerContent.vectors.map((item, index) => {\n            return (\n              <VectorThumbnail\n                key={`${validIdHelper('vectorThumbnail-splashPage-' + index)}`}\n                {...{ lookerContent, item, classes, handleMenuItemSelect, index }}\n              />\n            )\n          }\n          )}\n        </Grid>\n\n      </div >\n    </Card>\n  );\n}\n","import $ from 'jquery';\nimport React, { useEffect, useRef, useCallback, useState, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport { Typography, Grid, Card, CircularProgress, Box, Chip } from '@material-ui/core';\n\nexport function EmbeddedDashboard({ lookerContent, classes, id, lookerHost }) {\n\n  const [iFrameExists, setIFrame] = useState(0);\n  const { userProfile, lookerUser, show } = useContext(AppContext)\n\n  useEffect(() => {\n    $(`#${id}`).html('')\n    setIFrame(0)\n    LookerEmbedSDK.createDashboardWithId(lookerContent.slug)\n      .appendTo(document.getElementById(id))\n      .withClassName('dashboard')\n      .withClassName('splashPage')\n      .withClassName(lookerContent.id)\n      // .withNext()\n      .withTheme('atom_fashion')\n      .build()\n      .connect()\n      .then((look) => {\n        setIFrame(1)\n        LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n      })\n      .catch((error) => {\n        console.error('Connection error', error)\n      })\n  }, [lookerUser])\n\n  return (\n\n    <Card className={classes.padding15}\n      variant=\"outlined\"\n    >\n      <div\n        // className={`${classes.overflowYScroll}`}\n        style={{ height: lookerContent.height }}\n      >\n        {\n          iFrameExists ? '' :\n\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered} ${classes.maxHeight400} ${classes.overflowHidden}`} elevation={0}>\n                <CircularProgress className={classes.circularProgress}\n                />\n              </Card>\n            </Grid>\n        }\n        <Grid container spacing={3}>\n          <Grid item sm={12}>\n            <EmbedHighlight classes={classes} height={iFrameExists ? 380 : 0}>\n              <div\n                className={`embedContainer embedContainerNoHeader splashPage`}\n                id={id}\n                key={id}\n              >\n              </div>\n            </EmbedHighlight>\n          </Grid></Grid>\n      </div >\n    </Card >\n  );\n}","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider, Hidden } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nconst { validIdHelper } = require('../../../tools');\n\n\n\nexport function ContentCarousel({ lookerContent, classes }) {\n  // console.log('Welcome')\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    // setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  const blogImage = require(`../../../images/atom_splash_blog.jpg`)\n  const blogTitle = 'Blog'\n  const blogBody = 'Read our latest thoughts on the ecommerce landscape'\n  const inventoryImage = require(`../../../images/atom_splash_inventory.jpg`)\n  const inventoryTitle = 'Inventory Best Practices'\n  const inventoryBody = 'McKinsey & Co found in a recent study that retailers who implement JIT inventory and fulfillment practices can result in 5 - 15% longer run operating margin vs similar competitors that don’t while maintaining similar CSAT scores'\n  const trendsImage = require(`../../../images/atom_splash_trends.jpg`)\n  const trendsTitle = 'Macro Trends'\n  const trendsBody = 'Online and brick and mortar retailers are rapidly converging on Omni Channel where the traditional walls of retail vs online are blurred. Amazon partners with Kohls to create in person returns and Walmart acquires Jet.com to boost its reach and  ability to execute an online strategy. As a brand partner how do you capitalize on these trends?'\n\n  return (\n    <div\n      className={`${classes.overflowHidden}  MuiPaper-rounded`}\n      style={{\n        maxHeight: lookerContent.height,\n        borderRadius: '4px'\n      }}\n    >\n\n      <Carousel infiniteLoop={true} autoPlay={true} showThumbs={false}>\n        <div\n          style={{\n            maxHeight: lookerContent.height,\n            // backgroundImage: `url(${backgroundImage1})`,\n            // backgroundSize: 'cover'\n          }}\n        >\n          <img src={blogImage} />\n          <p className={`legend ${classes.carouselLegend}`}>\n            <span className={`${classes.carouselLegendTitle}`}>{blogTitle}</span>\n            <br />\n            <span className={`${classes.carouselLegendBody}`}>{`${blogBody.substring(0, 50)}...`}</span>\n          </p>\n        </div>\n        <div\n          style={{\n            maxHeight: lookerContent.height,\n            // backgroundImage: `url(${backgroundImage2})`,\n            // backgroundSize: 'cover'\n          }}\n        >\n          <img src={inventoryImage} />\n          <p className={`legend ${classes.carouselLegend}`}>\n            <span className={`${classes.carouselLegendTitle}`}>{inventoryTitle}</span>\n            <br />\n            <span className={`${classes.carouselLegendBody}`}>{`${inventoryBody.substring(0, 50)}...`}</span>\n          </p>\n        </div>\n        <div\n          style={{\n            maxHeight: lookerContent.height,\n            // backgroundImage: `url(${backgroundImage3})`,\n            // backgroundSize: 'cover'\n          }}\n        >\n          <img src={trendsImage} />\n          <p className={`legend ${classes.carouselLegend}`}>\n            <span className={`${classes.carouselLegendTitle}`}>{trendsTitle}</span>\n            <br />\n            <span className={`${classes.carouselLegendBody}`}>{`${trendsBody.substring(0, 50)}...`}</span>\n          </p>\n        </div>\n      </Carousel>\n    </div >\n  );\n}\n\n// export function createMarkup() {\n//   return { __html: 'First &middot; Second' };\n// }\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid } from '@material-ui/core';\nimport { Code, HighlightOutlined } from '@material-ui/icons';\nimport clsx from 'clsx';\n\nimport AppContext from '../../AppContext';\n\n\nexport default function BottomBar(props) {\n  // console.log('BottomBar')\n  // console.log('props', props)\n\n  const { classes } = props\n  const { toggleShow } = useContext(AppContext)\n  const { toggleCodeShow } = useContext(AppContext)\n\n  return (\n    <Grid container\n      className={`${classes.mtAuto} ${classes.mb10}`}>\n      <Grid item sm={6}>\n        <Button\n          display=\"inline\"\n          startIcon={<HighlightOutlined />}\n          onClick={toggleShow}>Source\n      </Button>\n      </Grid>\n      <Grid item sm={6}>\n        <Button\n          className={`${classes.ml12}`}\n          display=\"inline\"\n          startIcon={<Code />}\n          onClick={toggleCodeShow}>Code\n      </Button>\n      </Grid>\n    </Grid >\n  );\n}\n","//imports\nimport $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, Divider } from '@material-ui/core'\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./SplashPage.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport { SingleValueVis } from './SingleValueVis';\nimport { Welcome } from './Welcome';\nimport { PopularAnalysis } from './PopularAnalysis';\nimport { EmbeddedLook } from './EmbeddedLook';\nimport { EmbeddedDashboard } from './EmbeddedDashboard';\nimport { ContentCarousel } from './ContentCarousel';\nimport BottomBar from '../../Material/BottomBar.js'\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\n//start of SplashPage Component\nexport default function SplashPage(props) {\n  // console.log('SplashPage')\n  //intialize state using hooks\n  const topBarBottomBarHeight = 112;\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(1);\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n\n  const { toggleShow } = useContext(AppContext)\n  const { show } = useContext(AppContext)\n  const { codeShow } = useContext(AppContext)\n\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, handleTabChange, handleMenuItemSelect, lookerUser, lookerHost } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  const demoComponentType = type || 'code flyout';\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  /**\n   * listen for lookerContent and call \n   * setSampleCode\n  */\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n  }, [lookerContent]);\n\n  /**\n   * What this return  does:\n   * Rendering of actual html elements,\n   * this section is necessary but less relevant to looker functionality itself\n   */\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowScroll}`}\n      >\n        <Grid container\n          key={validIdHelper(type)}>\n          <div className={classes.root}>\n            {iFrameExists ? '' :\n              <Grid item sm={12} >\n                <Card className={`${classes.card} ${classes.flexCentered}`}>\n                  <CircularProgress className={classes.circularProgress} />\n                </Card>\n              </Grid>\n            }\n            <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n              <Grid container\n                spacing={3}\n                key={`${validIdHelper(demoComponentType + '-outerFragment')}`}\n                className={`${classes.noContainerScroll}`}\n              >\n                {\n                  codeShow ? <Grid item sm={6}\n                    className={`${classes.positionFixedTopRight}`}\n                  >\n                    <CodeFlyout {...props}\n                      classes={classes}\n                      lookerUser={lookerUser}\n                      height={height}\n                    />\n                  </Grid> : ''}\n                {lookerContent.map((lookerContent, innerIndex) => {\n                  return (\n                    <Grid\n                      key={`${validIdHelper(demoComponentType + '-innerFragment-' + innerIndex)}`}\n                      item\n                      sm={parseInt(lookerContent.gridWidth)}\n                    >\n                      {(lookerContent.type === 'welcome') && <Welcome\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\n                      />}\n                      {(lookerContent.type === 'carousel') && <ContentCarousel\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\n                      />}\n                      {(lookerContent.type === 'single value') && <SingleValueVis\n                        {...{ lookerContent, classes, demoComponentType, lookerHost }}\n                      />}\n                      {(lookerContent.type === 'dashboard') && <EmbeddedDashboard\n                        {...{ lookerContent, classes, lookerHost }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\n                      />}\n                      {(lookerContent.type === 'popular analysis') && <PopularAnalysis\n                        {...{ lookerContent, classes, demoComponentType, handleMenuItemSelect, lookerHost }}\n                      />}\n                    </Grid>\n                  )\n                })}\n              </Grid>\n            </Box >\n          </div >\n        </Grid >\n      </Card >\n    </div >\n  )\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: '8px'\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    // position: 'absolute', //hack for obscuring other elements within Box\n    // zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  mrAuto: {\n    marginRight: 'auto'\n  },\n  card: {\n    minWidth: 275,\n    // minHeight: 400,\n  },\n  padding30: {\n    padding: 30\n  },\n  minHeight680: {\n    minHeight: 680,\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  skeleton: {\n    height: 160,\n    width: '100%'\n  },\n  height100Percent: {\n    height: '100%'\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  padding10: {\n    padding: 10\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  }\n}));","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport function NumberToColoredPercent( {val, positive_good, abs_val}) {\n  const colors = {\n    up: (positive_good) ? 'green' : 'red',\n    down: (positive_good) ? 'red' : 'green'\n  }\n  const color = (val<0) ? colors.down : (val>0) ? colors.up : 'black'\n  const val_formatted = Math.abs(val).toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 2 })\n  const icon = (val<0) ? '▼' : (val>0) ? '▲' : '—'\n  \n  return (<>\n      <font\n        color={color}\n      >\n        {`${icon} ${val_formatted}`}\n      </font>\n  </>\n  )\n}","import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField, Toolbar, FormControlLabel, Switch, Chip,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails\n} from '@material-ui/core'\nimport { Autocomplete, ToggleButton, ToggleButtonGroup, Skeleton } from '@material-ui/lab'\nimport { ExpandMore, FilterList } from '@material-ui/icons';\n\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./Dashboard.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport BottomBar from '../../Material/BottomBar.js'\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport { NumberToColoredPercent } from '../../Accessories/NumberToColoredPercent';\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\nexport default function Dashboard(props) {\n  const topBarBottomBarHeight = 112;\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState([]);\n  const [dashboardObj, setDashboardObj] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const [toggleValue, setToggleValue] = useState('');\n  const [dashboardLayout, setDashboardLayout] = useState({});\n  const [regionValue, setRegionValue] = useState('All');\n  const { codeShow, toggleCodeShow } = useContext(AppContext)\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n\n  const classes = useStyles();\n  const { staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\n  const demoComponentType = type || 'code flyout';\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  const handleToggle = (event, newValue) => {\n    setToggleValue(newValue)\n    const filteredLayout = _.filter(dashboardLayout.dashboard_layout_components, (row) => {\n      return (lookerContent[0].dynamicFieldLookUp[newValue].indexOf(row.dashboard_element_id) > -1)\n    })\n    const newDashboardLayout = {\n      ...dashboardLayout,\n      dashboard_layout_components: filteredLayout\n    }\n    dashboardObj.setOptions({ \"layouts\": [newDashboardLayout] })\n  };\n\n  useEffect(() => {\n    setTimeout(() => performLookerApiCalls([...lookerContent]), 1000)\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n\n  useEffect(() => {\n    if (Object.keys(dashboardLayout).length && Object.keys(dashboardObj).length && lookerContent[0].dynamicFieldLookUp) {\n      handleToggle(null, Object.keys(lookerContent[0].dynamicFieldLookUp)[0])\n    }\n  }, [dashboardLayout]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n  })\n\n  const performLookerApiCalls = function (lookerContent) {\n    $(`.embedContainer.${validIdHelper(demoComponentType)}:visible`).html('')\n    setIFrame(0)\n    setApiContent([])\n    lookerContent.map(async lookerContent => {\n      let dashboardId = lookerContent.id;\n      // let dashboardSlug = lookerContent.slug;\n      LookerEmbedSDK.createDashboardWithId(dashboardId) //dashboardSlug\n        .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${dashboardId}`))\n        .withClassName('iframe')\n        .withNext()\n        // .withNext(lookerContent.isNext || false) //how can I make this dynamic based on prop??\n        .withTheme(lookerContent.theme || 'atom_fashion')\n        .withParams({ 'schedule_modal': 'true' })\n        .on('page:property:change', (event) => {\n          // console.log('page property is changing!!!!')\n          changeHeight(event)\n        }) // dashboards-next\n        .on('dashboard:loaded', (event) => {\n          setDashboardLayout(event.dashboard.options.layouts[0])\n        })\n        // .on('drillmenu:click', (event) => {\n        //   drillMenuClick(event)\n        // })\n        .build()\n        .connect()\n        .then((dashboard) => {\n          setIFrame(1)\n          setDashboardObj(dashboard)\n          LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n\n        })\n        .catch((error) => {\n          // console.error('Connection error', error)\n        })\n\n      if (lookerContent.hasOwnProperty('filters')) {\n        //get inline query from usecase file & set user attribute dynamically\n        //iterating over filters\n        let orderedArrayForApiContent = []\n        lookerContent.filters.map(async (item, index) => {\n          // console.log('item', item)\n          let jsonQuery = lookerContent.inlineQueries[index];\n          jsonQuery.filters = {\n            ...jsonQuery.filters,\n            [item.desiredFilterName]: lookerUser.user_attributes.brand\n          };\n          let stringifiedQuery = encodeURIComponent(JSON.stringify(jsonQuery))\n          let lookerResponse = await fetch('/runinlinequery/' + stringifiedQuery + '/json', {\n            method: 'GET',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            }\n          })\n          let lookerResponseData = await lookerResponse.json();\n          let queryResultsForDropdown = [];\n          let desiredProperty = Object.keys(lookerResponseData.queryResults[0])[0];\n\n          for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\n            queryResultsForDropdown.push({\n              'label': lookerResponseData.queryResults[i][desiredProperty],\n              'trend': (lookerResponseData.queryResults[i]['trend']) ? lookerResponseData.queryResults[i]['trend'] : undefined\n            })\n          }\n\n\n          // setApiContent(apiContent => {\n          //   return [...apiContent, queryResultsForDropdown]\n          // });\n          //needed solution for ordering apiContent to match order\n          //of content from usecaseContent\n\n          orderedArrayForApiContent[index] = queryResultsForDropdown\n          setApiContent([...orderedArrayForApiContent])\n\n          if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\n        })\n      }\n\n    })\n  }\n\n  const customFilterAction = (dashboardId, filterName, newFilterValue) => {\n    if (Object.keys(dashboardObj).length) {\n      dashboardObj.updateFilters({ [filterName]: newFilterValue })\n      dashboardObj.run()\n    }\n  }\n\n  // const drillMenuClick = (event) => {\n  //   const basicLookerUser = lookerUser.user_attributes.permission_level === 'basic' ? true : false;\n  //   if (basicLookerUser) {\n  //     togglePayWallModal()\n  //     return { cancel: (basicLookerUser) ? true : false }\n  //   }\n  // }\n\n  const changeHeight = (event) => {\n    // console.log('changeHeight')\n    // console.log('event', event)\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`${classes.padding30} ${classes.height100Percent}`}>\n        <Grid container>\n          <div className={`${classes.root}`}>\n            {lookerContent[0].hasOwnProperty(\"filters\") &&\n              apiContent.length === lookerContent[0].filters.length ?\n              <Grid item\n                sm={12}\n                key={validIdHelper(`${demoComponentType}-FilterBar-${lookerContent[0].id}`)}\n              >\n                <FilterBar {...props}\n                  classes={classes}\n                  apiContent={apiContent}\n                  customFilterAction={customFilterAction}\n                  regionValue={regionValue}\n                  setRegionValue={setRegionValue}\n                  toggleValue={toggleValue}\n                  handleToggle={handleToggle}\n                />\n              </Grid> :\n              lookerContent[0].hasOwnProperty(\"filters\") ?\n                <Skeleton variant=\"rect\" animation=\"wave\" className={classes.skeleton} /> :\n                ''}\n\n\n            {\n              iFrameExists\n                ? ''\n                :\n                <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                  <Card className={`${classes.card} ${classes.flexCentered}`}\n                    elevation={0}\n                    mt={2}\n                    style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                    <CircularProgress className={classes.circularProgress} />\n                  </Card>\n                </Grid>\n            }\n            <Box\n              className={iFrameExists ? ` ` : `${classes.hidden} `}\n              style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}\n            >\n              <Grid container\n                spacing={3}\n                className={`${classes.noContainerScroll}`}>\n                {codeShow ?\n                  <Grid item sm={6}\n                    className={`${classes.positionFixedTopRight}`}\n                  >\n                    <CodeFlyout {...props}\n                      classes={classes}\n                      lookerUser={lookerUser}\n                      height={height}\n                    />\n                  </Grid>\n                  : ''}\n                <Grid item sm={12}>\n\n                  <Box className={`${classes.w100} ${classes.padding10}`} mt={lookerContent[0].filter || lookerContent[0].dynamicFieldLookUp ? 2 : 0}>\n\n\n                    <EmbedHighlight classes={classes}>\n                      <div\n                        className={`embedContainer ${validIdHelper(demoComponentType)}`}\n                        id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent[0].id}`)}\n                        key={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent[0].id}`)}\n                      >\n                      </div>\n                    </EmbedHighlight>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Box>\n          </div>\n        </Grid>\n      </Card>\n    </div>\n  )\n}\n\n\n\n\nfunction FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\n    apiContent, customFilterAction, regionValue, setRegionValue, toggleValue, handleToggle } = props;\n\n  const [expanded, setExpanded] = useState(true);\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n  return (\n\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100} elevation={0}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMore />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <FilterList /><Typography className={`${classes.heading} ${classes.ml12}`}>Filter:</Typography>\n\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        {\n          lookerContent[0].filters || lookerContent[0].dynamicFieldLookUp ?\n            <Grid\n              container>\n              {apiContent.map((item, index) => {\n                return (\n                  lookerContent[0].filterComponents[index] === 'autocomplete' ?\n                    <ApiHighlight classes={classes}\n                      key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\n                      <Grid item sm={6}>\n                        <Autocomplete\n                          id={`combo-box-dashboard-${lookerContent.id}`}\n                          options={Array.isArray(apiContent[index]) ?\n                            apiContent[index] :\n                            []}\n                          renderOption={(option) => (\n                            <Grid container justify=\"space-between\">\n                              <Grid item>\n                                {option.label}\n                              </Grid>\n                              {option.trend && <Grid item>\n                                <NumberToColoredPercent\n                                  val={option.trend}\n                                  positive_good={true}\n                                  abs_val={Math.abs(option.trend)}\n                                />\n                              </Grid>}\n                            </Grid>\n                          )}\n                          getOptionLabel={(option) => option.label}\n                          style={{ width: 400 }}\n                          onChange={(event, newValue) => {\n                            customFilterAction(lookerContent[0].id,\n                              lookerContent[0].filters[index].filterName,\n                              (newValue) ? newValue.label : '')\n                          }}\n                          renderInput={(params) => <TextField {...params} label={lookerContent[0].filters[index].filterName} variant=\"outlined\" />}\n                          loadingText=\"Loading...\"\n                        />\n                      </Grid>\n                    </ApiHighlight>\n                    : lookerContent[0].filterComponents[index] === 'togglebutton' ?\n\n                      <ApiHighlight classes={classes}\n                        key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\n                        <Grid item sm={12}>\n                          <ToggleButtonGroup\n                            value={regionValue}\n                            exclusive\n                            onChange={(event, newValue) => {\n                              setRegionValue(newValue)\n                              customFilterAction(lookerContent[0].id,\n                                lookerContent[0].filters[index].filterName,\n                                (newValue) ? newValue : '')\n                            }}\n                            aria-label=\"region\"\n                          >\n                            {apiContent[index].map((region, index) => {\n                              return (\n                                <ToggleButton\n                                  key={validIdHelper(`${type}-FilterBar-ToggleButton-${lookerContent[0].id}-${index}`)}\n                                  value={region.label} aria-label={region.label}>\n                                  {region.label}\n                                </ToggleButton>\n                              )\n                            })}\n                          </ToggleButtonGroup>\n                        </Grid>\n                      </ApiHighlight>\n                      : 'ooooopppp')\n              })}\n              <Grid item sm={1} />\n              {lookerContent[0].dynamicFieldLookUp ?\n                <EmbedHighlight classes={classes} >\n                  <Grid item sm={5}>\n                    <ToggleButtonGroup\n                      value={toggleValue}\n                      exclusive\n                      onChange={handleToggle}\n                      aria-label=\"text alignment\"\n                    >\n                      {Object.keys(lookerContent[0].dynamicFieldLookUp).map(key => {\n                        return (\n                          <ToggleButton\n                            key={validIdHelper(`dynamicDashToggle-${key}`)}\n                            value={key} aria-label=\"left aligned\">\n                            {key}\n                          </ToggleButton>\n                        )\n                      })}\n                    </ToggleButtonGroup>\n                  </Grid>\n                </EmbedHighlight>\n                : ''\n              }\n            </Grid> : ''\n        }\n      </ExpansionPanelDetails>\n    </ExpansionPanel >\n  )\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField, Toolbar, FormControlLabel, Switch, Chip,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails\\n} from '@material-ui/core'\\nimport { Autocomplete, ToggleButton, ToggleButtonGroup, Skeleton } from '@material-ui/lab'\\nimport { ExpandMore, FilterList } from '@material-ui/icons';\\n\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./Dashboard.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport BottomBar from '../../Material/BottomBar.js'\\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\\nimport { NumberToColoredPercent } from '../../Accessories/NumberToColoredPercent';\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\nexport default function Dashboard(props) {\\n  const topBarBottomBarHeight = 112;\\n  const [value, setValue] = useState(0);\\n  const [iFrameExists, setIFrame] = useState(0);\\n  const [apiContent, setApiContent] = useState([]);\\n  const [dashboardObj, setDashboardObj] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const [toggleValue, setToggleValue] = useState('');\\n  const [dashboardLayout, setDashboardLayout] = useState({});\\n  const [regionValue, setRegionValue] = useState('All');\\n  const { codeShow, toggleCodeShow } = useContext(AppContext)\\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\\n\\n  const classes = useStyles();\\n  const { staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  const handleToggle = (event, newValue) => {\\n    setToggleValue(newValue)\\n    const filteredLayout = _.filter(dashboardLayout.dashboard_layout_components, (row) => {\\n      return (lookerContent[0].dynamicFieldLookUp[newValue].indexOf(row.dashboard_element_id) > -1)\\n    })\\n    const newDashboardLayout = {\\n      ...dashboardLayout,\\n      dashboard_layout_components: filteredLayout\\n    }\\n    dashboardObj.setOptions({ \\\"layouts\\\": [newDashboardLayout] })\\n  };\\n\\n  useEffect(() => {\\n    setTimeout(() => performLookerApiCalls([...lookerContent]), 1000)\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent, lookerUser]);\\n\\n\\n  useEffect(() => {\\n    if (Object.keys(dashboardLayout).length && Object.keys(dashboardObj).length && lookerContent[0].dynamicFieldLookUp) {\\n      handleToggle(null, Object.keys(lookerContent[0].dynamicFieldLookUp)[0])\\n    }\\n  }, [dashboardLayout]);\\n\\n  useEffect(() => {\\n    window.addEventListener(\\\"resize\\\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\\n  })\\n\\n  const performLookerApiCalls = function (lookerContent) {\\n    $(`.embedContainer.${validIdHelper(demoComponentType)}:visible`).html('')\\n    setIFrame(0)\\n    setApiContent([])\\n    lookerContent.map(async lookerContent => {\\n      let dashboardId = lookerContent.id;\\n      // let dashboardSlug = lookerContent.slug;\\n      LookerEmbedSDK.createDashboardWithId(dashboardId) //dashboardSlug\\n        .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${dashboardId}`))\\n        .withClassName('iframe')\\n        .withNext()\\n        // .withNext(lookerContent.isNext || false) //how can I make this dynamic based on prop??\\n        .withTheme(lookerContent.theme || 'atom_fashion')\\n        .withParams({ 'schedule_modal': 'true' })\\n        .on('page:property:change', (event) => {\\n          // console.log('page property is changing!!!!')\\n          changeHeight(event)\\n        }) // dashboards-next\\n        .on('dashboard:loaded', (event) => {\\n          setDashboardLayout(event.dashboard.options.layouts[0])\\n        })\\n        // .on('drillmenu:click', (event) => {\\n        //   drillMenuClick(event)\\n        // })\\n        .build()\\n        .connect()\\n        .then((dashboard) => {\\n          setIFrame(1)\\n          setDashboardObj(dashboard)\\n          LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n\\n        })\\n        .catch((error) => {\\n          // console.error('Connection error', error)\\n        })\\n\\n      if (lookerContent.hasOwnProperty('filters')) {\\n        //get inline query from usecase file & set user attribute dynamically\\n        //iterating over filters\\n        let orderedArrayForApiContent = []\\n        lookerContent.filters.map(async (item, index) => {\\n          // console.log('item', item)\\n          let jsonQuery = lookerContent.inlineQueries[index];\\n          jsonQuery.filters = {\\n            ...jsonQuery.filters,\\n            [item.desiredFilterName]: lookerUser.user_attributes.brand\\n          };\\n          let stringifiedQuery = encodeURIComponent(JSON.stringify(jsonQuery))\\n          let lookerResponse = await fetch('/runinlinequery/' + stringifiedQuery + '/json', {\\n            method: 'GET',\\n            headers: {\\n              Accept: 'application/json',\\n              'Content-Type': 'application/json'\\n            }\\n          })\\n          let lookerResponseData = await lookerResponse.json();\\n          let queryResultsForDropdown = [];\\n          let desiredProperty = Object.keys(lookerResponseData.queryResults[0])[0];\\n\\n          for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\\n            queryResultsForDropdown.push({\\n              'label': lookerResponseData.queryResults[i][desiredProperty],\\n              'trend': (lookerResponseData.queryResults[i]['trend']) ? lookerResponseData.queryResults[i]['trend'] : undefined\\n            })\\n          }\\n\\n\\n          // setApiContent(apiContent => {\\n          //   return [...apiContent, queryResultsForDropdown]\\n          // });\\n          //needed solution for ordering apiContent to match order\\n          //of content from usecaseContent\\n\\n          orderedArrayForApiContent[index] = queryResultsForDropdown\\n          setApiContent([...orderedArrayForApiContent])\\n\\n          if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\\n        })\\n      }\\n\\n    })\\n  }\\n\\n  const customFilterAction = (dashboardId, filterName, newFilterValue) => {\\n    if (Object.keys(dashboardObj).length) {\\n      dashboardObj.updateFilters({ [filterName]: newFilterValue })\\n      dashboardObj.run()\\n    }\\n  }\\n\\n  // const drillMenuClick = (event) => {\\n  //   const basicLookerUser = lookerUser.user_attributes.permission_level === 'basic' ? true : false;\\n  //   if (basicLookerUser) {\\n  //     togglePayWallModal()\\n  //     return { cancel: (basicLookerUser) ? true : false }\\n  //   }\\n  // }\\n\\n  const changeHeight = (event) => {\\n    // console.log('changeHeight')\\n    // console.log('event', event)\\n  }\\n\\n  return (\\n    <div className={`${classes.root} demoComponent`}\\n      style={{ height }}>\\n      <Card elevation={1} className={`${classes.padding30} ${classes.height100Percent}`}>\\n        <Grid container>\\n          <div className={`${classes.root}`}>\\n            {lookerContent[0].hasOwnProperty(\\\"filters\\\") &&\\n              apiContent.length === lookerContent[0].filters.length ?\\n              <Grid item\\n                sm={12}\\n                key={validIdHelper(`${demoComponentType}-FilterBar-${lookerContent[0].id}`)}\\n              >\\n                <FilterBar {...props}\\n                  classes={classes}\\n                  apiContent={apiContent}\\n                  customFilterAction={customFilterAction}\\n                  regionValue={regionValue}\\n                  setRegionValue={setRegionValue}\\n                  toggleValue={toggleValue}\\n                  handleToggle={handleToggle}\\n                />\\n              </Grid> :\\n              lookerContent[0].hasOwnProperty(\\\"filters\\\") ?\\n                <Skeleton variant=\\\"rect\\\" animation=\\\"wave\\\" className={classes.skeleton} /> :\\n                ''}\\n\\n\\n            {\\n              iFrameExists\\n                ? ''\\n                :\\n                <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                  <Card className={`${classes.card} ${classes.flexCentered}`}\\n                    elevation={0}\\n                    mt={2}\\n                    style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                    <CircularProgress className={classes.circularProgress} />\\n                  </Card>\\n                </Grid>\\n            }\\n            <Box\\n              className={iFrameExists ? ` ` : `${classes.hidden} `}\\n              style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}\\n            >\\n              <Grid container\\n                spacing={3}\\n                className={`${classes.noContainerScroll}`}>\\n                {codeShow ?\\n                  <Grid item sm={6}\\n                    className={`${classes.positionFixedTopRight}`}\\n                  >\\n                    <CodeFlyout {...props}\\n                      classes={classes}\\n                      lookerUser={lookerUser}\\n                      height={height}\\n                    />\\n                  </Grid>\\n                  : ''}\\n                <Grid item sm={12}>\\n\\n                  <Box className={`${classes.w100} ${classes.padding10}`} mt={lookerContent[0].filter || lookerContent[0].dynamicFieldLookUp ? 2 : 0}>\\n\\n\\n                    <EmbedHighlight classes={classes}>\\n                      <div\\n                        className={`embedContainer ${validIdHelper(demoComponentType)}`}\\n                        id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent[0].id}`)}\\n                        key={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent[0].id}`)}\\n                      >\\n                      </div>\\n                    </EmbedHighlight>\\n                  </Box>\\n                </Grid>\\n              </Grid>\\n            </Box>\\n          </div>\\n        </Grid>\\n      </Card>\\n    </div>\\n  )\\n}\\n\\n\\n\\n\\nfunction FilterBar(props) {\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\\n    apiContent, customFilterAction, regionValue, setRegionValue, toggleValue, handleToggle } = props;\\n\\n  const [expanded, setExpanded] = useState(true);\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n  return (\\n\\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100} elevation={0}>\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMore />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <FilterList /><Typography className={`${classes.heading} ${classes.ml12}`}>Filter:</Typography>\\n\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        {\\n          lookerContent[0].filters || lookerContent[0].dynamicFieldLookUp ?\\n            <Grid\\n              container>\\n              {apiContent.map((item, index) => {\\n                return (\\n                  lookerContent[0].filterComponents[index] === 'autocomplete' ?\\n                    <ApiHighlight classes={classes}\\n                      key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\\n                      <Grid item sm={6}>\\n                        <Autocomplete\\n                          id={`combo-box-dashboard-${lookerContent.id}`}\\n                          options={Array.isArray(apiContent[index]) ?\\n                            apiContent[index] :\\n                            []}\\n                          renderOption={(option) => (\\n                            <Grid container justify=\\\"space-between\\\">\\n                              <Grid item>\\n                                {option.label}\\n                              </Grid>\\n                              {option.trend && <Grid item>\\n                                <NumberToColoredPercent\\n                                  val={option.trend}\\n                                  positive_good={true}\\n                                  abs_val={Math.abs(option.trend)}\\n                                />\\n                              </Grid>}\\n                            </Grid>\\n                          )}\\n                          getOptionLabel={(option) => option.label}\\n                          style={{ width: 400 }}\\n                          onChange={(event, newValue) => {\\n                            customFilterAction(lookerContent[0].id,\\n                              lookerContent[0].filters[index].filterName,\\n                              (newValue) ? newValue.label : '')\\n                          }}\\n                          renderInput={(params) => <TextField {...params} label={lookerContent[0].filters[index].filterName} variant=\\\"outlined\\\" />}\\n                          loadingText=\\\"Loading...\\\"\\n                        />\\n                      </Grid>\\n                    </ApiHighlight>\\n                    : lookerContent[0].filterComponents[index] === 'togglebutton' ?\\n\\n                      <ApiHighlight classes={classes}\\n                        key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\\n                        <Grid item sm={12}>\\n                          <ToggleButtonGroup\\n                            value={regionValue}\\n                            exclusive\\n                            onChange={(event, newValue) => {\\n                              setRegionValue(newValue)\\n                              customFilterAction(lookerContent[0].id,\\n                                lookerContent[0].filters[index].filterName,\\n                                (newValue) ? newValue : '')\\n                            }}\\n                            aria-label=\\\"region\\\"\\n                          >\\n                            {apiContent[index].map((region, index) => {\\n                              return (\\n                                <ToggleButton\\n                                  key={validIdHelper(`${type}-FilterBar-ToggleButton-${lookerContent[0].id}-${index}`)}\\n                                  value={region.label} aria-label={region.label}>\\n                                  {region.label}\\n                                </ToggleButton>\\n                              )\\n                            })}\\n                          </ToggleButtonGroup>\\n                        </Grid>\\n                      </ApiHighlight>\\n                      : 'ooooopppp')\\n              })}\\n              <Grid item sm={1} />\\n              {lookerContent[0].dynamicFieldLookUp ?\\n                <EmbedHighlight classes={classes} >\\n                  <Grid item sm={5}>\\n                    <ToggleButtonGroup\\n                      value={toggleValue}\\n                      exclusive\\n                      onChange={handleToggle}\\n                      aria-label=\\\"text alignment\\\"\\n                    >\\n                      {Object.keys(lookerContent[0].dynamicFieldLookUp).map(key => {\\n                        return (\\n                          <ToggleButton\\n                            key={validIdHelper(`dynamicDashToggle-${key}`)}\\n                            value={key} aria-label=\\\"left aligned\\\">\\n                            {key}\\n                          </ToggleButton>\\n                        )\\n                      })}\\n                    </ToggleButtonGroup>\\n                  </Grid>\\n                </EmbedHighlight>\\n                : ''\\n              }\\n            </Grid> : ''\\n        }\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel >\\n  )\\n}\";","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst { validIdHelper, prettifyString } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 800,\n    maxHeight: 450,\n    overflow: 'scroll',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  table: {\n    maxHeight: 310\n  },\n  card: {\n    minWidth: 275,\n    minHeight: '10rem',\n    boxShadow: 'none'\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\nfunction getModalStyle() {\n  const top = 10 //+ rand();\n  const left = 50 //+ rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${left}%, -${top}%)`,\n  };\n}\n\nexport default function ModalTable(props) {\n  // console.log('ModalTable')\n  // console.log('props', props)\n\n  const classes = useStyles();\n  const { open, onClose, modalContent } = props;\n  const [modalStyle] = React.useState(getModalStyle);\n\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n\n      <div style={modalStyle} className={classes.paper}>\n        <h2 id=\"simple-modal-title\">{modalContent.title}</h2>\n        {modalContent.body ?\n          <TableContainer component={Paper} className={classes.table}>\n            <Table stickyHeader className={classes.table} size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  {Object.keys(modalContent.body[0]).map((key, index) => (\n                    <TableCell align=\"right\"\n                      key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n                      id={validIdHelper(key + '-TableHead-TableCell-' + index)}>\n                      {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}</TableCell>\n\n\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {modalContent.body.map((item, index) => (\n\n                  <TableRow\n                    key={validIdHelper('TableRow-' + index)}\n                    id={validIdHelper('TableRow-' + index)} >\n                    {\n                      Object.keys(item).map(key => (\n                        <TableCell align=\"right\"\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}>\n                          {\n                            modalContent.body[index][key] ?\n                              modalContent.body[index][key].rendered ?\n                                modalContent.body[index][key].rendered :\n                                modalContent.body[index][key].value ?\n                                  modalContent.body[index][key].value :\n                                  typeof modalContent.body[index][key] === 'number' ?\n                                    (Math.round(modalContent.body[index][key] * 100) / 100)//.toLocaleString()\n                                    :\n                                    modalContent.body[index][key] //.toLocaleString() \n                              :\n                              ''\n                          }\n                        </TableCell>\n                      ))\n                    }\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer >\n          :\n\n          <Card className={`${classes.card} ${classes.flexCentered}`}>\n            <CircularProgress className={classes.circularProgress} />\n          </Card>}\n\n      </div >\n    </Modal >\n  )\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: '8px'\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    // position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 400\n  },\n  height500: {\n    height: 500\n  },\n  height600: {\n    height: 600\n  },\n  height700: {\n    height: 700\n  },\n  height800: {\n    height: 800\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  skeleton: {\n    height: 160,\n    width: '100%'\n  },\n  padding30: {\n    padding: 30\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  height100Percent: {\n    height: '100%'\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  padding10: {\n    padding: 10\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  }\n}));","import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, InputLabel, MenuItem,\n  FormControl, Select, Modal\n} from '@material-ui/core'\nimport { Skeleton } from '@material-ui/lab';\nimport { ExpandMore, FilterList } from '@material-ui/icons';\nimport ModalTable from '../../Material/ModalTable';\nimport { ResponsiveCalendar } from '@nivo/calendar'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./CustomVis.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n//new date pickers\nimport { format, endOfDay, addDays } from 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\nexport default function CustomVis(props) {\n  // console.log('CustomVis')\n  const topBarBottomBarHeight = 112;\n  const [value, setValue] = useState(0);\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [category, setCategory] = useState('All')\n  const [desiredField, setDesiredField] = useState('')\n  const [apiContent, setApiContent] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [modalContent, setModalContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const { togglePayWallModal, show, codeShow } = useContext(AppContext)\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\n\n  //handle opening of modal for advanced and premium users\n  const handleModalOpen = async ({ day }) => {\n    let originalInlineQueryCopy = JSON.parse(JSON.stringify(lookerContent[0].inlineQuery));\n    originalInlineQueryCopy.filters = {\n      ...originalInlineQueryCopy.filters,\n      [originalInlineQueryCopy.fields[0]]: day,\n      [originalInlineQueryCopy.fields[1]]: category === \"All\" ? '' : category\n    }\n    originalInlineQueryCopy.total = true;\n    originalInlineQueryCopy.limit = \"25\";\n\n    setOpen(true);\n    let lookerResponse = await fetch('/runinlinequery/' + encodeURIComponent(JSON.stringify(originalInlineQueryCopy)) + '/json', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    let modalObj = {\n      \"title\": `Detail View for ${day}`,\n      \"body\": lookerResponseData.queryResults\n    }\n    setModalContent(modalObj);\n  };\n\n  //handle modal close\n  const handleModalClose = () => {\n    setModalContent({})\n    setOpen(false);\n  };\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  const handleFromDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setFromDate(newValueAsDate);\n    }\n  }\n  const handleToDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setToDate(newValueAsDate);\n    }\n  }\n\n  const handleCategory = newValue => {\n    setCategory(newValue)\n  }\n\n  const handleDesiredField = newValue => {\n    setDesiredField(newValue)\n  }\n\n  //format response from initial api call based on LookerContent array\n  //to match format required by Nivo Calendar component\n  let filterData = [];\n  if (apiContent.queryResults && apiContent.queryResults) {\n    //filtering for fromDate, toDate and category\n    filterData = _.filter(apiContent.queryResults, (row) => {\n      return (row[apiContent.inlineQuery.fields[0]] >= fromDate\n        && row[apiContent.inlineQuery.fields[0]] < toDate\n        && (category === 'All' ? true : row[apiContent.inlineQuery.fields[1]] === category)\n      )\n    })\n    //converting filterDAta to desired format for vis\n    filterData = filterData.map(item => {\n      return {\n        'day': item[apiContent.inlineQuery.fields[0]],\n        'category': item[apiContent.inlineQuery.fields[1]],\n        'value': item[desiredField]\n      }\n    })\n\n    //special exception for category all\n    //need to reduce array by day across categories\n    //destructuing in reduce of value would not work for dynamic var\n    if (category === 'All') {\n      //create array of all unique dates\n      const uniqueDates = [...new Set(filterData.map(item => item.day))];\n      let filteredAndReducedForAll = []\n      //iterate over unique date\n      uniqueDates.map(uniqueDate => {\n        //filter filterData for current unique date\n        let value = _.filter(filterData, row => {\n          return row.day === uniqueDate\n        }).reduce((acc, { value }) => acc + value, 0)\n        let thisObj = {\n          day: uniqueDate,\n          value: value,\n          category: 'All'\n        }\n        filteredAndReducedForAll.push(thisObj)\n\n      })\n      filterData = filteredAndReducedForAll;\n    }\n  }\n\n  useEffect(() => {\n    if (lookerContent.length) {\n      setTimeout(() => performLookerApiCalls(lookerContent), 100);\n      setDesiredField(lookerContent[0].desiredFields[0])\n      setClientSideCode(rawSampleCode)\n    }\n  }, [lookerContent, lookerUser])\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n  })\n\n  const performLookerApiCalls = function (lookerContent) {\n    setApiContent([]); //set to empty array to show progress bar and skeleton\n    lookerContent.map(async lookerContent => {\n      let inlineQuery = lookerContent.inlineQuery;\n      inlineQuery.filters = {\n        // ...inlineQuery.filters,\n        // [Object.keys(inlineQuery.filters)[0]]: lookerUser.user_attributes.time_horizon,\n        [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\n      };\n      let stringifiedQuery = encodeURIComponent(JSON.stringify(inlineQuery));\n      // console.log('stringifiedQuery', stringifiedQuery)\n      let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      let lookerResponseData = await lookerResponse.json();\n      // console.log('lookerResponseData', lookerResponseData)\n      lookerResponseData.queryResults = lookerResponseData.queryResults.filter(item => {\n        return item[inlineQuery.fields[0]]\n      })\n      let uniqueCategories = ['All'];\n      for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\n        if (uniqueCategories.indexOf(lookerResponseData.queryResults[i][inlineQuery.fields[1]]) === -1) {\n          uniqueCategories.push(lookerResponseData.queryResults[i][inlineQuery.fields[1]])\n        }\n      }\n      lookerResponseData.inlineQuery = inlineQuery;\n      lookerResponseData.uniqueCategories = uniqueCategories;\n      setFromDate(lookerResponseData.queryResults[lookerResponseData.queryResults.length - 1][lookerResponseData.inlineQuery.fields[0]]);\n      setToDate(incrementDate(lookerResponseData.queryResults[0][lookerResponseData.inlineQuery.fields[0]], 1));\n      setApiContent(lookerResponseData)\n      if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\n    })\n  }\n\n  let nivoColorScale = ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']\n  let googleColorScale = ['#4595EC', '#F3A759', '#E24E3A', '#65AB5A'];\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`\n      ${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowScroll}`\n      }\n      >\n        <Grid container\n          key={validIdHelper(type)} >\n          <div className={`${classes.root} `}>\n\n            {!apiContent.queryResults ?\n              <Skeleton variant=\"rect\" animation=\"wave\" className={classes.skeleton} />\n              :\n              <FilterBar {...props}\n                classes={classes}\n                apiContent={apiContent}\n                fromDate={fromDate}\n                toDate={toDate}\n                category={category}\n                desiredField={desiredField}\n                handleFromDate={handleFromDate}\n                handleToDate={handleToDate}\n                handleCategory={handleCategory}\n                handleDesiredField={handleDesiredField}\n              />\n            }\n\n\n            {!apiContent.queryResults ?\n              <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                <Card className={`${classes.card} ${classes.flexCentered}`}\n                  elevation={0}\n                  mt={2}\n                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                  <CircularProgress className={classes.circularProgress} />\n                </Card>\n              </Grid>\n\n              : apiContent.queryResults && apiContent.queryResults.length ?\n                <Box>\n                  <Grid container\n                    spacing={3}\n                    className={`${classes.noContainerScroll}`}>\n                    {codeShow ?\n                      <Grid item sm={6}\n                        className={`${classes.positionFixedTopRight}`}\n                      >\n                        <CodeFlyout {...props}\n                          classes={classes}\n                          lookerUser={lookerUser}\n                          height={height}\n                        />\n                      </Grid> : ''}\n                    <Divider className={classes.divider} />\n                    <Grid item sm={12} >\n\n                      <Box className={`${classes.w100} ${classes.padding10}`} mt={2}>\n\n                        <ApiHighlight height={400} classes={classes}>\n                          <ResponsiveCalendar\n                            data={filterData}\n                            align=\"top\"\n                            from={incrementDate(fromDate, 1)}\n                            to={incrementDate(toDate, 1)}\n                            emptyColor=\"#eeeeee\"\n                            colors={desiredField === lookerContent[0].desiredFields[0] ? googleColorScale : nivoColorScale}\n                            yearSpacing={40}\n                            monthBorderColor=\"#ffffff\"\n                            dayBorderWidth={2}\n                            dayBorderColor=\"#ffffff\"\n                            margin={{ bottom: 40, left: 40 }}\n                            legends={[\n                              {\n                                anchor: 'bottom-right',\n                                direction: 'row',\n                                translateY: 36,\n                                itemCount: 4,\n                                itemWidth: 42,\n                                itemHeight: 36,\n                                itemsSpacing: 14,\n                                itemDirection: 'right-to-left'\n                              }\n                            ]}\n                            onClick={(day, event) => {\n                              if (!day.value) {\n                              } else if (lookerUser.user_attributes.permission_level === 'basic') {\n                                togglePayWallModal({\n                                  'show': true,\n                                  'permissionNeeded': 'see_drill_overlay'\n                                });\n                              } else {\n                                handleModalOpen(day)\n                                event.stopPropagation();\n                              }\n                            }}\n                          />\n                        </ApiHighlight>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Box> :\n                ''\n            }\n          </div>\n        </Grid >\n        {\n          open ?\n            <ModalTable\n              {...props}\n              open={open}\n              onClose={handleModalClose}\n              classes={classes}\n              modalContent={modalContent}\n            />\n\n            : ''\n        }\n      </Card>\n    </div >\n  )\n}\n//Filter Bar code\nfunction FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\n    apiContent, fromDate, toDate, category, desiredField, handleFromDate, handleToDate, handleCategory, handleDesiredField } = props;\n\n  const [expanded, setExpanded] = useState(true);\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  // console.log('FilterBar')\n  // console.log('fromDate', fromDate)\n  // console.log('toDate', toDate)\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100} elevation={0}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMore />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <FilterList /><Typography className={`${classes.heading} ${classes.ml12}`}>Filter:</Typography>\n\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          {apiContent.queryResults ?\n            <>\n              <Grid item sm={3}>\n\n                <ApiHighlight classes={classes}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                    >\n                      Metric</InputLabel>\n                    <Select\n                      labelId={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-Select')}`}\n                      value={desiredField}\n                      onChange={(event) => handleDesiredField(event.target.value)}\n                    >\n                      {lookerContent[0].desiredFields.map((item, index) => (\n\n                        <MenuItem\n                          id={validIdHelper(`${item}-${index}`)}\n                          key={validIdHelper(`${item}-${index}`)}\n                          value={item}\n                        >{item.substring(item.lastIndexOf(\".\") + 1, item.length).split(\"_\").map(item => item.charAt(0).toUpperCase() + item.substring(1)).join(\" \")}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </ApiHighlight>\n              </Grid>\n              <Grid item sm={3}>\n                <ApiHighlight classes={classes}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel\n                      id={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                    >\n                      Category</InputLabel>\n                    <Select\n                      labelId={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                      id={`${validIdHelper(type + '-FilterBar-Category-Select')}`}\n                      value={category}\n                      onChange={(event) => handleCategory(event.target.value)}\n                    >\n                      {apiContent.uniqueCategories.map((item, index) => (\n\n                        <MenuItem\n                          id={validIdHelper(`${item}-${index}`)}\n                          key={validIdHelper(`${item}-${index}`)}\n                          value={item}>{item}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </ApiHighlight>\n              </Grid>\n\n              <Grid item sm={3}>\n\n                <ApiHighlight classes={classes}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant=\"inline\"\n                      format=\"MM/dd/yyyy\"\n                      margin=\"normal\"\n                      id=\"fromDate\"\n                      label=\"From date\"\n                      value={fromDate}\n                      onChange={handleFromDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      minDate={fromDate}\n                      maxDate={toDate}\n                    />\n                  </MuiPickersUtilsProvider>\n                </ApiHighlight>\n              </Grid>\n              <Grid item sm={3}>\n                <ApiHighlight classes={classes}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant=\"inline\"\n                      format=\"MM/dd/yyyy\"\n                      margin=\"normal\"\n                      id=\"toDate\"\n                      label=\"To date\"\n                      value={toDate}\n                      onChange={handleToDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      minDate={fromDate}\n                      maxDate={toDate}\n                    />\n                  </MuiPickersUtilsProvider>\n                </ApiHighlight>\n              </Grid>\n            </>\n            : ''}\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel >\n  )\n}\n\nfunction incrementDate(dateInput, increment) {\n  var dateFormatTotime = new Date(dateInput);\n  var increasedDate = new Date(dateFormatTotime.getTime() + (increment * 86400000));\n  return increasedDate.toISOString().split('T')[0];\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, InputLabel, MenuItem,\\n  FormControl, Select, Modal\\n} from '@material-ui/core'\\nimport { Skeleton } from '@material-ui/lab';\\nimport { ExpandMore, FilterList } from '@material-ui/icons';\\nimport ModalTable from '../../Material/ModalTable';\\nimport { ResponsiveCalendar } from '@nivo/calendar'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./CustomVis.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { ApiHighlight } from '../../Highlights/Highlight';\\n//new date pickers\\nimport { format, endOfDay, addDays } from 'date-fns';\\nimport DateFnsUtils from '@date-io/date-fns';\\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\nexport default function CustomVis(props) {\\n  // console.log('CustomVis')\\n  const topBarBottomBarHeight = 112;\\n  const [value, setValue] = useState(0);\\n  const [fromDate, setFromDate] = useState('');\\n  const [toDate, setToDate] = useState('');\\n  const [category, setCategory] = useState('All')\\n  const [desiredField, setDesiredField] = useState('')\\n  const [apiContent, setApiContent] = useState([]);\\n  const [open, setOpen] = React.useState(false);\\n  const [modalContent, setModalContent] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const { togglePayWallModal, show, codeShow } = useContext(AppContext)\\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\\n\\n  //handle opening of modal for advanced and premium users\\n  const handleModalOpen = async ({ day }) => {\\n    let originalInlineQueryCopy = JSON.parse(JSON.stringify(lookerContent[0].inlineQuery));\\n    originalInlineQueryCopy.filters = {\\n      ...originalInlineQueryCopy.filters,\\n      [originalInlineQueryCopy.fields[0]]: day,\\n      [originalInlineQueryCopy.fields[1]]: category === \\\"All\\\" ? '' : category\\n    }\\n    originalInlineQueryCopy.total = true;\\n    originalInlineQueryCopy.limit = \\\"25\\\";\\n\\n    setOpen(true);\\n    let lookerResponse = await fetch('/runinlinequery/' + encodeURIComponent(JSON.stringify(originalInlineQueryCopy)) + '/json', {\\n      method: 'GET',\\n      headers: {\\n        Accept: 'application/json',\\n        'Content-Type': 'application/json'\\n      }\\n    })\\n    let lookerResponseData = await lookerResponse.json();\\n    let modalObj = {\\n      \\\"title\\\": `Detail View for ${day}`,\\n      \\\"body\\\": lookerResponseData.queryResults\\n    }\\n    setModalContent(modalObj);\\n  };\\n\\n  //handle modal close\\n  const handleModalClose = () => {\\n    setModalContent({})\\n    setOpen(false);\\n  };\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  const handleFromDate = newValue => {\\n    let validDate = Date.parse(newValue);\\n    if (validDate > 0) {\\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\\n      setFromDate(newValueAsDate);\\n    }\\n  }\\n  const handleToDate = newValue => {\\n    let validDate = Date.parse(newValue);\\n    if (validDate > 0) {\\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\\n      setToDate(newValueAsDate);\\n    }\\n  }\\n\\n  const handleCategory = newValue => {\\n    setCategory(newValue)\\n  }\\n\\n  const handleDesiredField = newValue => {\\n    setDesiredField(newValue)\\n  }\\n\\n  //format response from initial api call based on LookerContent array\\n  //to match format required by Nivo Calendar component\\n  let filterData = [];\\n  if (apiContent.queryResults && apiContent.queryResults) {\\n    //filtering for fromDate, toDate and category\\n    filterData = _.filter(apiContent.queryResults, (row) => {\\n      return (row[apiContent.inlineQuery.fields[0]] >= fromDate\\n        && row[apiContent.inlineQuery.fields[0]] < toDate\\n        && (category === 'All' ? true : row[apiContent.inlineQuery.fields[1]] === category)\\n      )\\n    })\\n    //converting filterDAta to desired format for vis\\n    filterData = filterData.map(item => {\\n      return {\\n        'day': item[apiContent.inlineQuery.fields[0]],\\n        'category': item[apiContent.inlineQuery.fields[1]],\\n        'value': item[desiredField]\\n      }\\n    })\\n\\n    //special exception for category all\\n    //need to reduce array by day across categories\\n    //destructuing in reduce of value would not work for dynamic var\\n    if (category === 'All') {\\n      //create array of all unique dates\\n      const uniqueDates = [...new Set(filterData.map(item => item.day))];\\n      let filteredAndReducedForAll = []\\n      //iterate over unique date\\n      uniqueDates.map(uniqueDate => {\\n        //filter filterData for current unique date\\n        let value = _.filter(filterData, row => {\\n          return row.day === uniqueDate\\n        }).reduce((acc, { value }) => acc + value, 0)\\n        let thisObj = {\\n          day: uniqueDate,\\n          value: value,\\n          category: 'All'\\n        }\\n        filteredAndReducedForAll.push(thisObj)\\n\\n      })\\n      filterData = filteredAndReducedForAll;\\n    }\\n  }\\n\\n  useEffect(() => {\\n    if (lookerContent.length) {\\n      setTimeout(() => performLookerApiCalls(lookerContent), 100);\\n      setDesiredField(lookerContent[0].desiredFields[0])\\n      setClientSideCode(rawSampleCode)\\n    }\\n  }, [lookerContent, lookerUser])\\n\\n  useEffect(() => {\\n    window.addEventListener(\\\"resize\\\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\\n  })\\n\\n  const performLookerApiCalls = function (lookerContent) {\\n    setApiContent([]); //set to empty array to show progress bar and skeleton\\n    lookerContent.map(async lookerContent => {\\n      let inlineQuery = lookerContent.inlineQuery;\\n      inlineQuery.filters = {\\n        // ...inlineQuery.filters,\\n        // [Object.keys(inlineQuery.filters)[0]]: lookerUser.user_attributes.time_horizon,\\n        [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\\n      };\\n      let stringifiedQuery = encodeURIComponent(JSON.stringify(inlineQuery));\\n      // console.log('stringifiedQuery', stringifiedQuery)\\n      let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      })\\n      let lookerResponseData = await lookerResponse.json();\\n      // console.log('lookerResponseData', lookerResponseData)\\n      lookerResponseData.queryResults = lookerResponseData.queryResults.filter(item => {\\n        return item[inlineQuery.fields[0]]\\n      })\\n      let uniqueCategories = ['All'];\\n      for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\\n        if (uniqueCategories.indexOf(lookerResponseData.queryResults[i][inlineQuery.fields[1]]) === -1) {\\n          uniqueCategories.push(lookerResponseData.queryResults[i][inlineQuery.fields[1]])\\n        }\\n      }\\n      lookerResponseData.inlineQuery = inlineQuery;\\n      lookerResponseData.uniqueCategories = uniqueCategories;\\n      setFromDate(lookerResponseData.queryResults[lookerResponseData.queryResults.length - 1][lookerResponseData.inlineQuery.fields[0]]);\\n      setToDate(incrementDate(lookerResponseData.queryResults[0][lookerResponseData.inlineQuery.fields[0]], 1));\\n      setApiContent(lookerResponseData)\\n      if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\\n    })\\n  }\\n\\n  let nivoColorScale = ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']\\n  let googleColorScale = ['#4595EC', '#F3A759', '#E24E3A', '#65AB5A'];\\n\\n  return (\\n    <div className={`${classes.root} demoComponent`}\\n      style={{ height }}>\\n      <Card elevation={1} className={`\\n      ${classes.padding30} \\n      ${classes.height100Percent}\\n      ${classes.overflowScroll}`\\n      }\\n      >\\n        <Grid container\\n          key={validIdHelper(type)} >\\n          <div className={`${classes.root} `}>\\n\\n            {!apiContent.queryResults ?\\n              <Skeleton variant=\\\"rect\\\" animation=\\\"wave\\\" className={classes.skeleton} />\\n              :\\n              <FilterBar {...props}\\n                classes={classes}\\n                apiContent={apiContent}\\n                fromDate={fromDate}\\n                toDate={toDate}\\n                category={category}\\n                desiredField={desiredField}\\n                handleFromDate={handleFromDate}\\n                handleToDate={handleToDate}\\n                handleCategory={handleCategory}\\n                handleDesiredField={handleDesiredField}\\n              />\\n            }\\n\\n\\n            {!apiContent.queryResults ?\\n              <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                <Card className={`${classes.card} ${classes.flexCentered}`}\\n                  elevation={0}\\n                  mt={2}\\n                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                  <CircularProgress className={classes.circularProgress} />\\n                </Card>\\n              </Grid>\\n\\n              : apiContent.queryResults && apiContent.queryResults.length ?\\n                <Box>\\n                  <Grid container\\n                    spacing={3}\\n                    className={`${classes.noContainerScroll}`}>\\n                    {codeShow ?\\n                      <Grid item sm={6}\\n                        className={`${classes.positionFixedTopRight}`}\\n                      >\\n                        <CodeFlyout {...props}\\n                          classes={classes}\\n                          lookerUser={lookerUser}\\n                          height={height}\\n                        />\\n                      </Grid> : ''}\\n                    <Divider className={classes.divider} />\\n                    <Grid item sm={12} >\\n\\n                      <Box className={`${classes.w100} ${classes.padding10}`} mt={2}>\\n\\n                        <ApiHighlight height={400} classes={classes}>\\n                          <ResponsiveCalendar\\n                            data={filterData}\\n                            align=\\\"top\\\"\\n                            from={incrementDate(fromDate, 1)}\\n                            to={incrementDate(toDate, 1)}\\n                            emptyColor=\\\"#eeeeee\\\"\\n                            colors={desiredField === lookerContent[0].desiredFields[0] ? googleColorScale : nivoColorScale}\\n                            yearSpacing={40}\\n                            monthBorderColor=\\\"#ffffff\\\"\\n                            dayBorderWidth={2}\\n                            dayBorderColor=\\\"#ffffff\\\"\\n                            margin={{ bottom: 40, left: 40 }}\\n                            legends={[\\n                              {\\n                                anchor: 'bottom-right',\\n                                direction: 'row',\\n                                translateY: 36,\\n                                itemCount: 4,\\n                                itemWidth: 42,\\n                                itemHeight: 36,\\n                                itemsSpacing: 14,\\n                                itemDirection: 'right-to-left'\\n                              }\\n                            ]}\\n                            onClick={(day, event) => {\\n                              if (!day.value) {\\n                              } else if (lookerUser.user_attributes.permission_level === 'basic') {\\n                                togglePayWallModal({\\n                                  'show': true,\\n                                  'permissionNeeded': 'see_drill_overlay'\\n                                });\\n                              } else {\\n                                handleModalOpen(day)\\n                                event.stopPropagation();\\n                              }\\n                            }}\\n                          />\\n                        </ApiHighlight>\\n                      </Box>\\n                    </Grid>\\n                  </Grid>\\n                </Box> :\\n                ''\\n            }\\n          </div>\\n        </Grid >\\n        {\\n          open ?\\n            <ModalTable\\n              {...props}\\n              open={open}\\n              onClose={handleModalClose}\\n              classes={classes}\\n              modalContent={modalContent}\\n            />\\n\\n            : ''\\n        }\\n      </Card>\\n    </div >\\n  )\\n}\\n//Filter Bar code\\nfunction FilterBar(props) {\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\\n    apiContent, fromDate, toDate, category, desiredField, handleFromDate, handleToDate, handleCategory, handleDesiredField } = props;\\n\\n  const [expanded, setExpanded] = useState(true);\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n\\n  // console.log('FilterBar')\\n  // console.log('fromDate', fromDate)\\n  // console.log('toDate', toDate)\\n\\n  return (\\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100} elevation={0}>\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMore />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <FilterList /><Typography className={`${classes.heading} ${classes.ml12}`}>Filter:</Typography>\\n\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        <Grid container spacing={3}>\\n          {apiContent.queryResults ?\\n            <>\\n              <Grid item sm={3}>\\n\\n                <ApiHighlight classes={classes}>\\n                  <FormControl className={classes.formControl}>\\n                    <InputLabel\\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\\n                    >\\n                      Metric</InputLabel>\\n                    <Select\\n                      labelId={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-Select')}`}\\n                      value={desiredField}\\n                      onChange={(event) => handleDesiredField(event.target.value)}\\n                    >\\n                      {lookerContent[0].desiredFields.map((item, index) => (\\n\\n                        <MenuItem\\n                          id={validIdHelper(`${item}-${index}`)}\\n                          key={validIdHelper(`${item}-${index}`)}\\n                          value={item}\\n                        >{item.substring(item.lastIndexOf(\\\".\\\") + 1, item.length).split(\\\"_\\\").map(item => item.charAt(0).toUpperCase() + item.substring(1)).join(\\\" \\\")}</MenuItem>\\n                      ))}\\n                    </Select>\\n                  </FormControl>\\n                </ApiHighlight>\\n              </Grid>\\n              <Grid item sm={3}>\\n                <ApiHighlight classes={classes}>\\n                  <FormControl className={classes.formControl}>\\n                    <InputLabel\\n                      id={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\\n                    >\\n                      Category</InputLabel>\\n                    <Select\\n                      labelId={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\\n                      id={`${validIdHelper(type + '-FilterBar-Category-Select')}`}\\n                      value={category}\\n                      onChange={(event) => handleCategory(event.target.value)}\\n                    >\\n                      {apiContent.uniqueCategories.map((item, index) => (\\n\\n                        <MenuItem\\n                          id={validIdHelper(`${item}-${index}`)}\\n                          key={validIdHelper(`${item}-${index}`)}\\n                          value={item}>{item}</MenuItem>\\n                      ))}\\n                    </Select>\\n                  </FormControl>\\n                </ApiHighlight>\\n              </Grid>\\n\\n              <Grid item sm={3}>\\n\\n                <ApiHighlight classes={classes}>\\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\\n                    <KeyboardDatePicker\\n                      disableToolbar\\n                      variant=\\\"inline\\\"\\n                      format=\\\"MM/dd/yyyy\\\"\\n                      margin=\\\"normal\\\"\\n                      id=\\\"fromDate\\\"\\n                      label=\\\"From date\\\"\\n                      value={fromDate}\\n                      onChange={handleFromDate}\\n                      KeyboardButtonProps={{\\n                        'aria-label': 'change date',\\n                      }}\\n                      minDate={fromDate}\\n                      maxDate={toDate}\\n                    />\\n                  </MuiPickersUtilsProvider>\\n                </ApiHighlight>\\n              </Grid>\\n              <Grid item sm={3}>\\n                <ApiHighlight classes={classes}>\\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\\n                    <KeyboardDatePicker\\n                      disableToolbar\\n                      variant=\\\"inline\\\"\\n                      format=\\\"MM/dd/yyyy\\\"\\n                      margin=\\\"normal\\\"\\n                      id=\\\"toDate\\\"\\n                      label=\\\"To date\\\"\\n                      value={toDate}\\n                      onChange={handleToDate}\\n                      KeyboardButtonProps={{\\n                        'aria-label': 'change date',\\n                      }}\\n                      minDate={fromDate}\\n                      maxDate={toDate}\\n                    />\\n                  </MuiPickersUtilsProvider>\\n                </ApiHighlight>\\n              </Grid>\\n            </>\\n            : ''}\\n        </Grid>\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel >\\n  )\\n}\\n\\nfunction incrementDate(dateInput, increment) {\\n  var dateFormatTotime = new Date(dateInput);\\n  var increasedDate = new Date(dateFormatTotime.getTime() + (increment * 86400000));\\n  return increasedDate.toISOString().split('T')[0];\\n}\";","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: '8px'\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 400,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  ml24: {\n    marginLeft: 24\n  },\n  parentHoverVisibility: {\n    '&:hover $childHoverVisibility': {\n      visibility: 'visible'\n    }\n\n  },\n  childHoverVisibility: {\n    visibility: 'hidden'\n  },\n  faSm: {\n    fontSize: '.75em'\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  padding30: {\n    padding: 30\n  },\n  mr12: {\n    marginRight: 12\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  height100Percent: {\n    height: '100%'\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  whiteSpaceNoWrap: {\n    whiteSpace: 'nowrap'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowYScroll: {\n    overflowY: 'scroll',\n    overflowX: 'hidden'\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  }\n}));","import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\n","import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button } from '@material-ui/core'\nimport { TreeView, TreeItem } from '@material-ui/lab';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./ReportBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport '../../Home.css';\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\n//start of ReportBuilder Component\nexport default function ReportBuilder(props) {\n  const topBarBottomBarHeight = 112;\n  const [iFrameExists, setIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState([]);\n  const [exploreObj, setExploreObj] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const { togglePayWallModal, codeShow } = useContext(AppContext)\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [qid, setQid] = useState(null);\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\n\n  const demoComponentType = type;\n  const tabContent = [...lookerContent]\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    if (activeTabValue > value) {\n      setValue(activeTabValue)\n    }\n    setTimeout(() => performLookerApiCalls(lookerContent, 1), 100)\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\n  })\n\n  useEffect(() => {\n    if (value == 1 && lookerUser.user_attributes.permission_level != 'premium') {\n      togglePayWallModal({\n        'show': true,\n        'permissionNeeded': 'explore'\n      });\n    } else {\n      handleTabChange(value); //this could go\n      performLookerApiCalls(lookerContent);\n    }\n  }, [value])\n\n  const action = async (contentType, contentId, secondaryAction, qid, exploreId, newReportEmbedContainer) => {\n\n    let iFrameArray = $(\".embedContainer:visible > iframe\")\n\n    let matchingIndex = 0;\n    for (let i = 0; i < iFrameArray.length; i++) {\n      if (iFrameArray[i].classList.contains(contentType) && iFrameArray[i].classList.contains(contentId)) {\n        iFrameArray[i].classList.remove('dNone')\n        matchingIndex = i;\n      } else {\n        iFrameArray[i].classList.add('dNone')\n      }\n    }\n\n    if (secondaryAction === 'edit' || secondaryAction === 'explore') {\n      //save qid to state and use in perform looker api calls\n      setQid(qid);\n      handleChange('edit', 1)\n    } else if (secondaryAction === 'delete') {\n      //remove iframe associated with content that was deleted\n      let indexOfDeletedContent;\n      for (let i = 0; i < iFrameArray.length; i++) {\n        if (iFrameArray[i].classList.contains(contentId)) {\n          indexOfDeletedContent = i;\n        }\n      }\n      let updatedIFrameArray = iFrameArray.slice()\n      updatedIFrameArray.splice(indexOfDeletedContent, 1)\n      for (let i = 0; i < updatedIFrameArray.length; i++) {\n        if (i === 0) {\n          updatedIFrameArray[i].classList.remove('dNone')\n          matchingIndex = i;\n        } else {\n          updatedIFrameArray[i].classList.add('dNone')\n        }\n      }\n      //append updated array\n      $(`#embedContainer-reportbuilder-14`).empty();\n      $(`#embedContainer-reportbuilder-14`).html(updatedIFrameArray);\n\n      let lookerResponse = await fetch('/deletelook/' + contentId, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (lookerResponse.status === 200) {\n        performLookerApiCalls(lookerContent, 1)\n      }\n    }\n  }\n\n  const performLookerApiCalls = function (lookerContent, animateLoad) {\n    // console.log('performLookerApiCalls')\n    if (animateLoad) {\n      handleChange('refresh', 0)\n      setIFrame(0)\n      setApiContent([])\n    }\n\n    lookerContent.map(async lookerContent => {\n      if (lookerContent.type === 'folder' && value === 0) {\n        let lookerResponse = await fetch('/fetchfolder/' + lookerContent.id, {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          }\n        })\n\n        let lookerResponseData = await lookerResponse.json();\n        if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\n\n        let looksToUse = [...lookerResponseData.sharedFolder.looks];\n        if (lookerUser.user_attributes.permission_level === 'premium' &&\n          Object.keys(lookerResponseData.embeddedUserFolder).length) {\n          looksToUse = [\n            ...looksToUse, ...lookerResponseData.embeddedUserFolder.looks\n          ]\n\n        }\n        let dashboardsToUse = [...lookerResponseData.sharedFolder.dashboards]\n        let objToUse = {\n          looks: looksToUse,\n          dashboards: dashboardsToUse\n        }\n        let iFrameArray = $(`.embedContainer.${validIdHelper(demoComponentType)} > iframe`);\n        if (objToUse.looks.length) {\n          objToUse.looks.map((item, index) => {\n\n            let lookId = item.id;\n            let lookIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('look') && iFrameArray[i].classList.contains(lookId)) {\n                lookIsRendered = true;\n              }\n            }\n\n            if (!lookIsRendered) {\n              LookerEmbedSDK.createLookWithId(lookId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('look')\n                .withClassName(lookerResponseData.sharedFolder.looks.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName(index > 0 ? 'dNone' : 'oops')\n                .withClassName(lookId)\n                .build()\n                .connect()\n                .then((look) => {\n                  // setIFrame(1)\n                  LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n            if (index === objToUse.looks.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n\n        if (objToUse.dashboards.length) {\n          objToUse.dashboards.map((item, index) => {\n            let dashboardId = item.id\n            let dashboardIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('dashboard') && iFrameArray[i].classList.contains(dashboardId)) {\n                dashboardIsRendered = true;\n              }\n            }\n            if (!dashboardIsRendered) {\n              LookerEmbedSDK.createDashboardWithId(dashboardId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('dashboard')\n                .withClassName(lookerResponseData.sharedFolder.dashboards.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName('dNone')\n                .withClassName(dashboardId)\n                .build()\n                .connect()\n                .then((dashboard) => {\n                  setTimeout(() => {\n                    // setIFrame(1)\n                  }, 1000)\n                  LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n\n            if (index === objToUse.dashboards.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n        setApiContent(objToUse)\n      } else if (lookerContent.type === 'explore' &&\n        lookerUser.user_attributes.permission_level === 'premium' &&\n        value === 1) {\n        let exploreId = lookerContent.id;\n        $(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`)).html('');\n        LookerEmbedSDK.createExploreWithId(exploreId)\n          .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n          .withClassName('exploreIframe')\n          .withParams({\n            qid: qid || ''\n          })\n          .on('explore:state:changed', (event) => {\n          })\n          .build()\n          .connect()\n          .then((explore) => {\n            setTimeout(() => setIFrame(1), 1000)\n            setExploreObj(exploreObj)\n            LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n            setQid(null)\n          })\n          .catch((error) => {\n            console.error('Connection error', error)\n          })\n      }\n    })\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`\n      ${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowYScroll}`\n      }\n      >\n        <Grid container\n          key={validIdHelper(type)} >\n          <div className={classes.root}>\n            {iFrameExists ? '' :\n              <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                <Card className={`${classes.card} ${classes.flexCentered}`}\n                  elevation={0}\n                  mt={2}\n                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                  <CircularProgress className={classes.circularProgress} />\n                </Card>\n              </Grid>\n            }\n\n            {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\n            <Box className={iFrameExists ? `` : `${classes.hidden}`}>\n              <AppBar position=\"static\" elevation={0}>\n                <Tabs\n                  className={classes.tabs}\n                  value={value}\n                  onChange={handleChange}\n                  aria-label=\"simple tabs example\">\n                  {tabContent.map((item, index) => (\n                    <Tab\n                      key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                      label={index == 1 ?\n                        <div>\n\n                          {lookerUser.user_attributes.permission_level != 'premium' ?\n                            <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} /> : <Icon className={`fa fa-plus ${classes.faSm} ${classes.mr12}`} />}\n                          {item.label}\n                        </div> :\n                        item.label}\n                      className={value === 1 && index === 1 ? `${classes.hidden}` : index == 1 ? `${classes.mlAuto}` : ``}\n                      style={index === 1 ? {\n                        backgroundColor: '#5896E6',\n                        borderRadius: '4px',\n                        color: '#fff',\n                        opacity: '1.0'\n                      } : {}}\n                      {...a11yProps(index)} />\n                  ))}\n                </Tabs>\n              </AppBar>\n              <Box className=\"tabPanelContainer\">\n                <Grid container\n                  spacing={3}\n                  className={`${classes.noContainerScroll}`}>\n                  {codeShow ?\n                    <Grid item sm={6}\n                      className={`${classes.positionFixedTopRight}`}\n                    >\n                      <CodeFlyout {...props}\n                        classes={classes}\n                        lookerUser={lookerUser}\n                        height={height}\n                      />\n                    </Grid> : ''}\n                  {tabContent.map((tabContentItem, tabContentItemIndex) => (\n                    <TabPanel\n                      key={`${validIdHelper(demoComponentType + '-tabPanel-' + tabContentItemIndex)}`}\n                      value={value}\n                      index={tabContentItemIndex}\n                      style={{ width: '100%' }} //weird\n                    >\n                      <Grid container>\n                        {\n                          tabContentItemIndex === 0\n                            ?\n                            <React.Fragment\n                              key={`${validIdHelper(demoComponentType + '-outerFragment-' + tabContentItemIndex)}`}>\n                              <Grid item sm={4} >\n                                <ApiHighlight height={500} classes={classes}>\n                                  <TreeSideBar {...{\n                                    togglePayWallModal,\n                                    classes,\n                                    demoComponentType,\n                                    tabContent,\n                                    tabContentItemIndex,\n                                    action,\n                                    apiContent,\n                                    ...props\n                                  }}\n                                  />\n                                </ApiHighlight>\n                              </Grid>\n                              <Grid item sm={8} >\n                                <EmbedHighlight classes={classes}>\n                                  <div\n                                    className={`embedContainer ${validIdHelper(demoComponentType)}`}\n                                    id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                    key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                  >\n                                  </div>\n                                </EmbedHighlight>\n                              </Grid>\n                            </React.Fragment>\n                            :\n                            <Grid item sm={12} >\n                              <EmbedHighlight classes={classes}>\n                                <div\n                                  className=\"embedContainer\"\n                                  id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                  key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                >\n                                </div>\n                              </EmbedHighlight>\n                            </Grid>\n                        }\n                      </Grid>\n                    </TabPanel>\n                  ))}</Grid>\n              </Box>\n            </Box >\n          </div>\n        </Grid >\n      </Card>\n    </div >\n  )\n}\n\n\nfunction TreeSideBar(props) {\n  const { staticContent, staticContent: { lookerContent }, classes, demoComponentType, tabContent, tabContentItemIndex, action, apiContent, lookerUser, togglePayWallModal } = props\n  const sharedFolderId = lookerContent[0].type === 'folder' ? lookerContent[0].id : '';\n  let treeCounter = 0;\n  const [selected, setSelected] = useState(2);\n  const expandedArr = Object.keys(apiContent).length ? [\"1\", \"\" + (2 + apiContent[Object.keys(apiContent)[0]].length)] : [];\n  const [expanded, setExpanded] = useState(expandedArr);\n\n  const handleToggle = (event, nodeIds) => {\n    setExpanded(nodeIds);\n  }\n\n  const handleSelect = (event, nodeIds) => {\n    setSelected(nodeIds);\n  };\n\n\n  useEffect(() => {\n    setExpanded(expandedArr);\n    if (selected !== 2) setSelected(2)\n    // let innerTreeItemArray = $(\".innerTreeItem\");\n    // console.log('innerTreeItemArray', innerTreeItemArray)\n    // for (let i = 0; i < innerTreeItemArray.length; i++) {\n    //   console.log('inside forrr', i)\n    //   if (innerTreeItemArray[i].classList.contains('Mui-selected')) {\n    //     console.log('inside iffff')\n    //     innerTreeItemArray[i].classList.remove('Mui-selected')\n    //   } else console.log('elllse')\n    // }\n  }, [apiContent]);\n\n\n  return (\n    <TreeView\n      className={classes.tree}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n      expanded={expanded}\n      onNodeToggle={handleToggle}\n      onNodeSelect={handleSelect}\n    // multiSelect={false}\n    >\n      {apiContent ? Object.keys(apiContent).map((key, outerIndex) => (\n        <React.Fragment\n          key={`${validIdHelper(demoComponentType + '-innerFragment-' + outerIndex)}`}>\n          <TreeItem\n            key={`${validIdHelper(demoComponentType + '-outerTreeItem-' + outerIndex)}`}\n            nodeId={\"\" + (treeCounter += 1)}\n            // treecounter={treeCounter}\n            label={_.capitalize(key)}\n            icon={<Icon className={`fa fa-folder ${classes.icon}`} />}\n            disabled={apiContent[key].length ? false : true}\n          >\n            {\n              apiContent[key].length ?\n                apiContent[key].map((item, index) => (\n                  <TreeItem\n                    key={`${validIdHelper(demoComponentType + '-innerTreeItem-' + treeCounter)}`}\n                    nodeId={\"\" + (treeCounter += 1)}\n                    treecounter={treeCounter}\n                    selected={selected === treeCounter}\n                    className={selected === treeCounter ? `Mui-selected innerTreeItem ${classes.whiteSpaceNoWrap}` : `innerTreeItem ${classes.whiteSpaceNoWrap}`}\n                    contentid={item.id}\n                    label={item.folder_id === sharedFolderId &&\n                      key === 'looks' ?\n                      <div\n                        id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}\n                      >\n                        {/* {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title} */}\n                        <Grid container>\n                          <Grid item sm={8} className={`${classes.overflowHidden}`}>\n                            {item.title}</Grid>\n                          <Grid item sm={4}>\n                            <Button\n                              id={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                              key={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                              size=\"small\"\n                              className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                              onClick={(event) => {\n                                if (lookerUser.user_attributes.permission_level === 'premium') {\n                                  action(\n                                    key.substring(0, key.length - 1),\n                                    item.id,\n                                    'explore',\n                                    item.client_id,\n                                    tabContent[tabContentItemIndex + 1].id,\n                                    validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                  );\n                                  event.stopPropagation();\n                                } else {\n                                  // togglePayWallModal();\n\n                                  togglePayWallModal({\n                                    'show': true,\n                                    'permissionNeeded': 'explore'\n                                  });\n                                }\n                              }\n                              }\n                              color=\"default\"\n                            >\n                              {lookerUser.user_attributes.permission_level === 'premium' ? 'Explore' : <div> <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} />Explore</div>}\n                            </Button>\n                          </Grid>\n                        </Grid>\n\n\n                      </div>\n                      : key === 'looks' ?\n                        <div\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\n                          <Grid container>\n                            <Grid item sm={6} className={`${classes.overflowHidden}`}>\n                              {/* {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title} */}\n                              {item.title}\n                            </Grid>\n                            <Grid item sm={6}>\n                              <Button\n                                id={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                                key={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                                size=\"small\"\n                                className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                                onClick={(event) => {\n                                  if (lookerUser.user_attributes.permission_level === 'premium') {\n                                    // setSelected(treeCounter);\n                                    action(\n                                      key.substring(0, key.length - 1),\n                                      item.id,\n                                      'edit',\n                                      item.client_id,\n                                      tabContent[tabContentItemIndex + 1].id,\n                                      validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                    );\n                                    event.stopPropagation();\n                                  } else {\n                                    // togglePayWallModal();\n\n                                    togglePayWallModal({\n                                      'show': true,\n                                      'permissionNeeded': 'explore'\n                                    });\n                                  }\n                                }\n                                }\n                                color=\"primary\"\n                              >\n                                Edit\n                                                                                            </Button>\n                              <Button\n                                id={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                                key={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                                size=\"small\"\n                                className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                                onClick={(event) => {\n                                  if (lookerUser.user_attributes.permission_level === 'premium') {\n                                    // setSelected(treeCounter);\n                                    action(\n                                      key.substring(0, key.length - 1),\n                                      item.id,\n                                      'delete',\n                                      item.client_id,\n                                      tabContent[tabContentItemIndex + 1].id,\n                                      validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                    );\n                                    event.stopPropagation();\n                                  } else {\n                                    // togglePayWallModal();\n\n                                    togglePayWallModal({\n                                      'show': true,\n                                      'permissionNeeded': 'explore'\n                                    });\n                                  }\n                                }\n                                }\n                                color=\"secondary\"\n                              >\n                                Delete\n                                                                                            </Button>\n                            </Grid>\n                          </Grid>\n\n                        </div>\n                        : <Grid container><Grid item sm={12}>{item.title}</Grid></Grid>\n                    }\n                    onClick={() => {\n                      // setSelected(treeCounter)\n                      action(\n                        key.substring(0, key.length - 1), item.id)\n                    }} />\n\n                ))\n                :\n                ''\n            }\n          </TreeItem>\n\n        </React.Fragment>\n      )) : ''}\n    </TreeView>\n  )\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button } from '@material-ui/core'\\nimport { TreeView, TreeItem } from '@material-ui/lab';\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./ReportBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport '../../Home.css';\\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of ReportBuilder Component\\nexport default function ReportBuilder(props) {\\n  const topBarBottomBarHeight = 112;\\n  const [iFrameExists, setIFrame] = useState(0);\\n  const [apiContent, setApiContent] = useState([]);\\n  const [exploreObj, setExploreObj] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\\n  const { togglePayWallModal, codeShow } = useContext(AppContext)\\n  const classes = useStyles();\\n  const [value, setValue] = useState(0);\\n  const [qid, setQid] = useState(null);\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\\n\\n  const demoComponentType = type;\\n  const tabContent = [...lookerContent]\\n\\n  const handleChange = (event, newValue) => {\\n    setValue(newValue);\\n  };\\n\\n  useEffect(() => {\\n    if (activeTabValue > value) {\\n      setValue(activeTabValue)\\n    }\\n    setTimeout(() => performLookerApiCalls(lookerContent, 1), 100)\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent, lookerUser]);\\n\\n  useEffect(() => {\\n    window.addEventListener(\\\"resize\\\", () => setHeight((window.innerHeight - topBarBottomBarHeight)));\\n  })\\n\\n  useEffect(() => {\\n    if (value == 1 && lookerUser.user_attributes.permission_level != 'premium') {\\n      togglePayWallModal({\\n        'show': true,\\n        'permissionNeeded': 'explore'\\n      });\\n    } else {\\n      handleTabChange(value); //this could go\\n      performLookerApiCalls(lookerContent);\\n    }\\n  }, [value])\\n\\n  const action = async (contentType, contentId, secondaryAction, qid, exploreId, newReportEmbedContainer) => {\\n\\n    let iFrameArray = $(\\\".embedContainer:visible > iframe\\\")\\n\\n    let matchingIndex = 0;\\n    for (let i = 0; i < iFrameArray.length; i++) {\\n      if (iFrameArray[i].classList.contains(contentType) && iFrameArray[i].classList.contains(contentId)) {\\n        iFrameArray[i].classList.remove('dNone')\\n        matchingIndex = i;\\n      } else {\\n        iFrameArray[i].classList.add('dNone')\\n      }\\n    }\\n\\n    if (secondaryAction === 'edit' || secondaryAction === 'explore') {\\n      //save qid to state and use in perform looker api calls\\n      setQid(qid);\\n      handleChange('edit', 1)\\n    } else if (secondaryAction === 'delete') {\\n      //remove iframe associated with content that was deleted\\n      let indexOfDeletedContent;\\n      for (let i = 0; i < iFrameArray.length; i++) {\\n        if (iFrameArray[i].classList.contains(contentId)) {\\n          indexOfDeletedContent = i;\\n        }\\n      }\\n      let updatedIFrameArray = iFrameArray.slice()\\n      updatedIFrameArray.splice(indexOfDeletedContent, 1)\\n      for (let i = 0; i < updatedIFrameArray.length; i++) {\\n        if (i === 0) {\\n          updatedIFrameArray[i].classList.remove('dNone')\\n          matchingIndex = i;\\n        } else {\\n          updatedIFrameArray[i].classList.add('dNone')\\n        }\\n      }\\n      //append updated array\\n      $(`#embedContainer-reportbuilder-14`).empty();\\n      $(`#embedContainer-reportbuilder-14`).html(updatedIFrameArray);\\n\\n      let lookerResponse = await fetch('/deletelook/' + contentId, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      });\\n      if (lookerResponse.status === 200) {\\n        performLookerApiCalls(lookerContent, 1)\\n      }\\n    }\\n  }\\n\\n  const performLookerApiCalls = function (lookerContent, animateLoad) {\\n    // console.log('performLookerApiCalls')\\n    if (animateLoad) {\\n      handleChange('refresh', 0)\\n      setIFrame(0)\\n      setApiContent([])\\n    }\\n\\n    lookerContent.map(async lookerContent => {\\n      if (lookerContent.type === 'folder' && value === 0) {\\n        let lookerResponse = await fetch('/fetchfolder/' + lookerContent.id, {\\n          method: 'GET',\\n          headers: {\\n            Accept: 'application/json',\\n            'Content-Type': 'application/json'\\n          }\\n        })\\n\\n        let lookerResponseData = await lookerResponse.json();\\n        if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\\n\\n        let looksToUse = [...lookerResponseData.sharedFolder.looks];\\n        if (lookerUser.user_attributes.permission_level === 'premium' &&\\n          Object.keys(lookerResponseData.embeddedUserFolder).length) {\\n          looksToUse = [\\n            ...looksToUse, ...lookerResponseData.embeddedUserFolder.looks\\n          ]\\n\\n        }\\n        let dashboardsToUse = [...lookerResponseData.sharedFolder.dashboards]\\n        let objToUse = {\\n          looks: looksToUse,\\n          dashboards: dashboardsToUse\\n        }\\n        let iFrameArray = $(`.embedContainer.${validIdHelper(demoComponentType)} > iframe`);\\n        if (objToUse.looks.length) {\\n          objToUse.looks.map((item, index) => {\\n\\n            let lookId = item.id;\\n            let lookIsRendered = false;\\n            for (let i = 0; i < iFrameArray.length; i++) {\\n              if (iFrameArray[i].classList.contains('look') && iFrameArray[i].classList.contains(lookId)) {\\n                lookIsRendered = true;\\n              }\\n            }\\n\\n            if (!lookIsRendered) {\\n              LookerEmbedSDK.createLookWithId(lookId)\\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n                .withClassName('iframe')\\n                .withClassName('look')\\n                .withClassName(lookerResponseData.sharedFolder.looks.indexOf(item) > -1 ? \\\"shared\\\" : \\\"personal\\\")\\n                .withClassName(index > 0 ? 'dNone' : 'oops')\\n                .withClassName(lookId)\\n                .build()\\n                .connect()\\n                .then((look) => {\\n                  // setIFrame(1)\\n                  LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n                })\\n                .catch((error) => {\\n                  console.error('Connection error', error)\\n                })\\n            }\\n\\n            if (index === objToUse.looks.length - 1) {\\n              setTimeout(() => setIFrame(1), 1000)\\n            }\\n          })\\n        }\\n\\n        if (objToUse.dashboards.length) {\\n          objToUse.dashboards.map((item, index) => {\\n            let dashboardId = item.id\\n            let dashboardIsRendered = false;\\n            for (let i = 0; i < iFrameArray.length; i++) {\\n              if (iFrameArray[i].classList.contains('dashboard') && iFrameArray[i].classList.contains(dashboardId)) {\\n                dashboardIsRendered = true;\\n              }\\n            }\\n            if (!dashboardIsRendered) {\\n              LookerEmbedSDK.createDashboardWithId(dashboardId)\\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n                .withClassName('iframe')\\n                .withClassName('dashboard')\\n                .withClassName(lookerResponseData.sharedFolder.dashboards.indexOf(item) > -1 ? \\\"shared\\\" : \\\"personal\\\")\\n                .withClassName('dNone')\\n                .withClassName(dashboardId)\\n                .build()\\n                .connect()\\n                .then((dashboard) => {\\n                  setTimeout(() => {\\n                    // setIFrame(1)\\n                  }, 1000)\\n                  LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n                })\\n                .catch((error) => {\\n                  console.error('Connection error', error)\\n                })\\n            }\\n\\n\\n            if (index === objToUse.dashboards.length - 1) {\\n              setTimeout(() => setIFrame(1), 1000)\\n            }\\n          })\\n        }\\n        setApiContent(objToUse)\\n      } else if (lookerContent.type === 'explore' &&\\n        lookerUser.user_attributes.permission_level === 'premium' &&\\n        value === 1) {\\n        let exploreId = lookerContent.id;\\n        $(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`)).html('');\\n        LookerEmbedSDK.createExploreWithId(exploreId)\\n          .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n          .withClassName('exploreIframe')\\n          .withParams({\\n            qid: qid || ''\\n          })\\n          .on('explore:state:changed', (event) => {\\n          })\\n          .build()\\n          .connect()\\n          .then((explore) => {\\n            setTimeout(() => setIFrame(1), 1000)\\n            setExploreObj(exploreObj)\\n            LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n            setQid(null)\\n          })\\n          .catch((error) => {\\n            console.error('Connection error', error)\\n          })\\n      }\\n    })\\n  }\\n\\n  return (\\n    <div className={`${classes.root} demoComponent`}\\n      style={{ height }}>\\n      <Card elevation={1} className={`\\n      ${classes.padding30} \\n      ${classes.height100Percent}\\n      ${classes.overflowYScroll}`\\n      }\\n      >\\n        <Grid container\\n          key={validIdHelper(type)} >\\n          <div className={classes.root}>\\n            {iFrameExists ? '' :\\n              <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                <Card className={`${classes.card} ${classes.flexCentered}`}\\n                  elevation={0}\\n                  mt={2}\\n                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                  <CircularProgress className={classes.circularProgress} />\\n                </Card>\\n              </Grid>\\n            }\\n\\n            {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\\n            <Box className={iFrameExists ? `` : `${classes.hidden}`}>\\n              <AppBar position=\\\"static\\\" elevation={0}>\\n                <Tabs\\n                  className={classes.tabs}\\n                  value={value}\\n                  onChange={handleChange}\\n                  aria-label=\\\"simple tabs example\\\">\\n                  {tabContent.map((item, index) => (\\n                    <Tab\\n                      key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\\n                      label={index == 1 ?\\n                        <div>\\n\\n                          {lookerUser.user_attributes.permission_level != 'premium' ?\\n                            <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} /> : <Icon className={`fa fa-plus ${classes.faSm} ${classes.mr12}`} />}\\n                          {item.label}\\n                        </div> :\\n                        item.label}\\n                      className={value === 1 && index === 1 ? `${classes.hidden}` : index == 1 ? `${classes.mlAuto}` : ``}\\n                      style={index === 1 ? {\\n                        backgroundColor: '#5896E6',\\n                        borderRadius: '4px',\\n                        color: '#fff',\\n                        opacity: '1.0'\\n                      } : {}}\\n                      {...a11yProps(index)} />\\n                  ))}\\n                </Tabs>\\n              </AppBar>\\n              <Box className=\\\"tabPanelContainer\\\">\\n                <Grid container\\n                  spacing={3}\\n                  className={`${classes.noContainerScroll}`}>\\n                  {codeShow ?\\n                    <Grid item sm={6}\\n                      className={`${classes.positionFixedTopRight}`}\\n                    >\\n                      <CodeFlyout {...props}\\n                        classes={classes}\\n                        lookerUser={lookerUser}\\n                        height={height}\\n                      />\\n                    </Grid> : ''}\\n                  {tabContent.map((tabContentItem, tabContentItemIndex) => (\\n                    <TabPanel\\n                      key={`${validIdHelper(demoComponentType + '-tabPanel-' + tabContentItemIndex)}`}\\n                      value={value}\\n                      index={tabContentItemIndex}\\n                      style={{ width: '100%' }} //weird\\n                    >\\n                      <Grid container>\\n                        {\\n                          tabContentItemIndex === 0\\n                            ?\\n                            <React.Fragment\\n                              key={`${validIdHelper(demoComponentType + '-outerFragment-' + tabContentItemIndex)}`}>\\n                              <Grid item sm={4} >\\n                                <ApiHighlight height={500} classes={classes}>\\n                                  <TreeSideBar {...{\\n                                    togglePayWallModal,\\n                                    classes,\\n                                    demoComponentType,\\n                                    tabContent,\\n                                    tabContentItemIndex,\\n                                    action,\\n                                    apiContent,\\n                                    ...props\\n                                  }}\\n                                  />\\n                                </ApiHighlight>\\n                              </Grid>\\n                              <Grid item sm={8} >\\n                                <EmbedHighlight classes={classes}>\\n                                  <div\\n                                    className={`embedContainer ${validIdHelper(demoComponentType)}`}\\n                                    id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                    key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                  >\\n                                  </div>\\n                                </EmbedHighlight>\\n                              </Grid>\\n                            </React.Fragment>\\n                            :\\n                            <Grid item sm={12} >\\n                              <EmbedHighlight classes={classes}>\\n                                <div\\n                                  className=\\\"embedContainer\\\"\\n                                  id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                  key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                >\\n                                </div>\\n                              </EmbedHighlight>\\n                            </Grid>\\n                        }\\n                      </Grid>\\n                    </TabPanel>\\n                  ))}</Grid>\\n              </Box>\\n            </Box >\\n          </div>\\n        </Grid >\\n      </Card>\\n    </div >\\n  )\\n}\\n\\n\\nfunction TreeSideBar(props) {\\n  const { staticContent, staticContent: { lookerContent }, classes, demoComponentType, tabContent, tabContentItemIndex, action, apiContent, lookerUser, togglePayWallModal } = props\\n  const sharedFolderId = lookerContent[0].type === 'folder' ? lookerContent[0].id : '';\\n  let treeCounter = 0;\\n  const [selected, setSelected] = useState(2);\\n  const expandedArr = Object.keys(apiContent).length ? [\\\"1\\\", \\\"\\\" + (2 + apiContent[Object.keys(apiContent)[0]].length)] : [];\\n  const [expanded, setExpanded] = useState(expandedArr);\\n\\n  const handleToggle = (event, nodeIds) => {\\n    setExpanded(nodeIds);\\n  }\\n\\n  const handleSelect = (event, nodeIds) => {\\n    setSelected(nodeIds);\\n  };\\n\\n\\n  useEffect(() => {\\n    setExpanded(expandedArr);\\n    if (selected !== 2) setSelected(2)\\n    // let innerTreeItemArray = $(\\\".innerTreeItem\\\");\\n    // console.log('innerTreeItemArray', innerTreeItemArray)\\n    // for (let i = 0; i < innerTreeItemArray.length; i++) {\\n    //   console.log('inside forrr', i)\\n    //   if (innerTreeItemArray[i].classList.contains('Mui-selected')) {\\n    //     console.log('inside iffff')\\n    //     innerTreeItemArray[i].classList.remove('Mui-selected')\\n    //   } else console.log('elllse')\\n    // }\\n  }, [apiContent]);\\n\\n\\n  return (\\n    <TreeView\\n      className={classes.tree}\\n      defaultCollapseIcon={<ExpandMoreIcon />}\\n      defaultExpandIcon={<ChevronRightIcon />}\\n      expanded={expanded}\\n      onNodeToggle={handleToggle}\\n      onNodeSelect={handleSelect}\\n    // multiSelect={false}\\n    >\\n      {apiContent ? Object.keys(apiContent).map((key, outerIndex) => (\\n        <React.Fragment\\n          key={`${validIdHelper(demoComponentType + '-innerFragment-' + outerIndex)}`}>\\n          <TreeItem\\n            key={`${validIdHelper(demoComponentType + '-outerTreeItem-' + outerIndex)}`}\\n            nodeId={\\\"\\\" + (treeCounter += 1)}\\n            // treecounter={treeCounter}\\n            label={_.capitalize(key)}\\n            icon={<Icon className={`fa fa-folder ${classes.icon}`} />}\\n            disabled={apiContent[key].length ? false : true}\\n          >\\n            {\\n              apiContent[key].length ?\\n                apiContent[key].map((item, index) => (\\n                  <TreeItem\\n                    key={`${validIdHelper(demoComponentType + '-innerTreeItem-' + treeCounter)}`}\\n                    nodeId={\\\"\\\" + (treeCounter += 1)}\\n                    treecounter={treeCounter}\\n                    selected={selected === treeCounter}\\n                    className={selected === treeCounter ? `Mui-selected innerTreeItem ${classes.whiteSpaceNoWrap}` : `innerTreeItem ${classes.whiteSpaceNoWrap}`}\\n                    contentid={item.id}\\n                    label={item.folder_id === sharedFolderId &&\\n                      key === 'looks' ?\\n                      <div\\n                        id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                        key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                        className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}\\n                      >\\n                        {/* {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title} */}\\n                        <Grid container>\\n                          <Grid item sm={8} className={`${classes.overflowHidden}`}>\\n                            {item.title}</Grid>\\n                          <Grid item sm={4}>\\n                            <Button\\n                              id={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\\n                              key={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\\n                              size=\\\"small\\\"\\n                              className={`${classes.ml12} ${classes.childHoverVisibility}`}\\n                              onClick={(event) => {\\n                                if (lookerUser.user_attributes.permission_level === 'premium') {\\n                                  action(\\n                                    key.substring(0, key.length - 1),\\n                                    item.id,\\n                                    'explore',\\n                                    item.client_id,\\n                                    tabContent[tabContentItemIndex + 1].id,\\n                                    validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                                  );\\n                                  event.stopPropagation();\\n                                } else {\\n                                  // togglePayWallModal();\\n\\n                                  togglePayWallModal({\\n                                    'show': true,\\n                                    'permissionNeeded': 'explore'\\n                                  });\\n                                }\\n                              }\\n                              }\\n                              color=\\\"default\\\"\\n                            >\\n                              {lookerUser.user_attributes.permission_level === 'premium' ? 'Explore' : <div> <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} />Explore</div>}\\n                            </Button>\\n                          </Grid>\\n                        </Grid>\\n\\n\\n                      </div>\\n                      : key === 'looks' ?\\n                        <div\\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                          className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\\n                          <Grid container>\\n                            <Grid item sm={6} className={`${classes.overflowHidden}`}>\\n                              {/* {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title} */}\\n                              {item.title}\\n                            </Grid>\\n                            <Grid item sm={6}>\\n                              <Button\\n                                id={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\\n                                key={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\\n                                size=\\\"small\\\"\\n                                className={`${classes.ml12} ${classes.childHoverVisibility}`}\\n                                onClick={(event) => {\\n                                  if (lookerUser.user_attributes.permission_level === 'premium') {\\n                                    // setSelected(treeCounter);\\n                                    action(\\n                                      key.substring(0, key.length - 1),\\n                                      item.id,\\n                                      'edit',\\n                                      item.client_id,\\n                                      tabContent[tabContentItemIndex + 1].id,\\n                                      validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                                    );\\n                                    event.stopPropagation();\\n                                  } else {\\n                                    // togglePayWallModal();\\n\\n                                    togglePayWallModal({\\n                                      'show': true,\\n                                      'permissionNeeded': 'explore'\\n                                    });\\n                                  }\\n                                }\\n                                }\\n                                color=\\\"primary\\\"\\n                              >\\n                                Edit\\n                                                                                            </Button>\\n                              <Button\\n                                id={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\\n                                key={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\\n                                size=\\\"small\\\"\\n                                className={`${classes.ml12} ${classes.childHoverVisibility}`}\\n                                onClick={(event) => {\\n                                  if (lookerUser.user_attributes.permission_level === 'premium') {\\n                                    // setSelected(treeCounter);\\n                                    action(\\n                                      key.substring(0, key.length - 1),\\n                                      item.id,\\n                                      'delete',\\n                                      item.client_id,\\n                                      tabContent[tabContentItemIndex + 1].id,\\n                                      validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                                    );\\n                                    event.stopPropagation();\\n                                  } else {\\n                                    // togglePayWallModal();\\n\\n                                    togglePayWallModal({\\n                                      'show': true,\\n                                      'permissionNeeded': 'explore'\\n                                    });\\n                                  }\\n                                }\\n                                }\\n                                color=\\\"secondary\\\"\\n                              >\\n                                Delete\\n                                                                                            </Button>\\n                            </Grid>\\n                          </Grid>\\n\\n                        </div>\\n                        : <Grid container><Grid item sm={12}>{item.title}</Grid></Grid>\\n                    }\\n                    onClick={() => {\\n                      // setSelected(treeCounter)\\n                      action(\\n                        key.substring(0, key.length - 1), item.id)\\n                    }} />\\n\\n                ))\\n                :\\n                ''\\n            }\\n          </TreeItem>\\n\\n        </React.Fragment>\\n      )) : ''}\\n    </TreeView>\\n  )\\n}\";","import { makeStyles } from '@material-ui/core/styles';\nimport { grey, orange } from '@material-ui/core/colors';\n\nconst greyPrimary = grey[400];\nconst greySecondary = grey[100];\nconst orangePrimary = orange[400];\nconst orangeSecondary = orange[100];\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'scroll',\n    borderRadius: '8px'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  // table: {\n  //   minWidth: 650,\n  // },\n  // tableContainer: {\n  //   maxHeight: 650,\n  // },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 400\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  bluePrimary: {\n    backgroundColor: 'rgba(69, 149, 236, 1)'\n  },\n  blueSecondary: {\n    backgroundColor: 'rgba(69, 149, 236, .5)',\n  },\n  orangePrimary: {\n    backgroundColor: 'rgba(243, 167, 89, 1)'\n  },\n  orangeSecondary: {\n    backgroundColor: 'rgba(243, 167, 89, .5)'\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  bottomBarSpacer: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  maxHeight600: {\n    maxHeight: 600,\n    overflow: 'scroll'\n  },\n  padding30: {\n    padding: 30\n  },\n  m12: {\n    margin: 12\n  },\n  m6: {\n    margin: 6\n  },\n  height100Percent: {\n    height: '100%',\n    overflow: 'scroll'\n  },\n  padding20: {\n    padding: 20\n  },\n  positionFixedTopRight: {\n    position: 'fixed',\n    top: 88,\n    right: 24,\n    bottom: 0,\n    zIndex: 100,\n  },\n  codeFlyoutContainer: {\n    backgroundColor: 'rgb(40, 42, 54)',\n    overflow: 'scroll',\n    borderRadius: '0 8px 8px 0'\n  },\n  padding10: {\n    padding: 10\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowYScroll: {\n    overflowY: 'scroll',\n    overflowX: 'hidden'\n  },\n  noContainerScroll: {\n    width: '100%',\n    margin: 0\n  }\n}));","import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport function descendingComparator(a, b, orderBy) {\n    if (a[orderBy] && b[orderBy] && b[orderBy].value < a[orderBy].value) {\n        return -1;\n    }\n    if (a[orderBy] && b[orderBy] && b[orderBy].value > a[orderBy].value) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}","import $ from 'jquery';\nimport _ from 'lodash';\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputLabel, MenuItem, FormControl,\n  Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,\n  TableSortLabel, FormControlLabel, Switch, Chip, Divider\n} from '@material-ui/core'\nimport { ExpandMore, Search, Done } from '@material-ui/icons';\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./QueryBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { TabPanel, a11yProps, descendingComparator, getComparator, stableSort } from './helpers.js';\nimport AppContext from '../../../AppContext';\nconst { validIdHelper, prettifyString } = require('../../../tools');\n\nexport default function QueryBuilder(props) {\n  // console.log('QueryBuilder')\n\n  const topBarBottomBarHeight = 112;\n  const sideBarWidth = 240 + 152; //24 + 24 + 30 + 30 + 12 + 12 + 10 + 10\n  const [value, setValue] = useState(0);\n  const [apiContent, setApiContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const { togglePayWallModal, show, codeShow } = useContext(AppContext);\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\n  const [width, setWidth] = useState((window.innerWidth - sideBarWidth));\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\n\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    // call this is filterBar instead to make field chip dynamic\n    // lookerContent.map(lookerContent => {\n    //   setTimeout(() => performLookerApiCalls(lookerContent.queryBody, lookerContent.resultFormat), 100);\n    // })\n    setClientSideCode(rawSampleCode);\n    // setApiContent([])\n  }, [lookerContent, lookerUser])\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setHeight((window.innerHeight - topBarBottomBarHeight))\n      setWidth((window.innerWidth - sideBarWidth))\n    });\n  })\n\n  const performLookerApiCalls = async (newQuery, resultFormat) => {\n    // console.log('performLookerApiCalls')\n    let apiContentCopy = { ...apiContent }\n    apiContentCopy.status = 'running';\n    setApiContent(apiContentCopy)\n\n    let timer = Date.now();\n    console.log('timer', timer);\n\n    let lookerCreateTaskResposnse = await fetch('/createquerytask/' + JSON.stringify(newQuery), {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerCreateTaskResponseData = await lookerCreateTaskResposnse.json();\n\n    let taskInterval = setInterval(async () => {\n      let lookerCheckTaskResposnse = await fetch('/checkquerytask/' + lookerCreateTaskResponseData.queryTaskId, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      let lookerCheckTaskResponseData = await lookerCheckTaskResposnse.json();\n      if (lookerCheckTaskResponseData.queryResults.status === 'complete') {\n        clearInterval(taskInterval);\n        setApiContent(lookerCheckTaskResponseData.queryResults)\n        setServerSideCode(lookerCreateTaskResponseData.code)\n      }\n\n      //time out after 30 seconds\n      if ((timer + (30 * 1000)) < Date.now()) {\n        clearInterval()\n        setApiContent([])\n      }\n\n    }, 5000)\n\n\n\n  }\n\n  return (\n    <div className={`${classes.root} demoComponent`}\n      style={{ height }}>\n      <Card elevation={1} className={`\n      ${classes.padding30} \n      ${classes.height100Percent}\n      ${classes.overflowYScroll}`\n      }\n      >\n        <Grid container\n          key={validIdHelper(type)} >\n          <div className={`${classes.root}`}>\n            <Grid item sm={12}>\n              <FilterBar {...props}\n                classes={classes}\n                action={performLookerApiCalls}\n              />\n            </Grid>\n            {apiContent.status === 'running' ?\n              <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                <Card className={`${classes.card} ${classes.flexCentered}`}\n                  elevation={0}\n                  mt={2}\n                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\n                  <CircularProgress className={classes.circularProgress} />\n                </Card>\n              </Grid>\n              : apiContent.data && apiContent.data.length ?\n                <Box>\n                  <Grid container\n                    spacing={3}\n                    className={`${classes.noContainerScroll}`}>\n                    {codeShow ?\n                      <Grid item sm={6}\n                        className={`${classes.positionFixedTopRight}`}\n                      >\n                        <CodeFlyout {...props}\n                          classes={classes}\n                          lookerUser={lookerUser}\n                          height={height}\n                        />\n                      </Grid> : ''}\n                    <Divider className={classes.divider} />\n                    <Grid item sm={12}>\n                      <Box className={`${classes.w100}`} mt={2}>\n                        < EnhancedTable\n                          {...props}\n                          classes={classes}\n                          rows={apiContent.data}\n                          lookerContent={lookerContent}\n                          width={width}\n                        />\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Box>\n                :\n                <Grid item sm={12} >\n                  <Typography variant=\"h6\" component=\"h6\" className={`${classes.gridTitle} ${classes.textCenter}`}>\n                    No results found, try a new query<br />\n                  </Typography>\n                </Grid>\n            }\n          </div >\n        </Grid >\n      </Card>\n    </div >\n  )\n}\n\n\nfunction FilterBar(props) {\n  // console.log('FilterBar');\n  const { staticContent, staticContent: { lookerContent }, classes, action, lookerUser } = props;\n  let measureCounter = 0;\n  let dimensionCounter = 0;\n\n\n  const initializeFieldChipDataHelper = () => {\n    let initializedFields = lookerContent[0].queryBody.fields.map((item, index) => {\n      return {\n        key: 'fieldChipData' + index,\n        label: prettifyString(item.substring(item.lastIndexOf('.') + 1, item.length)),\n        datalabel: item,\n        selected: item === 'users.state' || item === 'users.country' || item === 'order_items.total_sale_price' ? true : false,\n        fieldType: lookerContent[0].fieldType[item]\n      }\n    })\n    return initializedFields;\n  }\n\n  const [expanded, setExpanded] = useState(true);\n  const [fieldsChipData, setFieldsChipData] = useState(lookerContent[0].queryBody ? initializeFieldChipDataHelper() : '');\n  const [queryModified, setQueryModified] = useState(true); //set to true initially\n  const [queryShouldRun, setQueryShouldRun] = useState(false); //for lookerUser useEffect\n  const [filtersData, setFilterData] = useState(lookerContent[0].queryBody ? Object.keys(lookerContent[0].queryBody.filters).map((key, index) => {\n    return {\n      key: 'filter' + index,\n      label: key,\n      value: lookerContent[0].queryBody.filters[key],\n      type: lookerContent[0].filterType[key]\n    }\n  }) : '')\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  const handleFieldChipClick = (chip, index) => {\n    let updatedFieldsChipData = [...fieldsChipData]\n    updatedFieldsChipData[index].selected = updatedFieldsChipData[index].selected === false ? true : false\n    setFieldsChipData(updatedFieldsChipData)\n    setQueryModified(true)\n  }\n\n  const handleSelectChange = (index, newValue) => {\n    let updatedFiltersData = [...filtersData]\n    updatedFiltersData[index].value = newValue;\n    setFilterData(updatedFiltersData)\n    setQueryModified(true)\n  }\n\n  const handleQuerySubmit = (event) => {\n    if (queryModified || queryShouldRun) {\n      let newFields = fieldsChipData.filter(chip => chip.selected).map(item => item.datalabel);\n      let currentFilters = {}; //needs to be object\n      filtersData.map((item, index) => {\n        currentFilters[item.label] = item.value\n      })\n      let newQueryObj = { ...lookerContent[0].queryBody };\n      newQueryObj.fields = newFields;\n      newQueryObj.filters = currentFilters;\n\n      action(newQueryObj, lookerContent[0].resultFormat);\n\n      setQueryModified(false)\n      setQueryShouldRun(false)\n    } //else console.log('elllse')\n  }\n\n\n\n  useEffect(() => {\n    // console.log('useEffect lookerUser')\n    const lookerUserTimeHorizonMap = {\n      'basic': 'last 182 days',\n      'advanced': 'last 365 days',\n      'premium': 'last 730 days' //before today\n    }\n    let updatedFiltersData = [...filtersData]\n    updatedFiltersData[3].value = lookerUserTimeHorizonMap[lookerUser.user_attributes.permission_level] || \"182 days\";\n    setFilterData(updatedFiltersData);\n    setFieldsChipData(initializeFieldChipDataHelper())\n\n    setQueryShouldRun(true);\n  }, [lookerUser]);\n\n  useEffect(() => {\n    // console.log('useEffect queryShouldRun')\n    if (queryShouldRun) {\n      handleQuerySubmit();\n      setQueryModified(false);\n      setQueryShouldRun(false);\n    }\n  }, [queryShouldRun])\n\n\n  const datePermissionMap = {\n    'basic': [\"1 week\", \"1 month\", \"3 months\", \"last 182 days\"]\n  }\n  datePermissionMap.advanced = [...datePermissionMap.basic, \"last 365 days\"]\n  datePermissionMap.premium = [...datePermissionMap.advanced, \"last 730 days\"]\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} elevation={0}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMore />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Search /><Typography className={`${classes.heading} ${classes.ml12}`}>Build Query:</Typography>\n        {/* <Typography className={classes.heading}>Build Query:</Typography> */}\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Select Metrics:\n      {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'measure' ?\n                      <Chip\n                        key={item.label}\n                        // key={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        measurecounter={measureCounter += 1}\n                        className={item.selected ? `${classes.orangePrimary} ${classes.m6}` : `${classes.m6}`}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <Done className={classes.dBlock} /> : <Done className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Group By:\n                          {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'dimension' ?\n                      <Chip\n                        key={item.label}\n                        dimensioncounter={dimensionCounter += 1}\n                        className={item.selected ? `${classes.bluePrimary} ${classes.m6}` : `${classes.m6}`}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <Done className={classes.dBlock} /> : <Done className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n\n          <Grid item sm={3}>\n            <Typography variant=\"subtitle1\">\n              Filter By:\n                      </Typography>\n            {filtersData.length ? filtersData.map((item, index) => {\n              return (\n                <FormControl className={item.value.length ? classes.formControl : classes.hidden} key={validIdHelper(`${item.label}FormControl`)}>\n                  {\n                    item.type === 'yesno' ?\n                      <>\n                        <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n                        <Select\n                          labelId={validIdHelper(`${item.label}FilterLabel`)}\n                          id={validIdHelper(`${item.label}FilterSelect`)}\n                          value={item.value}\n                          onChange={(event) => handleSelectChange(index, event.target.value)}\n                        >\n                          <MenuItem value=\"Yes\">Yes</MenuItem>\n                          <MenuItem value=\"No\">No</MenuItem>\n                          <MenuItem value=\"All\">All</MenuItem>\n                        </Select>\n                      </>\n                      : item.type === 'date' ?\n                        <>\n                          <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n\n                          <Select\n                            labelId={validIdHelper(`${item.label}FilterLabel`)}\n                            id={validIdHelper(`${item.label}FilterSelect`)}\n                            value={item.value || '6 months'}\n                            onChange={(event) => handleSelectChange(index, event.target.value)}\n                          >\n                            {lookerUser.user_attributes.permission_level ? datePermissionMap[lookerUser.user_attributes.permission_level].map(item => (\n                              <MenuItem key={validIdHelper(item)} value={item}>{_.capitalize(item)}</MenuItem>\n                            )) : ''}\n                          </Select>\n                        </>\n                        : ''\n                  }\n                </FormControl>\n              )\n            }) : ''}\n          </Grid>\n          <Grid item sm={9}>\n            <br />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"large\"\n              onClick={handleQuerySubmit}\n              disabled={queryModified ? false : true}\n            >Run Query</Button></Grid>\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, rows } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {Object.keys(rows[0]).map((key, index) => (\n          <TableCell\n            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            id={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            align={key.numeric ? 'right' : 'left'}\n            padding={key.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === key ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === key}\n              direction={orderBy === key ? order : 'asc'}\n              onClick={createSortHandler(key)}\n            >\n              {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}\n              {orderBy === key ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  // onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nfunction EnhancedTable(props) {\n  const { rows, classes, lookerContent, width } = props;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(Object.keys(rows[0])[0]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return (\n    <div className={`${classes.root} ${classes.padding10}`}>\n      <ApiHighlight classes={classes} >\n        <TableContainer style={{ maxWidth: width }}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              {...props}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      key={validIdHelper('TableRow-' + index)}\n                      id={validIdHelper('TableRow-' + index)}>\n                      {Object.keys(row).map((key, index) => (\n                        <TableCell\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          className={lookerContent[0].fieldType[key] === 'dimension' ? classes.blueSecondary : classes.orangeSecondary}\n                          align=\"right\">\n                          {row[key].rendered ? row[key].rendered : row[key].value}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </ApiHighlight>\n      <Grid container>\n        <Grid item sm={6}>\n          <FormControlLabel\n            control={<Switch checked={dense} onChange={handleChangeDense} />}\n            label=\"Compact\"\n          /></Grid>\n        <Grid item sm={6}>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          /></Grid>\n      </Grid>\n      <div className={classes.bottomBarSpacer} />\n    </div>\n  );\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash';\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport PropTypes from 'prop-types';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputLabel, MenuItem, FormControl,\\n  Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,\\n  TableSortLabel, FormControlLabel, Switch, Chip, Divider\\n} from '@material-ui/core'\\nimport { ExpandMore, Search, Done } from '@material-ui/icons';\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./QueryBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { ApiHighlight } from '../../Highlights/Highlight';\\nimport { TabPanel, a11yProps, descendingComparator, getComparator, stableSort } from './helpers.js';\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper, prettifyString } = require('../../../tools');\\n\\nexport default function QueryBuilder(props) {\\n  // console.log('QueryBuilder')\\n\\n  const topBarBottomBarHeight = 112;\\n  const sideBarWidth = 240 + 152; //24 + 24 + 30 + 30 + 12 + 12 + 10 + 10\\n  const [value, setValue] = useState(0);\\n  const [apiContent, setApiContent] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const { togglePayWallModal, show, codeShow } = useContext(AppContext);\\n  const [height, setHeight] = useState((window.innerHeight - topBarBottomBarHeight));\\n  const [width, setWidth] = useState((window.innerWidth - sideBarWidth));\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\\n\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  useEffect(() => {\\n    // call this is filterBar instead to make field chip dynamic\\n    // lookerContent.map(lookerContent => {\\n    //   setTimeout(() => performLookerApiCalls(lookerContent.queryBody, lookerContent.resultFormat), 100);\\n    // })\\n    setClientSideCode(rawSampleCode);\\n    // setApiContent([])\\n  }, [lookerContent, lookerUser])\\n\\n  useEffect(() => {\\n    window.addEventListener(\\\"resize\\\", () => {\\n      setHeight((window.innerHeight - topBarBottomBarHeight))\\n      setWidth((window.innerWidth - sideBarWidth))\\n    });\\n  })\\n\\n  const performLookerApiCalls = async (newQuery, resultFormat) => {\\n    // console.log('performLookerApiCalls')\\n    let apiContentCopy = { ...apiContent }\\n    apiContentCopy.status = 'running';\\n    setApiContent(apiContentCopy)\\n\\n    let timer = Date.now();\\n    console.log('timer', timer);\\n\\n    let lookerCreateTaskResposnse = await fetch('/createquerytask/' + JSON.stringify(newQuery), {\\n      method: 'GET',\\n      headers: {\\n        Accept: 'application/json',\\n        'Content-Type': 'application/json'\\n      }\\n    })\\n    let lookerCreateTaskResponseData = await lookerCreateTaskResposnse.json();\\n\\n    let taskInterval = setInterval(async () => {\\n      let lookerCheckTaskResposnse = await fetch('/checkquerytask/' + lookerCreateTaskResponseData.queryTaskId, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      })\\n      let lookerCheckTaskResponseData = await lookerCheckTaskResposnse.json();\\n      if (lookerCheckTaskResponseData.queryResults.status === 'complete') {\\n        clearInterval(taskInterval);\\n        setApiContent(lookerCheckTaskResponseData.queryResults)\\n        setServerSideCode(lookerCreateTaskResponseData.code)\\n      }\\n\\n      //time out after 30 seconds\\n      if ((timer + (30 * 1000)) < Date.now()) {\\n        clearInterval()\\n        setApiContent([])\\n      }\\n\\n    }, 5000)\\n\\n\\n\\n  }\\n\\n  return (\\n    <div className={`${classes.root} demoComponent`}\\n      style={{ height }}>\\n      <Card elevation={1} className={`\\n      ${classes.padding30} \\n      ${classes.height100Percent}\\n      ${classes.overflowYScroll}`\\n      }\\n      >\\n        <Grid container\\n          key={validIdHelper(type)} >\\n          <div className={`${classes.root}`}>\\n            <Grid item sm={12}>\\n              <FilterBar {...props}\\n                classes={classes}\\n                action={performLookerApiCalls}\\n              />\\n            </Grid>\\n            {apiContent.status === 'running' ?\\n              <Grid item sm={12} style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                <Card className={`${classes.card} ${classes.flexCentered}`}\\n                  elevation={0}\\n                  mt={2}\\n                  style={{ height: height - 30 - ($('.MuiExpansionPanel-root:visible').innerHeight() || 0) }}>\\n                  <CircularProgress className={classes.circularProgress} />\\n                </Card>\\n              </Grid>\\n              : apiContent.data && apiContent.data.length ?\\n                <Box>\\n                  <Grid container\\n                    spacing={3}\\n                    className={`${classes.noContainerScroll}`}>\\n                    {codeShow ?\\n                      <Grid item sm={6}\\n                        className={`${classes.positionFixedTopRight}`}\\n                      >\\n                        <CodeFlyout {...props}\\n                          classes={classes}\\n                          lookerUser={lookerUser}\\n                          height={height}\\n                        />\\n                      </Grid> : ''}\\n                    <Divider className={classes.divider} />\\n                    <Grid item sm={12}>\\n                      <Box className={`${classes.w100}`} mt={2}>\\n                        < EnhancedTable\\n                          {...props}\\n                          classes={classes}\\n                          rows={apiContent.data}\\n                          lookerContent={lookerContent}\\n                          width={width}\\n                        />\\n                      </Box>\\n                    </Grid>\\n                  </Grid>\\n                </Box>\\n                :\\n                <Grid item sm={12} >\\n                  <Typography variant=\\\"h6\\\" component=\\\"h6\\\" className={`${classes.gridTitle} ${classes.textCenter}`}>\\n                    No results found, try a new query<br />\\n                  </Typography>\\n                </Grid>\\n            }\\n          </div >\\n        </Grid >\\n      </Card>\\n    </div >\\n  )\\n}\\n\\n\\nfunction FilterBar(props) {\\n  // console.log('FilterBar');\\n  const { staticContent, staticContent: { lookerContent }, classes, action, lookerUser } = props;\\n  let measureCounter = 0;\\n  let dimensionCounter = 0;\\n\\n\\n  const initializeFieldChipDataHelper = () => {\\n    let initializedFields = lookerContent[0].queryBody.fields.map((item, index) => {\\n      return {\\n        key: 'fieldChipData' + index,\\n        label: prettifyString(item.substring(item.lastIndexOf('.') + 1, item.length)),\\n        datalabel: item,\\n        selected: item === 'users.state' || item === 'users.country' || item === 'order_items.total_sale_price' ? true : false,\\n        fieldType: lookerContent[0].fieldType[item]\\n      }\\n    })\\n    return initializedFields;\\n  }\\n\\n  const [expanded, setExpanded] = useState(true);\\n  const [fieldsChipData, setFieldsChipData] = useState(lookerContent[0].queryBody ? initializeFieldChipDataHelper() : '');\\n  const [queryModified, setQueryModified] = useState(true); //set to true initially\\n  const [queryShouldRun, setQueryShouldRun] = useState(false); //for lookerUser useEffect\\n  const [filtersData, setFilterData] = useState(lookerContent[0].queryBody ? Object.keys(lookerContent[0].queryBody.filters).map((key, index) => {\\n    return {\\n      key: 'filter' + index,\\n      label: key,\\n      value: lookerContent[0].queryBody.filters[key],\\n      type: lookerContent[0].filterType[key]\\n    }\\n  }) : '')\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n\\n  const handleFieldChipClick = (chip, index) => {\\n    let updatedFieldsChipData = [...fieldsChipData]\\n    updatedFieldsChipData[index].selected = updatedFieldsChipData[index].selected === false ? true : false\\n    setFieldsChipData(updatedFieldsChipData)\\n    setQueryModified(true)\\n  }\\n\\n  const handleSelectChange = (index, newValue) => {\\n    let updatedFiltersData = [...filtersData]\\n    updatedFiltersData[index].value = newValue;\\n    setFilterData(updatedFiltersData)\\n    setQueryModified(true)\\n  }\\n\\n  const handleQuerySubmit = (event) => {\\n    if (queryModified || queryShouldRun) {\\n      let newFields = fieldsChipData.filter(chip => chip.selected).map(item => item.datalabel);\\n      let currentFilters = {}; //needs to be object\\n      filtersData.map((item, index) => {\\n        currentFilters[item.label] = item.value\\n      })\\n      let newQueryObj = { ...lookerContent[0].queryBody };\\n      newQueryObj.fields = newFields;\\n      newQueryObj.filters = currentFilters;\\n\\n      action(newQueryObj, lookerContent[0].resultFormat);\\n\\n      setQueryModified(false)\\n      setQueryShouldRun(false)\\n    } //else console.log('elllse')\\n  }\\n\\n\\n\\n  useEffect(() => {\\n    // console.log('useEffect lookerUser')\\n    const lookerUserTimeHorizonMap = {\\n      'basic': 'last 182 days',\\n      'advanced': 'last 365 days',\\n      'premium': 'last 730 days' //before today\\n    }\\n    let updatedFiltersData = [...filtersData]\\n    updatedFiltersData[3].value = lookerUserTimeHorizonMap[lookerUser.user_attributes.permission_level] || \\\"182 days\\\";\\n    setFilterData(updatedFiltersData);\\n    setFieldsChipData(initializeFieldChipDataHelper())\\n\\n    setQueryShouldRun(true);\\n  }, [lookerUser]);\\n\\n  useEffect(() => {\\n    // console.log('useEffect queryShouldRun')\\n    if (queryShouldRun) {\\n      handleQuerySubmit();\\n      setQueryModified(false);\\n      setQueryShouldRun(false);\\n    }\\n  }, [queryShouldRun])\\n\\n\\n  const datePermissionMap = {\\n    'basic': [\\\"1 week\\\", \\\"1 month\\\", \\\"3 months\\\", \\\"last 182 days\\\"]\\n  }\\n  datePermissionMap.advanced = [...datePermissionMap.basic, \\\"last 365 days\\\"]\\n  datePermissionMap.premium = [...datePermissionMap.advanced, \\\"last 730 days\\\"]\\n\\n  return (\\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} elevation={0}>\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMore />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <Search /><Typography className={`${classes.heading} ${classes.ml12}`}>Build Query:</Typography>\\n        {/* <Typography className={classes.heading}>Build Query:</Typography> */}\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        <Grid container spacing={3}>\\n          <Grid item sm={12}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Select Metrics:\\n      {fieldsChipData.length ?\\n                fieldsChipData.map((item, index) => {\\n                  return (\\n                    item.fieldType === 'measure' ?\\n                      <Chip\\n                        key={item.label}\\n                        // key={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        measurecounter={measureCounter += 1}\\n                        className={item.selected ? `${classes.orangePrimary} ${classes.m6}` : `${classes.m6}`}\\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        datalabel={item.label}\\n                        onClick={() => handleFieldChipClick(item, index)}\\n                        icon={item.selected ? <Done className={classes.dBlock} /> : <Done className={classes.dNone} />}\\n                      /> : ''\\n                  )\\n                }) : ''\\n              }<br />\\n            </Typography>\\n          </Grid>\\n          <Grid item sm={12}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Group By:\\n                          {fieldsChipData.length ?\\n                fieldsChipData.map((item, index) => {\\n                  return (\\n                    item.fieldType === 'dimension' ?\\n                      <Chip\\n                        key={item.label}\\n                        dimensioncounter={dimensionCounter += 1}\\n                        className={item.selected ? `${classes.bluePrimary} ${classes.m6}` : `${classes.m6}`}\\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        datalabel={item.label}\\n                        onClick={() => handleFieldChipClick(item, index)}\\n                        icon={item.selected ? <Done className={classes.dBlock} /> : <Done className={classes.dNone} />}\\n                      /> : ''\\n                  )\\n                }) : ''\\n              }<br />\\n            </Typography>\\n          </Grid>\\n\\n          <Grid item sm={3}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Filter By:\\n                      </Typography>\\n            {filtersData.length ? filtersData.map((item, index) => {\\n              return (\\n                <FormControl className={item.value.length ? classes.formControl : classes.hidden} key={validIdHelper(`${item.label}FormControl`)}>\\n                  {\\n                    item.type === 'yesno' ?\\n                      <>\\n                        <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\\n                        <Select\\n                          labelId={validIdHelper(`${item.label}FilterLabel`)}\\n                          id={validIdHelper(`${item.label}FilterSelect`)}\\n                          value={item.value}\\n                          onChange={(event) => handleSelectChange(index, event.target.value)}\\n                        >\\n                          <MenuItem value=\\\"Yes\\\">Yes</MenuItem>\\n                          <MenuItem value=\\\"No\\\">No</MenuItem>\\n                          <MenuItem value=\\\"All\\\">All</MenuItem>\\n                        </Select>\\n                      </>\\n                      : item.type === 'date' ?\\n                        <>\\n                          <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\\n\\n                          <Select\\n                            labelId={validIdHelper(`${item.label}FilterLabel`)}\\n                            id={validIdHelper(`${item.label}FilterSelect`)}\\n                            value={item.value || '6 months'}\\n                            onChange={(event) => handleSelectChange(index, event.target.value)}\\n                          >\\n                            {lookerUser.user_attributes.permission_level ? datePermissionMap[lookerUser.user_attributes.permission_level].map(item => (\\n                              <MenuItem key={validIdHelper(item)} value={item}>{_.capitalize(item)}</MenuItem>\\n                            )) : ''}\\n                          </Select>\\n                        </>\\n                        : ''\\n                  }\\n                </FormControl>\\n              )\\n            }) : ''}\\n          </Grid>\\n          <Grid item sm={9}>\\n            <br />\\n            <Button\\n              color=\\\"primary\\\"\\n              variant=\\\"contained\\\"\\n              size=\\\"large\\\"\\n              onClick={handleQuerySubmit}\\n              disabled={queryModified ? false : true}\\n            >Run Query</Button></Grid>\\n        </Grid>\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel>\\n  )\\n}\\n\\nfunction EnhancedTableHead(props) {\\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, rows } = props;\\n  const createSortHandler = (property) => (event) => {\\n    onRequestSort(event, property);\\n  };\\n\\n  return (\\n    <TableHead>\\n      <TableRow>\\n        {Object.keys(rows[0]).map((key, index) => (\\n          <TableCell\\n            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\\n            id={validIdHelper(key + '-TableHead-TableCell-' + index)}\\n            align={key.numeric ? 'right' : 'left'}\\n            padding={key.disablePadding ? 'none' : 'default'}\\n            sortDirection={orderBy === key ? order : false}\\n          >\\n            <TableSortLabel\\n              active={orderBy === key}\\n              direction={orderBy === key ? order : 'asc'}\\n              onClick={createSortHandler(key)}\\n            >\\n              {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}\\n              {orderBy === key ? (\\n                <span className={classes.visuallyHidden}>\\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\\n                </span>\\n              ) : null}\\n            </TableSortLabel>\\n          </TableCell>\\n        ))}\\n      </TableRow>\\n    </TableHead>\\n  );\\n}\\n\\nEnhancedTableHead.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n  // numSelected: PropTypes.number.isRequired,\\n  onRequestSort: PropTypes.func.isRequired,\\n  // onSelectAllClick: PropTypes.func.isRequired,\\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\\n  orderBy: PropTypes.string.isRequired,\\n  rowCount: PropTypes.number.isRequired,\\n};\\n\\nfunction EnhancedTable(props) {\\n  const { rows, classes, lookerContent, width } = props;\\n  const [order, setOrder] = React.useState('asc');\\n  const [orderBy, setOrderBy] = React.useState(Object.keys(rows[0])[0]);\\n  const [page, setPage] = React.useState(0);\\n  const [dense, setDense] = React.useState(true);\\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\\n\\n  const handleRequestSort = (event, property) => {\\n    const isAsc = orderBy === property && order === 'asc';\\n    setOrder(isAsc ? 'desc' : 'asc');\\n    setOrderBy(property);\\n  };\\n\\n  const handleChangePage = (event, newPage) => {\\n    setPage(newPage);\\n  };\\n\\n  const handleChangeRowsPerPage = (event) => {\\n    setRowsPerPage(parseInt(event.target.value, 10));\\n    setPage(0);\\n  };\\n\\n  const handleChangeDense = (event) => {\\n    setDense(event.target.checked);\\n  };\\n\\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\\n  return (\\n    <div className={`${classes.root} ${classes.padding10}`}>\\n      <ApiHighlight classes={classes} >\\n        <TableContainer style={{ maxWidth: width }}>\\n          <Table\\n            className={classes.table}\\n            aria-labelledby=\\\"tableTitle\\\"\\n            size={dense ? 'small' : 'medium'}\\n            aria-label=\\\"enhanced table\\\"\\n          >\\n            <EnhancedTableHead\\n              {...props}\\n              classes={classes}\\n              order={order}\\n              orderBy={orderBy}\\n              onRequestSort={handleRequestSort}\\n              rowCount={rows.length}\\n            />\\n            <TableBody>\\n              {stableSort(rows, getComparator(order, orderBy))\\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\\n                .map((row, index) => {\\n                  return (\\n                    <TableRow\\n                      hover\\n                      key={validIdHelper('TableRow-' + index)}\\n                      id={validIdHelper('TableRow-' + index)}>\\n                      {Object.keys(row).map((key, index) => (\\n                        <TableCell\\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}\\n                          className={lookerContent[0].fieldType[key] === 'dimension' ? classes.blueSecondary : classes.orangeSecondary}\\n                          align=\\\"right\\\">\\n                          {row[key].rendered ? row[key].rendered : row[key].value}\\n                        </TableCell>\\n                      ))}\\n                    </TableRow>\\n                  );\\n                })}\\n              {emptyRows > 0 && (\\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\\n                  <TableCell colSpan={6} />\\n                </TableRow>\\n              )}\\n            </TableBody>\\n          </Table>\\n        </TableContainer>\\n      </ApiHighlight>\\n      <Grid container>\\n        <Grid item sm={6}>\\n          <FormControlLabel\\n            control={<Switch checked={dense} onChange={handleChangeDense} />}\\n            label=\\\"Compact\\\"\\n          /></Grid>\\n        <Grid item sm={6}>\\n          <TablePagination\\n            rowsPerPageOptions={[5, 10, 25, 50]}\\n            component=\\\"div\\\"\\n            count={rows.length}\\n            rowsPerPage={rowsPerPage}\\n            page={page}\\n            onChangePage={handleChangePage}\\n            onChangeRowsPerPage={handleChangeRowsPerPage}\\n          /></Grid>\\n      </Grid>\\n      <div className={classes.bottomBarSpacer} />\\n    </div>\\n  );\\n}\";","import _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppContext from '../../AppContext';\nimport { Modal, Fade, Grid, Paper, Card, CardContent, CardActions, Button, Typography, Chip, Divider, List, ListItem, ListItemAvatar, Avatar, ImageIcon, ListItemText } from '@material-ui/core';\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport CheckIcon from '@material-ui/icons/Check';\nimport LookerUserPermissions from '../../lookerUserPermissions.json';\nconst { validIdHelper } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 1000,\n    height: 580,\n    overflow: 'scroll',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    // height: 520,\n    overflow: 'scroll',\n    cursor: 'pointer',\n    '&:hover': {\n      transform: 'scale(1.05)',\n      transition: 'transform .2s'\n    }\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  padding15: {\n    padding: 15\n  },\n  divider: {\n    marginTop: 15,\n    marginBottom: 15,\n    color: '#fff'\n  },\n  basic: {\n\n  },\n  advanced: {\n\n  },\n  premium: {\n    backgroundColor: '#5F6BD8',\n    color: '#ffffff'\n  },\n  font75: {\n    fontSize: '.75em'\n  },\n  font875: {\n    // fontSize: '.875em'\n  },\n  padding30: {\n    padding: 30\n  }\n}));\n\nfunction getModalStyle() {\n  const top = 10 //+ rand();\n  const left = 50 //+ rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${left}%, -${top}%)`,\n  };\n}\n\n\nexport function MonetizationModal({ props, switchLookerUser }) {\n  const { payWallModal, togglePayWallModal, lookerUser } = useContext(AppContext);\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n\n  const modalListMap = {\n    'basic': [\n      '6 months of order data history',\n      'Atom Merchant Dashboards',\n      'Download PDFs, CSVs'\n    ],\n    'advanced': [\n      'Full year of order data history',\n      'Drill to row level information',\n      'Download row level information',\n      'Schedule dashboards for delivery (to you or others)',\n      'Set alerts and key threshold notifications'],\n    'premium': [\n      '2 Full years of order data history',\n      'Analyze your own data and save custom reports',\n      'View premium level, productivity enhancing reports',\n      'Share your reports with colleagues in Atom',\n      'Text message alerts',\n      // 'Notify active shoppers on Atom',\n      // 'Apply Atom’s advanced AI insights to stay ahead of trends'\n    ]\n  }\n\n\n  return (\n    < Modal\n      className={`${classes.modal} `}\n      open={payWallModal.show || false}\n      onClose={togglePayWallModal}\n    >\n      <Fade in={payWallModal.show || false}>\n        <div\n          style={modalStyle}\n          className={`${classes.paper} ${classes.padding30}`}>\n          <Grid container\n            spacing={3}>\n            {Object.keys(LookerUserPermissions).map(key => {\n              return (\n                <Grid item sm={4}\n                  key={validIdHelper(`monetizationModal-gridItem-${key}`)}\n                >\n                  <Card className={`${classes.card} ${classes[key]}`}\n                    elevation={1}\n                    style={key === lookerUser.user_attributes.permission_level ? {\n                      transform: 'scale(1.05)',\n                      transition: 'transform .2s',\n                      height: 495\n                    } : {\n                        height: 495\n                      }}\n                    onClick={() => {\n                      switchLookerUser(key, 'permission')\n                      togglePayWallModal()\n                    }}>\n                    <CardContent>\n                      <Typography variant=\"h6\">\n                        {_.capitalize(key)}\n                      </Typography>\n                      <Typography variant=\"subtitle1\" style={{ fontStyle: 'italic' }}>\n                        {key === 'basic' ?\n                          'Drive your business with clear KPIs' :\n                          key === 'advanced' ?\n                            'Deeper insights, operations' :\n                            'Drive your business with Atom'\n                        }\n                      </Typography>\n\n                      <Divider className={`${classes.divider} `} />\n\n                      <List className={classes.root}>\n                        {\n                          modalListMap[key].map((item, index) => (\n                            <ListItem dense={true}\n                              className={classes.font875}\n                              key={`monetizationModal-ListItem-${key}-${index}`}\n                            >\n                              <ListItemIcon\n                              >\n                                <CheckIcon fontSize=\"small\" />\n                              </ListItemIcon>\n                              <ListItemText primary={item} />\n                            </ListItem>\n                          ))\n                        }\n                      </List>\n                    </CardContent>\n                    <CardActions disableSpacing={false}>\n                      <Button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        disabled={key === lookerUser.user_attributes.permission_level ? true : false}\n                        fullWidth\n                        onClick={() => {\n                          switchLookerUser(key, 'permission')\n                          togglePayWallModal()\n                        }}>\n                        {Object.keys(modalListMap).indexOf(lookerUser.user_attributes.permission_level) < Object.keys(modalListMap).indexOf(key) ? 'Upgrade' : 'Switch'}\n                        {/* {'Upgrade'} */}\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              )\n            })}\n          </Grid>\n        </div>\n      </Fade >\n    </Modal >\n  );\n}\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport clsx from 'clsx';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Drawer, CssBaseline, AppBar, Toolbar, Typography,\n  Divider, IconButton, Tabs, Tab, Icon, Box, Avatar,\n  ListSubheader, List, ListItem, ListItemIcon, ListItemText,\n  Badge, FormControlLabel, Switch, Button\n} from '@material-ui/core/';\n\nimport { AddAlert, ShowChart, VisibilityOutlined, DateRangeOutlined, Search, FindInPage, Code, TableChartOutlined, LibraryBooksOutlined, Menu, ChevronLeft } from '@material-ui/icons';\nimport HomeIcon from '@material-ui/icons/Home'; //can't reuse home name\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, grey } from '@material-ui/core/colors';\nimport UserMenu from './Material/UserMenu';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport UsecaseContent from '../usecaseContent.json';\nimport SplashPage from './Demo/SplashPage/SplashPage';\nimport Dashboard from './Demo/Dashboard/Dashboard';\nimport CustomVis from './Demo/CustomVis/CustomVis';\nimport ReportBuilder from './Demo/ReportBuilder/ReportBuilder';\nimport QueryBuilder from './Demo/QueryBuilder/QueryBuilder';\nimport AppContext from '../AppContext';\n// import { HighlightSourcesLegend } from './HighlightSourcesLegend';\nimport style from 'react-syntax-highlighter/dist/esm/styles/hljs/agate';\nimport './Home.css'; //needed for iframe height\nimport { MonetizationModal } from './Demo/MonetizationModal';\nimport BottomBar from './Material/BottomBar';\n\nimport LookerUserPermissions from '../lookerUserPermissions.json';\nimport { lookerUserTimeHorizonMap } from '../App';\n\n\n\nconst drawerWidth = 240;\nconst { validIdHelper } = require('../tools');\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: 'rgb(229, 229, 229)'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    zIndex: 1201,\n    backgroundColor: \"#343D4E\"\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    borderRight: 'none',\n    backgroundColor: 'transparent'\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    borderRight: 'none',\n    backgroundColor: 'transparent'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n    // backgroundColor: '#343D4E',\n    // color: '#ffff'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  relative: {\n    position: 'relative'\n  },\n  absolute: {\n    position: 'absolute'\n  },\n  right0: {\n    right: 0\n  },\n  top0: {\n    top: 0\n  },\n  right24: {\n    right: 24\n  },\n  top24: {\n    top: 24\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  mr12: {\n    marginRight: 12\n  },\n  mt12: {\n    marginTop: 12\n  },\n  highlightLegend: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2),\n    zIndex: 1200\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400\n  },\n  parentHoverVisibility: {\n    '&:hover $childHoverVisibility': {\n      visibility: 'visible'\n    }\n\n  },\n  childHoverVisibility: {\n    visibility: 'hidden'\n  },\n  fontSize1em: {\n    fontSize: '1em'\n  },\n  padding10: {\n    padding: 10\n  },\n  mt5: {\n    marginTop: 5\n  },\n  mb5: {\n    marginBottom: 5\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  list: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: 'transparent'\n    // theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  mrAuto: {\n    marginRight: 'auto'\n  },\n  appBarBottom: {\n    top: 'auto',\n    bottom: 0,\n    // backgroundColor: 'transparent'\n  },\n  hidden: {\n    visibility: 'hidden'\n  },\n  roundedTab: {\n    borderRadius: '0 100px 100px 0'\n  },\n  paddingBottom30: {\n    paddingBottom: 30\n  },\n  mtAuto: {\n    marginTop: 'auto'\n  },\n  mb10: {\n    marginBottom: 10\n  }\n});\n\nconst defaultTheme = createMuiTheme({})\nconst atomTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[900],\n    },\n    secondary: {\n      main: grey[400],\n    },\n  },\n})\n\nconst vidlyTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500],\n    },\n  },\n})\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawerOpen: window.innerWidth > 768 ? true : false, //true,\n      drawerTabValue: 0,\n      activeTabValue: 0,\n      activeUsecase: '',\n      appLayout: '',\n      highlightShow: false,\n      payWallModal: {},\n      selectedMenuItem: '',\n      renderedDemoComponents: [],\n      codeShow: false,\n    }\n  }\n\n  togglePayWallModal = (modalContent) => {\n    this.setState({ payWallModal: { ...modalContent } })\n  }\n\n  toggleHighlightShow = () => {\n    if (this.state.codeShow) this.toggleCodeShow()\n    this.setState({ highlightShow: !this.state.highlightShow })\n  }\n\n  toggleCodeShow = () => {\n    if (this.state.highlightShow) this.toggleHighlightShow()\n    this.setState({ codeShow: !this.state.codeShow })\n  }\n\n  handleTabChange = newValue => {\n    this.setState({\n      activeTabValue: newValue\n    })\n  }\n\n\n\n  handleDrawerChange = (open) => {\n    this.setState({\n      drawerOpen: open\n    })\n  }\n\n  handleMenuItemSelect = (newValue, fromSplash) => {\n    // console.log('handleMenuItemSelect')\n    this.handleTabChange(0)\n\n    if (this.state.highlightShow) this.toggleHighlightShow()\n    if (this.state.codeShow) this.toggleCodeShow()\n\n    let selectedMenuItemValue = ''\n    if (fromSplash) {\n      UsecaseContent[this.state.activeUsecase].demoComponents.map(item => {\n        if (item.type !== \"splash page\") {\n          item.lookerContent.map(lookerContentItem => {\n            if (lookerContentItem.id === newValue) {\n              selectedMenuItemValue = validIdHelper(item.type + lookerContentItem.id)\n            }\n          })\n        }\n      })\n    } else selectedMenuItemValue = newValue;\n\n    let renderedDemoComponentsCopy = [...this.state.renderedDemoComponents]\n    if (renderedDemoComponentsCopy.indexOf(selectedMenuItemValue) == -1) renderedDemoComponentsCopy.unshift(selectedMenuItemValue)\n\n    this.setState((prevState) => ({\n      selectedMenuItem: selectedMenuItemValue,\n      renderedDemoComponents: [...renderedDemoComponentsCopy]\n    }))\n  };\n\n  componentDidMount(props) {\n    let { usecaseFromUrl } = this.props || 'atom';\n\n    this.setState({\n      activeUsecase: usecaseFromUrl,\n      appLayout: UsecaseContent[usecaseFromUrl].layout || 'left-sidebar'\n    }, () => {\n      LookerEmbedSDK.init(`https://${this.props.lookerHost}.looker.com`, '/auth');\n    })\n\n    window.addEventListener(\"resize\", () => {\n      // console.log('resize event')\n      this.setState({ drawerOpen: window.innerWidth > 768 ? true : false })\n    });\n\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log('componentDidUpdate')\n    let prevPermissionLevel = prevProps.lookerUser.user_attributes.permission_level;\n    let currPermissionLevel = this.props.lookerUser.user_attributes.permission_level;\n    let prevUserBrand = prevProps.lookerUser.user_attributes.brand;\n    let currUserBrand = this.props.lookerUser.user_attributes.brand;\n\n    if ((prevPermissionLevel !== currPermissionLevel) || (prevUserBrand !== currUserBrand)) {\n      // console.log('we are inside this iffff')\n      LookerEmbedSDK.init(`https://${this.props.lookerHost}.looker.com`, '/auth');\n      this.setState({\n        renderedDemoComponents: [this.state.selectedMenuItem]\n      })\n    }\n  }\n\n  handleUserMenuSwitch = async (newValue, property) => {\n    // console.log('handleUserMenuSwitch')\n    // console.log('newValue', newValue)\n    // console.log('property', property)\n    //eg to review this 9/8\n    let newLookerUser = { ...this.props.lookerUser }\n    // console.log('new looker user',newLookerUser)\n    if (property === 'brand') {\n      newLookerUser.user_attributes.brand = newValue\n    } else if (property === 'permission') {\n      // console.log('permission',newValue)\n      newLookerUser.permissions = LookerUserPermissions[newValue] || LookerUserPermissions['basic']\n      newLookerUser.user_attributes.permission_level = newValue\n      newLookerUser.user_attributes.time_horizon = lookerUserTimeHorizonMap[newValue]\n    }\n    const x = await fetch('/updatelookeruser', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newLookerUser)\n    })\n    // console.log(x)\n\n    this.setState({\n      renderedDemoComponents: [this.state.selectedMenuItem]\n    }, () => {\n      if (property === 'brand') {\n        this.props.switchUserAttributeBrand(newValue);\n      } else if (property === 'permission') {\n        this.props.switchLookerUser(newValue);\n      }\n    })\n\n  }\n\n\n  render() {\n\n    //how to make this dynamic????\n    const demoComponentMap = {\n      \"splashpage19\": SplashPage,\n      \"simpledashboard5\": Dashboard,\n      \"simpledashboard9\": Dashboard,\n      \"customfilter1\": Dashboard,\n      \"customvis\": CustomVis,\n      \"querybuilderexplorelite\": QueryBuilder,\n      \"reportbuilder14\": ReportBuilder,\n    };\n\n    const demoComponentKeyMap = [\"splashpage19\",\n      \"simpledashboard5\",\n      \"simpledashboard9\",\n      \"customfilter1\",\n      \"customvis\",\n      \"querybuilderexplorelite\",\n      \"reportbuilder14\"\n    ]\n    // const demoComponentValueMap = [SplashPage,\n    //   Dashboard,\n    //   Dashboard,\n    //   Dashboard,\n    //   CustomVis,\n    //   QueryBuilder,\n    //   ReportBuilder\n    // ]\n\n    const themeMap = {\n      \"atom\": atomTheme,\n      \"vidly\": vidlyTheme\n    }\n\n    const { drawerTabValue, drawerOpen, activeTabValue, activeUsecase, selectedMenuItem, renderedDemoComponents } = this.state;\n    const { handleTabChange, handleMenuItemSelect, handleDrawerChange } = this;\n    const { classes, activeCustomization, lookerUser, applySession, lookerUserAttributeBrandOptions, lookerHost, userProfile } = this.props\n\n    // Use Lodash to sort array by 'name'\n    let orderedDemoComponentsForMenu = activeUsecase ? _.orderBy(UsecaseContent[activeUsecase].demoComponents, ['menuCategory'], ['asc']) : [];\n    let orderedDemoComponentsForMenuObj = {};\n    let expandedTreeItemsArr = [];\n    let cumulativePusher = 0;\n    orderedDemoComponentsForMenu.map((item, index) => {\n      if (orderedDemoComponentsForMenuObj.hasOwnProperty(item.menuCategory)) {\n        orderedDemoComponentsForMenuObj[item.menuCategory] = [...orderedDemoComponentsForMenuObj[item.menuCategory], item]\n      } else {\n        orderedDemoComponentsForMenuObj[item.menuCategory] = [item];\n        cumulativePusher += 1;\n        expandedTreeItemsArr.push(\"\" + (index + cumulativePusher));\n      }\n    })\n\n\n    if (activeUsecase && !selectedMenuItem.length) {\n      let selectedMenuItemVal =\n        UsecaseContent[activeUsecase].demoComponents[0].lookerContent[0].id ?\n          validIdHelper(UsecaseContent[activeUsecase].demoComponents[0].type + UsecaseContent[activeUsecase].demoComponents[0].lookerContent[0].id) :\n          validIdHelper(UsecaseContent[activeUsecase].demoComponents[0].type)\n      this.setState({\n        selectedMenuItem: selectedMenuItemVal,\n        renderedDemoComponents: [selectedMenuItemVal]\n      }, () => {\n      })\n\n      //couldn't figure this out...\n      // UsecaseContent[activeUsecase].demoComponents.map(item => {\n      //   demoComponentMap[item.lookerContent[0].id ?\n      //     validIdHelper(item.type + item.lookerContent[0].id) :\n      //     validIdHelper(item.type)] = item.type.split(\" \").map(item => _.capitalize(item)).join(\"\")\n      // })\n    }\n\n\n    /**\n     * what this does\n     * we want rendered demo components to render active one first\n     * renderedDemoComponents is always up to date\n     * so create array of unique demo components starting with rendered\n     * then iterate through usecase file and sort array according to order of unique\n     */\n\n    // const orderedDemoComponentsForRender = [...renderedDemoComponents, ...demoComponentKeyMap]\n    // const uniqueOrderedDemoComponentsForRender = [...new Set(orderedDemoComponentsForRender)];\n\n    // if (activeUsecase) {\n    //   UsecaseContent[activeUsecase].demoComponents.sort(function (a, b) {\n    //     let idToUseForA = validIdHelper(a.lookerContent[0].id ? a.type + a.lookerContent[0].id : a.type);\n    //     let idToUseForB = validIdHelper(b.lookerContent[0].id ? b.type + b.lookerContent[0].id : b.type);\n    //     return uniqueOrderedDemoComponentsForRender.indexOf(idToUseForA) - uniqueOrderedDemoComponentsForRender.indexOf(idToUseForB);\n    //   });\n    // }\n\n    // console.log('this.state.renderedDemoComponents', this.state.renderedDemoComponents)\n    // console.log('orderedDemoComponentsForRender', orderedDemoComponentsForRender)\n    // console.log('uniqueOrderedDemoComponentsForRender', uniqueOrderedDemoComponentsForRender)\n\n    return (\n      <div className={classes.root} >\n        <AppContext.Provider value={\n          {\n            show: this.state.highlightShow,\n            toggleShow: this.toggleHighlightShow,\n            payWallModal: this.state.payWallModal,\n            togglePayWallModal: this.togglePayWallModal,\n            lookerUser,\n            userProfile,\n            codeShow: this.state.codeShow,\n            toggleCodeShow: this.toggleCodeShow\n          }\n        } >\n          <ThemeProvider theme={activeUsecase ? themeMap[activeUsecase] : defaultTheme}>\n            <CssBaseline />\n            <TopBar {...this.props}\n              classes={classes}\n              activeUsecase={activeUsecase}\n              lookerUser={lookerUser}\n              applySession={applySession}\n              lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions}\n              handleUserMenuSwitch={this.handleUserMenuSwitch}\n              handleDrawerChange={this.handleDrawerChange}\n              drawerOpen={drawerOpen} />\n            <Drawer\n              className={classes.drawer}\n              variant=\"persistent\"\n              anchor=\"left\"\n              open={drawerOpen}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <div className={classes.drawerHeader}>\n                <IconButton onClick={() => handleDrawerChange(false)}>\n                  <ChevronLeft />\n                </IconButton>\n              </div>\n\n              {Object.keys(orderedDemoComponentsForMenuObj).length ?\n                <MenuList {...this.props}\n                  classes={classes}\n                  activeUsecase={activeUsecase}\n                  orderedDemoComponentsForMenuObj={orderedDemoComponentsForMenuObj}\n                  selectedMenuItem={selectedMenuItem}\n                  handleMenuItemSelect={handleMenuItemSelect}\n                // lookerUser={lookerUser}\n                // show={show}\n                // toggleShow={toggleShow}\n                // codeShow={codeShow}\n                // toggleCodeShow={toggleCodeShow}\n                /> : ''}\n\n              <MonetizationModal\n                switchLookerUser={this.handleUserMenuSwitch}\n              />\n              <BottomBar classes={classes} lookerUser={lookerUser} />\n            </Drawer>\n            <main\n              className={clsx(classes.content, {\n                [classes.contentShift]: drawerOpen,\n              })}\n            >\n              <div className={classes.drawerHeader} />\n              {activeUsecase ?\n                UsecaseContent[activeUsecase].demoComponents.map((item, index) => {\n                  const key = item.lookerContent[0].id ? validIdHelper(item.type + item.lookerContent[0].id) : validIdHelper(item.type);\n                  const DemoComponent = demoComponentMap[key];\n                  return (\n                    <React.Fragment\n                      key={validIdHelper(`outerFragment-${item.type}-${index}`)}>\n                      {renderedDemoComponents.indexOf(key) > -1 ?\n                        <Box key={validIdHelper(`box-${item.type}-${index}`)}\n                          className={key === selectedMenuItem ? `` : `${classes.hide}`}\n                        >\n                          {/* {key === selectedMenuItem ? */}\n                          <DemoComponent\n                            key={validIdHelper(`demoComponent-${item.type}-${index}`)}\n                            staticContent={item}\n                            handleMenuItemSelect={handleMenuItemSelect}\n                            activeTabValue={activeTabValue}\n                            handleTabChange={handleTabChange}\n                            lookerUser={lookerUser}\n                            activeUsecase={activeUsecase}\n                            lookerHost={lookerHost}\n                            userProfile={userProfile}\n                          />\n                          {/* : ''} */}\n\n                        </Box> : ''}\n                    </React.Fragment>)\n                }) :\n                ''\n              }\n            </main >\n            {/* <BottomBar classes={classes} lookerUser={lookerUser} /> */}\n          </ThemeProvider>\n        </AppContext.Provider>\n      </div >\n    )\n  }\n}\nexport default withStyles(styles)(Home);\n\nfunction TopBar(props) {\n  const { classes, activeUsecase, lookerUser, applySession, lookerUserAttributeBrandOptions, handleUserMenuSwitch, drawerOpen, handleDrawerChange } = props\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar)}\n    // className={clsx(classes.appBar, {\n    //   [classes.appBarShift]: drawerOpen,\n    // })}\n    >\n      <Toolbar>\n\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={() => handleDrawerChange(!drawerOpen)}\n          edge=\"start\"\n        // className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n        >\n          {drawerOpen ? <ChevronLeft /> : <Menu />}\n          {/* <Menu /> */}\n        </IconButton>\n\n        {activeUsecase ?\n          <Avatar alt=\"Icon\"\n            src={require(`../images/${activeUsecase}.svg`)}\n            variant=\"square\"\n          /> : ''}\n\n        <Badge badgeContent={3} color=\"error\" className={`${classes.mlAuto} ${classes.mr12} `} >\n          <AddAlert />\n        </Badge>\n        <UserMenu\n          lookerUser={lookerUser}\n          onLogoutSuccess={applySession}\n          lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions}\n          handleUserMenuSwitch={handleUserMenuSwitch}\n        />\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nfunction MenuList(props) {\n  // const { toggleShow } = useContext(AppContext)\n  // const { show } = useContext(AppContext)\n  // const { toggleCodeShow } = useContext(AppContext)\n  // const { codeShow } = useContext(AppContext)\n  const { classes, activeUsecase, orderedDemoComponentsForMenuObj, selectedMenuItem, handleMenuItemSelect,\n    lookerUser, show, toggleShow, codeShow, toggleCodeShow } = props\n  const demoComponentIconMap = {\n    \"splashpage19\": HomeIcon,\n    \"simpledashboard5\": VisibilityOutlined,\n    \"simpledashboard9\": ShowChart,\n    \"customfilter1\": TableChartOutlined,\n    \"customvis\": DateRangeOutlined,\n    \"querybuilderexplorelite\": Search,\n    \"reportbuilder14\": LibraryBooksOutlined,\n  }\n\n  return (<List\n    component=\"nav\"\n    aria-labelledby=\"nested-list-subheader\"\n    className={classes.list}\n  >\n    {activeUsecase ? Object.keys(orderedDemoComponentsForMenuObj).map((outerItem, outerIndex) => {\n      return (\n        < React.Fragment\n          key={`${validIdHelper(outerItem + '-menuList-' + outerIndex)}`}>\n          <ListItem\n            key={`${validIdHelper(outerItem + '-outerListItem-' + outerIndex)}`}\n          // className={'roundedTab'}\n          >\n            <ListItemText primary={outerItem === 'home' ? '' : _.capitalize(outerItem)} />\n          </ListItem>\n          < List component=\"div\" disablePadding\n            key={`${validIdHelper(outerItem + '-innerList-' + outerIndex)}`}>\n            {orderedDemoComponentsForMenuObj[outerItem].map((item, innerIndex) => {\n              const key = item.lookerContent[0].id ? validIdHelper(item.type + item.lookerContent[0].id) : validIdHelper(item.type);\n              const MatchingIconComponent = demoComponentIconMap[key]\n\n              return (\n                <ListItem\n                  button\n                  className={`${classes.nested} ${classes.roundedTab}`}\n                  key={`${validIdHelper(outerItem + '-innerListItem-' + innerIndex)}`}\n                  onClick={\n                    () => handleMenuItemSelect(validIdHelper(item.lookerContent[0].id ? item.type + item.lookerContent[0].id : item.type))\n                  }\n                  selected={validIdHelper(item.lookerContent[0].id ? item.type + item.lookerContent[0].id : item.type) === selectedMenuItem}\n                >\n                  <ListItemIcon>\n                    <MatchingIconComponent />\n                  </ListItemIcon>\n                  <ListItemText primary={_.capitalize(item.label)} />\n                </ListItem>\n              )\n            })}\n          </List>\n        </React.Fragment>\n      )\n    }) : ''\n    }\n  </List >\n  )\n}","import _ from 'lodash'\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, CardActions, CardContent, Typography } from '@material-ui/core'\nimport { grey, orange } from '@material-ui/core/colors';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport './Home.css';\nconst { validIdHelper } = require('../tools');\nconst lightGrey = grey[200];\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  card: {\n    minWidth: 350,\n    minHeight: 500,\n    left: '75%',\n    top: '50%',\n    transform: `translate(-75%, -50%)`,\n    position: 'absolute',\n    textAlign: 'center',\n    backgroundColor: lightGrey\n  },\n  h100: {\n    height: '100%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  actions: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  cardCopy: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: `translate(-50%, -50%)`,\n    margin: '0',\n    width: '80%',\n  }\n}));\n\n\nexport default function SignIn(props) {\n\n  // console.log('SignIn')\n  // console.log('props', props)\n\n  const { googleClientId, onSuccess, onFailure, usecaseFromUrl } = props;\n  // console.log('usecaseFromUrl', usecaseFromUrl)\n  const classes = useStyles();\n  const backgroundImageInt = Math.floor(Math.random() * 4) + 1;\n  const backgroundImage = require(`../images/${usecaseFromUrl}_background${backgroundImageInt}.jpg`);\n  const logoImage = require(`../images/${usecaseFromUrl}_logo_black.svg`)\n\n  return (\n    <div className={`${classes.root} demoComponent ${classes.h100}`}>\n      <Grid container\n        key={validIdHelper('sign in page')}\n        className={`${classes.h100}`}>\n        <Grid item sm={12} className={'sign-in-background-img'}\n          style={{\n            backgroundImage: `url(${backgroundImage})`,\n            backgroundSize: 'cover'\n          }}\n        >\n          <Card className={classes.card}>\n            <div className={classes.cardCopy}>\n              <img\n                src={logoImage}\n              />\n              <CardContent >\n                <Typography variant=\"h5\" component=\"h2\">\n                  Welcome\n                            </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  Please sign in to access <br /> your merchant portal\n                            </Typography>\n              </CardContent>\n              <CardActions className={`${classes.actions}`} >\n                <GoogleLogin\n                  clientId={googleClientId}\n                  buttonText=\"Login\"\n                  onSuccess={onSuccess}\n                  onFailure={onSuccess}\n                  cookiePolicy={'single_host_origin'}\n                />\n              </CardActions>\n            </div>\n          </Card>\n        </Grid>\n      </Grid>\n    </div >\n  )\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\n\nclass Customizations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.editCustomization = this.editCustomization.bind(this);\n        this.applyCustomization = this.applyCustomization.bind(this);\n        this.state = {\n            customizations: this.props.customizations,\n            isOrdered: null\n        }\n    }\n\n    componentDidMount() {\n        // console.log('Customize componentDidMount')\n        // console.log('this.props', this.props)\n    }\n\n    editCustomization(customizationIndex) {\n        this.props.editCustomization(customizationIndex)\n        this.props.history.push('/customize/edit')\n    }\n\n    applyCustomization(customizationIndex) {\n        this.props.applyCustomization(customizationIndex)\n        this.props.history.push('/home') //customize\n    }\n\n    sortByCreatedDate() {\n        let { isOrdered } = this.state\n        let sortedCustomizations;\n        if (isOrdered === null || isOrdered === \"DESC\") {\n            sortedCustomizations = this.state.customizations.sort((a, b) => (a.date > b.date) ? 1 : -1)\n            this.setState({\n                isOrdered: \"ASC\"\n            })\n        } else if (isOrdered === \"ASC\") {\n            sortedCustomizations = this.state.customizations.sort((a, b) => (a.date > b.date) ? -1 : 1)\n            this.setState({\n                isOrdered: \"DESC\"\n            })\n\n        }\n        this.setState({\n            customizations: sortedCustomizations\n        })\n    }\n\n    render() {\n        const { activeCustomization } = this.props\n        const { customizations } = this.state\n        const { isOrdered } = this.state\n        return (\n            <div className=\"home container p-5 position-relative\">\n                <div className=\"row pt-5\">\n                    <div className=\"col-sm-12\">\n                        <h1>Customizations</h1>\n                        <table className=\"table pt-3 mt-3\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\" className=\"cursor\" onClick={() => this.sortByCreatedDate()}><a>Last Saved {isOrdered === null ? '' : isOrdered === \"ASC\" ? '∧' : '∨'}</a></th>\n                                    <th scope=\"col\">Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {customizations.map((customization, index) => {\n                                    return (\n                                        <tr key={customization.id} id={customization.id} index={index} >\n                                            <td >{customization.companyName}</td>\n                                            <td >{Moment(customization.date).format('LLL')}</td>\n                                            <td>\n                                                <span className=\"badge badge-info p-3 mr-2\">Active</span>\n                                                <button type=\"button\" className=\"btn btn-primary mr-2\" data-index={index} onClick={() => this.applyCustomization(index)}>Apply</button>\n                                                <button type=\"button\" className=\"btn btn-secondary mr-2\" data-index={index} onClick={() => this.editCustomization(index)}>Edit</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                        <Link to='/customize/edit'>\n                            <button type=\"button\" className=\"btn btn-primary\">New Customization</button>\n                        </Link>\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}\nexport default Customizations","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nlet emptyCustomizationObj = {\n    id: '',\n    date: '',\n    salesforceUrl: '',\n    companyName: '',\n    logoUrl: ''\n}\n\nfunction prettifyKey(key) {\n    switch (key) {\n        case 'salesforceUrl':\n            return 'Salesforce Url';\n            break;\n        case 'companyName':\n            return 'Company Name';\n            break;\n        case 'logoUrl':\n            return 'Logo Url';\n            break;\n        default:\n            return null;\n            break;\n    }\n}\n\nclass NewCustomization extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        const { indexOfCustomizationToEdit, customizations } = this.props\n        this.state = {\n            companyName: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].companyName : '',\n            logoUrl: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].logoUrl : '',\n            salesforceUrl: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].salesforceUrl : '',\n            validSalesforceUrl: indexOfCustomizationToEdit ? this.validateSalesforceUrl(customizations[indexOfCustomizationToEdit].salesforceUrl) : false,\n            industry: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].industry : '',\n        }\n    }\n\n    componentDidMount() {\n        this.salesforceUrlInput.focus();\n    }\n\n    componentWillUnmount() {\n        // console.log('NewCustomization componentWillUnmount')\n        this.props.cancelIndexOfCustomizationToEdit()\n    }\n\n    handleSubmit(event) {\n        // console.log('handleSubmit')\n        event.preventDefault();\n        const data = new FormData(event.target);\n        let objForBody = {}\n        for (var [key, value] of data.entries()) {\n            objForBody[key] = value\n        }\n        this.props.saveCustomization(objForBody)\n        setTimeout(() => {\n            this.props.history.push('/home') //causes error w/ out time out\n        }, 100)\n    }\n\n    updateInput(e) {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n\n        if (e.target.id === \"salesforceUrl\") {\n            this.setState({ validSalesforceUrl: this.validateSalesforceUrl(e.target.value) })\n        }\n    }\n\n    validateSalesforceUrl = (url) => {\n        let urlexp = new RegExp('^https:\\/\\/looker.my.salesforce.com(?:$|/)');\n        let res = url.match(urlexp)\n        let returnVal = false;\n        if (res !== null) {\n            returnVal = true;\n        }\n        return returnVal\n    }\n\n\n    dropdownSelect = (e) => {\n        const targetId = e.target.id\n        this.setState({\n            [targetId]: e.target.value\n        })\n    }\n\n    render() {\n        // console.log('EditCustomization render');\n        const { indexOfCustomizationToEdit, customizations, lookerHost } = this.props\n        const { validSalesforceUrl, industry } = this.state\n        // let lookerHostNameToUse = lookerHost.substr(0, lookerHost.indexOf('.'));\n        // console.log('lookerHost', lookerHost)\n\n\n        return (\n            <div className=\"home container p-5\" >\n                <div className=\"row pt-5\">\n                    <div className=\"col-sm-9\">\n                        <h1>Edit Customization</h1>\n                        <form className=\"border-top mt-3 pt-3\" onSubmit={this.handleSubmit}>\n                            <input type=\"hidden\" id=\"id\" name=\"id\" value={indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].id : ''} />\n                            <input type=\"hidden\" id=\"customizationIndex\" name=\"customizationIndex\" value={indexOfCustomizationToEdit ? indexOfCustomizationToEdit : ''} />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"salesforceUrl\">Salesforce Url</label>\n                                <input id=\"salesforceUrl\"\n                                    className=\"form-control\"\n                                    name=\"salesforceUrl\"\n                                    type=\"text\"\n                                    value={this.state.salesforceUrl}\n                                    onChange={e => this.updateInput(e)}\n                                    ref={input => {\n                                        this.salesforceUrlInput = input;\n                                    }} />\n                                {validSalesforceUrl ?\n                                    <small id=\"salesforceUrlHelp\" className=\"form-text text-success\">Valid Salesforce Url!</small>\n                                    : this.state.salesforceUrl.length ?\n                                        <small id=\"salesforceUrlHelp\" className=\"form-text text-danger\">Must be valid Looker Salesforce Opportunity Url</small>\n                                        : <small id=\"salesforceUrlHelp\" className=\"form-text text-muted\">This field is required</small>}\n                            </div>\n                            <div id=\"subForm\">\n                                {/* {DefaultLookerContent[lookerHost] ?\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"industry\">Choose industry</label>\n                                        <select\n                                            id=\"industry\"\n                                            className=\"form-control\"\n                                            onChange={(e) => this.dropdownSelect(e)}\n                                            name=\"industry\"\n                                            type=\"select-one\"\n                                            value={this.state.industry}\n                                            disabled={validSalesforceUrl ? false : true}>\n\n                                            <option\n                                                key=\"none\"\n                                                value=\"none\"\n                                            > None</option>\n                                            {Object.keys(DefaultLookerContent[lookerHost]).map(key => {\n                                                return (\n                                                    <option\n                                                        key={key}\n                                                        value={key}\n                                                    > {(key.charAt(0).toUpperCase() + key.substring(1)).replace('_', ' ')}</option>\n                                                )\n                                            })}</select>\n                                    </div>\n                                    : ''} */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"companyName\">Company name</label>\n                                    <input id=\"companyName\"\n                                        className=\"form-control\"\n                                        name=\"companyName\"\n                                        type=\"text\"\n                                        value={this.state.companyName}\n                                        onChange={e => this.updateInput(e)}\n                                        disabled={validSalesforceUrl ? false : true}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"logoUrl\">Logo URL</label>\n                                    <input id=\"logoUrl\"\n                                        className=\"form-control\"\n                                        name=\"logoUrl\"\n                                        type=\"text\"\n                                        value={this.state.logoUrl}\n                                        onChange={e => this.updateInput(e)}\n                                        disabled={validSalesforceUrl ? false : true}\n                                    />\n                                </div>\n                                <div className=\"form-group mt-3 pt-3\">\n                                    <button className=\"btn btn-primary mr-2\"\n                                        disabled={validSalesforceUrl ? false : true}>Save Customization</button>\n                                    <Link to='/customize'>\n                                        <button type=\"button\" className=\"btn btn-secondary \">Cancel</button>\n                                    </Link>\n                                </div></div>\n                        </form>\n\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}\nexport default NewCustomization","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter, useHistory } from 'react-router-dom'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n// import Config from './clientConfig.json';\nimport Home from './components/Home'\nimport SignIn from './components/SignIn'\n// import Header from './components/Header'\n// import Footer from './components/Footer'\nimport Customizations from './components/Customizations'\nimport EditCustomization from './components/EditCustomization'\n//make looker user dynamic\nimport LookerUserPermissions from './lookerUserPermissions.json';\nimport InitialLookerUser from './initialLookerUser.json';\nimport UsecaseContent from './usecaseContent.json';\nimport LookerUserAttributeBrandOptions from './lookerUserAttributeBrandOptions.json';\n\nexport const lookerUserTimeHorizonMap = {\n  'basic': 'last 182 days',\n  'advanced': 'last 365 days',\n  'premium': 'last 730 days' //before today\n}\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  responseGoogle = (response) => {\n    // debugger //from Jim\n    if (response.error) {\n      console.log('response.error', response.error)\n    } else {\n      this.props.applySession(response.profileObj)\n    }\n  }\n\n  render() {\n\n    const { from } = this.props.location.state || { from: { pathname: '/analytics' } } //needs work?\n    const { pathname } = this.props.location\n    const { activeCustomization } = this.props\n    const { userProfile } = this.props\n\n    const googleClientId = `${process.env.REACT_APP_GOOGLE_CLIENT_ID}.apps.googleusercontent.com`\n    if (Object.keys(userProfile).length) {\n      return (\n        <div className=\"App\">\n          <Redirect to={from} />\n        </div>\n      )\n    } else {\n      return (\n        <SignIn\n          googleClientId={googleClientId}\n          onSuccess={this.responseGoogle}\n          onFailure={this.responseGoogle}\n          usecaseFromUrl={usecaseHelper()}\n        />\n      )\n    }\n  }\n}\n\nconst PrivateRoute = ({\n  component: Component,\n  customizations,\n  activeCustomization,\n  applyCustomization,\n  editCustomization,\n  indexOfCustomizationToEdit,\n  saveCustomization,\n  cancelIndexOfCustomizationToEdit,\n  lookerContent,\n  saveLookerContent,\n  userProfile,\n  lookerUser,\n  lookerHost,\n  switchLookerUser,\n  applySession,\n  lookerUserAttributeBrandOptions,\n  switchUserAttributeBrand,\n  usecaseFromUrl,\n  ...rest }) => (\n    < Route {...rest} render={(props) => (\n      Object.keys(userProfile).length ?\n        <Component {...props}\n          customizations={customizations}\n          activeCustomization={activeCustomization}\n          applyCustomization={applyCustomization}\n          editCustomization={editCustomization}\n          indexOfCustomizationToEdit={indexOfCustomizationToEdit}\n          saveCustomization={saveCustomization}\n          cancelIndexOfCustomizationToEdit={cancelIndexOfCustomizationToEdit}\n          lookerContent={lookerContent}\n          saveLookerContent={saveLookerContent}\n          userProfile={userProfile}\n          lookerUser={lookerUser}\n          lookerHost={lookerHost}\n          switchLookerUser={switchLookerUser}\n          applySession={applySession}\n          lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions}\n          switchUserAttributeBrand={switchUserAttributeBrand}\n          usecaseFromUrl={usecaseFromUrl}\n        />\n        : <Redirect to={{\n          pathname: '/',\n          state: { from: props.location }\n        }} />\n    )} />\n  )\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userProfile: {},\n      customizations: [],\n      activeCustomization: {},\n      indexOfCustomizationToEdit: null,\n      // lookerContent: [UsecaseContent[activeUsecase]],\n      lookerUser: {\n        ...InitialLookerUser\n      },\n      lookerHost: '',\n      activeUsecase: '',\n      tokenLastRefreshed: ''\n    }\n  }\n\n  // keep track of when user logs in\n  // keep track of current time \n  // if current time > initial log in time plus buffer, logout\n  logoutTimer = () => {\n    let clientInterval = setInterval(async () => {\n      let currentTime = Date.now();\n      let expiresInBuffer = 58 * 60 * 1000; //3480000; //58 minutes\n      if (currentTime > (this.state.tokenLastRefreshed + expiresInBuffer)) {\n        this.applySession({})\n        clearInterval(clientInterval);\n      }\n    }, 1000)\n  }\n\n  componentDidMount() {\n    // console.log('App componentDidMount')\n    this.checkSession()\n  }\n\n  //called on componentDidMount\n  //get request so should only check info, never update\n  checkSession = async () => {\n    // console.log('checkSession')\n    let sessionResponse = await fetch('/readsession', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    const sessionResponseData = await sessionResponse.json();\n    const { userProfile } = sessionResponseData.session\n    const { customizations } = sessionResponseData.session\n    const activeCustomization = sessionResponseData.session.activeCustomization ? sessionResponseData.session.activeCustomization : 0;\n    const lookerUser = sessionResponseData.session.lookerUser ? sessionResponseData.session.lookerUser : this.state.lookerUser;\n    const lookerHost = sessionResponseData.session.lookerHost ? sessionResponseData.session.lookerHost : this.state.lookerHost;\n    // console.log('lookerUser', lookerUser)\n    //make sure defined and contains properties\n    if (userProfile && Object.keys(userProfile).length) {\n      this.setState((prevState) => ({\n        userProfile, //think we want this here?\n        customizations,\n        lookerUser: {\n          ...prevState.lookerUser,\n          external_user_id: userProfile.email, //googleId\n          first_name: userProfile.givenName,\n          last_name: userProfile.familyName,\n          permissions: LookerUserPermissions[lookerUser.user_attributes.permission_level] || LookerUserPermissions['basic'],\n          user_attributes: {\n            ...lookerUser.user_attributes || {\n              \"locale\": \"en_US\",\n              \"country\": \"USA\",\n              \"brand\": \"Calvin Klein\",\n              \"permission_level\": \"basic\"\n            }\n          }\n        },\n        lookerHost,\n        tokenLastRefreshed: sessionResponseData.session.mongoInfo.api_token_last_refreshed || Date.now()\n      }), () => {\n        // console.log('checkSession callback 1111 this.state.lookerUser', this.state.lookerUser)\n        this.applyCustomization(activeCustomization)\n        this.logoutTimer()\n      })\n    }\n  }\n\n  // called by responseGoogle once it gets response\n  // since login can assume activeCustomization will be default..\n  applySession = async (userProfile) => {\n    // console.log('applySession')\n    // console.log('userProfile', userProfile)\n\n    if (Object.keys(userProfile).length === 0) {\n      // console.log('inside ifff')\n      let sessionData = await fetch('/endsession', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      this.setState({\n        userProfile: {},\n        lookerUser: { ...InitialLookerUser }\n      })\n    } else {\n      // console.log('inside else')\n      let sessionData = await fetch('/writesession', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ userProfile, lookerUser: this.state.lookerUser })\n      })\n      const sessionResponseData = await sessionData.json();\n      const { customizations } = sessionResponseData.session\n      const lookerUser = sessionResponseData.session.lookerUser ? sessionResponseData.session.lookerUser : this.state.lookerUser;\n      const lookerHost = sessionResponseData.session.lookerHost ? sessionResponseData.session.lookerHost : this.state.lookerHost;\n\n      this.setState(prevState => ({\n        userProfile,\n        customizations,\n        lookerUser: {\n          ...prevState.lookerUser,\n          external_user_id: userProfile.email, //googleId\n          first_name: userProfile.givenName,\n          last_name: userProfile.familyName,\n          permissions: LookerUserPermissions[lookerUser.user_attributes.permission_level] || LookerUserPermissions['basic'], //assume good initially,\n          user_attributes: {\n            ...lookerUser.user_attributes || {\n              \"locale\": \"en_US\",\n              \"country\": \"USA\",\n              \"brand\": \"Calvin Klein\",\n              \"time_horizon\": \"last 6 months\",\n              \"permission_level\": \"basic\",\n            }\n          }\n        },\n        lookerHost,\n        tokenLastRefreshed: sessionResponseData.session.mongoInfo.api_token_last_refreshed || Date.now()\n      }), () => {\n        this.applyCustomization(0) //assume default customization, set lookerContent and activeCustomization in applyCustomization\n        this.logoutTimer()\n      });\n    }\n  }\n\n  //called by: checkSession, applySession, applyButton, saveCustomization\n  applyCustomization = async (customizationIndex) => {\n    // console.log('applyCustomization')\n    // console.log('customizationIndex', customizationIndex)\n\n    let customizationResponse = await fetch('/applyactivecustomziation', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ customizationIndex })\n    })\n\n    let customizationResponseData = await customizationResponse.json();\n\n    let lookerContentToUse = [];\n    //check industry first, insert to array\n    if (this.state.customizations[customizationIndex].industry) {\n      // lookerContentToUse = [...DefaultLookerContent[this.state.lookerHost][this.state.customizations[customizationIndex].industry]]\n    }\n    //then check custom content, insert to array\n    if (this.state.customizations[customizationIndex].lookerContent) {\n      // lookerContentToUse = [...lookerContentToUse, ...this.state.customizations[customizationIndex].lookerContent]\n    }\n\n    this.setState({\n      activeCustomization: this.state.customizations[customizationIndex],\n      lookerContent: lookerContentToUse\n    }, () => {\n      // console.log('applyCustomization callback this.state.lookerContent', this.state.lookerContent)\n      // console.log('applyCustomization callback this.state.activeCustomization', this.state.activeCustomization)\n      // this.props.history.push('/home') //not going to work here :P\n    });\n  }\n\n  editCustomization = (customizationIndex) => {\n    // console.log('editCustomization')\n    // console.log('customizationIndex', customizationIndex)\n    const validCustomizationIndex = typeof this.state.customizations[customizationIndex] === 'undefined' ? null : customizationIndex\n    this.setState({\n      indexOfCustomizationToEdit: validCustomizationIndex,\n    }, () => {\n      // console.log('editCustomization callback this.state.indexOfCustomizationToEdit', this.state.indexOfCustomizationToEdit)\n    });\n  }\n\n  saveCustomization = async (formData) => {\n    // console.log('saveCustomization')\n    // console.log('formData', formData)\n    let customizationResponse = await fetch('/savecustomization', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n\n    let customizationResponseData = await customizationResponse.json();\n\n    // console.log('customizationResponseData', customizationResponseData)\n\n    this.setState({\n      customizations: customizationResponseData.customizations,\n      // indexOfCustomizationToEdit: null\n    }, () => {\n      this.applyCustomization(formData.customizationIndex) //sessionActiveCustomization\n    })\n  }\n\n\n  cancelIndexOfCustomizationToEdit = () => {\n    // console.log(\"cancelIndexOfCustomizationToEdit\")\n    this.setState({\n      indexOfCustomizationToEdit: null\n    })\n  }\n\n  saveLookerContent = async (newLookerContent) => {\n    // console.log('saveLookerContent')\n    // console.log('newLookerContent', newLookerContent)\n\n    /*let customizationResponse = await fetch('/savelookercontent', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ activeCustomization: this.state.activeCustomization, newLookerContent: newLookerContent })\n    })\n    let customizationResponseData = await customizationResponse.json();\n\n    this.setState(prevState => ({\n      lookerContent: [...prevState.lookerContent, newLookerContent] //should I be using DB as source here?\n    }))*/\n\n  }\n\n  switchLookerUser = (newUser) => {\n    // console.log('switchLookerUser')\n    // console.log('newUser', newUser)\n    // console.log('LookerUserPermissions[newUser]', LookerUserPermissions[newUser])\n\n\n    let userAttributeCopy = { ...this.state.lookerUser.user_attributes, \"permission_level\": newUser }\n    userAttributeCopy.time_horizon = lookerUserTimeHorizonMap[newUser];\n\n\n    this.setState(prevState => ({\n      lookerUser: {\n        ...prevState.lookerUser,\n        permissions: LookerUserPermissions[newUser],\n        user_attributes: userAttributeCopy\n      }\n    }), async () => {\n\n      let lookerUserResponse = await fetch('/updatelookeruser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.lookerUser)\n      })\n\n      let lookerUserResponseData = await lookerUserResponse.json();\n\n    });\n  }\n\n  switchUserAttributeBrand = (newAttribute) => {\n    // console.log('switchUserAttributeBrand')\n    // console.log('newAttribute', newAttribute)\n\n    let userAttributeCopy = { ...this.state.lookerUser.user_attributes }\n    userAttributeCopy.brand = newAttribute;\n\n    let usecaseFromUrl = usecaseHelper();\n\n    this.setState(prevState => ({\n      lookerUser: {\n        ...prevState.lookerUser,\n        user_attributes: userAttributeCopy,\n        group_ids: [UsecaseContent[usecaseFromUrl].groupIds[newAttribute.replace(\"'\", \"\")]] //needed to replace apostrophe\n      }\n    }), async () => {\n      let lookerUserResponse = await fetch('/updatelookeruser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.lookerUser)\n      })\n\n      let lookerUserResponseData = await lookerUserResponse.json();\n\n    });\n  }\n\n  render() {\n    // console.log('App render');\n    // console.log('this.props', this.props);\n    const { userProfile, customizations, activeCustomization, indexOfCustomizationToEdit, lookerContent, lookerUser, lookerHost } = this.state\n    // const { activeIndustry } = this.state;\n    // console.log('activeCustomization', activeCustomization);\n\n    let usecaseFromUrl = usecaseHelper();\n\n    return (\n      <Router>\n        <div>\n          <Route path='' render={(props) => <Login\n            {...props}\n            applySession={this.applySession}\n            userProfile={userProfile}\n            activeCustomization={activeCustomization}\n            lookerUser={lookerUser}\n            switchLookerUser={this.switchLookerUser}\n            lookerHost={lookerHost}\n          />}\n          />\n          <PrivateRoute path='/analytics' component={Home}\n            activeCustomization={activeCustomization}\n            lookerContent={lookerContent}\n            saveLookerContent={this.saveLookerContent}\n            userProfile={userProfile}\n            lookerUser={lookerUser}\n            applySession={this.applySession}\n            lookerHost={lookerHost}\n            switchLookerUser={this.switchLookerUser}\n            lookerUserAttributeBrandOptions={LookerUserAttributeBrandOptions}\n            switchUserAttributeBrand={this.switchUserAttributeBrand}\n            usecaseFromUrl={usecaseFromUrl}\n          />\n        </div>\n      </Router>\n    )\n  }\n}\nexport default App\n\nexport function usecaseHelper() {\n  let keyArr = Object.keys(UsecaseContent);\n  let url = window.location.href;\n  for (let i = 0; i < keyArr.length; i++) {\n    if (url.indexOf(keyArr[i]) > -1) {\n      return keyArr[i];\n    }\n  }\n  return 'atom';\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}