{"version":3,"sources":["images sync /^/.//.*_logo_white/.svg$","images/atom_splash_blog.jpg","images/atom_splash_inventory.jpg","images/atom_splash_trends.jpg","tools.js","images/atom_logo_white.svg","images sync /^/.//.*/.jpg$","images/atom_background1.jpg","images/atom_background2.jpg","images/atom_background3.jpg","images/atom_background4.jpg","images sync /^/.//.*_logo_black/.svg$","images/atom_logo_black.svg","AppContext.js","components/Material/UserMenu.js","components/Demo/CodeFlyout.js","webpack:///./src/components/Demo/SplashPage/SplashPage.js?046c","components/Demo/SplashPage/styles.js","components/Highlights/Highlight.js","components/Demo/SplashPage/SingleValueVis.js","components/Demo/SplashPage/NaturalLanguage.js","components/Demo/SplashPage/Welcome.js","components/Demo/SplashPage/VectorThumbnail.js","components/Demo/SplashPage/PopularAnalysis.js","components/Demo/SplashPage/EmbeddedDashboard.js","components/Demo/SplashPage/ContentCarousel.js","components/Material/BottomBar.js","components/Demo/SplashPage/SplashPage.js","components/Demo/Dashboard/styles.js","components/Accessories/NumberToColoredPercent.js","components/Demo/Dashboard/Dashboard.js","webpack:///./src/components/Demo/Dashboard/Dashboard.js?b45b","components/Material/ModalTable.js","components/Demo/CustomVis/styles.js","components/Demo/CustomVis/CustomVis.js","webpack:///./src/components/Demo/CustomVis/CustomVis.js?b545","components/Demo/ReportBuilder/styles.js","components/Demo/ReportBuilder/helpers.js","components/Demo/ReportBuilder/ReportBuilder.js","webpack:///./src/components/Demo/ReportBuilder/ReportBuilder.js?9721","components/Demo/QueryBuilder/styles.js","components/Demo/QueryBuilder/helpers.js","components/Demo/QueryBuilder/QueryBuilder.js","webpack:///./src/components/Demo/QueryBuilder/QueryBuilder.js?9efc","components/Demo/MonetizationModal.js","components/Home.js","components/SignIn.js","components/Customizations.js","components/EditCustomization.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","validIdHelper","str","replace","prettifyString","frags","split","toUpperCase","slice","join","getUrlVars","url","hash","myJson","hashes","indexOf","decodeHtml","html","txt","document","createElement","innerHTML","value","AppContext","React","createContext","useStyles","require","makeStyles","theme","zIndex1500","zIndex","mr12","marginRight","UserMenu","props","lookerUser","switchLookerUser","onLogoutSuccess","lookerUserAttributeBrandOptions","switchUserAttributeBrand","classes","userProfile","useContext","toggleShow","useState","anchorEl","setAnchorEl","user_attributes","brand","selectedBrand","setSelectedBrand","handleClose","newValue","className","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","color","Avatar","alt","name","src","imageUrl","Typography","permission_level","substring","Menu","keepMounted","open","Boolean","onClose","MenuItem","autoFocus","Divider","divider","Autocomplete","options","getOptionLabel","option","label","style","width","onChange","target","innerText","renderInput","params","TextField","variant","loadingText","disableautofocus","onKeyDown","stopPropagation","CodeFlyout","toggleCodeShow","codeShow","lookerContent","clientSideCode","serverSideCode","permissionNeededCode","ClickAwayListener","onClickAway","Fade","in","Grid","container","spacing","padding30","backgroundColor","item","sm","mrAuto","textAlign","cursor","CodeSnippet","language","dracula","showLineNumbers","JSON","stringify","redPrimary","red","greenPrimary","green","redLight","greenLight","root","flexGrow","palette","background","paper","flexCentered","display","justifyContent","alignItems","hidden","visibility","position","tabs","dNone","dBlock","tree","height","maxWidth","icon","fontSize","overflow","mt12","marginTop","w100","mlAuto","marginLeft","skeleton","minWidth","minHeight","card","maxHeight200","maxHeight","mt30","mb30","marginBottom","textCenter","cursorPointer","border","height800","maxHeight100","maxHeight400","minHeight680","minHeight200","redNeg","fontWeight","greenPos","padding","mb12","overflowScroll","overflowHidden","overflowVisible","maxHeight150","minHeight150","carouselLegend","opacity","positionTopRight","top","right","bottom","positionRelative","padding15","maxHeight75","overflowYScroll","overflowY","overflowX","Highlight","children","margin","show","borderRadius","ApiHighlight","Chip","size","align","left","EmbedHighlight","SingleValueVis","apiContent","setApiContent","dataObjForSparkline","useEffect","setTimeout","runInlineQuery","a","stringifiedQuery","encodeURIComponent","inlineQuery","fetch","resultFormat","method","headers","Accept","lookerResponse","json","lookerResponseData","data","dataArrForDataObj","queryResults","fields","thisDataItem","toString","change","y","push","upOrDownArrow","isNaN","toFixed","parseInt","Card","Fragment","xScale","type","format","precision","yScale","min","max","stacked","reverse","axisLeft","orient","tickSize","tickPadding","tickRotation","axisBottom","enablePoints","enableGridX","enableGridY","colors","visColor","animate","CircularProgress","circularProgress","NaturalLanguage","index","undefined","inlineQueriesMap","Welcome","givenName","inlineQueries","key","VectorThumbnail","handleMenuItemSelect","svg","setSvg","getThumbnail","resourceType","blob","Blob","URL","createObjectURL","PopularAnalysis","vectors","EmbeddedDashboard","lookerHost","iFrameExists","setIFrame","$","LookerEmbedSDK","createDashboardWithId","slug","appendTo","getElementById","withClassName","withTheme","build","connect","then","look","init","catch","error","console","elevation","Box","ContentCarousel","infiniteLoop","autoPlay","showThumbs","BottomBar","AppBar","clsx","appBarBottom","Toolbar","FormControlLabel","control","Switch","checked","Button","startIcon","SplashPage","setClientSideCode","staticContent","handleTabChange","demoComponentType","innerIndex","gridWidth","NumberToColoredPercent","val","positive_good","abs_val","up","down","val_formatted","abs","toLocaleString","minimumFractionDigits","Dashboard","dashboardObj","setDashboardObj","setServerSideCode","toggleValue","setToggleValue","dashboardLayout","setDashboardLayout","regionValue","setRegionValue","activeTabValue","handleToggle","filteredLayout","_","filter","dashboard_layout_components","row","dynamicFieldLookUp","dashboard_element_id","newDashboardLayout","setOptions","performLookerApiCalls","dashboardId","withNext","withParams","on","changeHeight","dashboard","layouts","hasOwnProperty","orderedArrayForApiContent","filters","jsonQuery","desiredFilterName","queryResultsForDropdown","desiredProperty","FilterBar","customFilterAction","filterName","newFilterValue","updateFilters","run","Skeleton","animation","mt","expanded","setExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","heading","ExpansionPanelDetails","filterComponents","Array","isArray","renderOption","justify","trend","ToggleButtonGroup","exclusive","region","ToggleButton","boxShadow","shadows","table","getModalStyle","transform","ModalTable","modalContent","modalStyle","Modal","aria-labelledby","aria-describedby","title","body","TableContainer","component","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","lastIndexOf","TableBody","rendered","round","height500","height600","height700","textField","formControl","selectEmpty","CustomVis","fromDate","setFromDate","toDate","setToDate","category","setCategory","desiredField","setDesiredField","setOpen","setModalContent","togglePayWallModal","handleModalOpen","day","originalInlineQueryCopy","parse","total","limit","modalObj","filterData","uniqueDates","Set","filteredAndReducedForAll","uniqueDate","reduce","acc","thisObj","desiredFields","uniqueCategories","incrementDate","handleFromDate","Date","newValueAsDate","addDays","handleToDate","handleCategory","handleDesiredField","from","to","emptyColor","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","FormControl","InputLabel","Select","labelId","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","minDate","maxDate","dateInput","increment","dateFormatTotime","getTime","toISOString","ml24","parentHoverVisibility","childHoverVisibility","faSm","ml12","TabPanel","other","role","p","ReportBuilder","exploreObj","setExploreObj","setValue","tabContent","handleChange","action","contentType","contentId","secondaryAction","qid","exploreId","newReportEmbedContainer","iFrameArray","classList","contains","remove","add","empty","createExploreWithId","explore","status","animateLoad","looksToUse","sharedFolder","looks","embeddedUserFolder","dashboardsToUse","dashboards","objToUse","lookId","lookIsRendered","createLookWithId","dashboardIsRendered","Tabs","Tab","Icon","a11yProps","tabContentItem","tabContentItemIndex","TreeSideBar","sharedFolderId","treeCounter","selected","setSelected","expandedArr","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeToggle","nodeIds","onNodeSelect","outerIndex","TreeItem","nodeId","capitalize","disabled","treecounter","contentid","folder_id","labelRoot","client_id","grey","orange","typography","pxToRem","fontWeightRegular","tableContainer","visuallyHidden","clip","bluePrimary","blueSecondary","orangePrimary","orangeSecondary","bottomBarSpacer","mixins","toolbar","maxHeight600","m12","m6","descendingComparator","b","orderBy","QueryBuilder","queryBody","newQuery","apiContentCopy","lookerCreateTaskResposnse","lookerCreateTaskResponseData","taskInterval","setInterval","queryTaskId","lookerCheckTaskResposnse","lookerCheckTaskResponseData","clearInterval","EnhancedTable","rows","gridTitle","measureCounter","dimensionCounter","datalabel","fieldType","fieldsChipData","setFieldsChipData","queryModified","setQueryModified","filterType","filtersData","setFilterData","handleFieldChipClick","chip","updatedFieldsChipData","handleSelectChange","updatedFiltersData","datePermissionMap","advanced","basic","premium","measurecounter","dimensioncounter","newFields","currentFilters","newQueryObj","EnhancedTableHead","order","onSelectAllClick","onRequestSort","numSelected","rowCount","numeric","disablePadding","sortDirection","TableSortLabel","active","property","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","hover","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","flexDirection","transition","font75","font875","MonetizationModal","payWallModal","modalListMap","modal","LookerUserPermissions","CardContent","List","ListItem","ListItemIcon","disableTypography","ListItemText","primary","CardActions","disableSpacing","fullWidth","defaultTheme","createMuiTheme","atomTheme","main","secondary","vidlyTheme","blue","Home","setState","toggleHighlightShow","state","highlightShow","fromSplash","selectedMenuItemValue","UsecaseContent","activeUsecase","demoComponents","lookerContentItem","renderedDemoComponentsCopy","renderedDemoComponents","unshift","prevState","selectedMenuItem","drawerOpen","drawerTabValue","appLayout","usecaseFromUrl","window","location","pathname","this","layout","prevProps","prevPermissionLevel","currPermissionLevel","prevUserBrand","currUserBrand","demoComponentMap","themeMap","activeCustomization","applySession","orderedDemoComponentsForMenu","orderedDemoComponentsForMenuObj","expandedTreeItemsArr","cumulativePusher","menuCategory","selectedMenuItemVal","Provider","ThemeProvider","CssBaseline","TopBar","Drawer","drawer","drawerPaper","drawerHeader","MenuList","content","contentShift","DemoComponent","hide","Component","withStyles","appBar","transitions","create","easing","sharp","duration","leavingScreen","menuButton","flexShrink","easeOut","enteringScreen","borderRight","relative","absolute","right0","top0","right24","top24","highlightLegend","fontSize1em","padding10","mt5","mb5","list","nested","paddingLeft","Badge","badgeContent","AddAlert","demoComponentIconMap","HomeIcon","TrendingUp","Speed","StoreMallDirectory","DateRange","Search","FindInPage","outerItem","upperCase","MatchingIconComponent","button","lightGrey","h100","pos","actions","cardCopy","SignIn","googleClientId","onSuccess","onFailure","backgroundImageInt","backgroundImage","logoImage","backgroundSize","clientId","buttonText","cookiePolicy","Login","responseGoogle","response","log","profileObj","process","PrivateRoute","customizations","applyCustomization","editCustomization","indexOfCustomizationToEdit","saveCustomization","cancelIndexOfCustomizationToEdit","saveLookerContent","rest","render","App","checkSession","sessionResponse","sessionResponseData","session","external_user_id","googleId","first_name","last_name","familyName","permissions","InitialLookerUser","sessionData","customizationIndex","customizationResponse","lookerContentToUse","industry","validCustomizationIndex","formData","customizationResponseData","newLookerContent","newUser","userAttributeCopy","time_horizon","lookerUserResponse","newAttribute","href","group_ids","groupIds","basename","path","LookerUserAttributeBrandOptions","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.635a2c85.chunk.js","sourcesContent":["var map = {\n\t\"./atom_logo_white.svg\": 881\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 258;","module.exports = __webpack_public_path__ + \"static/media/atom_splash_blog.89cd1730.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_splash_inventory.5ac8518d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_splash_trends.3591acf3.jpg\";","module.exports = {\n  makeid: (length) => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  },\n\n\n  validIdHelper: (str) => {\n    // console.log('validIdHelper')\n    // console.log('str', str)\n    //need to replace special characters that may be associated with id...\n    return str.replace(/[^a-zA-Z0-9-.#]/g, \"\")\n  },\n\n  prettifyString: (str) => {\n    var i, frags = str.split('_');\n    for (i = 0; i < frags.length; i++) {\n      frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\n    }\n    return frags.join(' ');\n  },\n\n  getUrlVars: (url) => {\n    var hash;\n    var myJson = {};\n    var hashes = url.slice(url.indexOf('?') + 1).split('&');\n    for (var i = 0; i < hashes.length; i++) {\n      hash = hashes[i].split('=');\n      myJson[hash[0]] = hash[1];\n      // If you want to get in native datatypes\n      // myJson[hash[0]] = JSON.parse(hash[1]); \n    }\n    return myJson;\n  },\n\n\n  decodeHtml: (html) => {\n    var txt = document.createElement(\"textarea\");\n    txt.innerHTML = html;\n    return txt.value;\n  }\n}","module.exports = __webpack_public_path__ + \"static/media/atom_logo_white.89cfe3df.svg\";","var map = {\n\t\"./atom_background1.jpg\": 883,\n\t\"./atom_background2.jpg\": 884,\n\t\"./atom_background3.jpg\": 885,\n\t\"./atom_background4.jpg\": 886,\n\t\"./atom_splash_blog.jpg\": 363,\n\t\"./atom_splash_inventory.jpg\": 364,\n\t\"./atom_splash_trends.jpg\": 365\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 882;","module.exports = __webpack_public_path__ + \"static/media/atom_background1.9ed7593f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_background2.c5efc290.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_background3.b9aecb61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/atom_background4.1acd6c1b.jpg\";","var map = {\n\t\"./atom_logo_black.svg\": 888\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 887;","module.exports = __webpack_public_path__ + \"static/media/atom_logo_black.a213ea2a.svg\";","import React from 'react';\n \nconst AppContext = React.createContext(null);\n \nexport default AppContext;","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Menu, MenuItem, Typography, Divider, TextField, Avatar } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport AppContext from '../../AppContext';\n\nconst { validIdHelper } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  zIndex1500: {\n    zIndex: 1500\n  },\n  mr12: {\n    marginRight: 12\n  }\n}))\n\nexport default function UserMenu(props) {\n  // console.log('UserMenu')\n  // console.log('props', props)\n\n  const { lookerUser, switchLookerUser, onLogoutSuccess, lookerUserAttributeBrandOptions, switchUserAttributeBrand } = props\n  const classes = useStyles();\n  const { toggleShow } = useContext(AppContext)\n  const { userProfile } = useContext(AppContext);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [selectedBrand, setSelectedBrand] = React.useState(lookerUser.user_attributes.brand || '');\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (newValue) => {\n\n\n    setAnchorEl(null);\n    if (newValue == null) {\n      onLogoutSuccess({})\n    } else if (newValue === 'basic' || newValue === 'advanced' || newValue === 'premium') {\n      switchLookerUser(newValue)\n    } else if (typeof newValue === 'string') {\n      switchUserAttributeBrand(newValue)\n      setSelectedBrand(newValue);\n    }\n  };\n\n\n  return (\n    <div className={`${classes.zIndex1500}`}>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        color=\"inherit\"\n      >\n        {/* <Avatar className={`${classes.mr12}`}>{userProfile.givenName.substring(0, 1)}</Avatar> */}\n        <Avatar alt={userProfile.name} src={userProfile.imageUrl} className={classes.mr12} />\n\n        <Typography>\n          {typeof lookerUser.user_attributes.permission_level === 'string' ?\n            lookerUser.user_attributes.permission_level.charAt(0).toUpperCase() + lookerUser.user_attributes.permission_level.substring(1) : ''}\n        </Typography>\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem autoFocus={false}>Select User Level</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('basic')}>Basic</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('advanced')}>Advanced</MenuItem>\n        <MenuItem autoFocus={false} onClick={() => handleClose('premium')}>Premium</MenuItem>\n        <Divider className={classes.divider} />\n        {/* <MenuItem onClick={() => { toggleShow() }}>Highlight Source</MenuItem>\n        <Divider className={classes.divider} /> */}\n        <MenuItem onClick={() => handleClose(null)}>Sign Out</MenuItem>\n        <Divider className={classes.divider} />\n        <MenuItem>Current brand: {selectedBrand}</MenuItem>\n        <MenuItem>\n\n          <Autocomplete\n            id=\"combo-box-usermenu\"\n            options={lookerUserAttributeBrandOptions}\n            getOptionLabel={(option) => option.label}\n            style={{ width: 300 }}\n            onChange={(event) => handleClose(event.target.innerText || '')}\n            renderInput={(params) => <TextField {...params}\n              label=\"Change merchant brand\"\n              variant=\"outlined\"\n            />}\n            loadingText=\"Loading...\"\n            disableautofocus=\"true\"\n            onKeyDown={(event) => event.stopPropagation()}\n          />\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Typography, Grid, Fade, ClickAwayListener } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n// import { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/hljs'; //hehe\nimport AppContext from '../../AppContext'\n\n//helper function for rendering content in code tab\nexport default function CodeFlyout(props) {\n  const { toggleCodeShow } = useContext(AppContext);\n  const { codeShow } = useContext(AppContext);\n\n  const { classes, lookerContent, clientSideCode, serverSideCode, lookerUser, permissionNeededCode } = props\n  return (\n    <ClickAwayListener onClickAway={() => {\n      toggleCodeShow()\n    }}>\n      <Fade in={codeShow || false}>\n        {Object.keys(lookerUser).length ?\n          <Grid container spacing={3}\n            className={classes.padding30}\n            style={{ backgroundColor: 'rgb(40, 42, 54)' }}>\n            <Grid item sm={10}>\n              <Typography variant=\"h6\" className={` ${classes.mrAuto}`} style={{ color: 'white' }}>\n                Looker User Object\n            </Typography>\n            </Grid>\n            <Grid item sm={2} style={{ textAlign: 'right' }}>\n              <CloseIcon style={{ color: 'white', cursor: 'pointer' }} onClick={() => toggleCodeShow()} />\n            </Grid>\n\n            <Grid item sm={12}>\n              <CodeSnippet code={lookerUser} />\n            </Grid>\n          </Grid> : ''\n        }\n      </Fade >\n    </ClickAwayListener >\n  )\n}\n\nfunction CodeSnippet(props) {\n  // console.log('CodeSnippet');\n  // console.log('props', props);\n  const { code } = props\n  return (\n    <SyntaxHighlighter language=\"json\" style={dracula} showLineNumbers={true} >\n      {typeof code === \"object\" ? JSON.stringify(code, true, 4) : code}\n    </SyntaxHighlighter>)\n}","export default \"//imports\\nimport $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, Divider } from '@material-ui/core'\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./SplashPage.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport { SingleValueVis } from './SingleValueVis';\\nimport { Welcome } from './Welcome';\\nimport { PopularAnalysis } from './PopularAnalysis';\\nimport { EmbeddedLook } from './EmbeddedLook';\\nimport { EmbeddedDashboard } from './EmbeddedDashboard';\\nimport { ContentCarousel } from './ContentCarousel';\\nimport BottomBar from '../../Material/BottomBar.js'\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of SplashPage Component\\nexport default function SplashPage(props) {\\n  // console.log('SplashPage')\\n  //intialize state using hooks\\n  const [value, setValue] = useState(0);\\n  const [iFrameExists, setIFrame] = useState(1);\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const { toggleShow } = useContext(AppContext)\\n  const { show } = useContext(AppContext)\\n  const { codeShow } = useContext(AppContext)\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, handleTabChange, handleMenuItemSelect, lookerUser, lookerHost } = props;\\n  const codeTab = {\\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n    lookerContent, lookerUser, clientSideCode, serverSideCode\\n  }\\n  // const tabContent = [[...lookerContent], codeTab];\\n  // const tabContent = [[...lookerContent]];\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * setSampleCode\\n  */\\n  useEffect(() => {\\n    // console.log('useEffect')\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent]);\\n\\n\\n  /**\\n   * What this return  does:\\n   * Rendering of actual html elements,\\n   * this section is necessary but less relevant to looker functionality itself\\n   */\\n  return (\\n    <div className={`${classes.root} ${classes.minHeight680} ${classes.padding30} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={classes.root}>\\n          {iFrameExists ? '' :\\n            <Grid item sm={12} >\\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\\n                <CircularProgress className={classes.circularProgress} />\\n              </Card>\\n            </Grid>\\n          }\\n          <Box className={iFrameExists ? `${classes.positionRelative}` : `${classes.hidden} ${classes.positionRelative}`}>\\n            <Grid container\\n              spacing={3}\\n              key={`${validIdHelper(demoComponentType + '-outerFragment')}`}>\\n              {codeShow ? <Grid item sm={6}\\n                className={`${classes.positionTopRight}`}\\n              >\\n                <CodeFlyout {...props}\\n                  classes={classes}\\n                  lookerUser={lookerUser} />\\n              </Grid> : ''}\\n              {lookerContent.map((lookerContent, innerIndex) => {\\n                return (\\n                  <Grid\\n                    key={`${validIdHelper(demoComponentType + '-innerFragment-' + innerIndex)}`}\\n                    item\\n                    sm={parseInt(lookerContent.gridWidth)}\\n                  >\\n                    {(lookerContent.type === 'welcome') && <Welcome\\n                      {...{ lookerContent, classes, demoComponentType, lookerHost }}\\n                    />}\\n                    {(lookerContent.type === 'carousel') && <ContentCarousel\\n                      {...{ lookerContent, classes, demoComponentType, lookerHost }}\\n                    />}\\n                    {(lookerContent.type === 'single value') && <SingleValueVis\\n                      {...{ lookerContent, classes, demoComponentType, lookerHost }}\\n                    />}\\n                    {(lookerContent.type === 'dashboard') && <EmbeddedDashboard\\n                      {...{ lookerContent, classes, lookerHost }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\\n                    />}\\n                    {(lookerContent.type === 'popular analysis') && <PopularAnalysis\\n                      {...{ lookerContent, classes, demoComponentType, handleMenuItemSelect, lookerHost }}\\n                    />}\\n                  </Grid>\\n                )\\n              })}\\n            </Grid>\\n          </Box >\\n        </div >\\n      </Grid >\\n    </div >\\n  )\\n}\";","import { makeStyles } from '@material-ui/core/styles';\nimport { red, green } from '@material-ui/core/colors';\nconst redPrimary = red[500];\nconst greenPrimary = green[500];\nconst redDark = red[900];\nconst greenDark = green[900];\nconst redLight = red[100];\nconst greenLight = green[100];\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n  },\n  maxHeight200: {\n    maxHeight: 200,\n    height: 200,\n    overflow: 'hidden'\n  },\n  mt30: {\n    marginTop: 30\n  },\n  mb30: {\n    marginBottom: 30\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  cursorPointer: {\n    cursor: 'pointer'\n  },\n  border: {\n    border: '1px solid black'\n  },\n  height800: {\n    height: 800\n  },\n  maxHeight100: {\n    maxHeight: 100,\n    height: 100,\n  },\n  maxHeight400: {\n    maxHeight: 400,\n    height: 400,\n  },\n  minHeight680: {\n    minHeight: 680,\n  },\n  minHeight200: {\n    minHeight: 200,\n    overflow: 'scroll'\n  },\n  redNeg: {\n    backgroundColor: redLight,\n    color: redPrimary,\n    fontWeight: 800\n  },\n  greenPos: {\n    backgroundColor: greenLight,\n    color: greenPrimary,\n    fontWeight: 800\n  },\n  padding30: {\n    padding: 30\n  },\n  mb12: {\n    marginBottom: 12\n  },\n  overflowScroll: {\n    overflow: 'scroll'\n  },\n  overflowHidden: {\n    overflow: 'hidden'\n  },\n  overflowVisible: {\n    overflow: 'visible'\n  },\n  maxHeight150: {\n    maxHeight: 150,\n    height: 150,\n  },\n  minHeight150: {\n    minHeight: 150,\n    overflow: 'scroll'\n  },\n  carouselLegend: {\n    backgroundColor: 'rgb(192,192,192, .5)\t !important',\n    fontSize: '24px !important',\n    textAlign: 'center !important',\n    opacity: `100 !important`,\n    fontWeight: 800,\n    // width: `${25}% !important`,\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  padding15: {\n    padding: 15\n  },\n  maxHeight75: {\n    maxHeight: 75,\n    height: 75,\n  },\n  overflowYScroll: {\n    overflowY: 'scroll',\n    overflowX: 'hidden'\n  },\n}));","import React, { useContext } from 'react';\nimport AppContext from '../../AppContext';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport { Chip, Fade } from '@material-ui/core';\n\n\n// maybe move this to config?\nexport const API_COLOR = '#A142F4'\nexport const API_BACKGROUND_COLOR = 'rgba(161, 66, 244, 0.1)'\nexport const EMBED_COLOR = '#12B5CB'\nexport const EMBED_BACKGROUND_COLOR = 'rgba(18, 181, 203, 0.1)'\n\nfunction Highlight({ children, color, height, width, margin, id, backgroundColor, ...props }) {\n  const { show } = useContext(AppContext)\n  var style = {};\n  if (show) {\n    style = {\n      ...style,\n      // boxShadow: `0 0 10px ${color}, \n      // inset 0 0 10px ${color}`,\n\n      border: `3px solid ${color}`,\n      backgroundColor: `${backgroundColor}`,\n      borderRadius: `4px`,\n      // zIndex: 10000000000000000,\n      position: 'relative'\n    }\n  } else {\n    style = {\n      border: `3px solid transparent`,\n      backgroundColor: `transparent`,\n    }\n  }\n\n  if (height) { style['height'] = height }\n  if (width) { style['width'] = width }\n  if (margin) { style['margin'] = margin }\n\n  // boxShadow: `0 4px 80px ${color}22`\n\n  return (\n    <div id={id} style={style} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport function ApiHighlight({ ...props }) {\n  const { show } = useContext(AppContext)\n  const { classes } = props\n  const { children } = props\n\n  return <Highlight {...props} color={API_COLOR} backgroundColor={API_BACKGROUND_COLOR}>\n\n    <Chip size=\"small\"\n      label={\"API\"}\n      className={show ? 'test' : `${classes.hidden}`}\n      display=\"inline\"\n      align=\"right\"\n      style={{ backgroundColor: \"#A142F4\", color: '#fff', top: '-10px', left: '-10px', position: 'absolute' }}\n    />\n    {children}\n\n  </Highlight>\n}\n\nexport function EmbedHighlight({ ...props }) {\n  const { show } = useContext(AppContext)\n  const { classes } = props\n  const { children } = props\n\n  return <Highlight {...props} color={EMBED_COLOR} backgroundColor={EMBED_BACKGROUND_COLOR}>\n\n    <Chip size=\"small\"\n      label={\"Embed\"}\n      className={show ? 'test' : `${classes.hidden}`}\n      display=\"inline\"\n      align=\"right\"\n      style={{\n        backgroundColor: \"#12B5CB\",\n        color: '#fff',\n        top: '-10px',\n        left: '-10px',\n        position: 'absolute'\n      }}\n    />\n    {children}\n\n  </Highlight>\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Chip } from '@material-ui/core';\nimport { ResponsiveLine } from '@nivo/line';\nconst { validIdHelper, decodeHtml } = require('../../../tools');\n\n\n\nexport function SingleValueVis({ lookerContent, classes }) {\n  // console.log('SingleValueVis')\n  // console.log('lookerContent', lookerContent)\n  // const [svg, setSvg] = useState(undefined)\n  const [apiContent, setApiContent] = useState([]);\n  const { userProfile, lookerUser, show } = useContext(AppContext)\n\n\n\n  let dataObjForSparkline = {}\n  useEffect(() => {\n    if (lookerContent || lookerUser) {\n      setTimeout(() => runInlineQuery(), 1000);\n    }\n  }, [lookerContent, lookerUser])\n\n\n\n  const runInlineQuery = async () => {\n    setApiContent([])\n    let stringifiedQuery = encodeURIComponent(JSON.stringify(lookerContent.inlineQuery))\n    let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    dataObjForSparkline.id = validIdHelper(`singleVisValue-${lookerContent.id}`);\n    dataObjForSparkline.data = [];\n\n    let dataArrForDataObj = [];\n    lookerResponseData.queryResults.map(item => {\n      if (item[lookerContent.inlineQuery.fields[0]]\n        // && item['order_items.count']['order_items.previous_period'][\"This Period\" ? \"This Period\" : \"Previous Period\"]\n      ) {\n        let thisDataItem = {\n          \"x\": item[lookerContent.inlineQuery.fields[0]].toString(),\n          \"y\": item[lookerContent.inlineQuery.fields[1]] || 0,\n          \"change\": item.change\n        }\n        if (thisDataItem && thisDataItem.y !== \"null\") dataArrForDataObj.push(thisDataItem)\n      }\n    })\n    dataObjForSparkline.data = [...dataArrForDataObj]\n    setApiContent([dataObjForSparkline])\n  }\n\n  const upOrDownArrow = apiContent.length ? isNaN((apiContent[0].data[0].change * 100).toFixed(2)) ? '' : parseInt((apiContent[0].data[0].change * 100).toFixed(0)) >= 0 ? `&uarr;` : `&darr;` : '';\n\n  return (\n    <Card className={`${classes.padding15} ${classes.overflowHidden}`} variant=\"outlined\">\n      <div\n        style={{\n          height: lookerContent.height,\n        }}\n      >\n        {apiContent.length ?\n          <React.Fragment>\n            <ApiHighlight height={140} classes={classes} >\n              <Grid container className={`${classes.textCenter}`}>\n                <Grid item sm={12}>\n                  <Typography variant=\"body2\" align=\"left\" color=\"secondary\">\n                    {lookerContent.label}\n                  </Typography>\n                </Grid>\n                <Grid item sm={6}>\n                  <Typography variant=\"subtitle1\" align=\"left\">\n                    <b>{apiContent[0].data && apiContent[0].data[0] ? apiContent[0].data[0].y.toFixed(2) : ''}</b>\n                  </Typography>\n                </Grid>\n                <Grid item sm={6}>\n                  <Chip size=\"small\"\n                    label={`${decodeHtml(upOrDownArrow)} ${parseInt(apiContent[0].data[0].change * 100).toFixed(0)}% `}\n                    className={isNaN((apiContent[0].data[0].change * 100).toFixed(2)) ? '' : parseInt((apiContent[0].data[0].change * 100).toFixed(0)) >= 0 ? classes.greenPos : classes.redNeg}\n                    display=\"inline\"\n                    align=\"right\"\n                  />\n                </Grid>\n              </Grid>\n              <ResponsiveLine\n                data={apiContent}\n                margin={{ top: 25, right: 25, bottom: 25, left: 25 }}\n                xScale={{\n                  type: 'time',\n                  format: '%Y-%m-%d',\n                  precision: 'day',\n                }}\n                yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                axisLeft={{\n                  orient: \"left\",\n                  tickSize: 0,\n                  tickPadding: 5,\n                  tickRotation: 0,\n                  format: () => null\n                }}\n                axisBottom={{\n                  orient: \"bottom\",\n                  tickSize: 0,\n                  tickPadding: 5,\n                  tickRotation: 0,\n                  format: () => null,\n                  // legend: lookerContent.label,\n                  // legendOffset: 15,\n                  // legendPosition: 'middle'\n                }}\n                enablePoints={false}\n                enableGridX={false}\n                enableGridY={false}\n                height={100}\n                colors={lookerContent.visColor}\n                animate={true}\n              />\n            </ApiHighlight>\n          </React.Fragment>\n          :\n          <Grid item sm={12} className={`${classes.flexCentered}`} style={{ height: lookerContent.height }}>\n            <CircularProgress className={classes.circularProgress}\n              style={{ color: `${lookerContent.visColor} ` }} />\n          </Grid>\n        }\n      </div >\n    </Card>\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Grid, CircularProgress, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst { validIdHelper, decodeHtml } = require('../../../tools');\n\nexport function NaturalLanguage({ lookerContent, item, index, classes }) {\n  const [apiContent, setApiContent] = useState(undefined);\n  const { userProfile, lookerUser, show } = useContext(AppContext)\n\n  useEffect(() => {\n    if (item) {\n      runInlineQuery();\n    }\n  }, [item, lookerUser])\n\n  const runInlineQuery = async () => {\n    setApiContent(undefined)\n    let inlineQuery = item;\n    let stringifiedQuery = encodeURIComponent(JSON.stringify(inlineQuery))\n    let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    setApiContent(lookerResponseData.queryResults[0])\n  }\n\n  const upOrDownArrow = apiContent ? apiContent.change > 0 ? `&uarr;` : `&darr;` : '';\n\n  return (\n    <Grid item sm={12}>\n      {apiContent ?\n        <React.Fragment >\n          <ApiHighlight classes={classes} >\n            <Typography variant=\"subtitle1\" display=\"inline\">\n              Your {lookerContent.inlineQueriesMap[index]} category, <b>{apiContent['products.category']}</b>, is {apiContent.change > 0 ? 'up ' : 'down '}\n            </Typography>\n            <Chip size=\"small\"\n              label={`${decodeHtml(upOrDownArrow)} ${parseInt(apiContent.change * 100).toFixed(0)}% `}\n              className={apiContent.change > 0 ? classes.greenPos : classes.redNeg}\n              display=\"inline\"\n            />\n            <Typography variant=\"subtitle1\" display=\"inline\">\n              &nbsp;over the past week.\n        </Typography>\n          </ApiHighlight>\n        </React.Fragment>\n        : <div style={{ height: '56px' }}></div>\n\n        // <Grid item sm={12} >\n        //   <Card className={`${classes.card} ${classes.flexCentered}`}>\n        //     <CircularProgress className={classes.circularProgress}\n        //       style={{ color: `${lookerContent.visColor} ` }} />\n        //   </Card>\n        // </Grid>\n      }\n    </Grid >\n  );\n}\n\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { NaturalLanguage } from './NaturalLanguage';\nconst { validIdHelper } = require('../../../tools');\n\nexport function Welcome({ lookerContent, classes }) {\n  // console.log('Welcome')\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    // setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  return (\n    <div\n      className={`${classes.overflowScroll} ${classes.padding15}`}\n      style={{ height: lookerContent.height }}\n    >\n      <Typography variant=\"h4\">Welcome back</Typography>\n      <br />\n      <Typography variant=\"subtitle1\" display=\"inline\">\n        Hi <b>{userProfile.givenName}</b>, hope you're having a good day. Here are a few things you might want to know.\n      </Typography>\n      <br />\n      <>\n        {lookerContent.inlineQueries.map((item, index) => (\n          <NaturalLanguage\n            key={`${validIdHelper('naturalLanguage-splashPage-' + index)}`}\n            {...{ lookerContent, item, index, classes }}\n          />\n        )\n        )}\n      </>\n    </div >\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Grid, CircularProgress, Divider, Chip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport function VectorThumbnail({ lookerContent, classes, item, handleMenuItemSelect, index }) {\n  const [svg, setSvg] = useState(undefined)\n  const { userProfile, lookerUser, show } = useContext(AppContext)\n\n  useEffect(() => {\n    if (item) {\n      getThumbnail();\n    }\n  }, [item, lookerUser])\n\n  const getThumbnail = async () => {\n    let lookerResponse = await fetch(`/getthumbnail/${item.resourceType}/${item.id}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    const blob = new Blob([lookerResponseData.svg], { type: 'image/svg+xml' });\n    let url = URL.createObjectURL(blob);\n    setSvg(url)\n  }\n\n  return (\n    <Grid container\n      onClick={() => handleMenuItemSelect(item.id, 1)}\n      className={`${classes.cursorPointer}`}\n      spacing={3}\n    >\n      {svg ?\n        <>\n          <Grid item sm={1} />\n          <Grid item sm={6}>\n            <ApiHighlight classes={classes}>\n              <div\n                className={` ${classes.maxHeight75} ${classes.textCenter} ${classes.cursorPointer} ${classes.overflowHidden}`}\n              >\n                <img\n                  onClick={() => handleMenuItemSelect(item.id, 1)}\n                  src={svg}\n                // style={{ width: '100%' }}\n                />\n\n              </div>\n            </ApiHighlight>\n          </Grid>\n          <Grid item sm={4}>\n            <Typography variant=\"subtitle1\"  >{item.label}</Typography>\n          </Grid>\n          {index < 2 ?\n            <Grid item sm={12}>\n              <Divider className={`${classes.divider} ${classes.mb12} ${classes.mt12}`} />\n            </Grid> : ''}\n        </>\n        :\n        ''\n      }\n    </Grid >\n\n  );\n}\n","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ResponsiveLine } from '@nivo/line';\nimport { VectorThumbnail } from './VectorThumbnail';\nimport { NaturalLanguage } from './NaturalLanguage';\nconst { validIdHelper } = require('../../../tools');\n\n\n\nexport function PopularAnalysis({ lookerContent, classes, handleMenuItemSelect }) {\n  const [apiContent, setApiContent] = useState([]);\n\n  return (\n\n    <Card className={classes.padding15} variant=\"outlined\">\n      <div\n        className={`${classes.overflowYScroll}`}\n        style={{ height: lookerContent.height }}\n      >\n        <Grid container\n          spacing={3}>\n          <Grid item sm={12}>\n            <Typography variant=\"h6\" align=\"center\" color=\"secondary\">\n              Helpful Dashboards\n          </Typography></Grid>\n          {lookerContent.vectors.map((item, index) => {\n            return (\n              <VectorThumbnail\n                key={`${validIdHelper('vectorThumbnail-splashPage-' + index)}`}\n                {...{ lookerContent, item, classes, handleMenuItemSelect, index }}\n              />\n            )\n          }\n          )}\n        </Grid>\n\n      </div >\n    </Card>\n  );\n}\n","import $ from 'jquery';\nimport React, { useEffect, useRef, useCallback, useState, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport { Typography, Grid, Card, CircularProgress, Box, Chip } from '@material-ui/core';\n\nexport function EmbeddedDashboard({ lookerContent, classes, id, lookerHost }) {\n\n  const [iFrameExists, setIFrame] = useState(0);\n  const { userProfile, lookerUser, show } = useContext(AppContext)\n\n  useEffect(() => {\n    $(`#${id}`).html('')\n    setIFrame(0)\n    LookerEmbedSDK.createDashboardWithId(lookerContent.slug)\n      .appendTo(document.getElementById(id))\n      .withClassName('dashboard')\n      .withClassName('splashPage')\n      .withClassName(lookerContent.id)\n      // .withNext()\n      .withTheme('atom_fashion')\n      .build()\n      .connect()\n      .then((look) => {\n        setIFrame(1)\n        LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n      })\n      .catch((error) => {\n        console.error('Connection error', error)\n      })\n  }, [lookerUser])\n\n  return (\n\n    <Card className={classes.padding15} variant=\"outlined\">\n\n      <div\n        className={`${classes.textCenter} ${classes.overflowVisible}`}\n        style={\n          { height: lookerContent.height }\n        }\n      >\n        {\n          iFrameExists ? '' :\n\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered} ${classes.maxHeight400} `} elevation={0}>\n                <CircularProgress className={classes.circularProgress}\n                />\n              </Card>\n            </Grid>\n        }\n        <Box >\n          <Grid item sm={12}>\n            <EmbedHighlight classes={classes}>\n              <div\n                className={`embedContainer splashPage`}\n                id={id}\n                key={id}\n              >\n              </div>\n            </EmbedHighlight>\n          </Grid>\n        </Box>\n      </div >\n    </Card >\n  );\n}","import React, { useState, useEffect, useLayoutEffect, useRef, useContext } from 'react';\nimport AppContext from '../../../AppContext';\nimport { Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, Button, CircularProgress, Grid, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\nconst { validIdHelper } = require('../../../tools');\n\n\n\nexport function ContentCarousel({ lookerContent, classes }) {\n  // console.log('Welcome')\n  const { userProfile, lookerUser } = useContext(AppContext)\n\n  useEffect(() => {\n    // setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  return (\n    <div\n      className={`${classes.overflowScroll} MuiPaper-rounded`}\n      style={{\n        height: lookerContent.height\n      }}\n    >\n\n      <Carousel infiniteLoop={true} autoPlay={true} showThumbs={false}>\n        <div style={{ maxHeight: lookerContent.height }}>\n          <img src={require(`../../../images/atom_splash_blog.jpg`)} />\n          <p className={`legend ${classes.carouselLegend}`}>Blog</p>\n        </div>\n        <div style={{ maxHeight: lookerContent.height }}>\n          <img src={require(`../../../images/atom_splash_inventory.jpg`)} />\n          <p className={`legend ${classes.carouselLegend}`}>Inventory Best Practices</p>\n        </div>\n        <div style={{ maxHeight: lookerContent.height }}>\n          <img src={require(`../../../images/atom_splash_trends.jpg`)} />\n          <p className={`legend ${classes.carouselLegend}`}>Macro Trends</p>\n        </div>\n      </Carousel>\n    </div >\n  );\n}\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, FormControlLabel, Switch, Typography, Button } from '@material-ui/core';\nimport CodeIcon from '@material-ui/icons/Code';\nimport clsx from 'clsx';\n\nimport AppContext from '../../AppContext';\n\n\nexport default function BottomBar(props) {\n  // console.log('BottomBar')\n  // console.log('props', props)\n\n  const { classes } = props\n  const { toggleShow } = useContext(AppContext)\n  const { show } = useContext(AppContext)\n  const { toggleCodeShow } = useContext(AppContext)\n  const { codeShow } = useContext(AppContext)\n  const { lookerUser } = props;\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBarBottom)}\n      color=\"default\"\n    >\n      <Toolbar>\n        <FormControlLabel\n          control={<Switch checked={show} onChange={toggleShow} />}\n          label=\"Show source\"\n          className={`${classes.mlAuto}`}\n        />\n        <Button variant=\"outlined\"\n          startIcon={<CodeIcon />}\n          onClick={toggleCodeShow}>Code\n          </Button>\n\n      </Toolbar>\n    </AppBar>\n  );\n}\n","//imports\nimport $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, Divider } from '@material-ui/core'\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./SplashPage.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport { SingleValueVis } from './SingleValueVis';\nimport { Welcome } from './Welcome';\nimport { PopularAnalysis } from './PopularAnalysis';\nimport { EmbeddedLook } from './EmbeddedLook';\nimport { EmbeddedDashboard } from './EmbeddedDashboard';\nimport { ContentCarousel } from './ContentCarousel';\nimport BottomBar from '../../Material/BottomBar.js'\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\n//start of SplashPage Component\nexport default function SplashPage(props) {\n  // console.log('SplashPage')\n  //intialize state using hooks\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(1);\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const { toggleShow } = useContext(AppContext)\n  const { show } = useContext(AppContext)\n  const { codeShow } = useContext(AppContext)\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, handleTabChange, handleMenuItemSelect, lookerUser, lookerHost } = props;\n  const codeTab = {\n    type: 'code flyout', label: 'Code', id: 'codeFlyout',\n    lookerContent, lookerUser, clientSideCode, serverSideCode\n  }\n  // const tabContent = [[...lookerContent], codeTab];\n  // const tabContent = [[...lookerContent]];\n  const demoComponentType = type || 'code flyout';\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  /**\n   * listen for lookerContent and call \n   * setSampleCode\n  */\n  useEffect(() => {\n    // console.log('useEffect')\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent]);\n\n\n  /**\n   * What this return  does:\n   * Rendering of actual html elements,\n   * this section is necessary but less relevant to looker functionality itself\n   */\n  return (\n    <div className={`${classes.root} ${classes.minHeight680} ${classes.padding30} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={classes.root}>\n          {iFrameExists ? '' :\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered}`}>\n                <CircularProgress className={classes.circularProgress} />\n              </Card>\n            </Grid>\n          }\n          <Box className={iFrameExists ? `${classes.positionRelative}` : `${classes.hidden} ${classes.positionRelative}`}>\n            <Grid container\n              spacing={3}\n              key={`${validIdHelper(demoComponentType + '-outerFragment')}`}>\n              {codeShow ? <Grid item sm={6}\n                className={`${classes.positionTopRight}`}\n              >\n                <CodeFlyout {...props}\n                  classes={classes}\n                  lookerUser={lookerUser} />\n              </Grid> : ''}\n              {lookerContent.map((lookerContent, innerIndex) => {\n                return (\n                  <Grid\n                    key={`${validIdHelper(demoComponentType + '-innerFragment-' + innerIndex)}`}\n                    item\n                    sm={parseInt(lookerContent.gridWidth)}\n                  >\n                    {(lookerContent.type === 'welcome') && <Welcome\n                      {...{ lookerContent, classes, demoComponentType, lookerHost }}\n                    />}\n                    {(lookerContent.type === 'carousel') && <ContentCarousel\n                      {...{ lookerContent, classes, demoComponentType, lookerHost }}\n                    />}\n                    {(lookerContent.type === 'single value') && <SingleValueVis\n                      {...{ lookerContent, classes, demoComponentType, lookerHost }}\n                    />}\n                    {(lookerContent.type === 'dashboard') && <EmbeddedDashboard\n                      {...{ lookerContent, classes, lookerHost }} id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent.id}`)}\n                    />}\n                    {(lookerContent.type === 'popular analysis') && <PopularAnalysis\n                      {...{ lookerContent, classes, demoComponentType, handleMenuItemSelect, lookerHost }}\n                    />}\n                  </Grid>\n                )\n              })}\n            </Grid>\n          </Box >\n        </div >\n      </Grid >\n    </div >\n  )\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    // position: 'absolute', //hack for obscuring other elements within Box\n    // zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  mrAuto: {\n    marginRight: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  padding30: {\n    padding: 30\n  },\n  minHeight680: {\n    minHeight: 680,\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  skeleton: {\n    height: 160,\n    width: '100%'\n  }\n}));","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport function NumberToColoredPercent( {val, positive_good, abs_val}) {\n  const colors = {\n    up: (positive_good) ? 'green' : 'red',\n    down: (positive_good) ? 'red' : 'green'\n  }\n  const color = (val<0) ? colors.down : (val>0) ? colors.up : 'black'\n  const val_formatted = Math.abs(val).toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 2 })\n  const icon = (val<0) ? '▼' : (val>0) ? '▲' : '—'\n  \n  return (<>\n      <font\n        color={color}\n      >\n        {`${icon} ${val_formatted}`}\n      </font>\n  </>\n  )\n}","import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField, Toolbar, FormControlLabel, Switch, Chip,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails\n} from '@material-ui/core'\nimport { Autocomplete, ToggleButton, ToggleButtonGroup, Skeleton } from '@material-ui/lab'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./Dashboard.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport BottomBar from '../../Material/BottomBar.js'\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport { NumberToColoredPercent } from '../../Accessories/NumberToColoredPercent';\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\n//start of Dashboard Component\nexport default function Dashboard(props) {\n  // console.log('Dashboard')\n  //initialize state using hooks\n  const [value, setValue] = useState(0);\n  const [iFrameExists, setIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState([]);\n  const [dashboardObj, setDashboardObj] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const [toggleValue, setToggleValue] = useState('');\n  const [dashboardLayout, setDashboardLayout] = useState({});\n  const [regionValue, setRegionValue] = useState('All');\n  // const { togglePayWallModal } = useContext(AppContext)\n  const { toggleShow } = useContext(AppContext)\n  const { show } = useContext(AppContext)\n  const { codeShow, toggleCodeShow } = useContext(AppContext)\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\n  const demoComponentType = type || 'code flyout';\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  const handleToggle = (event, newValue) => {\n    setToggleValue(newValue)\n    const filteredLayout = _.filter(dashboardLayout.dashboard_layout_components, (row) => {\n      return (lookerContent[0].dynamicFieldLookUp[newValue].indexOf(row.dashboard_element_id) > -1)\n    })\n    const newDashboardLayout = {\n      ...dashboardLayout,\n      dashboard_layout_components: filteredLayout\n    }\n    dashboardObj.setOptions({ \"layouts\": [newDashboardLayout] })\n  };\n\n  /**\n   * listen for lookerContent and call \n   * performLookerApiCalls and setSampleCode\n  */\n  useEffect(() => {\n    setTimeout(() => performLookerApiCalls([...lookerContent]), 1000)\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n\n  useEffect(() => {\n    if (Object.keys(dashboardLayout).length && Object.keys(dashboardObj).length && lookerContent[0].dynamicFieldLookUp) {\n      handleToggle(null, Object.keys(lookerContent[0].dynamicFieldLookUp)[0])\n    }\n  }, [dashboardLayout]);\n\n  /** \n   * What this function does:\n   * iterate over Looker Content array referenced above and\n   * calls specific endpoints and methods available from Looker Node SDK\n   * and embed SDK to create the experience on this page\n   */\n  const performLookerApiCalls = function (lookerContent) {\n    // console.log('performLookerApiCalls')\n    $(`.embedContainer.${validIdHelper(demoComponentType)}:visible`).html('')\n    setIFrame(0)\n    setApiContent([])\n    lookerContent.map(async lookerContent => {\n      let dashboardId = lookerContent.id;\n      // let dashboardSlug = lookerContent.slug;\n\n      LookerEmbedSDK.createDashboardWithId(dashboardId) //dashboardSlug\n        .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${dashboardId}`))\n        .withClassName('iframe')\n        .withNext()\n        // .withNext(lookerContent.isNext || false) //how can I make this dynamic based on prop??\n        .withTheme(lookerContent.theme || 'atom_fashion')\n        .withParams({ 'schedule_modal': 'true' })\n        .on('page:property:change', (event) => {\n          // console.log('page property is changing!!!!')\n          changeHeight(event)\n        }) // dashboards-next\n        .on('dashboard:loaded', (event) => {\n          setDashboardLayout(event.dashboard.options.layouts[0])\n        })\n        // .on('drillmenu:click', (event) => {\n        //   drillMenuClick(event)\n        // })\n        .build()\n        .connect()\n        .then((dashboard) => {\n          setIFrame(1)\n          setDashboardObj(dashboard)\n          LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n\n        })\n        .catch((error) => {\n          // console.error('Connection error', error)\n        })\n\n      if (lookerContent.hasOwnProperty('filters')) {\n        //get inline query from usecase file & set user attribute dynamically\n\n        //iterating over filters\n        let orderedArrayForApiContent = []\n        lookerContent.filters.map(async (item, index) => {\n          // console.log('item', item)\n          let jsonQuery = lookerContent.inlineQueries[index];\n          jsonQuery.filters = {\n            ...jsonQuery.filters,\n            [item.desiredFilterName]: lookerUser.user_attributes.brand\n          };\n          // lookerContent.inlineQueries[index] = jsonQuery;\n          let stringifiedQuery = encodeURIComponent(JSON.stringify(jsonQuery))\n          let lookerResponse = await fetch('/runinlinequery/' + stringifiedQuery + '/json', {\n            method: 'GET',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            }\n          })\n          let lookerResponseData = await lookerResponse.json();\n          let queryResultsForDropdown = [];\n          let desiredProperty = Object.keys(lookerResponseData.queryResults[0])[0];\n\n          for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\n            queryResultsForDropdown.push({\n              'label': lookerResponseData.queryResults[i][desiredProperty],\n              'trend': (lookerResponseData.queryResults[i]['trend']) ? lookerResponseData.queryResults[i]['trend'] : undefined\n            })\n          }\n\n\n          // setApiContent(apiContent => {\n          //   return [...apiContent, queryResultsForDropdown]\n          // });\n          //needed solution for ordering apiContent to match order\n          //of content from usecaseContent\n          orderedArrayForApiContent[index] = queryResultsForDropdown\n          setApiContent([...orderedArrayForApiContent])\n\n          if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\n        })\n      }\n\n    })\n  }\n\n  /**\n   * update dashboard when custom filter changed\n  */\n  const customFilterAction = (dashboardId, filterName, newFilterValue) => {\n    if (Object.keys(dashboardObj).length) {\n      dashboardObj.updateFilters({ [filterName]: newFilterValue })\n      dashboardObj.run()\n    }\n  }\n\n  // const drillMenuClick = (event) => {\n\n  //   const basicLookerUser = lookerUser.user_attributes.permission_level === 'basic' ? true : false;\n  //   if (basicLookerUser) {\n  //     togglePayWallModal()\n  //     return { cancel: (basicLookerUser) ? true : false }\n  //   }\n  // }\n\n  const changeHeight = (event) => {\n    // console.log('changeHeight')\n    // console.log('event', event)\n  }\n\n  /**\n   * What this return  does:\n   * Rendering of actual html elements,\n   * this section is necessary but less relevant to looker functionality itself\n   */\n\n  // console.log('apiContent', apiContent)\n\n  return (\n    <div className={`${classes.root} ${classes.minHeight680} ${classes.padding30}  demoComponent`}>\n      <Grid container spacing={3}>\n        <div className={`${classes.root} ${classes.positionRelative}`}>\n\n          {lookerContent[0].hasOwnProperty(\"filters\") &&\n            apiContent.length === lookerContent[0].filters.length ?\n            <Grid item\n              sm={12}\n              key={validIdHelper(`${demoComponentType}-FilterBar-${lookerContent[0].id}`)}\n            >\n              <FilterBar {...props}\n                classes={classes}\n                apiContent={apiContent}\n                customFilterAction={customFilterAction}\n                regionValue={regionValue}\n                setRegionValue={setRegionValue}\n                toggleValue={toggleValue}\n                handleToggle={handleToggle}\n              />\n            </Grid> :\n            lookerContent[0].hasOwnProperty(\"filters\") ?\n              <Skeleton variant=\"rect\" animation=\"wave\" className={classes.skeleton} /> :\n              ''}\n\n\n          {\n            iFrameExists\n              ? ''\n              :\n              <Grid item sm={12} >\n                <Card className={`${classes.card} ${classes.flexCentered}`} elevation={0}>\n                  <CircularProgress className={classes.circularProgress} />\n                </Card>\n              </Grid>\n          }\n          <Box\n            className={iFrameExists ? ` ` : `${classes.hidden} `}>\n            {codeShow ?\n              <Grid item sm={6}\n                className={`${classes.positionTopRight}`}\n              >\n                <CodeFlyout {...props}\n                  classes={classes}\n                  lookerUser={lookerUser} />\n              </Grid>\n              : ''}\n            <Grid item sm={12}>\n\n              <Box className={classes.w100} mt={lookerContent[0].filter || lookerContent[0].dynamicFieldLookUp ? 2 : 0}>\n\n\n                <EmbedHighlight classes={classes}>\n                  <div\n                    className={`embedContainer ${validIdHelper(demoComponentType)}`}\n                    id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent[0].id}`)}\n                    key={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent[0].id}`)}\n                  >\n                  </div>\n                </EmbedHighlight>\n              </Box>\n            </Grid>\n          </Box>\n        </div>\n      </Grid>\n    </div>\n  )\n}\n\n\n\n\nfunction FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\n    apiContent, customFilterAction, regionValue, setRegionValue, toggleValue, handleToggle } = props;\n\n  const [expanded, setExpanded] = useState(true);\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n  return (\n\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100} elevation={0}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={classes.heading}>Filter Data</Typography>\n\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        {\n          lookerContent[0].filters || lookerContent[0].dynamicFieldLookUp ?\n            <Grid\n              container>\n              {apiContent.map((item, index) => {\n                return (\n                  lookerContent[0].filterComponents[index] === 'autocomplete' ?\n                    <ApiHighlight classes={classes}\n                      key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\n                      <Grid item sm={6}>\n                        <Autocomplete\n                          id={`combo-box-dashboard-${lookerContent.id}`}\n                          options={Array.isArray(apiContent[index]) ?\n                            apiContent[index] :\n                            []}\n                          renderOption={(option) => (\n                            <Grid container justify=\"space-between\">\n                              <Grid item>\n                                {option.label}\n                              </Grid>\n                              {option.trend && <Grid item>\n                                <NumberToColoredPercent\n                                  val={option.trend}\n                                  positive_good={true}\n                                  abs_val={Math.abs(option.trend)}\n                                />\n                              </Grid>}\n                            </Grid>\n                          )}\n                          getOptionLabel={(option) => option.label}\n                          style={{ width: 400 }}\n                          onChange={(event, newValue) => {\n                            customFilterAction(lookerContent[0].id,\n                              lookerContent[0].filters[index].filterName,\n                              (newValue) ? newValue.label : '')\n                          }}\n                          renderInput={(params) => <TextField {...params} label={lookerContent[0].filters[index].filterName} variant=\"outlined\" />}\n                          loadingText=\"Loading...\"\n                        />\n                      </Grid>\n                    </ApiHighlight>\n                    : lookerContent[0].filterComponents[index] === 'togglebutton' ?\n\n                      <ApiHighlight classes={classes}\n                        key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\n                        <Grid item sm={12}>\n                          <ToggleButtonGroup\n                            value={regionValue}\n                            exclusive\n                            onChange={(event, newValue) => {\n                              setRegionValue(newValue)\n                              customFilterAction(lookerContent[0].id,\n                                lookerContent[0].filters[index].filterName,\n                                (newValue) ? newValue : '')\n                            }}\n                            aria-label=\"region\"\n                          >\n                            {apiContent[index].map((region, index) => {\n                              return (\n                                <ToggleButton\n                                  key={validIdHelper(`${type}-FilterBar-ToggleButton-${lookerContent[0].id}-${index}`)}\n                                  value={region.label} aria-label={region.label}>\n                                  {region.label}\n                                </ToggleButton>\n                              )\n                            })}\n                          </ToggleButtonGroup>\n                        </Grid>\n                      </ApiHighlight>\n                      : 'ooooopppp')\n              })}\n              <Grid item sm={1} />\n              {lookerContent[0].dynamicFieldLookUp ?\n                <EmbedHighlight classes={classes} >\n                  <Grid item sm={5}>\n                    <ToggleButtonGroup\n                      value={toggleValue}\n                      exclusive\n                      onChange={handleToggle}\n                      aria-label=\"text alignment\"\n                    >\n                      {Object.keys(lookerContent[0].dynamicFieldLookUp).map(key => {\n                        return (\n                          <ToggleButton\n                            key={validIdHelper(`dynamicDashToggle-${key}`)}\n                            value={key} aria-label=\"left aligned\">\n                            {key}\n                          </ToggleButton>\n                        )\n                      })}\n                    </ToggleButtonGroup>\n                  </Grid>\n                </EmbedHighlight>\n                : ''\n              }\n            </Grid> : ''\n        }\n      </ExpansionPanelDetails>\n    </ExpansionPanel >\n  )\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField, Toolbar, FormControlLabel, Switch, Chip,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails\\n} from '@material-ui/core'\\nimport { Autocomplete, ToggleButton, ToggleButtonGroup, Skeleton } from '@material-ui/lab'\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./Dashboard.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport BottomBar from '../../Material/BottomBar.js'\\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\\nimport { NumberToColoredPercent } from '../../Accessories/NumberToColoredPercent';\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of Dashboard Component\\nexport default function Dashboard(props) {\\n  // console.log('Dashboard')\\n  //initialize state using hooks\\n  const [value, setValue] = useState(0);\\n  const [iFrameExists, setIFrame] = useState(0);\\n  const [apiContent, setApiContent] = useState([]);\\n  const [dashboardObj, setDashboardObj] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const [toggleValue, setToggleValue] = useState('');\\n  const [dashboardLayout, setDashboardLayout] = useState({});\\n  const [regionValue, setRegionValue] = useState('All');\\n  // const { togglePayWallModal } = useContext(AppContext)\\n  const { toggleShow } = useContext(AppContext)\\n  const { show } = useContext(AppContext)\\n  const { codeShow, toggleCodeShow } = useContext(AppContext)\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\\n  const demoComponentType = type || 'code flyout';\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  const handleToggle = (event, newValue) => {\\n    setToggleValue(newValue)\\n    const filteredLayout = _.filter(dashboardLayout.dashboard_layout_components, (row) => {\\n      return (lookerContent[0].dynamicFieldLookUp[newValue].indexOf(row.dashboard_element_id) > -1)\\n    })\\n    const newDashboardLayout = {\\n      ...dashboardLayout,\\n      dashboard_layout_components: filteredLayout\\n    }\\n    dashboardObj.setOptions({ \\\"layouts\\\": [newDashboardLayout] })\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * performLookerApiCalls and setSampleCode\\n  */\\n  useEffect(() => {\\n    setTimeout(() => performLookerApiCalls([...lookerContent]), 1000)\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent, lookerUser]);\\n\\n\\n  useEffect(() => {\\n    if (Object.keys(dashboardLayout).length && Object.keys(dashboardObj).length && lookerContent[0].dynamicFieldLookUp) {\\n      handleToggle(null, Object.keys(lookerContent[0].dynamicFieldLookUp)[0])\\n    }\\n  }, [dashboardLayout]);\\n\\n  /** \\n   * What this function does:\\n   * iterate over Looker Content array referenced above and\\n   * calls specific endpoints and methods available from Looker Node SDK\\n   * and embed SDK to create the experience on this page\\n   */\\n  const performLookerApiCalls = function (lookerContent) {\\n    // console.log('performLookerApiCalls')\\n    $(`.embedContainer.${validIdHelper(demoComponentType)}:visible`).html('')\\n    setIFrame(0)\\n    setApiContent([])\\n    lookerContent.map(async lookerContent => {\\n      let dashboardId = lookerContent.id;\\n      // let dashboardSlug = lookerContent.slug;\\n\\n      LookerEmbedSDK.createDashboardWithId(dashboardId) //dashboardSlug\\n        .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${dashboardId}`))\\n        .withClassName('iframe')\\n        .withNext()\\n        // .withNext(lookerContent.isNext || false) //how can I make this dynamic based on prop??\\n        .withTheme(lookerContent.theme || 'atom_fashion')\\n        .withParams({ 'schedule_modal': 'true' })\\n        .on('page:property:change', (event) => {\\n          // console.log('page property is changing!!!!')\\n          changeHeight(event)\\n        }) // dashboards-next\\n        .on('dashboard:loaded', (event) => {\\n          setDashboardLayout(event.dashboard.options.layouts[0])\\n        })\\n        // .on('drillmenu:click', (event) => {\\n        //   drillMenuClick(event)\\n        // })\\n        .build()\\n        .connect()\\n        .then((dashboard) => {\\n          setIFrame(1)\\n          setDashboardObj(dashboard)\\n          LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n\\n        })\\n        .catch((error) => {\\n          // console.error('Connection error', error)\\n        })\\n\\n      if (lookerContent.hasOwnProperty('filters')) {\\n        //get inline query from usecase file & set user attribute dynamically\\n\\n        //iterating over filters\\n        let orderedArrayForApiContent = []\\n        lookerContent.filters.map(async (item, index) => {\\n          // console.log('item', item)\\n          let jsonQuery = lookerContent.inlineQueries[index];\\n          jsonQuery.filters = {\\n            ...jsonQuery.filters,\\n            [item.desiredFilterName]: lookerUser.user_attributes.brand\\n          };\\n          // lookerContent.inlineQueries[index] = jsonQuery;\\n          let stringifiedQuery = encodeURIComponent(JSON.stringify(jsonQuery))\\n          let lookerResponse = await fetch('/runinlinequery/' + stringifiedQuery + '/json', {\\n            method: 'GET',\\n            headers: {\\n              Accept: 'application/json',\\n              'Content-Type': 'application/json'\\n            }\\n          })\\n          let lookerResponseData = await lookerResponse.json();\\n          let queryResultsForDropdown = [];\\n          let desiredProperty = Object.keys(lookerResponseData.queryResults[0])[0];\\n\\n          for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\\n            queryResultsForDropdown.push({\\n              'label': lookerResponseData.queryResults[i][desiredProperty],\\n              'trend': (lookerResponseData.queryResults[i]['trend']) ? lookerResponseData.queryResults[i]['trend'] : undefined\\n            })\\n          }\\n\\n\\n          // setApiContent(apiContent => {\\n          //   return [...apiContent, queryResultsForDropdown]\\n          // });\\n          //needed solution for ordering apiContent to match order\\n          //of content from usecaseContent\\n          orderedArrayForApiContent[index] = queryResultsForDropdown\\n          setApiContent([...orderedArrayForApiContent])\\n\\n          if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\\n        })\\n      }\\n\\n    })\\n  }\\n\\n  /**\\n   * update dashboard when custom filter changed\\n  */\\n  const customFilterAction = (dashboardId, filterName, newFilterValue) => {\\n    if (Object.keys(dashboardObj).length) {\\n      dashboardObj.updateFilters({ [filterName]: newFilterValue })\\n      dashboardObj.run()\\n    }\\n  }\\n\\n  // const drillMenuClick = (event) => {\\n\\n  //   const basicLookerUser = lookerUser.user_attributes.permission_level === 'basic' ? true : false;\\n  //   if (basicLookerUser) {\\n  //     togglePayWallModal()\\n  //     return { cancel: (basicLookerUser) ? true : false }\\n  //   }\\n  // }\\n\\n  const changeHeight = (event) => {\\n    // console.log('changeHeight')\\n    // console.log('event', event)\\n  }\\n\\n  /**\\n   * What this return  does:\\n   * Rendering of actual html elements,\\n   * this section is necessary but less relevant to looker functionality itself\\n   */\\n\\n  // console.log('apiContent', apiContent)\\n\\n  return (\\n    <div className={`${classes.root} ${classes.minHeight680} ${classes.padding30}  demoComponent`}>\\n      <Grid container spacing={3}>\\n        <div className={`${classes.root} ${classes.positionRelative}`}>\\n\\n          {lookerContent[0].hasOwnProperty(\\\"filters\\\") &&\\n            apiContent.length === lookerContent[0].filters.length ?\\n            <Grid item\\n              sm={12}\\n              key={validIdHelper(`${demoComponentType}-FilterBar-${lookerContent[0].id}`)}\\n            >\\n              <FilterBar {...props}\\n                classes={classes}\\n                apiContent={apiContent}\\n                customFilterAction={customFilterAction}\\n                regionValue={regionValue}\\n                setRegionValue={setRegionValue}\\n                toggleValue={toggleValue}\\n                handleToggle={handleToggle}\\n              />\\n            </Grid> :\\n            lookerContent[0].hasOwnProperty(\\\"filters\\\") ?\\n              <Skeleton variant=\\\"rect\\\" animation=\\\"wave\\\" className={classes.skeleton} /> :\\n              ''}\\n\\n\\n          {\\n            iFrameExists\\n              ? ''\\n              :\\n              <Grid item sm={12} >\\n                <Card className={`${classes.card} ${classes.flexCentered}`} elevation={0}>\\n                  <CircularProgress className={classes.circularProgress} />\\n                </Card>\\n              </Grid>\\n          }\\n          <Box\\n            className={iFrameExists ? ` ` : `${classes.hidden} `}>\\n            {codeShow ?\\n              <Grid item sm={6}\\n                className={`${classes.positionTopRight}`}\\n              >\\n                <CodeFlyout {...props}\\n                  classes={classes}\\n                  lookerUser={lookerUser} />\\n              </Grid>\\n              : ''}\\n            <Grid item sm={12}>\\n\\n              <Box className={classes.w100} mt={lookerContent[0].filter || lookerContent[0].dynamicFieldLookUp ? 2 : 0}>\\n\\n\\n                <EmbedHighlight classes={classes}>\\n                  <div\\n                    className={`embedContainer ${validIdHelper(demoComponentType)}`}\\n                    id={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent[0].id}`)}\\n                    key={validIdHelper(`embedContainer-${demoComponentType}-${lookerContent[0].id}`)}\\n                  >\\n                  </div>\\n                </EmbedHighlight>\\n              </Box>\\n            </Grid>\\n          </Box>\\n        </div>\\n      </Grid>\\n    </div>\\n  )\\n}\\n\\n\\n\\n\\nfunction FilterBar(props) {\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\\n    apiContent, customFilterAction, regionValue, setRegionValue, toggleValue, handleToggle } = props;\\n\\n  const [expanded, setExpanded] = useState(true);\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n  return (\\n\\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100} elevation={0}>\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMoreIcon />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <Typography className={classes.heading}>Filter Data</Typography>\\n\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        {\\n          lookerContent[0].filters || lookerContent[0].dynamicFieldLookUp ?\\n            <Grid\\n              container>\\n              {apiContent.map((item, index) => {\\n                return (\\n                  lookerContent[0].filterComponents[index] === 'autocomplete' ?\\n                    <ApiHighlight classes={classes}\\n                      key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\\n                      <Grid item sm={6}>\\n                        <Autocomplete\\n                          id={`combo-box-dashboard-${lookerContent.id}`}\\n                          options={Array.isArray(apiContent[index]) ?\\n                            apiContent[index] :\\n                            []}\\n                          renderOption={(option) => (\\n                            <Grid container justify=\\\"space-between\\\">\\n                              <Grid item>\\n                                {option.label}\\n                              </Grid>\\n                              {option.trend && <Grid item>\\n                                <NumberToColoredPercent\\n                                  val={option.trend}\\n                                  positive_good={true}\\n                                  abs_val={Math.abs(option.trend)}\\n                                />\\n                              </Grid>}\\n                            </Grid>\\n                          )}\\n                          getOptionLabel={(option) => option.label}\\n                          style={{ width: 400 }}\\n                          onChange={(event, newValue) => {\\n                            customFilterAction(lookerContent[0].id,\\n                              lookerContent[0].filters[index].filterName,\\n                              (newValue) ? newValue.label : '')\\n                          }}\\n                          renderInput={(params) => <TextField {...params} label={lookerContent[0].filters[index].filterName} variant=\\\"outlined\\\" />}\\n                          loadingText=\\\"Loading...\\\"\\n                        />\\n                      </Grid>\\n                    </ApiHighlight>\\n                    : lookerContent[0].filterComponents[index] === 'togglebutton' ?\\n\\n                      <ApiHighlight classes={classes}\\n                        key={validIdHelper(`dashEmbed-${type}${lookerContent.id}-${index}`)} >\\n                        <Grid item sm={12}>\\n                          <ToggleButtonGroup\\n                            value={regionValue}\\n                            exclusive\\n                            onChange={(event, newValue) => {\\n                              setRegionValue(newValue)\\n                              customFilterAction(lookerContent[0].id,\\n                                lookerContent[0].filters[index].filterName,\\n                                (newValue) ? newValue : '')\\n                            }}\\n                            aria-label=\\\"region\\\"\\n                          >\\n                            {apiContent[index].map((region, index) => {\\n                              return (\\n                                <ToggleButton\\n                                  key={validIdHelper(`${type}-FilterBar-ToggleButton-${lookerContent[0].id}-${index}`)}\\n                                  value={region.label} aria-label={region.label}>\\n                                  {region.label}\\n                                </ToggleButton>\\n                              )\\n                            })}\\n                          </ToggleButtonGroup>\\n                        </Grid>\\n                      </ApiHighlight>\\n                      : 'ooooopppp')\\n              })}\\n              <Grid item sm={1} />\\n              {lookerContent[0].dynamicFieldLookUp ?\\n                <EmbedHighlight classes={classes} >\\n                  <Grid item sm={5}>\\n                    <ToggleButtonGroup\\n                      value={toggleValue}\\n                      exclusive\\n                      onChange={handleToggle}\\n                      aria-label=\\\"text alignment\\\"\\n                    >\\n                      {Object.keys(lookerContent[0].dynamicFieldLookUp).map(key => {\\n                        return (\\n                          <ToggleButton\\n                            key={validIdHelper(`dynamicDashToggle-${key}`)}\\n                            value={key} aria-label=\\\"left aligned\\\">\\n                            {key}\\n                          </ToggleButton>\\n                        )\\n                      })}\\n                    </ToggleButtonGroup>\\n                  </Grid>\\n                </EmbedHighlight>\\n                : ''\\n              }\\n            </Grid> : ''\\n        }\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel >\\n  )\\n}\";","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst { validIdHelper, prettifyString } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 800,\n    maxHeight: 450,\n    overflow: 'scroll',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  table: {\n    maxHeight: 310\n  },\n  card: {\n    minWidth: 275,\n    minHeight: '10rem',\n    boxShadow: 'none'\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\nfunction getModalStyle() {\n  const top = 10 //+ rand();\n  const left = 50 //+ rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${left}%, -${top}%)`,\n  };\n}\n\nexport default function ModalTable(props) {\n  // console.log('ModalTable')\n  // console.log('props', props)\n\n  const classes = useStyles();\n  const { open, onClose, modalContent } = props;\n  const [modalStyle] = React.useState(getModalStyle);\n\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n\n      <div style={modalStyle} className={classes.paper}>\n        <h2 id=\"simple-modal-title\">{modalContent.title}</h2>\n        {modalContent.body ?\n          <TableContainer component={Paper} className={classes.table}>\n            <Table stickyHeader className={classes.table} size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  {Object.keys(modalContent.body[0]).map((key, index) => (\n                    <TableCell align=\"right\"\n                      key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n                      id={validIdHelper(key + '-TableHead-TableCell-' + index)}>\n                      {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}</TableCell>\n\n\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {modalContent.body.map((item, index) => (\n\n                  <TableRow\n                    key={validIdHelper('TableRow-' + index)}\n                    id={validIdHelper('TableRow-' + index)} >\n                    {\n                      Object.keys(item).map(key => (\n                        <TableCell align=\"right\"\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}>\n                          {\n                            modalContent.body[index][key] ?\n                              modalContent.body[index][key].rendered ?\n                                modalContent.body[index][key].rendered :\n                                modalContent.body[index][key].value ?\n                                  modalContent.body[index][key].value :\n                                  typeof modalContent.body[index][key] === 'number' ?\n                                    (Math.round(modalContent.body[index][key] * 100) / 100)//.toLocaleString()\n                                    :\n                                    modalContent.body[index][key] //.toLocaleString() \n                              :\n                              ''\n                          }\n                        </TableCell>\n                      ))\n                    }\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer >\n          :\n\n          <Card className={`${classes.card} ${classes.flexCentered}`}>\n            <CircularProgress className={classes.circularProgress} />\n          </Card>}\n\n      </div >\n    </Modal >\n  )\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    // position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  height500: {\n    height: 500\n  },\n  height600: {\n    height: 600\n  },\n  height700: {\n    height: 700\n  },\n  height800: {\n    height: 800\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  skeleton: {\n    height: 160,\n    width: '100%'\n  },\n  padding30: {\n    padding: 30\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  }\n}));","import _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, InputLabel, MenuItem,\n  FormControl, Select, Modal\n} from '@material-ui/core'\nimport { Skeleton } from '@material-ui/lab';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ModalTable from '../../Material/ModalTable';\nimport { ResponsiveCalendar } from '@nivo/calendar'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./CustomVis.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport { ApiHighlight } from '../../Highlights/Highlight';\n\n//new date pickers\nimport { format, endOfDay, addDays } from 'date-fns';\n// import React from 'react';\n// import Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\n//start of Custom Viz Calendar Component\nexport default function CustomVis(props) {\n  // console.log('CustomVis')\n  //initialize state using hooks\n  const [value, setValue] = useState(0);\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [category, setCategory] = useState('All')\n  const [desiredField, setDesiredField] = useState('')\n  const [apiContent, setApiContent] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [modalContent, setModalContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n\n  const { togglePayWallModal, show, codeShow } = useContext(AppContext)\n\n  //declare constants\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\n  // const codeTab = {\n  //   type: 'code flyout', label: 'Code', id: 'codeFlyout',\n  //   lookerContent, lookerUser, clientSideCode, serverSideCode\n  // }\n  // const tabContent = [...lookerContent, codeTab]\n  // const demoComponentType = type || 'code flyout';\n\n  //handle opening of modal for advanced and premium users\n  const handleModalOpen = async ({ day }) => {\n    let originalInlineQueryCopy = JSON.parse(JSON.stringify(lookerContent[0].inlineQuery));\n    originalInlineQueryCopy.filters = {\n      ...originalInlineQueryCopy.filters,\n      [originalInlineQueryCopy.fields[0]]: day,\n      [originalInlineQueryCopy.fields[1]]: category === \"All\" ? '' : category\n    }\n    originalInlineQueryCopy.total = true;\n    originalInlineQueryCopy.limit = \"25\";\n\n    setOpen(true);\n    let lookerResponse = await fetch('/runinlinequery/' + encodeURIComponent(JSON.stringify(originalInlineQueryCopy)) + '/json', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerResponseData = await lookerResponse.json();\n    let modalObj = {\n      \"title\": `Detail View for ${day}`,\n      \"body\": lookerResponseData.queryResults\n    }\n    setModalContent(modalObj);\n  };\n\n  //handle modal close\n  const handleModalClose = () => {\n    setModalContent({})\n    setOpen(false);\n  };\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  const handleFromDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setFromDate(newValueAsDate);\n    }\n  }\n  const handleToDate = newValue => {\n    let validDate = Date.parse(newValue);\n    if (validDate > 0) {\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\n      setToDate(newValueAsDate);\n    }\n  }\n  const handleCategory = newValue => {\n    setCategory(newValue)\n  }\n  const handleDesiredField = newValue => {\n    setDesiredField(newValue)\n  }\n\n  //format response from initial api call based on LookerContent array\n  //to match format required by Nivo Calendar component\n  let filterData = [];\n  if (apiContent.queryResults && apiContent.queryResults) {\n    //filtering for fromDate, toDate and category\n    filterData = _.filter(apiContent.queryResults, (row) => {\n      return (row[apiContent.inlineQuery.fields[0]] >= fromDate\n        && row[apiContent.inlineQuery.fields[0]] < toDate\n        && (category === 'All' ? true : row[apiContent.inlineQuery.fields[1]] === category)\n      )\n    })\n    //converting filterDAta to desired format for vis\n    filterData = filterData.map(item => {\n      return {\n        'day': item[apiContent.inlineQuery.fields[0]],\n        'category': item[apiContent.inlineQuery.fields[1]],\n        'value': item[desiredField]\n      }\n    })\n\n    //special exception for category all\n    //need to reduce array by day across categories\n    //destructuing in reduce of value would not work for dynamic var\n    if (category === 'All') {\n      //create array of all unique dates\n      const uniqueDates = [...new Set(filterData.map(item => item.day))];\n      let filteredAndReducedForAll = []\n      //iterate over unique date\n      uniqueDates.map(uniqueDate => {\n        //filter filterData for current unique date\n        let value = _.filter(filterData, row => {\n          return row.day === uniqueDate\n        }).reduce((acc, { value }) => acc + value, 0)\n        let thisObj = {\n          day: uniqueDate,\n          value: value,\n          category: 'All'\n        }\n        filteredAndReducedForAll.push(thisObj)\n\n      })\n      filterData = filteredAndReducedForAll;\n    }\n  }\n\n  /**\n   * listen for lookerContent and call \n   * performLookerApiCalls and setSampleCode\n  */\n  useEffect(() => {\n    if (lookerContent.length) {\n      setTimeout(() => performLookerApiCalls(lookerContent), 100);\n      setDesiredField(lookerContent[0].desiredFields[0])\n      setClientSideCode(rawSampleCode)\n    }\n  }, [lookerContent, lookerUser])\n\n  /** \n   * What this function does:\n   * iterate over Looker Content array referenced above and\n   * calls specific endpoints and methods available from Looker Node SDK\n   * and embed SDK to create the experience on this page\n   */\n  const performLookerApiCalls = function (lookerContent) {\n    setApiContent([]); //set to empty array to show progress bar and skeleton\n    lookerContent.map(async lookerContent => {\n      let inlineQuery = lookerContent.inlineQuery;\n      inlineQuery.filters = {\n        // ...inlineQuery.filters,\n        // [Object.keys(inlineQuery.filters)[0]]: lookerUser.user_attributes.time_horizon,\n        [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\n      };\n      let stringifiedQuery = encodeURIComponent(JSON.stringify(inlineQuery));\n      // console.log('stringifiedQuery', stringifiedQuery)\n      let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      let lookerResponseData = await lookerResponse.json();\n      // console.log('lookerResponseData', lookerResponseData)\n      lookerResponseData.queryResults = lookerResponseData.queryResults.filter(item => {\n        return item[inlineQuery.fields[0]]\n      })\n      let uniqueCategories = ['All'];\n      for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\n        if (uniqueCategories.indexOf(lookerResponseData.queryResults[i][inlineQuery.fields[1]]) === -1) {\n          uniqueCategories.push(lookerResponseData.queryResults[i][inlineQuery.fields[1]])\n        }\n      }\n      lookerResponseData.inlineQuery = inlineQuery;\n      lookerResponseData.uniqueCategories = uniqueCategories;\n      setFromDate(lookerResponseData.queryResults[lookerResponseData.queryResults.length - 1][lookerResponseData.inlineQuery.fields[0]]);\n      setToDate(incrementDate(lookerResponseData.queryResults[0][lookerResponseData.inlineQuery.fields[0]], 1));\n      setApiContent(lookerResponseData)\n      if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\n    })\n  }\n\n  let redToBlueColorScale = ['#0302FC', '#2A00D5', '#63009E', '#A1015D', '#D80027', '#FE0002'];\n  let yellowToGreenColorScale = ['#FEFE69', '#DDF969', '#A9F36A', '#A1015D', '#78EC6C', '#57E86B'];\n  let nivoColorScale = ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']\n  let googleColorScale = ['#4595EC', '#F3A759', '#E24E3A', '#65AB5A'];\n\n  return (\n    <div className={`${classes.root} ${classes.minHeight680} ${classes.padding30}  demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={`${classes.root} ${classes.positionRelative}`}>\n\n          {!apiContent.queryResults ?\n            <Skeleton variant=\"rect\" animation=\"wave\" className={classes.skeleton} />\n            :\n            <FilterBar {...props}\n              classes={classes}\n              apiContent={apiContent}\n              fromDate={fromDate}\n              toDate={toDate}\n              category={category}\n              desiredField={desiredField}\n              handleFromDate={handleFromDate}\n              handleToDate={handleToDate}\n              handleCategory={handleCategory}\n              handleDesiredField={handleDesiredField}\n            />\n          }\n\n\n          {!apiContent.queryResults ?\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered}`} elevation={0}>\n                <CircularProgress className={classes.circularProgress} />\n              </Card>\n            </Grid>\n\n            : apiContent.queryResults && apiContent.queryResults.length ?\n\n              <Box\n                className={``}>\n                <Grid container>\n                  {codeShow ? <Grid item sm={6}\n                    className={`${classes.positionTopRight}`}\n                  >\n                    <CodeFlyout {...props}\n                      classes={classes}\n                      lookerUser={lookerUser} />\n                  </Grid> : ''}\n                  <Divider className={classes.divider} />\n                  <Grid item sm={12} className={classes.height600}>\n\n                    <Box className={classes.w100} mt={2}>\n\n                      <ApiHighlight height={400} classes={classes}>\n                        <ResponsiveCalendar\n                          data={filterData}\n                          align=\"top\"\n                          from={incrementDate(fromDate, 1)}\n                          to={incrementDate(toDate, 1)}\n                          emptyColor=\"#eeeeee\"\n                          colors={desiredField === lookerContent[0].desiredFields[0] ? googleColorScale : nivoColorScale}\n                          yearSpacing={40}\n                          monthBorderColor=\"#ffffff\"\n                          dayBorderWidth={2}\n                          dayBorderColor=\"#ffffff\"\n                          margin={{ bottom: 40, left: 40 }}\n                          legends={[\n                            {\n                              anchor: 'bottom-right',\n                              direction: 'row',\n                              translateY: 36,\n                              itemCount: 4,\n                              itemWidth: 42,\n                              itemHeight: 36,\n                              itemsSpacing: 14,\n                              itemDirection: 'right-to-left'\n                            }\n                          ]}\n                          onClick={(day, event) => {\n                            if (!day.value) {\n                            } else if (lookerUser.user_attributes.permission_level === 'basic') {\n                              togglePayWallModal({\n                                'show': true,\n                                'permissionNeeded': 'see_drill_overlay'\n                              });\n                            } else {\n                              handleModalOpen(day)\n                              event.stopPropagation();\n                            }\n                          }}\n                        />\n                      </ApiHighlight>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Box> :\n              ''\n          }\n        </div>\n      </Grid >\n      {\n        open ?\n          <ModalTable\n            {...props}\n            open={open}\n            onClose={handleModalClose}\n            classes={classes}\n            modalContent={modalContent}\n          />\n\n          : ''\n      }\n    </div >\n  )\n}\n//Filter Bar code\nfunction FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\n    apiContent, fromDate, toDate, category, desiredField, handleFromDate, handleToDate, handleCategory, handleDesiredField } = props;\n\n  const [expanded, setExpanded] = useState(true);\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  // console.log('FilterBar')\n  // console.log('fromDate', fromDate)\n  // console.log('toDate', toDate)\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100} elevation={0}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={classes.heading}>Filter Data</Typography>\n\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          {apiContent.queryResults ?\n            <>\n              <Grid item sm={3}>\n\n                <ApiHighlight classes={classes}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                    >\n                      Metric</InputLabel>\n                    <Select\n                      labelId={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-Select')}`}\n                      value={desiredField}\n                      onChange={(event) => handleDesiredField(event.target.value)}\n                    >\n                      {lookerContent[0].desiredFields.map((item, index) => (\n\n                        <MenuItem\n                          id={validIdHelper(`${item}-${index}`)}\n                          key={validIdHelper(`${item}-${index}`)}\n                          value={item}\n                        >{item.substring(item.lastIndexOf(\".\") + 1, item.length).split(\"_\").map(item => item.charAt(0).toUpperCase() + item.substring(1)).join(\" \")}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </ApiHighlight>\n              </Grid>\n              <Grid item sm={3}>\n                <ApiHighlight classes={classes}>\n                  <FormControl className={classes.formControl}>\n                    <InputLabel\n                      id={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                    >\n                      Category</InputLabel>\n                    <Select\n                      labelId={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\n                      id={`${validIdHelper(type + '-FilterBar-Category-Select')}`}\n                      value={category}\n                      onChange={(event) => handleCategory(event.target.value)}\n                    >\n                      {apiContent.uniqueCategories.map((item, index) => (\n\n                        <MenuItem\n                          id={validIdHelper(`${item}-${index}`)}\n                          key={validIdHelper(`${item}-${index}`)}\n                          value={item}>{item}</MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </ApiHighlight>\n              </Grid>\n\n              <Grid item sm={3}>\n\n                <ApiHighlight classes={classes}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant=\"inline\"\n                      format=\"MM/dd/yyyy\"\n                      margin=\"normal\"\n                      id=\"fromDate\"\n                      label=\"From date\"\n                      value={fromDate}\n                      onChange={handleFromDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      minDate={fromDate}\n                      maxDate={toDate}\n                    />\n                  </MuiPickersUtilsProvider>\n                </ApiHighlight>\n              </Grid>\n              <Grid item sm={3}>\n                <ApiHighlight classes={classes}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant=\"inline\"\n                      format=\"MM/dd/yyyy\"\n                      margin=\"normal\"\n                      id=\"toDate\"\n                      label=\"To date\"\n                      value={toDate}\n                      onChange={handleToDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                      minDate={fromDate}\n                      maxDate={toDate}\n                    />\n                  </MuiPickersUtilsProvider>\n                </ApiHighlight>\n              </Grid>\n            </>\n            : ''}\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel >\n  )\n}\n\nfunction incrementDate(dateInput, increment) {\n  var dateFormatTotime = new Date(dateInput);\n  var increasedDate = new Date(dateFormatTotime.getTime() + (increment * 86400000));\n  return increasedDate.toISOString().split('T')[0];\n}","export default \"import _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, CircularProgress, Card, TextField,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider, InputLabel, MenuItem,\\n  FormControl, Select, Modal\\n} from '@material-ui/core'\\nimport { Skeleton } from '@material-ui/lab';\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\nimport ModalTable from '../../Material/ModalTable';\\nimport { ResponsiveCalendar } from '@nivo/calendar'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./CustomVis.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport { ApiHighlight } from '../../Highlights/Highlight';\\n\\n//new date pickers\\nimport { format, endOfDay, addDays } from 'date-fns';\\n// import React from 'react';\\n// import Grid from '@material-ui/core/Grid';\\nimport DateFnsUtils from '@date-io/date-fns';\\nimport {\\n  MuiPickersUtilsProvider,\\n  KeyboardTimePicker,\\n  KeyboardDatePicker,\\n} from '@material-ui/pickers';\\n\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of Custom Viz Calendar Component\\nexport default function CustomVis(props) {\\n  // console.log('CustomVis')\\n  //initialize state using hooks\\n  const [value, setValue] = useState(0);\\n  const [fromDate, setFromDate] = useState('');\\n  const [toDate, setToDate] = useState('');\\n  const [category, setCategory] = useState('All')\\n  const [desiredField, setDesiredField] = useState('')\\n  const [apiContent, setApiContent] = useState([]);\\n  const [open, setOpen] = React.useState(false);\\n  const [modalContent, setModalContent] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n\\n  const { togglePayWallModal, show, codeShow } = useContext(AppContext)\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\\n  // const codeTab = {\\n  //   type: 'code flyout', label: 'Code', id: 'codeFlyout',\\n  //   lookerContent, lookerUser, clientSideCode, serverSideCode\\n  // }\\n  // const tabContent = [...lookerContent, codeTab]\\n  // const demoComponentType = type || 'code flyout';\\n\\n  //handle opening of modal for advanced and premium users\\n  const handleModalOpen = async ({ day }) => {\\n    let originalInlineQueryCopy = JSON.parse(JSON.stringify(lookerContent[0].inlineQuery));\\n    originalInlineQueryCopy.filters = {\\n      ...originalInlineQueryCopy.filters,\\n      [originalInlineQueryCopy.fields[0]]: day,\\n      [originalInlineQueryCopy.fields[1]]: category === \\\"All\\\" ? '' : category\\n    }\\n    originalInlineQueryCopy.total = true;\\n    originalInlineQueryCopy.limit = \\\"25\\\";\\n\\n    setOpen(true);\\n    let lookerResponse = await fetch('/runinlinequery/' + encodeURIComponent(JSON.stringify(originalInlineQueryCopy)) + '/json', {\\n      method: 'GET',\\n      headers: {\\n        Accept: 'application/json',\\n        'Content-Type': 'application/json'\\n      }\\n    })\\n    let lookerResponseData = await lookerResponse.json();\\n    let modalObj = {\\n      \\\"title\\\": `Detail View for ${day}`,\\n      \\\"body\\\": lookerResponseData.queryResults\\n    }\\n    setModalContent(modalObj);\\n  };\\n\\n  //handle modal close\\n  const handleModalClose = () => {\\n    setModalContent({})\\n    setOpen(false);\\n  };\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  const handleFromDate = newValue => {\\n    let validDate = Date.parse(newValue);\\n    if (validDate > 0) {\\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\\n      setFromDate(newValueAsDate);\\n    }\\n  }\\n  const handleToDate = newValue => {\\n    let validDate = Date.parse(newValue);\\n    if (validDate > 0) {\\n      let newValueAsDate = format(addDays(new Date(newValue), 1), 'yyyy-MM-dd');\\n      setToDate(newValueAsDate);\\n    }\\n  }\\n  const handleCategory = newValue => {\\n    setCategory(newValue)\\n  }\\n  const handleDesiredField = newValue => {\\n    setDesiredField(newValue)\\n  }\\n\\n  //format response from initial api call based on LookerContent array\\n  //to match format required by Nivo Calendar component\\n  let filterData = [];\\n  if (apiContent.queryResults && apiContent.queryResults) {\\n    //filtering for fromDate, toDate and category\\n    filterData = _.filter(apiContent.queryResults, (row) => {\\n      return (row[apiContent.inlineQuery.fields[0]] >= fromDate\\n        && row[apiContent.inlineQuery.fields[0]] < toDate\\n        && (category === 'All' ? true : row[apiContent.inlineQuery.fields[1]] === category)\\n      )\\n    })\\n    //converting filterDAta to desired format for vis\\n    filterData = filterData.map(item => {\\n      return {\\n        'day': item[apiContent.inlineQuery.fields[0]],\\n        'category': item[apiContent.inlineQuery.fields[1]],\\n        'value': item[desiredField]\\n      }\\n    })\\n\\n    //special exception for category all\\n    //need to reduce array by day across categories\\n    //destructuing in reduce of value would not work for dynamic var\\n    if (category === 'All') {\\n      //create array of all unique dates\\n      const uniqueDates = [...new Set(filterData.map(item => item.day))];\\n      let filteredAndReducedForAll = []\\n      //iterate over unique date\\n      uniqueDates.map(uniqueDate => {\\n        //filter filterData for current unique date\\n        let value = _.filter(filterData, row => {\\n          return row.day === uniqueDate\\n        }).reduce((acc, { value }) => acc + value, 0)\\n        let thisObj = {\\n          day: uniqueDate,\\n          value: value,\\n          category: 'All'\\n        }\\n        filteredAndReducedForAll.push(thisObj)\\n\\n      })\\n      filterData = filteredAndReducedForAll;\\n    }\\n  }\\n\\n  /**\\n   * listen for lookerContent and call \\n   * performLookerApiCalls and setSampleCode\\n  */\\n  useEffect(() => {\\n    if (lookerContent.length) {\\n      setTimeout(() => performLookerApiCalls(lookerContent), 100);\\n      setDesiredField(lookerContent[0].desiredFields[0])\\n      setClientSideCode(rawSampleCode)\\n    }\\n  }, [lookerContent, lookerUser])\\n\\n  /** \\n   * What this function does:\\n   * iterate over Looker Content array referenced above and\\n   * calls specific endpoints and methods available from Looker Node SDK\\n   * and embed SDK to create the experience on this page\\n   */\\n  const performLookerApiCalls = function (lookerContent) {\\n    setApiContent([]); //set to empty array to show progress bar and skeleton\\n    lookerContent.map(async lookerContent => {\\n      let inlineQuery = lookerContent.inlineQuery;\\n      inlineQuery.filters = {\\n        // ...inlineQuery.filters,\\n        // [Object.keys(inlineQuery.filters)[0]]: lookerUser.user_attributes.time_horizon,\\n        [lookerContent.desiredFilterName]: lookerUser.user_attributes.brand\\n      };\\n      let stringifiedQuery = encodeURIComponent(JSON.stringify(inlineQuery));\\n      // console.log('stringifiedQuery', stringifiedQuery)\\n      let lookerResponse = await fetch(`/runinlinequery/${stringifiedQuery}/${lookerContent.resultFormat}`, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      })\\n      let lookerResponseData = await lookerResponse.json();\\n      // console.log('lookerResponseData', lookerResponseData)\\n      lookerResponseData.queryResults = lookerResponseData.queryResults.filter(item => {\\n        return item[inlineQuery.fields[0]]\\n      })\\n      let uniqueCategories = ['All'];\\n      for (let i = 0; i < lookerResponseData.queryResults.length; i++) {\\n        if (uniqueCategories.indexOf(lookerResponseData.queryResults[i][inlineQuery.fields[1]]) === -1) {\\n          uniqueCategories.push(lookerResponseData.queryResults[i][inlineQuery.fields[1]])\\n        }\\n      }\\n      lookerResponseData.inlineQuery = inlineQuery;\\n      lookerResponseData.uniqueCategories = uniqueCategories;\\n      setFromDate(lookerResponseData.queryResults[lookerResponseData.queryResults.length - 1][lookerResponseData.inlineQuery.fields[0]]);\\n      setToDate(incrementDate(lookerResponseData.queryResults[0][lookerResponseData.inlineQuery.fields[0]], 1));\\n      setApiContent(lookerResponseData)\\n      if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\\n    })\\n  }\\n\\n  let redToBlueColorScale = ['#0302FC', '#2A00D5', '#63009E', '#A1015D', '#D80027', '#FE0002'];\\n  let yellowToGreenColorScale = ['#FEFE69', '#DDF969', '#A9F36A', '#A1015D', '#78EC6C', '#57E86B'];\\n  let nivoColorScale = ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']\\n  let googleColorScale = ['#4595EC', '#F3A759', '#E24E3A', '#65AB5A'];\\n\\n  return (\\n    <div className={`${classes.root} ${classes.minHeight680} ${classes.padding30}  demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={`${classes.root} ${classes.positionRelative}`}>\\n\\n          {!apiContent.queryResults ?\\n            <Skeleton variant=\\\"rect\\\" animation=\\\"wave\\\" className={classes.skeleton} />\\n            :\\n            <FilterBar {...props}\\n              classes={classes}\\n              apiContent={apiContent}\\n              fromDate={fromDate}\\n              toDate={toDate}\\n              category={category}\\n              desiredField={desiredField}\\n              handleFromDate={handleFromDate}\\n              handleToDate={handleToDate}\\n              handleCategory={handleCategory}\\n              handleDesiredField={handleDesiredField}\\n            />\\n          }\\n\\n\\n          {!apiContent.queryResults ?\\n            <Grid item sm={12} >\\n              <Card className={`${classes.card} ${classes.flexCentered}`} elevation={0}>\\n                <CircularProgress className={classes.circularProgress} />\\n              </Card>\\n            </Grid>\\n\\n            : apiContent.queryResults && apiContent.queryResults.length ?\\n\\n              <Box\\n                className={``}>\\n                <Grid container>\\n                  {codeShow ? <Grid item sm={6}\\n                    className={`${classes.positionTopRight}`}\\n                  >\\n                    <CodeFlyout {...props}\\n                      classes={classes}\\n                      lookerUser={lookerUser} />\\n                  </Grid> : ''}\\n                  <Divider className={classes.divider} />\\n                  <Grid item sm={12} className={classes.height600}>\\n\\n                    <Box className={classes.w100} mt={2}>\\n\\n                      <ApiHighlight height={400} classes={classes}>\\n                        <ResponsiveCalendar\\n                          data={filterData}\\n                          align=\\\"top\\\"\\n                          from={incrementDate(fromDate, 1)}\\n                          to={incrementDate(toDate, 1)}\\n                          emptyColor=\\\"#eeeeee\\\"\\n                          colors={desiredField === lookerContent[0].desiredFields[0] ? googleColorScale : nivoColorScale}\\n                          yearSpacing={40}\\n                          monthBorderColor=\\\"#ffffff\\\"\\n                          dayBorderWidth={2}\\n                          dayBorderColor=\\\"#ffffff\\\"\\n                          margin={{ bottom: 40, left: 40 }}\\n                          legends={[\\n                            {\\n                              anchor: 'bottom-right',\\n                              direction: 'row',\\n                              translateY: 36,\\n                              itemCount: 4,\\n                              itemWidth: 42,\\n                              itemHeight: 36,\\n                              itemsSpacing: 14,\\n                              itemDirection: 'right-to-left'\\n                            }\\n                          ]}\\n                          onClick={(day, event) => {\\n                            if (!day.value) {\\n                            } else if (lookerUser.user_attributes.permission_level === 'basic') {\\n                              togglePayWallModal({\\n                                'show': true,\\n                                'permissionNeeded': 'see_drill_overlay'\\n                              });\\n                            } else {\\n                              handleModalOpen(day)\\n                              event.stopPropagation();\\n                            }\\n                          }}\\n                        />\\n                      </ApiHighlight>\\n                    </Box>\\n                  </Grid>\\n                </Grid>\\n              </Box> :\\n              ''\\n          }\\n        </div>\\n      </Grid >\\n      {\\n        open ?\\n          <ModalTable\\n            {...props}\\n            open={open}\\n            onClose={handleModalClose}\\n            classes={classes}\\n            modalContent={modalContent}\\n          />\\n\\n          : ''\\n      }\\n    </div >\\n  )\\n}\\n//Filter Bar code\\nfunction FilterBar(props) {\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, classes,\\n    apiContent, fromDate, toDate, category, desiredField, handleFromDate, handleToDate, handleCategory, handleDesiredField } = props;\\n\\n  const [expanded, setExpanded] = useState(true);\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n\\n  // console.log('FilterBar')\\n  // console.log('fromDate', fromDate)\\n  // console.log('toDate', toDate)\\n\\n  return (\\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} className={classes.w100} elevation={0}>\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMoreIcon />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <Typography className={classes.heading}>Filter Data</Typography>\\n\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        <Grid container spacing={3}>\\n          {apiContent.queryResults ?\\n            <>\\n              <Grid item sm={3}>\\n\\n                <ApiHighlight classes={classes}>\\n                  <FormControl className={classes.formControl}>\\n                    <InputLabel\\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\\n                    >\\n                      Metric</InputLabel>\\n                    <Select\\n                      labelId={`${validIdHelper(type + '-FilterBar-DataPropery-SelectLabel')}`}\\n                      id={`${validIdHelper(type + '-FilterBar-DataPropery-Select')}`}\\n                      value={desiredField}\\n                      onChange={(event) => handleDesiredField(event.target.value)}\\n                    >\\n                      {lookerContent[0].desiredFields.map((item, index) => (\\n\\n                        <MenuItem\\n                          id={validIdHelper(`${item}-${index}`)}\\n                          key={validIdHelper(`${item}-${index}`)}\\n                          value={item}\\n                        >{item.substring(item.lastIndexOf(\\\".\\\") + 1, item.length).split(\\\"_\\\").map(item => item.charAt(0).toUpperCase() + item.substring(1)).join(\\\" \\\")}</MenuItem>\\n                      ))}\\n                    </Select>\\n                  </FormControl>\\n                </ApiHighlight>\\n              </Grid>\\n              <Grid item sm={3}>\\n                <ApiHighlight classes={classes}>\\n                  <FormControl className={classes.formControl}>\\n                    <InputLabel\\n                      id={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\\n                    >\\n                      Category</InputLabel>\\n                    <Select\\n                      labelId={`${validIdHelper(type + '-FilterBar-Category-SelectLabel')}`}\\n                      id={`${validIdHelper(type + '-FilterBar-Category-Select')}`}\\n                      value={category}\\n                      onChange={(event) => handleCategory(event.target.value)}\\n                    >\\n                      {apiContent.uniqueCategories.map((item, index) => (\\n\\n                        <MenuItem\\n                          id={validIdHelper(`${item}-${index}`)}\\n                          key={validIdHelper(`${item}-${index}`)}\\n                          value={item}>{item}</MenuItem>\\n                      ))}\\n                    </Select>\\n                  </FormControl>\\n                </ApiHighlight>\\n              </Grid>\\n\\n              <Grid item sm={3}>\\n\\n                <ApiHighlight classes={classes}>\\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\\n                    <KeyboardDatePicker\\n                      disableToolbar\\n                      variant=\\\"inline\\\"\\n                      format=\\\"MM/dd/yyyy\\\"\\n                      margin=\\\"normal\\\"\\n                      id=\\\"fromDate\\\"\\n                      label=\\\"From date\\\"\\n                      value={fromDate}\\n                      onChange={handleFromDate}\\n                      KeyboardButtonProps={{\\n                        'aria-label': 'change date',\\n                      }}\\n                      minDate={fromDate}\\n                      maxDate={toDate}\\n                    />\\n                  </MuiPickersUtilsProvider>\\n                </ApiHighlight>\\n              </Grid>\\n              <Grid item sm={3}>\\n                <ApiHighlight classes={classes}>\\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\\n                    <KeyboardDatePicker\\n                      disableToolbar\\n                      variant=\\\"inline\\\"\\n                      format=\\\"MM/dd/yyyy\\\"\\n                      margin=\\\"normal\\\"\\n                      id=\\\"toDate\\\"\\n                      label=\\\"To date\\\"\\n                      value={toDate}\\n                      onChange={handleToDate}\\n                      KeyboardButtonProps={{\\n                        'aria-label': 'change date',\\n                      }}\\n                      minDate={fromDate}\\n                      maxDate={toDate}\\n                    />\\n                  </MuiPickersUtilsProvider>\\n                </ApiHighlight>\\n              </Grid>\\n            </>\\n            : ''}\\n        </Grid>\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel >\\n  )\\n}\\n\\nfunction incrementDate(dateInput, increment) {\\n  var dateFormatTotime = new Date(dateInput);\\n  var increasedDate = new Date(dateFormatTotime.getTime() + (increment * 86400000));\\n  return increasedDate.toISOString().split('T')[0];\\n}\";","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 800,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  ml24: {\n    marginLeft: 24\n  },\n  parentHoverVisibility: {\n    '&:hover $childHoverVisibility': {\n      visibility: 'visible'\n    }\n\n  },\n  childHoverVisibility: {\n    visibility: 'hidden'\n  },\n  faSm: {\n    fontSize: '.75em'\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  padding30: {\n    padding: 30\n  },\n  mr12: {\n    marginRight: 12\n  },\n  ml12: {\n    marginLeft: 12\n  }\n}));","import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\n","import $ from 'jquery';\nimport _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button } from '@material-ui/core'\nimport { TreeView, TreeItem } from '@material-ui/lab';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./ReportBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { TabPanel, a11yProps } from './helpers.js';\nimport '../../Home.css';\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\nimport AppContext from '../../../AppContext';\nconst { validIdHelper } = require('../../../tools');\n\n//start of ReportBuilder Component\nexport default function ReportBuilder(props) {\n  //initialize state using hooks\n  const [iFrameExists, setIFrame] = useState(0);\n  const [apiContent, setApiContent] = useState([]);\n  const [exploreObj, setExploreObj] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n\n  const { togglePayWallModal, codeShow } = useContext(AppContext)\n\n  //declare constants\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\n\n  const demoComponentType = type;\n  const tabContent = [...lookerContent]\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n\n    if (newValue == 1 && lookerUser.user_attributes.permission_level != 'premium') {\n      // togglePayWallModal()\n\n      togglePayWallModal({\n        'show': true,\n        'permissionNeeded': 'explore'\n      });\n    } else {\n      handleTabChange(newValue);\n      setValue(newValue);\n      if (value > 0 && newValue === 0) performLookerApiCalls(lookerContent)\n    }\n  };\n\n  /**\n   * listen for lookerContent and call \n   * performLookerApiCalls and setSampleCode\n  */\n  useEffect(() => {\n    if (activeTabValue > value) {\n      setValue(activeTabValue)\n    }\n    setTimeout(() => performLookerApiCalls(lookerContent, 1), 100)\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser]);\n\n  const action = async (contentType, contentId, secondaryAction, qid, exploreId, newReportEmbedContainer) => {\n    let iFrameArray = $(\".embedContainer:visible > iframe\")\n\n    let matchingIndex = 0;\n    for (let i = 0; i < iFrameArray.length; i++) {\n      if (iFrameArray[i].classList.contains(contentType) && iFrameArray[i].classList.contains(contentId)) {\n        iFrameArray[i].classList.remove('dNone')\n        matchingIndex = i;\n      } else {\n        iFrameArray[i].classList.add('dNone')\n      }\n    }\n\n    if (secondaryAction === 'edit' || secondaryAction === 'explore') {\n      $(`#${newReportEmbedContainer}`).empty();\n\n      LookerEmbedSDK.createExploreWithId(exploreId)\n        .appendTo(`#${newReportEmbedContainer}`)\n        .withClassName('iframe')\n        .on('explore:state:changed', (event) => {\n        })\n        .withClassName(\"exploreIframe\")\n        .withParams({\n          qid: qid\n        })\n        .build()\n        .connect()\n        .then((explore) => {\n          setIFrame(1)\n          setExploreObj(explore)\n          LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n        })\n        .catch((error) => {\n          console.error('Connection error', error)\n        })\n      handleChange('edit', 1)\n    } else if (secondaryAction === 'delete') {\n      let lookerResponse = await fetch('/deletelook/' + contentId, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      if (lookerResponse.status === 200) {\n        performLookerApiCalls(lookerContent, 1)\n      }\n    }\n  }\n\n  const performLookerApiCalls = function (lookerContent, animateLoad) {\n    if (animateLoad) {\n      handleChange('refresh', 0)\n      setIFrame(0)\n      setApiContent([])\n    }\n\n    lookerContent.map(async lookerContent => {\n      if (lookerContent.type === 'folder') {\n        let lookerResponse = await fetch('/fetchfolder/' + lookerContent.id, {\n          method: 'GET',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          }\n        })\n\n        let lookerResponseData = await lookerResponse.json();\n        if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\n\n        let looksToUse = [...lookerResponseData.sharedFolder.looks];\n        if (lookerUser.user_attributes.permission_level === 'premium' &&\n          Object.keys(lookerResponseData.embeddedUserFolder).length) {\n          looksToUse = [\n            ...looksToUse, ...lookerResponseData.embeddedUserFolder.looks\n          ]\n\n        }\n        let dashboardsToUse = [...lookerResponseData.sharedFolder.dashboards]\n        let objToUse = {\n          looks: looksToUse,\n          dashboards: dashboardsToUse\n        }\n        let iFrameArray = $(`.embedContainer.${validIdHelper(demoComponentType)} > iframe`);\n        if (objToUse.looks.length) {\n          objToUse.looks.map((item, index) => {\n\n            let lookId = item.id;\n            let lookIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('look') && iFrameArray[i].classList.contains(lookId)) {\n                lookIsRendered = true;\n              }\n            }\n\n            if (!lookIsRendered) {\n              LookerEmbedSDK.createLookWithId(lookId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('look')\n                .withClassName(lookerResponseData.sharedFolder.looks.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName(index > 0 ? 'dNone' : 'oops')\n                .withClassName(lookId)\n                .build()\n                .connect()\n                .then((look) => {\n                  // setIFrame(1)\n                  LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n            if (index === objToUse.looks.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n\n        if (objToUse.dashboards.length) {\n          objToUse.dashboards.map((item, index) => {\n            let dashboardId = item.id\n            let dashboardIsRendered = false;\n            for (let i = 0; i < iFrameArray.length; i++) {\n              if (iFrameArray[i].classList.contains('dashboard') && iFrameArray[i].classList.contains(dashboardId)) {\n                dashboardIsRendered = true;\n              }\n            }\n            if (!dashboardIsRendered) {\n              LookerEmbedSDK.createDashboardWithId(dashboardId)\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n                .withClassName('iframe')\n                .withClassName('dashboard')\n                .withClassName(lookerResponseData.sharedFolder.dashboards.indexOf(item) > -1 ? \"shared\" : \"personal\")\n                .withClassName('dNone')\n                .withClassName(dashboardId)\n                .build()\n                .connect()\n                .then((dashboard) => {\n                  setTimeout(() => {\n                    // setIFrame(1)\n                  }, 1000)\n                  LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n                })\n                .catch((error) => {\n                  console.error('Connection error', error)\n                })\n            }\n\n\n            if (index === objToUse.dashboards.length - 1) {\n              setTimeout(() => setIFrame(1), 1000)\n            }\n          })\n        }\n        setApiContent(objToUse)\n      } else if (lookerContent.type === 'explore' && lookerUser.user_attributes.permission_level === 'premium') {\n        let exploreId = lookerContent.id;\n        $(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`)).html('')\n        LookerEmbedSDK.createExploreWithId(exploreId)\n          .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\n          .withClassName('iframe')\n          .on('explore:state:changed', (event) => {\n          })\n          .build()\n          .connect()\n          .then((explore) => {\n            setTimeout(() => setIFrame(1), 1000)\n            setExploreObj(exploreObj)\n            LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\n          })\n          .catch((error) => {\n            console.error('Connection error', error)\n          })\n      }\n    })\n  }\n\n\n  return (\n    <div className={`${classes.root} ${classes.padding30} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={classes.root}>\n          {iFrameExists ? '' :\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered}`} elevation={0}>\n                <CircularProgress className={classes.circularProgress} />\n              </Card>\n            </Grid>\n          }\n\n          {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\n          <Box className={iFrameExists ? `${classes.positionRelative}` : `${classes.hidden} ${classes.positionRelative}`}>\n            <AppBar position=\"static\" elevation={0}>\n              <Tabs\n                className={classes.tabs}\n                value={value}\n                onChange={handleChange}\n                aria-label=\"simple tabs example\">\n                {tabContent.map((item, index) => (\n                  <Tab\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\n                    label={index == 1 ?\n                      <div>\n\n                        {lookerUser.user_attributes.permission_level != 'premium' ?\n                          <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} /> : <Icon className={`fa fa-plus ${classes.faSm} ${classes.mr12}`} />}\n                        {item.label}\n                      </div> :\n                      item.label}\n                    className={value === 1 && index === 1 ? `${classes.hidden}` : index == 1 ? `${classes.mlAuto}` : ``}\n                    style={index === 1 ? {\n                      backgroundColor: '#5896E6',\n                      borderRadius: '4px',\n                      color: '#fff',\n                      opacity: '1.0'\n                    } : {}}\n                    {...a11yProps(index)} />\n                ))}\n              </Tabs>\n            </AppBar>\n\n            <Box className=\"tabPanelContainer\">\n              {codeShow ? <Grid item sm={6}\n                className={`${classes.positionTopRight}`}\n              >\n                <CodeFlyout {...props}\n                  classes={classes}\n                  lookerUser={lookerUser} />\n              </Grid> : ''}\n              {tabContent.map((tabContentItem, tabContentItemIndex) => (\n                <TabPanel\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + tabContentItemIndex)}`}\n                  value={value}\n                  index={tabContentItemIndex}>\n                  <Grid container>\n                    {\n                      tabContentItemIndex === 0\n                        ?\n                        <React.Fragment\n                          key={`${validIdHelper(demoComponentType + '-outerFragment-' + tabContentItemIndex)}`}>\n                          <Grid item sm={4} >\n                            <ApiHighlight height={500} classes={classes}>\n                              <TreeSideBar {...{\n                                togglePayWallModal,\n                                classes,\n                                demoComponentType,\n                                tabContent,\n                                tabContentItemIndex,\n                                action,\n                                apiContent,\n                                ...props\n                              }}\n                              />\n                            </ApiHighlight>\n                          </Grid>\n                          <Grid item sm={8} >\n                            <EmbedHighlight classes={classes}>\n                              <div\n                                className={`embedContainer ${validIdHelper(demoComponentType)}`}\n                                id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                                key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                              >\n                              </div>\n                            </EmbedHighlight>\n                          </Grid>\n                        </React.Fragment>\n                        :\n                        <Grid item sm={12} >\n                          <EmbedHighlight classes={classes}>\n                            <div\n                              className=\"embedContainer\"\n                              id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                              key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\n                            >\n                            </div>\n                          </EmbedHighlight>\n                        </Grid>\n                    }\n                  </Grid>\n                </TabPanel>\n              ))}\n            </Box>\n          </Box >\n        </div>\n      </Grid >\n    </div >\n  )\n}\n\n\nfunction TreeSideBar(props) {\n  // console.log('TreeSideBar')\n  const { staticContent, staticContent: { lookerContent }, classes, demoComponentType, tabContent, tabContentItemIndex, action, apiContent, lookerUser, togglePayWallModal } = props\n  const sharedFolderId = lookerContent[0].type === 'folder' ? lookerContent[0].id : '';\n  let treeCounter = 0;\n  const [selected, setSelected] = useState(2)\n  const expandedArr = Object.keys(apiContent).length ? [\"1\", \"\" + (2 + apiContent[Object.keys(apiContent)[0]].length)] : [];\n  const [expanded, setExpanded] = useState(expandedArr);\n\n  const handleToggle = (event, nodeIds) => {\n    setExpanded(nodeIds);\n  }\n\n  const handleSelect = (event, nodeIds) => {\n    setSelected(nodeIds);\n  };\n\n\n  useEffect(() => {\n    setExpanded(expandedArr)\n  }, [apiContent]);\n\n  return (\n    <TreeView\n      className={classes.tree}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n      expanded={expanded}\n      onNodeToggle={handleToggle}\n      onNodeSelect={handleSelect}\n    >\n      {apiContent ? Object.keys(apiContent).map((key, outerIndex) => (\n        <React.Fragment\n          key={`${validIdHelper(demoComponentType + '-innerFragment-' + outerIndex)}`}>\n          <TreeItem\n            key={`${validIdHelper(demoComponentType + '-outerTreeItem-' + outerIndex)}`}\n            nodeId={\"\" + (treeCounter += 1)}\n            // treecounter={treeCounter}\n            label={_.capitalize(key)}\n            icon={<Icon className={`fa fa-folder ${classes.icon}`} />}\n            disabled={apiContent[key].length ? false : true}\n          >\n            {\n              apiContent[key].length ?\n                apiContent[key].map((item, index) => (\n                  <TreeItem\n                    key={`${validIdHelper(demoComponentType + '-innerTreeItem-' + treeCounter)}`}\n                    nodeId={\"\" + (treeCounter += 1)}\n                    treecounter={treeCounter}\n                    selected={selected === treeCounter}\n                    className={selected === treeCounter ? `Mui-selected innerTreeItem` : `innerTreeItem`}\n                    contentid={item.id}\n                    label={item.folder_id === sharedFolderId &&\n                      key === 'looks' ?\n\n                      < div\n                        id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                        className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\n                        {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title}\n\n                        <Button\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\n                          size=\"small\"\n                          className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                          onClick={(event) => {\n                            if (lookerUser.user_attributes.permission_level === 'premium') {\n                              // setSelected(treeCounter);\n                              action(\n                                key.substring(0, key.length - 1),\n                                item.id,\n                                'explore',\n                                item.client_id,\n                                tabContent[tabContentItemIndex + 1].id,\n                                validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                              );\n                              event.stopPropagation();\n                            } else {\n                              // togglePayWallModal();\n\n                              togglePayWallModal({\n                                'show': true,\n                                'permissionNeeded': 'explore'\n                              });\n                            }\n                          }\n                          }\n                          color=\"default\"\n                        >\n                          {lookerUser.user_attributes.permission_level === 'premium' ? 'Explore' : <div> <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} />Explore</div>}\n                        </Button>\n                      </div>\n                      : key === 'looks' ?\n                        <div\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\n                          className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\n\n                          {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title}                          <Button\n                            id={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                            key={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\n                            size=\"small\"\n                            className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                            onClick={(event) => {\n                              if (lookerUser.user_attributes.permission_level === 'premium') {\n                                // setSelected(treeCounter);\n                                action(\n                                  key.substring(0, key.length - 1),\n                                  item.id,\n                                  'edit',\n                                  item.client_id,\n                                  tabContent[tabContentItemIndex + 1].id,\n                                  validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                );\n                                event.stopPropagation();\n                              } else {\n                                // togglePayWallModal();\n\n                                togglePayWallModal({\n                                  'show': true,\n                                  'permissionNeeded': 'explore'\n                                });\n                              }\n                            }\n                            }\n                            color=\"primary\"\n                          >\n                            Edit\n                                                                                            </Button>\n                          <Button\n                            id={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                            key={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\n                            size=\"small\"\n                            className={`${classes.ml12} ${classes.childHoverVisibility}`}\n                            onClick={(event) => {\n                              if (lookerUser.user_attributes.permission_level === 'premium') {\n                                // setSelected(treeCounter);\n                                action(\n                                  key.substring(0, key.length - 1),\n                                  item.id,\n                                  'delete',\n                                  item.client_id,\n                                  tabContent[tabContentItemIndex + 1].id,\n                                  validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\n                                );\n                                event.stopPropagation();\n                              } else {\n                                // togglePayWallModal();\n\n                                togglePayWallModal({\n                                  'show': true,\n                                  'permissionNeeded': 'explore'\n                                });\n                              }\n                            }\n                            }\n                            color=\"secondary\"\n                          >\n                            Delete\n                                                                                            </Button>\n                        </div>\n                        : item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title\n                    }\n                    onClick={() => {\n                      // setSelected(treeCounter)\n                      action(\n                        key.substring(0, key.length - 1), item.id)\n                    }} />\n\n                ))\n                :\n                ''\n            }\n          </TreeItem>\n\n        </React.Fragment>\n      )) : ''}\n    </TreeView>\n  )\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash'\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport { AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button } from '@material-ui/core'\\nimport { TreeView, TreeItem } from '@material-ui/lab';\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./ReportBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { TabPanel, a11yProps } from './helpers.js';\\nimport '../../Home.css';\\nimport { ApiHighlight, EmbedHighlight } from '../../Highlights/Highlight';\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper } = require('../../../tools');\\n\\n//start of ReportBuilder Component\\nexport default function ReportBuilder(props) {\\n  //initialize state using hooks\\n  const [iFrameExists, setIFrame] = useState(0);\\n  const [apiContent, setApiContent] = useState([]);\\n  const [exploreObj, setExploreObj] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n\\n  const { togglePayWallModal, codeShow } = useContext(AppContext)\\n\\n  //declare constants\\n  const classes = useStyles();\\n  const [value, setValue] = useState(0);\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser, lookerHost } = props;\\n\\n  const demoComponentType = type;\\n  const tabContent = [...lookerContent]\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n\\n    if (newValue == 1 && lookerUser.user_attributes.permission_level != 'premium') {\\n      // togglePayWallModal()\\n\\n      togglePayWallModal({\\n        'show': true,\\n        'permissionNeeded': 'explore'\\n      });\\n    } else {\\n      handleTabChange(newValue);\\n      setValue(newValue);\\n      if (value > 0 && newValue === 0) performLookerApiCalls(lookerContent)\\n    }\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * performLookerApiCalls and setSampleCode\\n  */\\n  useEffect(() => {\\n    if (activeTabValue > value) {\\n      setValue(activeTabValue)\\n    }\\n    setTimeout(() => performLookerApiCalls(lookerContent, 1), 100)\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent, lookerUser]);\\n\\n  const action = async (contentType, contentId, secondaryAction, qid, exploreId, newReportEmbedContainer) => {\\n    let iFrameArray = $(\\\".embedContainer:visible > iframe\\\")\\n\\n    let matchingIndex = 0;\\n    for (let i = 0; i < iFrameArray.length; i++) {\\n      if (iFrameArray[i].classList.contains(contentType) && iFrameArray[i].classList.contains(contentId)) {\\n        iFrameArray[i].classList.remove('dNone')\\n        matchingIndex = i;\\n      } else {\\n        iFrameArray[i].classList.add('dNone')\\n      }\\n    }\\n\\n    if (secondaryAction === 'edit' || secondaryAction === 'explore') {\\n      $(`#${newReportEmbedContainer}`).empty();\\n\\n      LookerEmbedSDK.createExploreWithId(exploreId)\\n        .appendTo(`#${newReportEmbedContainer}`)\\n        .withClassName('iframe')\\n        .on('explore:state:changed', (event) => {\\n        })\\n        .withClassName(\\\"exploreIframe\\\")\\n        .withParams({\\n          qid: qid\\n        })\\n        .build()\\n        .connect()\\n        .then((explore) => {\\n          setIFrame(1)\\n          setExploreObj(explore)\\n          LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n        })\\n        .catch((error) => {\\n          console.error('Connection error', error)\\n        })\\n      handleChange('edit', 1)\\n    } else if (secondaryAction === 'delete') {\\n      let lookerResponse = await fetch('/deletelook/' + contentId, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      });\\n      if (lookerResponse.status === 200) {\\n        performLookerApiCalls(lookerContent, 1)\\n      }\\n    }\\n  }\\n\\n  const performLookerApiCalls = function (lookerContent, animateLoad) {\\n    if (animateLoad) {\\n      handleChange('refresh', 0)\\n      setIFrame(0)\\n      setApiContent([])\\n    }\\n\\n    lookerContent.map(async lookerContent => {\\n      if (lookerContent.type === 'folder') {\\n        let lookerResponse = await fetch('/fetchfolder/' + lookerContent.id, {\\n          method: 'GET',\\n          headers: {\\n            Accept: 'application/json',\\n            'Content-Type': 'application/json'\\n          }\\n        })\\n\\n        let lookerResponseData = await lookerResponse.json();\\n        if (serverSideCode.length === 0) setServerSideCode(lookerResponseData.code);\\n\\n        let looksToUse = [...lookerResponseData.sharedFolder.looks];\\n        if (lookerUser.user_attributes.permission_level === 'premium' &&\\n          Object.keys(lookerResponseData.embeddedUserFolder).length) {\\n          looksToUse = [\\n            ...looksToUse, ...lookerResponseData.embeddedUserFolder.looks\\n          ]\\n\\n        }\\n        let dashboardsToUse = [...lookerResponseData.sharedFolder.dashboards]\\n        let objToUse = {\\n          looks: looksToUse,\\n          dashboards: dashboardsToUse\\n        }\\n        let iFrameArray = $(`.embedContainer.${validIdHelper(demoComponentType)} > iframe`);\\n        if (objToUse.looks.length) {\\n          objToUse.looks.map((item, index) => {\\n\\n            let lookId = item.id;\\n            let lookIsRendered = false;\\n            for (let i = 0; i < iFrameArray.length; i++) {\\n              if (iFrameArray[i].classList.contains('look') && iFrameArray[i].classList.contains(lookId)) {\\n                lookIsRendered = true;\\n              }\\n            }\\n\\n            if (!lookIsRendered) {\\n              LookerEmbedSDK.createLookWithId(lookId)\\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n                .withClassName('iframe')\\n                .withClassName('look')\\n                .withClassName(lookerResponseData.sharedFolder.looks.indexOf(item) > -1 ? \\\"shared\\\" : \\\"personal\\\")\\n                .withClassName(index > 0 ? 'dNone' : 'oops')\\n                .withClassName(lookId)\\n                .build()\\n                .connect()\\n                .then((look) => {\\n                  // setIFrame(1)\\n                  LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n                })\\n                .catch((error) => {\\n                  console.error('Connection error', error)\\n                })\\n            }\\n\\n            if (index === objToUse.looks.length - 1) {\\n              setTimeout(() => setIFrame(1), 1000)\\n            }\\n          })\\n        }\\n\\n        if (objToUse.dashboards.length) {\\n          objToUse.dashboards.map((item, index) => {\\n            let dashboardId = item.id\\n            let dashboardIsRendered = false;\\n            for (let i = 0; i < iFrameArray.length; i++) {\\n              if (iFrameArray[i].classList.contains('dashboard') && iFrameArray[i].classList.contains(dashboardId)) {\\n                dashboardIsRendered = true;\\n              }\\n            }\\n            if (!dashboardIsRendered) {\\n              LookerEmbedSDK.createDashboardWithId(dashboardId)\\n                .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n                .withClassName('iframe')\\n                .withClassName('dashboard')\\n                .withClassName(lookerResponseData.sharedFolder.dashboards.indexOf(item) > -1 ? \\\"shared\\\" : \\\"personal\\\")\\n                .withClassName('dNone')\\n                .withClassName(dashboardId)\\n                .build()\\n                .connect()\\n                .then((dashboard) => {\\n                  setTimeout(() => {\\n                    // setIFrame(1)\\n                  }, 1000)\\n                  LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n                })\\n                .catch((error) => {\\n                  console.error('Connection error', error)\\n                })\\n            }\\n\\n\\n            if (index === objToUse.dashboards.length - 1) {\\n              setTimeout(() => setIFrame(1), 1000)\\n            }\\n          })\\n        }\\n        setApiContent(objToUse)\\n      } else if (lookerContent.type === 'explore' && lookerUser.user_attributes.permission_level === 'premium') {\\n        let exploreId = lookerContent.id;\\n        $(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`)).html('')\\n        LookerEmbedSDK.createExploreWithId(exploreId)\\n          .appendTo(validIdHelper(`#embedContainer-${demoComponentType}-${lookerContent.id}`))\\n          .withClassName('iframe')\\n          .on('explore:state:changed', (event) => {\\n          })\\n          .build()\\n          .connect()\\n          .then((explore) => {\\n            setTimeout(() => setIFrame(1), 1000)\\n            setExploreObj(exploreObj)\\n            LookerEmbedSDK.init(`https://${lookerHost}.looker.com`);\\n          })\\n          .catch((error) => {\\n            console.error('Connection error', error)\\n          })\\n      }\\n    })\\n  }\\n\\n\\n  return (\\n    <div className={`${classes.root} ${classes.padding30} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={classes.root}>\\n          {iFrameExists ? '' :\\n            <Grid item sm={12} >\\n              <Card className={`${classes.card} ${classes.flexCentered}`} elevation={0}>\\n                <CircularProgress className={classes.circularProgress} />\\n              </Card>\\n            </Grid>\\n          }\\n\\n          {/* additional loading logic, need embedContainer to exist but want it hidden until iFrame has content...*/}\\n          <Box className={iFrameExists ? `${classes.positionRelative}` : `${classes.hidden} ${classes.positionRelative}`}>\\n            <AppBar position=\\\"static\\\" elevation={0}>\\n              <Tabs\\n                className={classes.tabs}\\n                value={value}\\n                onChange={handleChange}\\n                aria-label=\\\"simple tabs example\\\">\\n                {tabContent.map((item, index) => (\\n                  <Tab\\n                    key={`${validIdHelper(demoComponentType + '-tab-' + index)}`}\\n                    label={index == 1 ?\\n                      <div>\\n\\n                        {lookerUser.user_attributes.permission_level != 'premium' ?\\n                          <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} /> : <Icon className={`fa fa-plus ${classes.faSm} ${classes.mr12}`} />}\\n                        {item.label}\\n                      </div> :\\n                      item.label}\\n                    className={value === 1 && index === 1 ? `${classes.hidden}` : index == 1 ? `${classes.mlAuto}` : ``}\\n                    style={index === 1 ? {\\n                      backgroundColor: '#5896E6',\\n                      borderRadius: '4px',\\n                      color: '#fff',\\n                      opacity: '1.0'\\n                    } : {}}\\n                    {...a11yProps(index)} />\\n                ))}\\n              </Tabs>\\n            </AppBar>\\n\\n            <Box className=\\\"tabPanelContainer\\\">\\n              {codeShow ? <Grid item sm={6}\\n                className={`${classes.positionTopRight}`}\\n              >\\n                <CodeFlyout {...props}\\n                  classes={classes}\\n                  lookerUser={lookerUser} />\\n              </Grid> : ''}\\n              {tabContent.map((tabContentItem, tabContentItemIndex) => (\\n                <TabPanel\\n                  key={`${validIdHelper(demoComponentType + '-tabPanel-' + tabContentItemIndex)}`}\\n                  value={value}\\n                  index={tabContentItemIndex}>\\n                  <Grid container>\\n                    {\\n                      tabContentItemIndex === 0\\n                        ?\\n                        <React.Fragment\\n                          key={`${validIdHelper(demoComponentType + '-outerFragment-' + tabContentItemIndex)}`}>\\n                          <Grid item sm={4} >\\n                            <ApiHighlight height={500} classes={classes}>\\n                              <TreeSideBar {...{\\n                                togglePayWallModal,\\n                                classes,\\n                                demoComponentType,\\n                                tabContent,\\n                                tabContentItemIndex,\\n                                action,\\n                                apiContent,\\n                                ...props\\n                              }}\\n                              />\\n                            </ApiHighlight>\\n                          </Grid>\\n                          <Grid item sm={8} >\\n                            <EmbedHighlight classes={classes}>\\n                              <div\\n                                className={`embedContainer ${validIdHelper(demoComponentType)}`}\\n                                id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                                key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                              >\\n                              </div>\\n                            </EmbedHighlight>\\n                          </Grid>\\n                        </React.Fragment>\\n                        :\\n                        <Grid item sm={12} >\\n                          <EmbedHighlight classes={classes}>\\n                            <div\\n                              className=\\\"embedContainer\\\"\\n                              id={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                              key={validIdHelper(`embedContainer-${demoComponentType}-${tabContentItem.id}`)}\\n                            >\\n                            </div>\\n                          </EmbedHighlight>\\n                        </Grid>\\n                    }\\n                  </Grid>\\n                </TabPanel>\\n              ))}\\n            </Box>\\n          </Box >\\n        </div>\\n      </Grid >\\n    </div >\\n  )\\n}\\n\\n\\nfunction TreeSideBar(props) {\\n  // console.log('TreeSideBar')\\n  const { staticContent, staticContent: { lookerContent }, classes, demoComponentType, tabContent, tabContentItemIndex, action, apiContent, lookerUser, togglePayWallModal } = props\\n  const sharedFolderId = lookerContent[0].type === 'folder' ? lookerContent[0].id : '';\\n  let treeCounter = 0;\\n  const [selected, setSelected] = useState(2)\\n  const expandedArr = Object.keys(apiContent).length ? [\\\"1\\\", \\\"\\\" + (2 + apiContent[Object.keys(apiContent)[0]].length)] : [];\\n  const [expanded, setExpanded] = useState(expandedArr);\\n\\n  const handleToggle = (event, nodeIds) => {\\n    setExpanded(nodeIds);\\n  }\\n\\n  const handleSelect = (event, nodeIds) => {\\n    setSelected(nodeIds);\\n  };\\n\\n\\n  useEffect(() => {\\n    setExpanded(expandedArr)\\n  }, [apiContent]);\\n\\n  return (\\n    <TreeView\\n      className={classes.tree}\\n      defaultCollapseIcon={<ExpandMoreIcon />}\\n      defaultExpandIcon={<ChevronRightIcon />}\\n      expanded={expanded}\\n      onNodeToggle={handleToggle}\\n      onNodeSelect={handleSelect}\\n    >\\n      {apiContent ? Object.keys(apiContent).map((key, outerIndex) => (\\n        <React.Fragment\\n          key={`${validIdHelper(demoComponentType + '-innerFragment-' + outerIndex)}`}>\\n          <TreeItem\\n            key={`${validIdHelper(demoComponentType + '-outerTreeItem-' + outerIndex)}`}\\n            nodeId={\\\"\\\" + (treeCounter += 1)}\\n            // treecounter={treeCounter}\\n            label={_.capitalize(key)}\\n            icon={<Icon className={`fa fa-folder ${classes.icon}`} />}\\n            disabled={apiContent[key].length ? false : true}\\n          >\\n            {\\n              apiContent[key].length ?\\n                apiContent[key].map((item, index) => (\\n                  <TreeItem\\n                    key={`${validIdHelper(demoComponentType + '-innerTreeItem-' + treeCounter)}`}\\n                    nodeId={\\\"\\\" + (treeCounter += 1)}\\n                    treecounter={treeCounter}\\n                    selected={selected === treeCounter}\\n                    className={selected === treeCounter ? `Mui-selected innerTreeItem` : `innerTreeItem`}\\n                    contentid={item.id}\\n                    label={item.folder_id === sharedFolderId &&\\n                      key === 'looks' ?\\n\\n                      < div\\n                        id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                        key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                        className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\\n                        {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title}\\n\\n                        <Button\\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-Explore' + treeCounter)}`}\\n                          size=\\\"small\\\"\\n                          className={`${classes.ml12} ${classes.childHoverVisibility}`}\\n                          onClick={(event) => {\\n                            if (lookerUser.user_attributes.permission_level === 'premium') {\\n                              // setSelected(treeCounter);\\n                              action(\\n                                key.substring(0, key.length - 1),\\n                                item.id,\\n                                'explore',\\n                                item.client_id,\\n                                tabContent[tabContentItemIndex + 1].id,\\n                                validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                              );\\n                              event.stopPropagation();\\n                            } else {\\n                              // togglePayWallModal();\\n\\n                              togglePayWallModal({\\n                                'show': true,\\n                                'permissionNeeded': 'explore'\\n                              });\\n                            }\\n                          }\\n                          }\\n                          color=\\\"default\\\"\\n                        >\\n                          {lookerUser.user_attributes.permission_level === 'premium' ? 'Explore' : <div> <Icon className={`fa fa-lock ${classes.faSm} ${classes.mr12}`} />Explore</div>}\\n                        </Button>\\n                      </div>\\n                      : key === 'looks' ?\\n                        <div\\n                          id={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                          key={`${validIdHelper(demoComponentType + '-innerTreeItem-LabelContainer' + treeCounter)}`}\\n                          className={`${classes.labelRoot} ${classes.parentHoverVisibility}`}>\\n\\n                          {item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title}                          <Button\\n                            id={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\\n                            key={`${validIdHelper(demoComponentType + '-innerTreeItem-EditButton' + treeCounter)}`}\\n                            size=\\\"small\\\"\\n                            className={`${classes.ml12} ${classes.childHoverVisibility}`}\\n                            onClick={(event) => {\\n                              if (lookerUser.user_attributes.permission_level === 'premium') {\\n                                // setSelected(treeCounter);\\n                                action(\\n                                  key.substring(0, key.length - 1),\\n                                  item.id,\\n                                  'edit',\\n                                  item.client_id,\\n                                  tabContent[tabContentItemIndex + 1].id,\\n                                  validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                                );\\n                                event.stopPropagation();\\n                              } else {\\n                                // togglePayWallModal();\\n\\n                                togglePayWallModal({\\n                                  'show': true,\\n                                  'permissionNeeded': 'explore'\\n                                });\\n                              }\\n                            }\\n                            }\\n                            color=\\\"primary\\\"\\n                          >\\n                            Edit\\n                                                                                            </Button>\\n                          <Button\\n                            id={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\\n                            key={`${validIdHelper(demoComponentType + '-innerTreeItem-DeleteButton' + treeCounter)}`}\\n                            size=\\\"small\\\"\\n                            className={`${classes.ml12} ${classes.childHoverVisibility}`}\\n                            onClick={(event) => {\\n                              if (lookerUser.user_attributes.permission_level === 'premium') {\\n                                // setSelected(treeCounter);\\n                                action(\\n                                  key.substring(0, key.length - 1),\\n                                  item.id,\\n                                  'delete',\\n                                  item.client_id,\\n                                  tabContent[tabContentItemIndex + 1].id,\\n                                  validIdHelper(`embedContainer-${demoComponentType}-${tabContent[tabContentItemIndex + 1].id}`)\\n                                );\\n                                event.stopPropagation();\\n                              } else {\\n                                // togglePayWallModal();\\n\\n                                togglePayWallModal({\\n                                  'show': true,\\n                                  'permissionNeeded': 'explore'\\n                                });\\n                              }\\n                            }\\n                            }\\n                            color=\\\"secondary\\\"\\n                          >\\n                            Delete\\n                                                                                            </Button>\\n                        </div>\\n                        : item.title.length > 15 ? item.title.substring(0, 15) + '...' : item.title\\n                    }\\n                    onClick={() => {\\n                      // setSelected(treeCounter)\\n                      action(\\n                        key.substring(0, key.length - 1), item.id)\\n                    }} />\\n\\n                ))\\n                :\\n                ''\\n            }\\n          </TreeItem>\\n\\n        </React.Fragment>\\n      )) : ''}\\n    </TreeView>\\n  )\\n}\";","import { makeStyles } from '@material-ui/core/styles';\nimport { grey, orange } from '@material-ui/core/colors';\n\nconst greyPrimary = grey[400];\nconst greySecondary = grey[100];\nconst orangePrimary = orange[400];\nconst orangeSecondary = orange[100];\n\nexport default makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  hidden: {\n    visibility: 'hidden',\n    position: 'absolute', //hack for obscuring other elements within Box\n    zIndex: -1\n  },\n  tabs: {\n    backgroundColor: 'white',\n    color: '#6c757d'\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n  icon: {\n    marginRight: 12,\n    fontSize: '1rem',\n    overflow: 'visible'\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  mt12: {\n    marginTop: 12\n  },\n  w100: {\n    width: '100%'\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  table: {\n    minWidth: 650,\n  },\n  tableContainer: {\n    maxHeight: 650,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  skeleton: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  card: {\n    minWidth: 275,\n    minHeight: 600,\n  },\n  textCenter: {\n    textAlign: 'center'\n  },\n  bluePrimary: {\n    backgroundColor: 'rgba(69, 149, 236, 1)'\n  },\n  blueSecondary: {\n    backgroundColor: 'rgba(69, 149, 236, .5)',\n  },\n  orangePrimary: {\n    backgroundColor: 'rgba(243, 167, 89, 1)'\n  },\n  orangeSecondary: {\n    backgroundColor: 'rgba(243, 167, 89, .5)'\n  },\n  positionTopRight: {\n    position: 'absolute',\n    top: -30,\n    right: -50,\n    bottom: 0,\n    zIndex: 100\n  },\n  positionRelative: {\n    position: 'relative'\n  },\n  bottomBarSpacer: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  maxHeight600: {\n    maxHeight: 600,\n    overflow: 'scroll'\n  },\n  padding30: {\n    padding: 30\n  },\n  m12: {\n    margin: 12\n  },\n  m6: {\n    margin: 6\n  }\n}));","import React from 'react';\nimport { Typography, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\nexport function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport function a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport function descendingComparator(a, b, orderBy) {\n    if (a[orderBy] && b[orderBy] && b[orderBy].value < a[orderBy].value) {\n        return -1;\n    }\n    if (a[orderBy] && b[orderBy] && b[orderBy].value > a[orderBy].value) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}","import $ from 'jquery';\nimport _ from 'lodash';\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button,\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputLabel, MenuItem, FormControl,\n  Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,\n  TableSortLabel, FormControlLabel, Switch, Chip, Divider\n} from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandMore';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CodeFlyout from '../CodeFlyout';\nimport rawSampleCode from '!!raw-loader!./QueryBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\nimport useStyles from './styles.js';\nimport { ApiHighlight } from '../../Highlights/Highlight';\nimport { TabPanel, a11yProps, descendingComparator, getComparator, stableSort } from './helpers.js';\nimport AppContext from '../../../AppContext';\nconst { validIdHelper, prettifyString } = require('../../../tools');\n\n//start of QueryBuilder Component\nexport default function QueryBuilder(props) {\n  // console.log('QueryBuilder')\n  // console.log('props', props)\n\n  //initialize state using hooks\n  const [value, setValue] = useState(0);\n  const [apiContent, setApiContent] = useState({});\n  const [clientSideCode, setClientSideCode] = useState('');\n  const [serverSideCode, setServerSideCode] = useState('');\n  const { togglePayWallModal, show, codeShow } = useContext(AppContext)\n  //declare constants\n\n  const classes = useStyles();\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\n\n  //handle tab change\n  const handleChange = (event, newValue) => {\n    handleTabChange(0);\n    setValue(newValue);\n  };\n\n  /**\n   * listen for lookerContent and call \n   * performLookerApiCalls and setSampleCode\n  */\n  useEffect(() => {\n    lookerContent.map(lookerContent => {\n      setTimeout(() => performLookerApiCalls(lookerContent.queryBody, lookerContent.resultFormat), 100);\n    })\n    setClientSideCode(rawSampleCode)\n  }, [lookerContent, lookerUser])\n\n  const performLookerApiCalls = async (newQuery, resultFormat) => {\n    // console.log('performLookerApiCalls')\n    let apiContentCopy = { ...apiContent }\n    apiContentCopy.status = 'running';\n    setApiContent(apiContentCopy)\n\n    let lookerCreateTaskResposnse = await fetch('/createquerytask/' + JSON.stringify(newQuery), {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    let lookerCreateTaskResponseData = await lookerCreateTaskResposnse.json();\n\n    let taskInterval = setInterval(async () => {\n      let lookerCheckTaskResposnse = await fetch('/checkquerytask/' + lookerCreateTaskResponseData.queryTaskId, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      let lookerCheckTaskResponseData = await lookerCheckTaskResposnse.json();\n      if (lookerCheckTaskResponseData.queryResults.status === 'complete') {\n        clearInterval(taskInterval);\n        setApiContent(lookerCheckTaskResponseData.queryResults)\n        setServerSideCode(lookerCreateTaskResponseData.code)\n      }\n    }, 5000)\n  }\n\n  return (\n    <div className={`${classes.root} ${classes.padding30} demoComponent`}>\n      <Grid container\n        spacing={3}\n        key={validIdHelper(type)} >\n        <div className={`${classes.root} ${classes.positionRelative}`}>\n          <Grid item sm={12}>\n            <FilterBar {...props}\n              classes={classes}\n              action={performLookerApiCalls}\n            />\n          </Grid>\n          {apiContent.status === 'running' ?\n            <Grid item sm={12} >\n              <Card className={`${classes.card} ${classes.flexCentered}`} elevation={0}>\n                <CircularProgress className={classes.circularProgress} />\n              </Card>\n            </Grid >\n            : apiContent.data && apiContent.data.length ?\n              <Box\n              >\n                <Grid container>\n                  {codeShow ? <Grid item sm={6}\n                    className={`${classes.positionTopRight}`}\n                  >\n                    <CodeFlyout {...props}\n                      classes={classes}\n                      lookerUser={lookerUser} />\n                  </Grid> : ''}\n                  <Divider className={classes.divider} />\n                  <Grid item sm={12}>\n                    <Box className={`${classes.w100} ${classes.maxHeight600} ${classes.padding30}`} mt={2}>\n                      <EnhancedTable\n                        {...props}\n                        classes={classes}\n                        rows={apiContent.data}\n                        lookerContent={lookerContent}\n                      />\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Box>\n              :\n              <Grid item sm={12} >\n                <Typography variant=\"h6\" component=\"h6\" className={`${classes.gridTitle} ${classes.textCenter}`}>\n                  No results found, try a new query<br />\n                </Typography>\n              </Grid>\n          }\n        </div >\n      </Grid >\n    </div >\n  )\n}\n\n\nfunction FilterBar(props) {\n  const { staticContent, staticContent: { lookerContent }, classes, action, lookerUser } = props;\n  let measureCounter = 0;\n  let dimensionCounter = 0;\n\n  const [expanded, setExpanded] = useState(true);\n  const [fieldsChipData, setFieldsChipData] = useState(lookerContent[0].queryBody ? lookerContent[0].queryBody.fields.map((item, index) => {\n    return {\n      key: 'fieldChipData' + index,\n      label: prettifyString(item.substring(item.lastIndexOf('.') + 1, item.length)),\n      datalabel: item,\n      selected: true,\n      fieldType: lookerContent[0].fieldType[item]\n    }\n  }) : '');\n\n  const [queryModified, setQueryModified] = useState(false);\n  const [filtersData, setFilterData] = useState(lookerContent[0].queryBody ? Object.keys(lookerContent[0].queryBody.filters).map((key, index) => {\n    return {\n      key: 'filter' + index,\n      label: key,\n      value: lookerContent[0].queryBody.filters[key],\n      type: lookerContent[0].filterType[key]\n    }\n  }) : '')\n\n  const handleExpansionPanel = (event, newValue) => {\n    setExpanded(expanded ? false : true);\n  };\n\n  const handleFieldChipClick = (chip, index) => {\n    let updatedFieldsChipData = [...fieldsChipData]\n    updatedFieldsChipData[index].selected = updatedFieldsChipData[index].selected === false ? true : false\n    setFieldsChipData(updatedFieldsChipData)\n    setQueryModified(true)\n  }\n\n  const handleSelectChange = (index, newValue) => {\n    let updatedFiltersData = [...filtersData]\n    updatedFiltersData[index].value = newValue;\n    setFilterData(updatedFiltersData)\n    setQueryModified(true)\n  }\n\n  const handleQuerySubmit = (event) => {\n    if (queryModified) {\n      let newFields = fieldsChipData.filter(chip => chip.selected).map(item => item.datalabel);\n      let currentFilters = {}; //needs to be object\n      filtersData.map((item, index) => {\n        currentFilters[item.label] = item.value\n      })\n      let newQueryObj = lookerContent[0].queryBody;\n      newQueryObj.fields = newFields;\n      newQueryObj.filters = currentFilters;\n      action(newQueryObj, lookerContent[0].resultFormat);\n      setQueryModified(false)\n    }\n  }\n\n  // useEffect(() => {\n  //   handleQuerySubmit()\n  // }, [fieldsChipData, filtersData]);\n\n  const datePermissionMap = {\n    'basic': [\"1 week\", \"1 month\", \"3 months\", \"6 months\"]\n  }\n  datePermissionMap.advanced = [...datePermissionMap.basic, \"1 year\"]\n  datePermissionMap.premium = [...datePermissionMap.advanced, \"before today\"]\n\n  useEffect(() => {\n    let updatedFiltersData = [...filtersData]\n    updatedFiltersData[3].value = \"6 months\";\n    setFilterData(updatedFiltersData)\n  }, [lookerUser]);\n\n  return (\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} elevation={0}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={classes.heading}>Build Query</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid container spacing={3}>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Select Metrics:\n      {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'measure' ?\n                      <Chip\n                        key={item.label}\n                        // key={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        measurecounter={measureCounter += 1}\n                        className={item.selected ? `${classes.orangePrimary} ${classes.m6}` : `${classes.m6}`}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <DoneIcon className={classes.dBlock} /> : <DoneIcon className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n          <Grid item sm={12}>\n            <Typography variant=\"subtitle1\">\n              Group By:\n                          {fieldsChipData.length ?\n                fieldsChipData.map((item, index) => {\n                  return (\n                    item.fieldType === 'dimension' ?\n                      <Chip\n                        key={item.label}\n                        dimensioncounter={dimensionCounter += 1}\n                        className={item.selected ? `${classes.bluePrimary} ${classes.m6}` : `${classes.m6}`}\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\n                        datalabel={item.label}\n                        onClick={() => handleFieldChipClick(item, index)}\n                        icon={item.selected ? <DoneIcon className={classes.dBlock} /> : <DoneIcon className={classes.dNone} />}\n                      /> : ''\n                  )\n                }) : ''\n              }<br />\n            </Typography>\n          </Grid>\n\n          <Grid item sm={3}>\n            <Typography variant=\"subtitle1\">\n              Filter By:\n                      </Typography>\n            {filtersData.length ? filtersData.map((item, index) => {\n              return (\n                <FormControl className={item.value.length ? classes.formControl : classes.hidden} key={validIdHelper(`${item.label}FormControl`)}>\n                  {\n                    item.type === 'yesno' ?\n                      <>\n                        <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n                        <Select\n                          labelId={validIdHelper(`${item.label}FilterLabel`)}\n                          id={validIdHelper(`${item.label}FilterSelect`)}\n                          value={item.value}\n                          onChange={(event) => handleSelectChange(index, event.target.value)}\n                        >\n                          <MenuItem value=\"Yes\">Yes</MenuItem>\n                          <MenuItem value=\"No\">No</MenuItem>\n                          <MenuItem value=\"All\">All</MenuItem>\n                        </Select>\n                      </>\n                      : item.type === 'date' ?\n                        <>\n                          <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\n\n                          <Select\n                            labelId={validIdHelper(`${item.label}FilterLabel`)}\n                            id={validIdHelper(`${item.label}FilterSelect`)}\n                            value={item.value || '6 months'}\n                            onChange={(event) => handleSelectChange(index, event.target.value)}\n                          >\n                            {lookerUser.user_attributes.permission_level ? datePermissionMap[lookerUser.user_attributes.permission_level].map(item => (\n                              <MenuItem key={validIdHelper(item)} value={item}>{_.capitalize(item)}</MenuItem>\n                            )) : ''}\n                          </Select>\n                        </>\n                        : ''\n                  }\n                </FormControl>\n              )\n            }) : ''}\n          </Grid>\n          <Grid item sm={9}>\n            <br />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"large\"\n              onClick={handleQuerySubmit}\n              disabled={queryModified ? false : true}\n            >Run Query</Button></Grid>\n        </Grid>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, rows } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {Object.keys(rows[0]).map((key, index) => (\n          <TableCell\n            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            id={validIdHelper(key + '-TableHead-TableCell-' + index)}\n            align={key.numeric ? 'right' : 'left'}\n            padding={key.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === key ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === key}\n              direction={orderBy === key ? order : 'asc'}\n              onClick={createSortHandler(key)}\n            >\n              {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}\n              {orderBy === key ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  // onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nfunction EnhancedTable(props) {\n  const { rows, classes, lookerContent } = props;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(Object.keys(rows[0])[0]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return (\n    <div className={classes.root}>\n      <ApiHighlight classes={classes} >\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              {...props}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  return (\n                    <TableRow\n                      hover\n                      key={validIdHelper('TableRow-' + index)}\n                      id={validIdHelper('TableRow-' + index)}>\n                      {Object.keys(row).map((key, index) => (\n                        <TableCell\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}\n                          className={lookerContent[0].fieldType[key] === 'dimension' ? classes.blueSecondary : classes.orangeSecondary}\n                          align=\"right\">\n                          {row[key].rendered ? row[key].rendered : row[key].value}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </ApiHighlight>\n      <Grid container>\n        <Grid item sm={6}>\n          <FormControlLabel\n            control={<Switch checked={dense} onChange={handleChangeDense} />}\n            label=\"Compact\"\n          /></Grid>\n        <Grid item sm={6}>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          /></Grid>\n      </Grid>\n      <div className={classes.bottomBarSpacer} />\n    </div>\n  );\n}","export default \"import $ from 'jquery';\\nimport _ from 'lodash';\\nimport React, { useState, useEffect, useContext } from 'react';\\nimport PropTypes from 'prop-types';\\nimport {\\n  AppBar, Tabs, Tab, Typography, Box, Grid, Icon, CircularProgress, Card, Button,\\n  ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, InputLabel, MenuItem, FormControl,\\n  Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow,\\n  TableSortLabel, FormControlLabel, Switch, Chip, Divider\\n} from '@material-ui/core'\\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\\nimport ExpandLessIcon from '@material-ui/icons/ExpandMore';\\nimport DoneIcon from '@material-ui/icons/Done';\\nimport CodeFlyout from '../CodeFlyout';\\nimport rawSampleCode from '!!raw-loader!./QueryBuilder.js'; // eslint-disable-line import/no-webpack-loader-syntax\\nimport useStyles from './styles.js';\\nimport { ApiHighlight } from '../../Highlights/Highlight';\\nimport { TabPanel, a11yProps, descendingComparator, getComparator, stableSort } from './helpers.js';\\nimport AppContext from '../../../AppContext';\\nconst { validIdHelper, prettifyString } = require('../../../tools');\\n\\n//start of QueryBuilder Component\\nexport default function QueryBuilder(props) {\\n  // console.log('QueryBuilder')\\n  // console.log('props', props)\\n\\n  //initialize state using hooks\\n  const [value, setValue] = useState(0);\\n  const [apiContent, setApiContent] = useState({});\\n  const [clientSideCode, setClientSideCode] = useState('');\\n  const [serverSideCode, setServerSideCode] = useState('');\\n  const { togglePayWallModal, show, codeShow } = useContext(AppContext)\\n  //declare constants\\n\\n  const classes = useStyles();\\n  const { staticContent, staticContent: { lookerContent }, staticContent: { type }, activeTabValue, handleTabChange, lookerUser } = props;\\n\\n  //handle tab change\\n  const handleChange = (event, newValue) => {\\n    handleTabChange(0);\\n    setValue(newValue);\\n  };\\n\\n  /**\\n   * listen for lookerContent and call \\n   * performLookerApiCalls and setSampleCode\\n  */\\n  useEffect(() => {\\n    lookerContent.map(lookerContent => {\\n      setTimeout(() => performLookerApiCalls(lookerContent.queryBody, lookerContent.resultFormat), 100);\\n    })\\n    setClientSideCode(rawSampleCode)\\n  }, [lookerContent, lookerUser])\\n\\n  const performLookerApiCalls = async (newQuery, resultFormat) => {\\n    // console.log('performLookerApiCalls')\\n    let apiContentCopy = { ...apiContent }\\n    apiContentCopy.status = 'running';\\n    setApiContent(apiContentCopy)\\n\\n    let lookerCreateTaskResposnse = await fetch('/createquerytask/' + JSON.stringify(newQuery), {\\n      method: 'GET',\\n      headers: {\\n        Accept: 'application/json',\\n        'Content-Type': 'application/json'\\n      }\\n    })\\n    let lookerCreateTaskResponseData = await lookerCreateTaskResposnse.json();\\n\\n    let taskInterval = setInterval(async () => {\\n      let lookerCheckTaskResposnse = await fetch('/checkquerytask/' + lookerCreateTaskResponseData.queryTaskId, {\\n        method: 'GET',\\n        headers: {\\n          Accept: 'application/json',\\n          'Content-Type': 'application/json'\\n        }\\n      })\\n      let lookerCheckTaskResponseData = await lookerCheckTaskResposnse.json();\\n      if (lookerCheckTaskResponseData.queryResults.status === 'complete') {\\n        clearInterval(taskInterval);\\n        setApiContent(lookerCheckTaskResponseData.queryResults)\\n        setServerSideCode(lookerCreateTaskResponseData.code)\\n      }\\n    }, 5000)\\n  }\\n\\n  return (\\n    <div className={`${classes.root} ${classes.padding30} demoComponent`}>\\n      <Grid container\\n        spacing={3}\\n        key={validIdHelper(type)} >\\n        <div className={`${classes.root} ${classes.positionRelative}`}>\\n          <Grid item sm={12}>\\n            <FilterBar {...props}\\n              classes={classes}\\n              action={performLookerApiCalls}\\n            />\\n          </Grid>\\n          {apiContent.status === 'running' ?\\n            <Grid item sm={12} >\\n              <Card className={`${classes.card} ${classes.flexCentered}`} elevation={0}>\\n                <CircularProgress className={classes.circularProgress} />\\n              </Card>\\n            </Grid >\\n            : apiContent.data && apiContent.data.length ?\\n              <Box\\n              >\\n                <Grid container>\\n                  {codeShow ? <Grid item sm={6}\\n                    className={`${classes.positionTopRight}`}\\n                  >\\n                    <CodeFlyout {...props}\\n                      classes={classes}\\n                      lookerUser={lookerUser} />\\n                  </Grid> : ''}\\n                  <Divider className={classes.divider} />\\n                  <Grid item sm={12}>\\n                    <Box className={`${classes.w100} ${classes.maxHeight600} ${classes.padding30}`} mt={2}>\\n                      <EnhancedTable\\n                        {...props}\\n                        classes={classes}\\n                        rows={apiContent.data}\\n                        lookerContent={lookerContent}\\n                      />\\n                    </Box>\\n                  </Grid>\\n                </Grid>\\n              </Box>\\n              :\\n              <Grid item sm={12} >\\n                <Typography variant=\\\"h6\\\" component=\\\"h6\\\" className={`${classes.gridTitle} ${classes.textCenter}`}>\\n                  No results found, try a new query<br />\\n                </Typography>\\n              </Grid>\\n          }\\n        </div >\\n      </Grid >\\n    </div >\\n  )\\n}\\n\\n\\nfunction FilterBar(props) {\\n  const { staticContent, staticContent: { lookerContent }, classes, action, lookerUser } = props;\\n  let measureCounter = 0;\\n  let dimensionCounter = 0;\\n\\n  const [expanded, setExpanded] = useState(true);\\n  const [fieldsChipData, setFieldsChipData] = useState(lookerContent[0].queryBody ? lookerContent[0].queryBody.fields.map((item, index) => {\\n    return {\\n      key: 'fieldChipData' + index,\\n      label: prettifyString(item.substring(item.lastIndexOf('.') + 1, item.length)),\\n      datalabel: item,\\n      selected: true,\\n      fieldType: lookerContent[0].fieldType[item]\\n    }\\n  }) : '');\\n\\n  const [queryModified, setQueryModified] = useState(false);\\n  const [filtersData, setFilterData] = useState(lookerContent[0].queryBody ? Object.keys(lookerContent[0].queryBody.filters).map((key, index) => {\\n    return {\\n      key: 'filter' + index,\\n      label: key,\\n      value: lookerContent[0].queryBody.filters[key],\\n      type: lookerContent[0].filterType[key]\\n    }\\n  }) : '')\\n\\n  const handleExpansionPanel = (event, newValue) => {\\n    setExpanded(expanded ? false : true);\\n  };\\n\\n  const handleFieldChipClick = (chip, index) => {\\n    let updatedFieldsChipData = [...fieldsChipData]\\n    updatedFieldsChipData[index].selected = updatedFieldsChipData[index].selected === false ? true : false\\n    setFieldsChipData(updatedFieldsChipData)\\n    setQueryModified(true)\\n  }\\n\\n  const handleSelectChange = (index, newValue) => {\\n    let updatedFiltersData = [...filtersData]\\n    updatedFiltersData[index].value = newValue;\\n    setFilterData(updatedFiltersData)\\n    setQueryModified(true)\\n  }\\n\\n  const handleQuerySubmit = (event) => {\\n    if (queryModified) {\\n      let newFields = fieldsChipData.filter(chip => chip.selected).map(item => item.datalabel);\\n      let currentFilters = {}; //needs to be object\\n      filtersData.map((item, index) => {\\n        currentFilters[item.label] = item.value\\n      })\\n      let newQueryObj = lookerContent[0].queryBody;\\n      newQueryObj.fields = newFields;\\n      newQueryObj.filters = currentFilters;\\n      action(newQueryObj, lookerContent[0].resultFormat);\\n      setQueryModified(false)\\n    }\\n  }\\n\\n  // useEffect(() => {\\n  //   handleQuerySubmit()\\n  // }, [fieldsChipData, filtersData]);\\n\\n  const datePermissionMap = {\\n    'basic': [\\\"1 week\\\", \\\"1 month\\\", \\\"3 months\\\", \\\"6 months\\\"]\\n  }\\n  datePermissionMap.advanced = [...datePermissionMap.basic, \\\"1 year\\\"]\\n  datePermissionMap.premium = [...datePermissionMap.advanced, \\\"before today\\\"]\\n\\n  useEffect(() => {\\n    let updatedFiltersData = [...filtersData]\\n    updatedFiltersData[3].value = \\\"6 months\\\";\\n    setFilterData(updatedFiltersData)\\n  }, [lookerUser]);\\n\\n  return (\\n    <ExpansionPanel expanded={expanded} onChange={handleExpansionPanel} elevation={0}>\\n      <ExpansionPanelSummary\\n        expandIcon={<ExpandMoreIcon />}\\n        aria-controls=\\\"panel1a-content\\\"\\n        id=\\\"panel1a-header\\\"\\n      >\\n        <Typography className={classes.heading}>Build Query</Typography>\\n      </ExpansionPanelSummary>\\n      <ExpansionPanelDetails>\\n        <Grid container spacing={3}>\\n          <Grid item sm={12}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Select Metrics:\\n      {fieldsChipData.length ?\\n                fieldsChipData.map((item, index) => {\\n                  return (\\n                    item.fieldType === 'measure' ?\\n                      <Chip\\n                        key={item.label}\\n                        // key={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        measurecounter={measureCounter += 1}\\n                        className={item.selected ? `${classes.orangePrimary} ${classes.m6}` : `${classes.m6}`}\\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        datalabel={item.label}\\n                        onClick={() => handleFieldChipClick(item, index)}\\n                        icon={item.selected ? <DoneIcon className={classes.dBlock} /> : <DoneIcon className={classes.dNone} />}\\n                      /> : ''\\n                  )\\n                }) : ''\\n              }<br />\\n            </Typography>\\n          </Grid>\\n          <Grid item sm={12}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Group By:\\n                          {fieldsChipData.length ?\\n                fieldsChipData.map((item, index) => {\\n                  return (\\n                    item.fieldType === 'dimension' ?\\n                      <Chip\\n                        key={item.label}\\n                        dimensioncounter={dimensionCounter += 1}\\n                        className={item.selected ? `${classes.bluePrimary} ${classes.m6}` : `${classes.m6}`}\\n                        label={prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}\\n                        datalabel={item.label}\\n                        onClick={() => handleFieldChipClick(item, index)}\\n                        icon={item.selected ? <DoneIcon className={classes.dBlock} /> : <DoneIcon className={classes.dNone} />}\\n                      /> : ''\\n                  )\\n                }) : ''\\n              }<br />\\n            </Typography>\\n          </Grid>\\n\\n          <Grid item sm={3}>\\n            <Typography variant=\\\"subtitle1\\\">\\n              Filter By:\\n                      </Typography>\\n            {filtersData.length ? filtersData.map((item, index) => {\\n              return (\\n                <FormControl className={item.value.length ? classes.formControl : classes.hidden} key={validIdHelper(`${item.label}FormControl`)}>\\n                  {\\n                    item.type === 'yesno' ?\\n                      <>\\n                        <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\\n                        <Select\\n                          labelId={validIdHelper(`${item.label}FilterLabel`)}\\n                          id={validIdHelper(`${item.label}FilterSelect`)}\\n                          value={item.value}\\n                          onChange={(event) => handleSelectChange(index, event.target.value)}\\n                        >\\n                          <MenuItem value=\\\"Yes\\\">Yes</MenuItem>\\n                          <MenuItem value=\\\"No\\\">No</MenuItem>\\n                          <MenuItem value=\\\"All\\\">All</MenuItem>\\n                        </Select>\\n                      </>\\n                      : item.type === 'date' ?\\n                        <>\\n                          <InputLabel id={validIdHelper(`${item.label}FilterLabel`)}>{prettifyString(item.label.substring(item.label.lastIndexOf('.') + 1, item.label.length))}:</InputLabel>\\n\\n                          <Select\\n                            labelId={validIdHelper(`${item.label}FilterLabel`)}\\n                            id={validIdHelper(`${item.label}FilterSelect`)}\\n                            value={item.value || '6 months'}\\n                            onChange={(event) => handleSelectChange(index, event.target.value)}\\n                          >\\n                            {lookerUser.user_attributes.permission_level ? datePermissionMap[lookerUser.user_attributes.permission_level].map(item => (\\n                              <MenuItem key={validIdHelper(item)} value={item}>{_.capitalize(item)}</MenuItem>\\n                            )) : ''}\\n                          </Select>\\n                        </>\\n                        : ''\\n                  }\\n                </FormControl>\\n              )\\n            }) : ''}\\n          </Grid>\\n          <Grid item sm={9}>\\n            <br />\\n            <Button\\n              color=\\\"primary\\\"\\n              variant=\\\"contained\\\"\\n              size=\\\"large\\\"\\n              onClick={handleQuerySubmit}\\n              disabled={queryModified ? false : true}\\n            >Run Query</Button></Grid>\\n        </Grid>\\n      </ExpansionPanelDetails>\\n    </ExpansionPanel>\\n  )\\n}\\n\\nfunction EnhancedTableHead(props) {\\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, rows } = props;\\n  const createSortHandler = (property) => (event) => {\\n    onRequestSort(event, property);\\n  };\\n\\n  return (\\n    <TableHead>\\n      <TableRow>\\n        {Object.keys(rows[0]).map((key, index) => (\\n          <TableCell\\n            key={validIdHelper(key + '-TableHead-TableCell-' + index)}\\n            id={validIdHelper(key + '-TableHead-TableCell-' + index)}\\n            align={key.numeric ? 'right' : 'left'}\\n            padding={key.disablePadding ? 'none' : 'default'}\\n            sortDirection={orderBy === key ? order : false}\\n          >\\n            <TableSortLabel\\n              active={orderBy === key}\\n              direction={orderBy === key ? order : 'asc'}\\n              onClick={createSortHandler(key)}\\n            >\\n              {prettifyString(key.substring(key.lastIndexOf('.') + 1, key.length))}\\n              {orderBy === key ? (\\n                <span className={classes.visuallyHidden}>\\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\\n                </span>\\n              ) : null}\\n            </TableSortLabel>\\n          </TableCell>\\n        ))}\\n      </TableRow>\\n    </TableHead>\\n  );\\n}\\n\\nEnhancedTableHead.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n  // numSelected: PropTypes.number.isRequired,\\n  onRequestSort: PropTypes.func.isRequired,\\n  // onSelectAllClick: PropTypes.func.isRequired,\\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\\n  orderBy: PropTypes.string.isRequired,\\n  rowCount: PropTypes.number.isRequired,\\n};\\n\\nfunction EnhancedTable(props) {\\n  const { rows, classes, lookerContent } = props;\\n  const [order, setOrder] = React.useState('asc');\\n  const [orderBy, setOrderBy] = React.useState(Object.keys(rows[0])[0]);\\n  const [page, setPage] = React.useState(0);\\n  const [dense, setDense] = React.useState(true);\\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\\n\\n  const handleRequestSort = (event, property) => {\\n    const isAsc = orderBy === property && order === 'asc';\\n    setOrder(isAsc ? 'desc' : 'asc');\\n    setOrderBy(property);\\n  };\\n\\n  const handleChangePage = (event, newPage) => {\\n    setPage(newPage);\\n  };\\n\\n  const handleChangeRowsPerPage = (event) => {\\n    setRowsPerPage(parseInt(event.target.value, 10));\\n    setPage(0);\\n  };\\n\\n  const handleChangeDense = (event) => {\\n    setDense(event.target.checked);\\n  };\\n\\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\\n  return (\\n    <div className={classes.root}>\\n      <ApiHighlight classes={classes} >\\n        <TableContainer>\\n          <Table\\n            className={classes.table}\\n            aria-labelledby=\\\"tableTitle\\\"\\n            size={dense ? 'small' : 'medium'}\\n            aria-label=\\\"enhanced table\\\"\\n          >\\n            <EnhancedTableHead\\n              {...props}\\n              classes={classes}\\n              order={order}\\n              orderBy={orderBy}\\n              onRequestSort={handleRequestSort}\\n              rowCount={rows.length}\\n            />\\n            <TableBody>\\n              {stableSort(rows, getComparator(order, orderBy))\\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\\n                .map((row, index) => {\\n                  return (\\n                    <TableRow\\n                      hover\\n                      key={validIdHelper('TableRow-' + index)}\\n                      id={validIdHelper('TableRow-' + index)}>\\n                      {Object.keys(row).map((key, index) => (\\n                        <TableCell\\n                          key={validIdHelper(key + '-TableBody-TableCell-' + index)}\\n                          id={validIdHelper(key + '-TableBody-TableCell-' + index)}\\n                          className={lookerContent[0].fieldType[key] === 'dimension' ? classes.blueSecondary : classes.orangeSecondary}\\n                          align=\\\"right\\\">\\n                          {row[key].rendered ? row[key].rendered : row[key].value}\\n                        </TableCell>\\n                      ))}\\n                    </TableRow>\\n                  );\\n                })}\\n              {emptyRows > 0 && (\\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\\n                  <TableCell colSpan={6} />\\n                </TableRow>\\n              )}\\n            </TableBody>\\n          </Table>\\n        </TableContainer>\\n      </ApiHighlight>\\n      <Grid container>\\n        <Grid item sm={6}>\\n          <FormControlLabel\\n            control={<Switch checked={dense} onChange={handleChangeDense} />}\\n            label=\\\"Compact\\\"\\n          /></Grid>\\n        <Grid item sm={6}>\\n          <TablePagination\\n            rowsPerPageOptions={[5, 10, 25, 50]}\\n            component=\\\"div\\\"\\n            count={rows.length}\\n            rowsPerPage={rowsPerPage}\\n            page={page}\\n            onChangePage={handleChangePage}\\n            onChangeRowsPerPage={handleChangeRowsPerPage}\\n          /></Grid>\\n      </Grid>\\n      <div className={classes.bottomBarSpacer} />\\n    </div>\\n  );\\n}\";","import _ from 'lodash'\nimport React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppContext from '../../AppContext';\nimport { Modal, Fade, Grid, Paper, Card, CardContent, CardActions, Button, Typography, Chip, Divider, List, ListItem, ListItemAvatar, Avatar, ImageIcon, ListItemText } from '@material-ui/core';\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport CheckIcon from '@material-ui/icons/Check';\nimport LookerUserPermissions from '../../lookerUserPermissions.json';\nconst { validIdHelper } = require('../../tools');\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 1000,\n    height: 580,\n    overflow: 'scroll',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    height: 520,\n    overflow: 'scroll',\n    cursor: 'pointer',\n    '&:hover': {\n      transform: 'scale(1.05)',\n      transition: 'transform .2s'\n    }\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  padding15: {\n    padding: 15\n  },\n  divider: {\n    marginTop: 15,\n    marginBottom: 15,\n    color: '#fff'\n  },\n  basic: {\n\n  },\n  advanced: {\n\n  },\n  premium: {\n    backgroundColor: '#5F6BD8',\n    color: '#ffffff'\n  },\n  font75: {\n    fontSize: '.75em'\n  },\n  font875: {\n    // fontSize: '.875em'\n  },\n  padding30: {\n    padding: 30\n  }\n}));\n\nfunction getModalStyle() {\n  const top = 10 //+ rand();\n  const left = 50 //+ rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${left}%, -${top}%)`,\n  };\n}\n\n\nexport function MonetizationModal({ props, switchLookerUser }) {\n  // console.log('MonetizationModal')\n  const { payWallModal, togglePayWallModal, lookerUser } = useContext(AppContext);\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n\n  const modalListMap = {\n    'basic': [\n      '6 months of order data history',\n      'Atom Merchant Dashboards',\n      'Download PDFs, CSVs'\n    ],\n    'advanced': [\n      'Full year of order data history',\n      'Drill to row level information',\n      'Download row level information',\n      'Schedule dashboards for delivery (to you or others)',\n      'Set alerts and key threshold notifications'],\n    'premium': [\n      '2 Full years of order data history',\n      'Analyze your own data and save custom reports',\n      'View premium level, productivity enhancing reports',\n      'Share your reports with colleagues in Atom',\n      'Text message alerts',\n      'Notify active shoppers on Atom',\n      'Apply Atom’s advanced AI insights to stay ahead of trends'\n    ]\n  }\n\n\n  return (\n    < Modal\n      className={`${classes.modal} `}\n      open={payWallModal.show || false}\n      onClose={togglePayWallModal}\n    >\n      <Fade in={payWallModal.show || false}>\n        <div\n          style={modalStyle}\n          className={`${classes.paper} ${classes.padding30}`}>\n          <Grid container\n            spacing={3}>\n            {Object.keys(LookerUserPermissions).map(key => {\n              return (\n                <Grid item sm={4}\n                  key={validIdHelper(`monetizationModal-gridItem-${key}`)}\n                >\n                  <Card className={`${classes.card} ${classes[key]}`}\n                    elevation={1}\n                    style={key === lookerUser.user_attributes.permission_level ? {\n                      transform: 'scale(1.05)',\n                      transition: 'transform .2s'\n                    } : {}}\n                    onClick={() => {\n                      switchLookerUser(key)\n                      togglePayWallModal()\n                    }}>\n                    <CardContent>\n                      <Typography variant=\"h6\">\n                        {_.capitalize(key)}\n                      </Typography>\n                      <Typography variant=\"subtitle\">\n                        {lookerUser.user_attributes.permission_level === 'basic' ?\n                          'Drive your business with clear KPIs' :\n                          lookerUser.user_attributes.permission_level === 'advanced' ?\n                            'Deeper insights, operations' : 'Drive your business with Atom'\n                        }\n                      </Typography>\n\n                      <Divider className={`${classes.divider} `} />\n\n                      <List className={classes.root}>\n                        {\n                          modalListMap[key].map(item => (\n                            <ListItem dense={true}\n                              className={classes.font875}\n                            >\n                              <ListItemIcon disableTypography={true}>\n                                <CheckIcon fontSize=\"small\" />\n                              </ListItemIcon>\n                              <ListItemText primary={item} disableTypography={true} />\n                            </ListItem>\n                          ))\n                        }\n                      </List>\n                    </CardContent>\n                    <CardActions disableSpacing={false}>\n                      <Button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        disabled={key === lookerUser.user_attributes.permission_level ? true : false}\n                        fullWidth\n                        onClick={() => {\n                          switchLookerUser(key)\n                          togglePayWallModal()\n                        }}>{'Upgrade'}</Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              )\n            })}\n          </Grid>\n        </div>\n      </Fade >\n    </Modal >\n  );\n}\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport clsx from 'clsx';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Drawer, CssBaseline, AppBar, Toolbar, Typography,\n  Divider, IconButton, Tabs, Tab, Icon, Box, Avatar,\n  ListSubheader, List, ListItem, ListItemIcon, ListItemText,\n  Badge\n} from '@material-ui/core/';\n\nimport { AddAlert, Speed, TrendingUp, StoreMallDirectory, DateRange, Search, FindInPage } from '@material-ui/icons';\nimport HomeIcon from '@material-ui/icons/Home'; //can't reuse home name\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, grey } from '@material-ui/core/colors';\nimport UserMenu from './Material/UserMenu';\nimport { LookerEmbedSDK } from '@looker/embed-sdk'\nimport UsecaseContent from '../usecaseContent.json';\nimport SplashPage from './Demo/SplashPage/SplashPage';\nimport Dashboard from './Demo/Dashboard/Dashboard';\nimport CustomVis from './Demo/CustomVis/CustomVis';\nimport ReportBuilder from './Demo/ReportBuilder/ReportBuilder';\nimport QueryBuilder from './Demo/QueryBuilder/QueryBuilder';\nimport AppContext from '../AppContext';\n// import { HighlightSourcesLegend } from './HighlightSourcesLegend';\nimport style from 'react-syntax-highlighter/dist/esm/styles/hljs/agate';\nimport './Home.css'; //needed for iframe height\nimport { MonetizationModal } from './Demo/MonetizationModal';\nimport BottomBar from './Material/BottomBar';\n\n\n\nconst drawerWidth = 240;\nconst { validIdHelper } = require('../tools');\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    zIndex: 1201,\n    backgroundColor: \"#343D4E\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  dNone: {\n    display: 'none'\n  },\n  dBlock: {\n    display: 'block'\n  },\n  relative: {\n    position: 'relative'\n  },\n  absolute: {\n    position: 'absolute'\n  },\n  right0: {\n    right: 0\n  },\n  top0: {\n    top: 0\n  },\n  right24: {\n    right: 24\n  },\n  top24: {\n    top: 24\n  },\n  ml12: {\n    marginLeft: 12\n  },\n  mr12: {\n    marginRight: 12\n  },\n  mt12: {\n    marginTop: 12\n  },\n  highlightLegend: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2),\n    zIndex: 1200\n  },\n  tree: {\n    height: 240,\n    flexGrow: 1,\n    maxWidth: 400\n  },\n  parentHoverVisibility: {\n    '&:hover $childHoverVisibility': {\n      visibility: 'visible'\n    }\n\n  },\n  childHoverVisibility: {\n    visibility: 'hidden'\n  },\n  fontSize1em: {\n    fontSize: '1em'\n  },\n  padding10: {\n    padding: 10\n  },\n  mt5: {\n    marginTop: 5\n  },\n  mb5: {\n    marginBottom: 5\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  list: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  mlAuto: {\n    marginLeft: 'auto'\n  },\n  mrAuto: {\n    marginRight: 'auto'\n  },\n  appBarBottom: {\n    top: 'auto',\n    bottom: 0,\n  },\n  hidden: {\n    visibility: 'hidden'\n  }\n});\n\nconst defaultTheme = createMuiTheme({})\nconst atomTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[900],\n    },\n    secondary: {\n      main: grey[400],\n    },\n  },\n})\n\nconst vidlyTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500],\n    },\n  },\n})\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawerOpen: true,\n      drawerTabValue: 0,\n      activeTabValue: 0,\n      activeUsecase: '',\n      appLayout: '',\n      highlightShow: false,\n      payWallModal: {},\n      selectedMenuItem: '',\n      renderedDemoComponents: [],\n      codeShow: false\n    }\n  }\n\n  togglePayWallModal = (modalContent) => {\n    this.setState({ payWallModal: { ...modalContent } })\n  }\n\n  toggleHighlightShow = () => {\n    if (this.state.codeShow) this.toggleCodeShow()\n    this.setState({ highlightShow: !this.state.highlightShow })\n  }\n\n  toggleCodeShow = () => {\n    if (this.state.highlightShow) this.toggleHighlightShow()\n    this.setState({ codeShow: !this.state.codeShow })\n  }\n\n  handleTabChange = newValue => {\n    this.setState({\n      activeTabValue: newValue\n    })\n  }\n\n  handleMenuItemSelect = (newValue, fromSplash) => {\n    // console.log('handleMenuItemSelect')\n    this.handleTabChange(0)\n\n    if (this.state.highlightShow) this.toggleHighlightShow()\n    if (this.state.codeShow) this.toggleCodeShow()\n\n    let selectedMenuItemValue = ''\n    if (fromSplash) {\n      UsecaseContent[this.state.activeUsecase].demoComponents.map(item => {\n        if (item.type !== \"splash page\") {\n          item.lookerContent.map(lookerContentItem => {\n            if (lookerContentItem.id === newValue) {\n              selectedMenuItemValue = validIdHelper(item.type + lookerContentItem.id)\n            }\n          })\n        }\n      })\n    } else selectedMenuItemValue = newValue;\n\n    let renderedDemoComponentsCopy = [...this.state.renderedDemoComponents]\n    if (renderedDemoComponentsCopy.indexOf(selectedMenuItemValue) == -1) renderedDemoComponentsCopy.unshift(selectedMenuItemValue)\n\n    this.setState((prevState) => ({\n      selectedMenuItem: selectedMenuItemValue,\n      renderedDemoComponents: [...renderedDemoComponentsCopy]\n    }))\n  };\n\n  componentDidMount(props) {\n    let usecaseFromUrl = window.location.pathname.replace(/^\\/([^\\/]*).*$/, '$1');\n    this.setState({\n      activeUsecase: usecaseFromUrl,\n      appLayout: UsecaseContent[usecaseFromUrl].layout || 'left-sidebar'\n    }, () => {\n      LookerEmbedSDK.init(`https://${this.props.lookerHost}.looker.com`, '/auth');\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    let prevPermissionLevel = prevProps.lookerUser.user_attributes.permission_level;\n    let currPermissionLevel = this.props.lookerUser.user_attributes.permission_level;\n    let prevUserBrand = prevProps.lookerUser.user_attributes.brand;\n    let currUserBrand = this.props.lookerUser.user_attributes.brand;\n\n    if ((prevPermissionLevel !== currPermissionLevel) || (prevUserBrand !== currUserBrand)) {\n      // console.log('we are inside this iffff')\n      LookerEmbedSDK.init(`https://${this.props.lookerHost}.looker.com`, '/auth');\n      this.setState({\n        renderedDemoComponents: [this.state.selectedMenuItem]\n      }, () => {\n      })\n    }\n  }\n\n  render() {\n\n    //how to make this dynamic????\n    const demoComponentMap = {\n      \"splashpage19\": SplashPage,\n      \"simpledashboard5\": Dashboard,\n      \"simpledashboard9\": Dashboard,\n      \"customfilter1\": Dashboard,\n      \"customvis\": CustomVis,\n      \"querybuilderexplorelite\": QueryBuilder,\n      \"reportbuilder14\": ReportBuilder,\n    };\n\n    const demoComponentKeyMap = [\"splashpage19\",\n      \"simpledashboard5\",\n      \"simpledashboard9\",\n      \"customfilter1\",\n      \"customvis\",\n      \"querybuilderexplorelite\",\n      \"reportbuilder14\"\n    ]\n    // const demoComponentValueMap = [SplashPage,\n    //   Dashboard,\n    //   Dashboard,\n    //   Dashboard,\n    //   CustomVis,\n    //   QueryBuilder,\n    //   ReportBuilder\n    // ]\n\n    const themeMap = {\n      \"atom\": atomTheme,\n      \"vidly\": vidlyTheme\n    }\n\n    const { drawerTabValue, drawerOpen, activeTabValue, activeUsecase, selectedMenuItem, renderedDemoComponents } = this.state;\n    const { handleTabChange, handleMenuItemSelect } = this;\n    const { classes, activeCustomization, switchLookerUser, lookerUser, applySession, lookerUserAttributeBrandOptions, switchUserAttributeBrand, lookerHost, userProfile } = this.props\n\n    // Use Lodash to sort array by 'name'\n    let orderedDemoComponentsForMenu = activeUsecase ? _.orderBy(UsecaseContent[activeUsecase].demoComponents, ['menuCategory'], ['asc']) : [];\n    let orderedDemoComponentsForMenuObj = {};\n    let expandedTreeItemsArr = [];\n    let cumulativePusher = 0;\n    orderedDemoComponentsForMenu.map((item, index) => {\n      if (orderedDemoComponentsForMenuObj.hasOwnProperty(item.menuCategory)) {\n        orderedDemoComponentsForMenuObj[item.menuCategory] = [...orderedDemoComponentsForMenuObj[item.menuCategory], item]\n      } else {\n        orderedDemoComponentsForMenuObj[item.menuCategory] = [item];\n        cumulativePusher += 1;\n        expandedTreeItemsArr.push(\"\" + (index + cumulativePusher));\n      }\n    })\n\n\n    if (activeUsecase && !selectedMenuItem.length) {\n      let selectedMenuItemVal =\n        UsecaseContent[activeUsecase].demoComponents[0].lookerContent[0].id ?\n          validIdHelper(UsecaseContent[activeUsecase].demoComponents[0].type + UsecaseContent[activeUsecase].demoComponents[0].lookerContent[0].id) :\n          validIdHelper(UsecaseContent[activeUsecase].demoComponents[0].type)\n      this.setState({\n        selectedMenuItem: selectedMenuItemVal,\n        renderedDemoComponents: [selectedMenuItemVal]\n      }, () => {\n      })\n\n      //couldn't figure this out...\n      // UsecaseContent[activeUsecase].demoComponents.map(item => {\n      //   demoComponentMap[item.lookerContent[0].id ?\n      //     validIdHelper(item.type + item.lookerContent[0].id) :\n      //     validIdHelper(item.type)] = item.type.split(\" \").map(item => _.capitalize(item)).join(\"\")\n      // })\n    }\n\n\n    /**\n     * what this does\n     * we want rendered demo components to render active one first\n     * renderedDemoComponents is always up to date\n     * so create array of unique demo components starting with rendered\n     * then iterate through usecase file and sort array according to order of unique\n     */\n\n    // const orderedDemoComponentsForRender = [...renderedDemoComponents, ...demoComponentKeyMap]\n    // const uniqueOrderedDemoComponentsForRender = [...new Set(orderedDemoComponentsForRender)];\n\n    // if (activeUsecase) {\n    //   UsecaseContent[activeUsecase].demoComponents.sort(function (a, b) {\n    //     let idToUseForA = validIdHelper(a.lookerContent[0].id ? a.type + a.lookerContent[0].id : a.type);\n    //     let idToUseForB = validIdHelper(b.lookerContent[0].id ? b.type + b.lookerContent[0].id : b.type);\n    //     return uniqueOrderedDemoComponentsForRender.indexOf(idToUseForA) - uniqueOrderedDemoComponentsForRender.indexOf(idToUseForB);\n    //   });\n    // }\n\n    // console.log('this.state.renderedDemoComponents', this.state.renderedDemoComponents)\n    // console.log('orderedDemoComponentsForRender', orderedDemoComponentsForRender)\n    // console.log('uniqueOrderedDemoComponentsForRender', uniqueOrderedDemoComponentsForRender)\n\n    return (\n      <div className={classes.root} >\n        <AppContext.Provider value={\n          {\n            show: this.state.highlightShow,\n            toggleShow: this.toggleHighlightShow,\n            payWallModal: this.state.payWallModal,\n            togglePayWallModal: this.togglePayWallModal,\n            lookerUser,\n            userProfile,\n            codeShow: this.state.codeShow,\n            toggleCodeShow: this.toggleCodeShow\n          }\n        } >\n          <ThemeProvider theme={activeUsecase ? themeMap[activeUsecase] : defaultTheme}>\n            <CssBaseline />\n            <TopBar {...this.props} classes={classes} activeUsecase={activeUsecase} lookerUser={lookerUser} switchLookerUser={switchLookerUser} applySession={applySession} lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions} switchUserAttributeBrand={switchUserAttributeBrand} />\n            <Drawer\n              className={classes.drawer}\n              variant=\"persistent\"\n              anchor=\"left\"\n              open={drawerOpen}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <div className={classes.drawerHeader} />\n\n              {Object.keys(orderedDemoComponentsForMenuObj).length ?\n                <MenuList {...this.props}\n                  classes={classes}\n                  activeUsecase={activeUsecase}\n                  orderedDemoComponentsForMenuObj={orderedDemoComponentsForMenuObj}\n                  selectedMenuItem={selectedMenuItem}\n                  handleMenuItemSelect={handleMenuItemSelect} /> : ''}\n\n              <MonetizationModal\n                // {...{ classes }} \n                switchLookerUser={switchLookerUser}\n              />\n            </Drawer>\n            <main\n              className={clsx(classes.content, {\n                [classes.contentShift]: drawerOpen,\n              })}\n            >\n              <div className={classes.drawerHeader} />\n              {activeUsecase ?\n                UsecaseContent[activeUsecase].demoComponents.map((item, index) => {\n                  const key = item.lookerContent[0].id ? validIdHelper(item.type + item.lookerContent[0].id) : validIdHelper(item.type);\n                  const DemoComponent = demoComponentMap[key];\n                  return (\n                    <React.Fragment\n                      key={validIdHelper(`outerFragment-${item.type}-${index}`)}>\n                      {renderedDemoComponents.indexOf(key) > -1 ?\n                        <Box key={validIdHelper(`box-${item.type}-${index}`)}\n                          className={key === selectedMenuItem ? `` : `${classes.hide}`}\n                        >\n                          {/* {key === selectedMenuItem ? */}\n                          <DemoComponent\n                            key={validIdHelper(`demoComponent-${item.type}-${index}`)}\n                            staticContent={item}\n                            handleMenuItemSelect={handleMenuItemSelect}\n                            activeTabValue={activeTabValue}\n                            handleTabChange={handleTabChange}\n                            lookerUser={lookerUser}\n                            activeUsecase={activeUsecase}\n                            lookerHost={lookerHost}\n                            userProfile={userProfile}\n                          />\n                          {/* : ''} */}\n\n                        </Box> : ''}\n                    </React.Fragment>)\n                }) :\n                ''\n              }\n            </main >\n            <BottomBar classes={classes} lookerUser={lookerUser} />\n          </ThemeProvider>\n        </AppContext.Provider>\n      </div >\n    )\n  }\n}\nexport default withStyles(styles)(Home);\n\nfunction TopBar(props) {\n  const { classes, activeUsecase, lookerUser, switchLookerUser, applySession, lookerUserAttributeBrandOptions, switchUserAttributeBrand } = props\n  return (\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar)}\n    >\n      <Toolbar>\n\n        {activeUsecase ?\n          <>\n            <Avatar alt=\"Icon\"\n              src={require(`../images/${activeUsecase}_logo_white.svg`)}\n              variant=\"square\"\n            />\n            {/* hack */}\n            <Avatar alt=\"Icon\"\n              src={require(`../images/${activeUsecase}_logo_white.svg`)}\n              variant=\"square\"\n              className={`${classes.hidden}`}\n            />\n            <Avatar alt=\"Icon\"\n              src={require(`../images/${activeUsecase}_logo_white.svg`)}\n              variant=\"square\"\n              className={`${classes.hidden}`}\n            /> </> : ''}\n        <Typography align=\"center\" className={`${classes.mr12} ${classes.mlAuto} ${classes.mrAuto}`}>\n          {lookerUser.user_attributes.brand}\n        </Typography>\n\n        <Badge badgeContent={3} color=\"error\" className={`${classes.mr12} `} >\n          <AddAlert />\n        </Badge>\n        <UserMenu\n          lookerUser={lookerUser}\n          switchLookerUser={switchLookerUser}\n          onLogoutSuccess={applySession}\n          lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions}\n          switchUserAttributeBrand={switchUserAttributeBrand}\n        />\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nfunction MenuList(props) {\n  // console.log('MenuList')\n  const { classes, activeUsecase, orderedDemoComponentsForMenuObj, selectedMenuItem, handleMenuItemSelect } = props\n  // console.log('orderedDemoComponentsForMenuObj', orderedDemoComponentsForMenuObj)\n  const demoComponentIconMap = {\n    \"splashpage19\": HomeIcon,\n    \"simpledashboard5\": TrendingUp,\n    \"simpledashboard9\": Speed,\n    \"customfilter1\": StoreMallDirectory,\n    \"customvis\": DateRange,\n    \"querybuilderexplorelite\": Search,\n    \"reportbuilder14\": FindInPage,\n  }\n\n  return (<List\n    component=\"nav\"\n    aria-labelledby=\"nested-list-subheader\"\n    className={classes.list}\n  >\n    {activeUsecase ? Object.keys(orderedDemoComponentsForMenuObj).map((outerItem, outerIndex) => {\n      return (\n        < React.Fragment\n          key={`${validIdHelper(outerItem + '-menuList-' + outerIndex)}`}>\n          <ListItem\n            key={`${validIdHelper(outerItem + '-outerListItem-' + outerIndex)}`}\n          >\n            <ListItemText primary={outerItem === 'home' ? '' : _.upperCase(outerItem)} />\n          </ListItem>\n          < List component=\"div\" disablePadding\n            key={`${validIdHelper(outerItem + '-innerList-' + outerIndex)}`}>\n            {orderedDemoComponentsForMenuObj[outerItem].map((item, innerIndex) => {\n              const key = item.lookerContent[0].id ? validIdHelper(item.type + item.lookerContent[0].id) : validIdHelper(item.type);\n              const MatchingIconComponent = demoComponentIconMap[key]\n\n              return (\n                <ListItem button className={classes.nested}\n                  key={`${validIdHelper(outerItem + '-innerListItem-' + innerIndex)}`}\n                  onClick={\n                    () => handleMenuItemSelect(validIdHelper(item.lookerContent[0].id ? item.type + item.lookerContent[0].id : item.type))\n                  }\n                  selected={validIdHelper(item.lookerContent[0].id ? item.type + item.lookerContent[0].id : item.type) === selectedMenuItem}\n                >\n                  <ListItemIcon>\n                    <MatchingIconComponent />\n                  </ListItemIcon>\n                  <ListItemText primary={_.capitalize(item.label)} />\n                </ListItem>\n              )\n            })}\n          </List>\n        </React.Fragment>\n      )\n\n\n    }) : ''\n    }\n  </List >\n  )\n}","import _ from 'lodash'\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, CardActions, CardContent, Typography } from '@material-ui/core'\nimport { grey, orange } from '@material-ui/core/colors';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport './Home.css';\nconst { validIdHelper } = require('../tools');\nconst lightGrey = grey[200];\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  flexCentered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  card: {\n    minWidth: 350,\n    minHeight: 500,\n    left: '75%',\n    top: '50%',\n    transform: `translate(-75%, -50%)`,\n    position: 'absolute',\n    textAlign: 'center',\n    backgroundColor: lightGrey\n  },\n  h100: {\n    height: '100%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  actions: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  cardCopy: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: `translate(-50%, -50%)`,\n    margin: '0',\n    width: '80%',\n  }\n}));\n\n\nexport default function SignIn(props) {\n\n  // console.log('SignIn')\n  // console.log('props', props)\n\n  const { googleClientId, onSuccess, onFailure, } = props;\n  const classes = useStyles();\n  let usecaseFromUrl = window.location.pathname.replace(/^\\/([^\\/]*).*$/, '$1');\n  const backgroundImageInt = Math.floor(Math.random() * 4) + 1;\n  const backgroundImage = require(`../images/${usecaseFromUrl}_background${backgroundImageInt}.jpg`);\n  const logoImage = require(`../images/${usecaseFromUrl}_logo_black.svg`)\n\n  return (\n    <div className={`${classes.root} demoComponent ${classes.h100}`}>\n      <Grid container\n        key={validIdHelper('sign in page')}\n        className={`${classes.h100}`}>\n        <Grid item sm={12} className={'sign-in-background-img'}\n          style={{\n            backgroundImage: `url(${backgroundImage})`,\n            backgroundSize: 'cover'\n          }}\n        >\n          <Card className={classes.card}>\n            <div className={classes.cardCopy}>\n              <img\n                src={logoImage}\n              />\n              <CardContent >\n                <Typography variant=\"h5\" component=\"h2\">\n                  Welcome\n                            </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  Please sign in to access <br /> your merchant portal\n                            </Typography>\n              </CardContent>\n              <CardActions className={`${classes.actions}`} >\n                <GoogleLogin\n                  clientId={googleClientId}\n                  buttonText=\"Login\"\n                  onSuccess={onSuccess}\n                  onFailure={onSuccess}\n                  cookiePolicy={'single_host_origin'}\n                />\n              </CardActions>\n            </div>\n          </Card>\n        </Grid>\n      </Grid>\n    </div >\n  )\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport Moment from 'moment'\n\nclass Customizations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.editCustomization = this.editCustomization.bind(this);\n        this.applyCustomization = this.applyCustomization.bind(this);\n        this.state = {\n            customizations: this.props.customizations,\n            isOrdered: null\n        }\n    }\n\n    componentDidMount() {\n        // console.log('Customize componentDidMount')\n        // console.log('this.props', this.props)\n    }\n\n    editCustomization(customizationIndex) {\n        this.props.editCustomization(customizationIndex)\n        this.props.history.push('/customize/edit')\n    }\n\n    applyCustomization(customizationIndex) {\n        this.props.applyCustomization(customizationIndex)\n        this.props.history.push('/home') //customize\n    }\n\n    sortByCreatedDate() {\n        let { isOrdered } = this.state\n        let sortedCustomizations;\n        if (isOrdered === null || isOrdered === \"DESC\") {\n            sortedCustomizations = this.state.customizations.sort((a, b) => (a.date > b.date) ? 1 : -1)\n            this.setState({\n                isOrdered: \"ASC\"\n            })\n        } else if (isOrdered === \"ASC\") {\n            sortedCustomizations = this.state.customizations.sort((a, b) => (a.date > b.date) ? -1 : 1)\n            this.setState({\n                isOrdered: \"DESC\"\n            })\n\n        }\n        this.setState({\n            customizations: sortedCustomizations\n        })\n    }\n\n    render() {\n        const { activeCustomization } = this.props\n        const { customizations } = this.state\n        const { isOrdered } = this.state\n        return (\n            <div className=\"home container p-5 position-relative\">\n                <div className=\"row pt-5\">\n                    <div className=\"col-sm-12\">\n                        <h1>Customizations</h1>\n                        <table className=\"table pt-3 mt-3\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\" className=\"cursor\" onClick={() => this.sortByCreatedDate()}><a>Last Saved {isOrdered === null ? '' : isOrdered === \"ASC\" ? '∧' : '∨'}</a></th>\n                                    <th scope=\"col\">Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {customizations.map((customization, index) => {\n                                    return (\n                                        <tr key={customization.id} id={customization.id} index={index} >\n                                            <td >{customization.companyName}</td>\n                                            <td >{Moment(customization.date).format('LLL')}</td>\n                                            <td>\n                                                <span className=\"badge badge-info p-3 mr-2\">Active</span>\n                                                <button type=\"button\" className=\"btn btn-primary mr-2\" data-index={index} onClick={() => this.applyCustomization(index)}>Apply</button>\n                                                <button type=\"button\" className=\"btn btn-secondary mr-2\" data-index={index} onClick={() => this.editCustomization(index)}>Edit</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                        <Link to='/customize/edit'>\n                            <button type=\"button\" className=\"btn btn-primary\">New Customization</button>\n                        </Link>\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}\nexport default Customizations","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nlet emptyCustomizationObj = {\n    id: '',\n    date: '',\n    salesforceUrl: '',\n    companyName: '',\n    logoUrl: ''\n}\n\nfunction prettifyKey(key) {\n    switch (key) {\n        case 'salesforceUrl':\n            return 'Salesforce Url';\n            break;\n        case 'companyName':\n            return 'Company Name';\n            break;\n        case 'logoUrl':\n            return 'Logo Url';\n            break;\n        default:\n            return null;\n            break;\n    }\n}\n\nclass NewCustomization extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        const { indexOfCustomizationToEdit, customizations } = this.props\n        this.state = {\n            companyName: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].companyName : '',\n            logoUrl: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].logoUrl : '',\n            salesforceUrl: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].salesforceUrl : '',\n            validSalesforceUrl: indexOfCustomizationToEdit ? this.validateSalesforceUrl(customizations[indexOfCustomizationToEdit].salesforceUrl) : false,\n            industry: indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].industry : '',\n        }\n    }\n\n    componentDidMount() {\n        this.salesforceUrlInput.focus();\n    }\n\n    componentWillUnmount() {\n        // console.log('NewCustomization componentWillUnmount')\n        this.props.cancelIndexOfCustomizationToEdit()\n    }\n\n    handleSubmit(event) {\n        // console.log('handleSubmit')\n        event.preventDefault();\n        const data = new FormData(event.target);\n        let objForBody = {}\n        for (var [key, value] of data.entries()) {\n            objForBody[key] = value\n        }\n        this.props.saveCustomization(objForBody)\n        setTimeout(() => {\n            this.props.history.push('/home') //causes error w/ out time out\n        }, 100)\n    }\n\n    updateInput(e) {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n\n        if (e.target.id === \"salesforceUrl\") {\n            this.setState({ validSalesforceUrl: this.validateSalesforceUrl(e.target.value) })\n        }\n    }\n\n    validateSalesforceUrl = (url) => {\n        let urlexp = new RegExp('^https:\\/\\/looker.my.salesforce.com(?:$|/)');\n        let res = url.match(urlexp)\n        let returnVal = false;\n        if (res !== null) {\n            returnVal = true;\n        }\n        return returnVal\n    }\n\n\n    dropdownSelect = (e) => {\n        const targetId = e.target.id\n        this.setState({\n            [targetId]: e.target.value\n        })\n    }\n\n    render() {\n        // console.log('EditCustomization render');\n        const { indexOfCustomizationToEdit, customizations, lookerHost } = this.props\n        const { validSalesforceUrl, industry } = this.state\n        // let lookerHostNameToUse = lookerHost.substr(0, lookerHost.indexOf('.'));\n        // console.log('lookerHost', lookerHost)\n\n\n        return (\n            <div className=\"home container p-5\" >\n                <div className=\"row pt-5\">\n                    <div className=\"col-sm-9\">\n                        <h1>Edit Customization</h1>\n                        <form className=\"border-top mt-3 pt-3\" onSubmit={this.handleSubmit}>\n                            <input type=\"hidden\" id=\"id\" name=\"id\" value={indexOfCustomizationToEdit ? customizations[indexOfCustomizationToEdit].id : ''} />\n                            <input type=\"hidden\" id=\"customizationIndex\" name=\"customizationIndex\" value={indexOfCustomizationToEdit ? indexOfCustomizationToEdit : ''} />\n                            <div className=\"form-group\">\n                                <label htmlFor=\"salesforceUrl\">Salesforce Url</label>\n                                <input id=\"salesforceUrl\"\n                                    className=\"form-control\"\n                                    name=\"salesforceUrl\"\n                                    type=\"text\"\n                                    value={this.state.salesforceUrl}\n                                    onChange={e => this.updateInput(e)}\n                                    ref={input => {\n                                        this.salesforceUrlInput = input;\n                                    }} />\n                                {validSalesforceUrl ?\n                                    <small id=\"salesforceUrlHelp\" className=\"form-text text-success\">Valid Salesforce Url!</small>\n                                    : this.state.salesforceUrl.length ?\n                                        <small id=\"salesforceUrlHelp\" className=\"form-text text-danger\">Must be valid Looker Salesforce Opportunity Url</small>\n                                        : <small id=\"salesforceUrlHelp\" className=\"form-text text-muted\">This field is required</small>}\n                            </div>\n                            <div id=\"subForm\">\n                                {/* {DefaultLookerContent[lookerHost] ?\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"industry\">Choose industry</label>\n                                        <select\n                                            id=\"industry\"\n                                            className=\"form-control\"\n                                            onChange={(e) => this.dropdownSelect(e)}\n                                            name=\"industry\"\n                                            type=\"select-one\"\n                                            value={this.state.industry}\n                                            disabled={validSalesforceUrl ? false : true}>\n\n                                            <option\n                                                key=\"none\"\n                                                value=\"none\"\n                                            > None</option>\n                                            {Object.keys(DefaultLookerContent[lookerHost]).map(key => {\n                                                return (\n                                                    <option\n                                                        key={key}\n                                                        value={key}\n                                                    > {(key.charAt(0).toUpperCase() + key.substring(1)).replace('_', ' ')}</option>\n                                                )\n                                            })}</select>\n                                    </div>\n                                    : ''} */}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"companyName\">Company name</label>\n                                    <input id=\"companyName\"\n                                        className=\"form-control\"\n                                        name=\"companyName\"\n                                        type=\"text\"\n                                        value={this.state.companyName}\n                                        onChange={e => this.updateInput(e)}\n                                        disabled={validSalesforceUrl ? false : true}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"logoUrl\">Logo URL</label>\n                                    <input id=\"logoUrl\"\n                                        className=\"form-control\"\n                                        name=\"logoUrl\"\n                                        type=\"text\"\n                                        value={this.state.logoUrl}\n                                        onChange={e => this.updateInput(e)}\n                                        disabled={validSalesforceUrl ? false : true}\n                                    />\n                                </div>\n                                <div className=\"form-group mt-3 pt-3\">\n                                    <button className=\"btn btn-primary mr-2\"\n                                        disabled={validSalesforceUrl ? false : true}>Save Customization</button>\n                                    <Link to='/customize'>\n                                        <button type=\"button\" className=\"btn btn-secondary \">Cancel</button>\n                                    </Link>\n                                </div></div>\n                        </form>\n\n                    </div>\n                </div >\n            </div >\n        )\n    }\n}\nexport default NewCustomization","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link, Redirect, withRouter, useHistory } from 'react-router-dom'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n// import Config from './clientConfig.json';\nimport Home from './components/Home'\nimport SignIn from './components/SignIn'\n// import Header from './components/Header'\n// import Footer from './components/Footer'\nimport Customizations from './components/Customizations'\nimport EditCustomization from './components/EditCustomization'\n//make looker user dynamic\nimport LookerUserPermissions from './lookerUserPermissions.json';\nimport InitialLookerUser from './initialLookerUser.json';\nimport UsecaseContent from './usecaseContent.json';\nimport LookerUserAttributeBrandOptions from './lookerUserAttributeBrandOptions.json';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  responseGoogle = (response) => {\n    // debugger //from Jim\n    if (response.error) {\n      console.log('response.error', response.error)\n    } else {\n      this.props.applySession(response.profileObj)\n    }\n  }\n\n  render() {\n    // console.log(\"Login render\")\n    const { from } = this.props.location.state || { from: { pathname: '/home' } } //needs work?\n    const { pathname } = this.props.location\n    const { activeCustomization } = this.props\n    const { userProfile } = this.props\n\n    const googleClientId = `${process.env.REACT_APP_GOOGLE_CLIENT_ID}.apps.googleusercontent.com`\n    if (Object.keys(userProfile).length) {\n      return (\n        <div className=\"App\">\n          <Redirect to={from} />\n        </div>\n      )\n    } else {\n      return (\n        <SignIn\n          googleClientId={googleClientId}\n          onSuccess={this.responseGoogle}\n          onFailure={this.responseGoogle}\n        />\n      )\n    }\n  }\n}\n\nconst PrivateRoute = ({\n  component: Component,\n  customizations,\n  activeCustomization,\n  applyCustomization,\n  editCustomization,\n  indexOfCustomizationToEdit,\n  saveCustomization,\n  cancelIndexOfCustomizationToEdit,\n  lookerContent,\n  saveLookerContent,\n  userProfile,\n  lookerUser,\n  lookerHost,\n  switchLookerUser,\n  applySession,\n  lookerUserAttributeBrandOptions,\n  switchUserAttributeBrand,\n  ...rest }) => (\n    < Route {...rest} render={(props) => (\n      Object.keys(userProfile).length ?\n        <Component {...props}\n          customizations={customizations}\n          activeCustomization={activeCustomization}\n          applyCustomization={applyCustomization}\n          editCustomization={editCustomization}\n          indexOfCustomizationToEdit={indexOfCustomizationToEdit}\n          saveCustomization={saveCustomization}\n          cancelIndexOfCustomizationToEdit={cancelIndexOfCustomizationToEdit}\n          lookerContent={lookerContent}\n          saveLookerContent={saveLookerContent}\n          userProfile={userProfile}\n          lookerUser={lookerUser}\n          lookerHost={lookerHost}\n          switchLookerUser={switchLookerUser}\n          applySession={applySession}\n          lookerUserAttributeBrandOptions={lookerUserAttributeBrandOptions}\n          switchUserAttributeBrand={switchUserAttributeBrand}\n        />\n        : <Redirect to={{\n          pathname: '/',\n          state: { from: props.location }\n        }} />\n    )} />\n  )\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userProfile: {},\n      customizations: [],\n      activeCustomization: {},\n      indexOfCustomizationToEdit: null,\n      lookerContent: [],\n      lookerUser: {\n        ...InitialLookerUser\n      },\n      lookerHost: '',\n      activeUsecase: ''\n    }\n  }\n\n  componentDidMount() {\n    // console.log('App componentDidMount')\n    this.checkSession()\n  }\n\n  //called on componentDidMount\n  //get request so should only check info, never update\n  checkSession = async () => {\n    // console.log('checkSession')\n    let sessionResponse = await fetch('/readsession', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    const sessionResponseData = await sessionResponse.json();\n    // console.log('sessionResponseData', sessionResponseData)\n    const { userProfile } = sessionResponseData.session\n    const { customizations } = sessionResponseData.session\n    const activeCustomization = sessionResponseData.session.activeCustomization ? sessionResponseData.session.activeCustomization : 0;\n    const lookerUser = sessionResponseData.session.lookerUser ? sessionResponseData.session.lookerUser : this.state.lookerUser;\n    const lookerHost = sessionResponseData.session.lookerHost ? sessionResponseData.session.lookerHost : this.state.lookerHost;\n    // console.log('lookerUser', lookerUser)\n    //make sure defined and contains properties\n    if (userProfile && Object.keys(userProfile).length) {\n      this.setState((prevState) => ({\n        userProfile, //think we want this here?\n        customizations,\n        lookerUser: {\n          ...prevState.lookerUser,\n          external_user_id: userProfile.googleId,\n          first_name: userProfile.givenName,\n          last_name: userProfile.familyName,\n          permissions: LookerUserPermissions[lookerUser.user_attributes.permission_level] || LookerUserPermissions['basic'],\n          user_attributes: {\n            ...lookerUser.user_attributes || {\n              \"locale\": \"en_US\",\n              \"country\": \"USA\",\n              \"brand\": \"Calvin Klein\",\n              \"permission_level\": \"basic\"\n            }\n          }\n        },\n        lookerHost\n      }), () => {\n        // console.log('checkSession callback 1111 this.state.lookerUser', this.state.lookerUser)\n        this.applyCustomization(activeCustomization)\n      })\n    }\n  }\n\n  // called by responseGoogle once it gets response\n  // since login can assume activeCustomization will be default..\n  applySession = async (userProfile) => {\n    // console.log('applySession')\n    // console.log('userProfile', userProfile)\n\n    if (Object.keys(userProfile).length === 0) {\n      // console.log('inside ifff')\n      let sessionData = await fetch('/endsession', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      this.setState({\n        userProfile: {},\n        lookerUser: { ...InitialLookerUser }\n      })\n    } else {\n      // console.log('inside else')\n      let sessionData = await fetch('/writesession', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ userProfile, lookerUser: this.state.lookerUser })\n      })\n      const sessionResponseData = await sessionData.json();\n      const { customizations } = sessionResponseData.session\n      const lookerUser = sessionResponseData.session.lookerUser ? sessionResponseData.session.lookerUser : this.state.lookerUser;\n      const lookerHost = sessionResponseData.session.lookerHost ? sessionResponseData.session.lookerHost : this.state.lookerHost;\n\n      this.setState(prevState => ({\n        userProfile,\n        customizations,\n        lookerUser: {\n          ...prevState.lookerUser,\n          external_user_id: userProfile.googleId,\n          first_name: userProfile.givenName,\n          last_name: userProfile.familyName,\n          permissions: LookerUserPermissions[lookerUser.user_attributes.permission_level] || LookerUserPermissions['basic'], //assume good initially,\n          user_attributes: {\n            ...lookerUser.user_attributes || {\n              \"locale\": \"en_US\",\n              \"country\": \"USA\",\n              \"brand\": \"Calvin Klein\",\n              \"time_horizon\": \"last 6 months\",\n              \"permission_level\": \"basic\",\n            }\n          }\n        },\n        lookerHost\n      }), () => {\n        this.applyCustomization(0) //assume default customization, set lookerContent and activeCustomization in applyCustomization\n      });\n    }\n  }\n\n  //called by: checkSession, applySession, applyButton, saveCustomization\n  applyCustomization = async (customizationIndex) => {\n    // console.log('applyCustomization')\n    // console.log('customizationIndex', customizationIndex)\n\n    let customizationResponse = await fetch('/applyactivecustomziation', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ customizationIndex })\n    })\n\n    let customizationResponseData = await customizationResponse.json();\n\n    let lookerContentToUse = [];\n    //check industry first, insert to array\n    if (this.state.customizations[customizationIndex].industry) {\n      // lookerContentToUse = [...DefaultLookerContent[this.state.lookerHost][this.state.customizations[customizationIndex].industry]]\n    }\n    //then check custom content, insert to array\n    if (this.state.customizations[customizationIndex].lookerContent) {\n      // lookerContentToUse = [...lookerContentToUse, ...this.state.customizations[customizationIndex].lookerContent]\n    }\n\n    this.setState({\n      activeCustomization: this.state.customizations[customizationIndex],\n      lookerContent: lookerContentToUse\n    }, () => {\n      // console.log('applyCustomization callback this.state.lookerContent', this.state.lookerContent)\n      // console.log('applyCustomization callback this.state.activeCustomization', this.state.activeCustomization)\n      // this.props.history.push('/home') //not going to work here :P\n    });\n  }\n\n  editCustomization = (customizationIndex) => {\n    // console.log('editCustomization')\n    // console.log('customizationIndex', customizationIndex)\n    const validCustomizationIndex = typeof this.state.customizations[customizationIndex] === 'undefined' ? null : customizationIndex\n    this.setState({\n      indexOfCustomizationToEdit: validCustomizationIndex,\n    }, () => {\n      // console.log('editCustomization callback this.state.indexOfCustomizationToEdit', this.state.indexOfCustomizationToEdit)\n    });\n  }\n\n  saveCustomization = async (formData) => {\n    // console.log('saveCustomization')\n    // console.log('formData', formData)\n    let customizationResponse = await fetch('/savecustomization', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    })\n\n    let customizationResponseData = await customizationResponse.json();\n\n    // console.log('customizationResponseData', customizationResponseData)\n\n    this.setState({\n      customizations: customizationResponseData.customizations,\n      // indexOfCustomizationToEdit: null\n    }, () => {\n      this.applyCustomization(formData.customizationIndex) //sessionActiveCustomization\n    })\n  }\n\n\n  cancelIndexOfCustomizationToEdit = () => {\n    // console.log(\"cancelIndexOfCustomizationToEdit\")\n    this.setState({\n      indexOfCustomizationToEdit: null\n    })\n  }\n\n  saveLookerContent = async (newLookerContent) => {\n    // console.log('saveLookerContent')\n    // console.log('newLookerContent', newLookerContent)\n\n    /*let customizationResponse = await fetch('/savelookercontent', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ activeCustomization: this.state.activeCustomization, newLookerContent: newLookerContent })\n    })\n    let customizationResponseData = await customizationResponse.json();\n\n    this.setState(prevState => ({\n      lookerContent: [...prevState.lookerContent, newLookerContent] //should I be using DB as source here?\n    }))*/\n\n  }\n\n  switchLookerUser = (newUser) => {\n    // console.log('switchLookerUser')\n    // console.log('newUser', newUser)\n    // console.log('LookerUserPermissions[newUser]', LookerUserPermissions[newUser])\n\n\n    let lookerUserTimeHorizonMap = {\n      'basic': 'last 182 days',\n      'advanced': 'last 365 days',\n      'premium': 'last 730 days' //before today\n    }\n    let userAttributeCopy = { ...this.state.lookerUser.user_attributes, \"permission_level\": newUser }\n    userAttributeCopy.time_horizon = lookerUserTimeHorizonMap[newUser];\n\n\n    this.setState(prevState => ({\n      lookerUser: {\n        ...prevState.lookerUser,\n        permissions: LookerUserPermissions[newUser],\n        user_attributes: userAttributeCopy\n      }\n    }), async () => {\n\n      let lookerUserResponse = await fetch('/updatelookeruser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.lookerUser)\n      })\n\n      let lookerUserResponseData = await lookerUserResponse.json();\n\n    });\n  }\n\n  switchUserAttributeBrand = (newAttribute) => {\n    // console.log('switchUserAttributeBrand')\n    // console.log('newAttribute', newAttribute)\n\n    let userAttributeCopy = { ...this.state.lookerUser.user_attributes }\n    userAttributeCopy.brand = newAttribute;\n\n    let usecaseFromUrl = window.location.pathname.replace(/^\\/([^\\/]*).*$/, '$1');\n    if (!usecaseFromUrl.length) {     //no usecase\n      window.location.href = window.location.href + 'atom'\n    } else if (!UsecaseContent.hasOwnProperty(usecaseFromUrl)) {     //usecase param isn't in JSON file\n      window.location.href = window.location.href.replace(usecaseFromUrl, 'atom')\n    }\n\n    this.setState(prevState => ({\n      lookerUser: {\n        ...prevState.lookerUser,\n        user_attributes: userAttributeCopy,\n        group_ids: [UsecaseContent[usecaseFromUrl].groupIds[newAttribute]]\n      }\n    }), async () => {\n\n      let lookerUserResponse = await fetch('/updatelookeruser', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.lookerUser)\n      })\n\n      let lookerUserResponseData = await lookerUserResponse.json();\n\n    });\n  }\n\n  render() {\n    // console.log('App render');\n    // console.log('this.props', this.props);\n    const { userProfile, customizations, activeCustomization, indexOfCustomizationToEdit, lookerContent, lookerUser, lookerHost } = this.state\n    // const { activeIndustry } = this.state;\n    // console.log('activeCustomization', activeCustomization);\n\n    let usecaseFromUrl = window.location.pathname.replace(/^\\/([^\\/]*).*$/, '$1');\n    if (!usecaseFromUrl.length) {     //no usecase\n      window.location.href = window.location.href + 'atom'\n    } else if (!UsecaseContent.hasOwnProperty(usecaseFromUrl)) {     //usecase param isn't in JSON file\n      window.location.href = window.location.href.replace(usecaseFromUrl, 'atom')\n    }\n    return (\n      <Router basename={usecaseFromUrl}>\n        <div>\n          <Route path='' render={(props) => <Login\n            {...props}\n            applySession={this.applySession}\n            userProfile={userProfile}\n            activeCustomization={activeCustomization}\n            lookerUser={lookerUser}\n            switchLookerUser={this.switchLookerUser}\n            lookerHost={lookerHost}\n          />}\n          />\n          <PrivateRoute path='*/home' component={Home}\n            activeCustomization={activeCustomization}\n            lookerContent={lookerContent}\n            saveLookerContent={this.saveLookerContent}\n            userProfile={userProfile}\n            lookerUser={lookerUser}\n            applySession={this.applySession}\n            lookerHost={lookerHost}\n            switchLookerUser={this.switchLookerUser}\n            lookerUserAttributeBrandOptions={LookerUserAttributeBrandOptions}\n            switchUserAttributeBrand={this.switchUserAttributeBrand}\n          />\n        </div>\n      </Router>\n    )\n  }\n}\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}